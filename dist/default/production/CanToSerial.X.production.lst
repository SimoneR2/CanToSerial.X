

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Mon Feb 08 11:24:41 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    25                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    26  0000                     
    27                           	psect	idataCOMRAM
    28  000FF6                     __pidataCOMRAM:
    29                           	opt stack 0
    30                           
    31                           ;initializer for _delay_quartz_frequency_value
    32  000FF6  14                 	db	20
    33  0000                     _RXB1CON	set	3920
    34  0000                     _RXB1CONbits	set	3920
    35  0000                     _RXB1D0	set	3926
    36  0000                     _RXB1D1	set	3927
    37  0000                     _RXB1D2	set	3928
    38  0000                     _RXB1D3	set	3929
    39  0000                     _RXB1D4	set	3930
    40  0000                     _RXB1D5	set	3931
    41  0000                     _RXB1D6	set	3932
    42  0000                     _RXB1D7	set	3933
    43  0000                     _RXB1DLC	set	3925
    44  0000                     _RXB1DLCbits	set	3925
    45  0000                     _RXB1EIDH	set	3923
    46  0000                     _RXB1EIDL	set	3924
    47  0000                     _RXB1SIDH	set	3921
    48  0000                     _RXB1SIDL	set	3922
    49  0000                     _RXB1SIDLbits	set	3922
    50  0000                     _RXF0EIDH	set	3842
    51  0000                     _RXF0EIDL	set	3843
    52  0000                     _RXF0SIDH	set	3840
    53  0000                     _RXF0SIDL	set	3841
    54  0000                     _RXF0SIDLbits	set	3841
    55  0000                     _RXF1EIDH	set	3846
    56  0000                     _RXF1EIDL	set	3847
    57  0000                     _RXF1SIDH	set	3844
    58  0000                     _RXF1SIDL	set	3845
    59  0000                     _RXF1SIDLbits	set	3845
    60  0000                     _RXF2EIDH	set	3850
    61  0000                     _RXF2EIDL	set	3851
    62  0000                     _RXF2SIDH	set	3848
    63  0000                     _RXF2SIDL	set	3849
    64  0000                     _RXF2SIDLbits	set	3849
    65  0000                     _RXF3EIDH	set	3854
    66  0000                     _RXF3EIDL	set	3855
    67  0000                     _RXF3SIDH	set	3852
    68  0000                     _RXF3SIDL	set	3853
    69  0000                     _RXF3SIDLbits	set	3853
    70  0000                     _RXF4EIDH	set	3858
    71  0000                     _RXF4EIDL	set	3859
    72  0000                     _RXF4SIDH	set	3856
    73  0000                     _RXF4SIDL	set	3857
    74  0000                     _RXF4SIDLbits	set	3857
    75  0000                     _RXF5EIDH	set	3862
    76  0000                     _RXF5EIDL	set	3863
    77  0000                     _RXF5SIDH	set	3860
    78  0000                     _RXF5SIDL	set	3861
    79  0000                     _RXF5SIDLbits	set	3861
    80  0000                     _RXM0EIDH	set	3866
    81  0000                     _RXM0EIDL	set	3867
    82  0000                     _RXM0SIDH	set	3864
    83  0000                     _RXM0SIDL	set	3865
    84  0000                     _RXM0SIDLbits	set	3865
    85  0000                     _RXM1EIDH	set	3870
    86  0000                     _RXM1EIDL	set	3871
    87  0000                     _RXM1SIDH	set	3868
    88  0000                     _RXM1SIDL	set	3869
    89  0000                     _RXM1SIDLbits	set	3869
    90  0000                     _TXB0CONbits	set	3904
    91  0000                     _TXB0D0	set	3910
    92  0000                     _TXB0D1	set	3911
    93  0000                     _TXB0D2	set	3912
    94  0000                     _TXB0D3	set	3913
    95  0000                     _TXB0D4	set	3914
    96  0000                     _TXB0D5	set	3915
    97  0000                     _TXB0D6	set	3916
    98  0000                     _TXB0D7	set	3917
    99  0000                     _TXB0DLC	set	3909
   100  0000                     _TXB0DLCbits	set	3909
   101  0000                     _TXB0EIDH	set	3907
   102  0000                     _TXB0EIDL	set	3908
   103  0000                     _TXB0SIDH	set	3905
   104  0000                     _TXB0SIDL	set	3906
   105  0000                     _TXB0SIDLbits	set	3906
   106  0000                     _TXB1CONbits	set	3888
   107  0000                     _TXB1D0	set	3894
   108  0000                     _TXB1D1	set	3895
   109  0000                     _TXB1D2	set	3896
   110  0000                     _TXB1D3	set	3897
   111  0000                     _TXB1D4	set	3898
   112  0000                     _TXB1D5	set	3899
   113  0000                     _TXB1D6	set	3900
   114  0000                     _TXB1D7	set	3901
   115  0000                     _TXB1DLC	set	3893
   116  0000                     _TXB1DLCbits	set	3893
   117  0000                     _TXB1EIDH	set	3891
   118  0000                     _TXB1EIDL	set	3892
   119  0000                     _TXB1SIDH	set	3889
   120  0000                     _TXB1SIDL	set	3890
   121  0000                     _TXB1SIDLbits	set	3890
   122  0000                     _TXB2CONbits	set	3872
   123  0000                     _TXB2D0	set	3878
   124  0000                     _TXB2D1	set	3879
   125  0000                     _TXB2D2	set	3880
   126  0000                     _TXB2D3	set	3881
   127  0000                     _TXB2D4	set	3882
   128  0000                     _TXB2D5	set	3883
   129  0000                     _TXB2D6	set	3884
   130  0000                     _TXB2D7	set	3885
   131  0000                     _TXB2DLC	set	3877
   132  0000                     _TXB2DLCbits	set	3877
   133  0000                     _TXB2EIDH	set	3875
   134  0000                     _TXB2EIDL	set	3876
   135  0000                     _TXB2SIDH	set	3873
   136  0000                     _TXB2SIDL	set	3874
   137  0000                     _TXB2SIDLbits	set	3874
   138  0000                     _BRGCON1	set	3952
   139  0000                     _BRGCON2	set	3953
   140  0000                     _BRGCON2bits	set	3953
   141  0000                     _BRGCON3	set	3954
   142  0000                     _BRGCON3bits	set	3954
   143  0000                     _CANCON	set	3951
   144  0000                     _CANCONbits	set	3951
   145  0000                     _CANSTAT	set	3950
   146  0000                     _COMSTATbits	set	3956
   147  0000                     _INTCONbits	set	4082
   148  0000                     _IPR1bits	set	3999
   149  0000                     _IPR3bits	set	4005
   150  0000                     _LATA	set	3977
   151  0000                     _LATB	set	3978
   152  0000                     _LATC	set	3979
   153  0000                     _LATD	set	3980
   154  0000                     _LATE	set	3981
   155  0000                     _PIE1	set	3997
   156  0000                     _PIE1bits	set	3997
   157  0000                     _PIE3bits	set	4003
   158  0000                     _PIR1bits	set	3998
   159  0000                     _PIR3bits	set	4004
   160  0000                     _RCONbits	set	4048
   161  0000                     _RCREG	set	4014
   162  0000                     _RCSTA	set	4011
   163  0000                     _RCSTAbits	set	4011
   164  0000                     _RXB0CON	set	3936
   165  0000                     _RXB0CONbits	set	3936
   166  0000                     _RXB0D0	set	3942
   167  0000                     _RXB0D1	set	3943
   168  0000                     _RXB0D2	set	3944
   169  0000                     _RXB0D3	set	3945
   170  0000                     _RXB0D4	set	3946
   171  0000                     _RXB0D5	set	3947
   172  0000                     _RXB0D6	set	3948
   173  0000                     _RXB0D7	set	3949
   174  0000                     _RXB0DLC	set	3941
   175  0000                     _RXB0DLCbits	set	3941
   176  0000                     _RXB0EIDH	set	3939
   177  0000                     _RXB0EIDL	set	3940
   178  0000                     _RXB0SIDH	set	3937
   179  0000                     _RXB0SIDL	set	3938
   180  0000                     _RXB0SIDLbits	set	3938
   181  0000                     _RXERRCNT	set	3957
   182  0000                     _TRISA	set	3986
   183  0000                     _TRISB	set	3987
   184  0000                     _TRISC	set	3988
   185  0000                     _TRISD	set	3989
   186  0000                     _TRISE	set	3990
   187  0000                     _TXERRCNT	set	3958
   188  0000                     _TXREG	set	4013
   189  0000                     _TXSTAbits	set	4012
   190                           
   191                           ; #config settings
   192  0000                     
   193                           	psect	cinit
   194  000EFC                     __pcinit:
   195                           	opt stack 0
   196  000EFC                     start_initialization:
   197                           	opt stack 0
   198  000EFC                     __initialization:
   199                           	opt stack 0
   200                           
   201                           ; Clear objects allocated to BANK0 (22 bytes)
   202  000EFC  EE00  F060         	lfsr	0,__pbssBANK0
   203  000F00  0E16               	movlw	22
   204  000F02                     clear_0:
   205  000F02  6AEE               	clrf	postinc0,c
   206  000F04  06E8               	decf	wreg,f,c
   207  000F06  E1FD               	bnz	clear_0
   208                           
   209                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   210  000F08  6A40               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   211                           
   212                           ; Clear objects allocated to COMRAM (30 bytes)
   213  000F0A  EE00  F022         	lfsr	0,__pbssCOMRAM
   214  000F0E  0E1E               	movlw	30
   215  000F10                     clear_1:
   216  000F10  6AEE               	clrf	postinc0,c
   217  000F12  06E8               	decf	wreg,f,c
   218  000F14  E1FD               	bnz	clear_1
   219                           
   220                           ; Initialize objects allocated to COMRAM (1 bytes)
   221                           ; load TBLPTR registers with __pidataCOMRAM
   222  000F16  0EF6               	movlw	low __pidataCOMRAM
   223  000F18  6EF6               	movwf	tblptrl,c
   224  000F1A  0E0F               	movlw	high __pidataCOMRAM
   225  000F1C  6EF7               	movwf	tblptrh,c
   226  000F1E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   227  000F20  6EF8               	movwf	tblptru,c
   228  000F22  0009               	tblrd		*+	;fetch initializer
   229  000F24  CFF5 F041          	movff	tablat,__pdataCOMRAM
   230  000F28                     end_of_initialization:
   231                           	opt stack 0
   232  000F28                     __end_of__initialization:
   233                           	opt stack 0
   234  000F28  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   235  000F2A  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   236  000F2C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   237  000F2E  6EF8               	movwf	tblptru,c
   238  000F30  0100               	movlb	0
   239  000F32  EFEA  F006         	goto	_main	;jump to C main() function
   240                           tblptru	equ	0xFF8
   241                           tblptrh	equ	0xFF7
   242                           tblptrl	equ	0xFF6
   243                           tablat	equ	0xFF5
   244                           postinc0	equ	0xFEE
   245                           wreg	equ	0xFE8
   246                           
   247                           	psect	bitbssCOMRAM
   248  000200                     __pbitbssCOMRAM:
   249                           	opt stack 0
   250  000200                     _RTR:
   251                           	opt stack 0
   252  000200                     	ds	1
   253  000201                     _newMessageCan:
   254                           	opt stack 0
   255  000201                     	ds	1
   256  000202                     _newMessageUsart:
   257                           	opt stack 0
   258  000202                     	ds	1
   259                           tblptru	equ	0xFF8
   260                           tblptrh	equ	0xFF7
   261                           tblptrl	equ	0xFF6
   262                           tablat	equ	0xFF5
   263                           postinc0	equ	0xFEE
   264                           wreg	equ	0xFE8
   265                           
   266                           	psect	bssCOMRAM
   267  000022                     __pbssCOMRAM:
   268                           	opt stack 0
   269  000022                     _id:
   270                           	opt stack 0
   271  000022                     	ds	4
   272  000026                     _clock_counter_reference:
   273                           	opt stack 0
   274  000026                     	ds	2
   275  000028                     _USART_Status:
   276                           	opt stack 0
   277  000028                     	ds	1
   278  000029                     _msg:
   279                           	opt stack 0
   280  000029                     	ds	15
   281  000038                     _data:
   282                           	opt stack 0
   283  000038                     	ds	8
   284                           tblptru	equ	0xFF8
   285                           tblptrh	equ	0xFF7
   286                           tblptrl	equ	0xFF6
   287                           tablat	equ	0xFF5
   288                           postinc0	equ	0xFEE
   289                           wreg	equ	0xFE8
   290                           
   291                           	psect	dataCOMRAM
   292  000041                     __pdataCOMRAM:
   293                           	opt stack 0
   294  000041                     _delay_quartz_frequency_value:
   295                           	opt stack 0
   296  000041                     	ds	1
   297                           tblptru	equ	0xFF8
   298                           tblptrh	equ	0xFF7
   299                           tblptrl	equ	0xFF6
   300                           tablat	equ	0xFF5
   301                           postinc0	equ	0xFEE
   302                           wreg	equ	0xFE8
   303                           
   304                           	psect	bssBANK0
   305  000060                     __pbssBANK0:
   306                           	opt stack 0
   307  000060                     _usartRx:
   308                           	opt stack 0
   309  000060                     	ds	11
   310  00006B                     _usartTx:
   311                           	opt stack 0
   312  00006B                     	ds	11
   313                           tblptru	equ	0xFF8
   314                           tblptrh	equ	0xFF7
   315                           tblptrl	equ	0xFF6
   316                           tablat	equ	0xFF5
   317                           postinc0	equ	0xFEE
   318                           wreg	equ	0xFE8
   319                           
   320                           	psect	cstackBANK0
   321  000076                     __pcstackBANK0:
   322                           	opt stack 0
   323  000076                     _CANisTxReady$2713:
   324                           	opt stack 0
   325  000076                     WriteUSART@data:
   326                           	opt stack 0
   327  000076                     CANsendMessage@identifier:
   328                           	opt stack 0
   329                           
   330                           ; 4 bytes @ 0x0
   331  000076                     	ds	1
   332  000077                     putsUSART@data:
   333                           	opt stack 0
   334                           
   335                           ; 2 bytes @ 0x1
   336  000077                     	ds	2
   337  000079                     
   338                           ; 1 bytes @ 0x3
   339  000079                     	ds	1
   340  00007A                     CANsendMessage@data:
   341                           	opt stack 0
   342                           
   343                           ; 2 bytes @ 0x4
   344  00007A                     	ds	2
   345  00007C                     CANsendMessage@dataLength:
   346                           	opt stack 0
   347                           
   348                           ; 1 bytes @ 0x6
   349  00007C                     	ds	1
   350  00007D                     CANsendMessage@flags:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0x7
   354  00007D                     	ds	1
   355  00007E                     ??_CANsendMessage:
   356                           
   357                           ; 1 bytes @ 0x8
   358  00007E                     	ds	4
   359  000082                     CANsendMessage@tamp:
   360                           	opt stack 0
   361                           
   362                           ; 4 bytes @ 0xC
   363  000082                     	ds	4
   364  000086                     ??_main:
   365                           
   366                           ; 1 bytes @ 0x10
   367  000086                     	ds	4
   368  00008A                     main@i:
   369                           	opt stack 0
   370                           
   371                           ; 2 bytes @ 0x14
   372  00008A                     	ds	2
   373                           tblptru	equ	0xFF8
   374                           tblptrh	equ	0xFF7
   375                           tblptrl	equ	0xFF6
   376                           tablat	equ	0xFF5
   377                           postinc0	equ	0xFEE
   378                           wreg	equ	0xFE8
   379                           
   380                           	psect	cstackCOMRAM
   381  000001                     __pcstackCOMRAM:
   382                           	opt stack 0
   383  000001                     _CANisRxReady$2715:
   384                           	opt stack 0
   385  000001                     ReadUSART@data:
   386                           	opt stack 0
   387  000001                     CANreceiveMessage@msg:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0x0
   391  000001                     	ds	1
   392  000002                     getsUSART@buffer:
   393                           	opt stack 0
   394                           
   395                           ; 2 bytes @ 0x1
   396  000002                     	ds	1
   397  000003                     ??_CANreceiveMessage:
   398                           
   399                           ; 1 bytes @ 0x2
   400  000003                     	ds	1
   401  000004                     getsUSART@len:
   402                           	opt stack 0
   403                           
   404                           ; 1 bytes @ 0x3
   405  000004                     	ds	1
   406  000005                     getsUSART@data:
   407                           	opt stack 0
   408                           
   409                           ; 1 bytes @ 0x4
   410  000005                     	ds	1
   411  000006                     getsUSART@i:
   412                           	opt stack 0
   413                           
   414                           ; 1 bytes @ 0x5
   415  000006                     	ds	5
   416  00000B                     CANreceiveMessage@error:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0xA
   420  00000B                     	ds	1
   421  00000C                     CANreceiveMessage@tamp:
   422                           	opt stack 0
   423                           
   424                           ; 1 bytes @ 0xB
   425  00000C                     	ds	1
   426  00000D                     ??_ISR_bassa:
   427                           
   428                           ; 1 bytes @ 0xC
   429  00000D                     	ds	19
   430  000020                     ISR_bassa@i:
   431                           	opt stack 0
   432                           
   433                           ; 2 bytes @ 0x1F
   434  000020                     	ds	2
   435                           tblptru	equ	0xFF8
   436                           tblptrh	equ	0xFF7
   437                           tblptrl	equ	0xFF6
   438                           tablat	equ	0xFF5
   439                           postinc0	equ	0xFEE
   440                           wreg	equ	0xFE8
   441                           
   442 ;;
   443 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   444 ;;
   445 ;; *************** function _main *****************
   446 ;; Defined at:
   447 ;;		line 63 in file "CanToSerial.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;		None
   450 ;; Auto vars:     Size  Location     Type
   451 ;;  i               2   20[BANK0 ] int 
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      void 
   454 ;; Registers used:
   455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   461 ;;      Params:         0       0       0       0
   462 ;;      Locals:         0       2       0       0
   463 ;;      Temps:          0       4       0       0
   464 ;;      Totals:         0       6       0       0
   465 ;;Total ram usage:        6 bytes
   466 ;; Hardware stack levels required when called:    5
   467 ;; This function calls:
   468 ;;		_CANisTxReady
   469 ;;		_CANsendMessage
   470 ;;		_putsUSART
   471 ;; This function is called by:
   472 ;;		Startup code after reset
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           
   476                           	psect	text0
   477  000DD4                     __ptext0:
   478                           	opt stack 0
   479  000DD4                     _main:
   480                           	opt stack 26
   481  000DD4                     l588:
   482                           
   483                           ;CanToSerial.c: 65: if (newMessageCan == 1) {
   484  000DD4  A240               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
   485  000DD6  D009               	goto	l3093
   486                           
   487                           ;CanToSerial.c: 66: putsUSART((char *) usartTx);
   488  000DD8  0E6B               	movlw	low _usartTx
   489  000DDA  0100               	movlb	0	; () banked
   490  000DDC  6F77               	movwf	putsUSART@data& (0+255),b
   491  000DDE  0E00               	movlw	high _usartTx
   492  000DE0  0100               	movlb	0	; () banked
   493  000DE2  6F78               	movwf	(putsUSART@data+1)& (0+255),b
   494  000DE4  ECB1  F007         	call	_putsUSART	;wreg free
   495                           
   496                           ;CanToSerial.c: 67: newMessageCan = 0;
   497  000DE8  9240               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
   498  000DEA                     l3093:
   499                           
   500                           ;CanToSerial.c: 68: }
   501                           ;CanToSerial.c: 69: if (newMessageUsart == 1) {
   502  000DEA  A440               	btfss	_newMessageUsart/(0+8),_newMessageUsart& (0+7),c	;volatile
   503  000DEC  D7F3               	goto	l588
   504                           
   505                           ;CanToSerial.c: 70: RTR = usartRx [0];
   506  000DEE  0100               	movlb	0	; () banked
   507  000DF0  A160               	btfss	_usartRx& (0+255),0,b
   508  000DF2  D002               	goto	u3360
   509  000DF4  8040               	bsf	_RTR/(0+8),_RTR& (0+7),c	;volatile
   510  000DF6  D001               	goto	l3097
   511  000DF8                     u3360:
   512  000DF8  9040               	bcf	_RTR/(0+8),_RTR& (0+7),c	;volatile
   513  000DFA                     l3097:
   514                           
   515                           ;CanToSerial.c: 71: id = usartRx[1];
   516  000DFA  0100               	movlb	0	; () banked
   517  000DFC  5161               	movf	(_usartRx+1)& (0+255),w,b
   518  000DFE  6E22               	movwf	_id,c
   519  000E00  6A23               	clrf	_id+1,c
   520  000E02  6A24               	clrf	_id+2,c
   521  000E04  6A25               	clrf	_id+3,c
   522                           
   523                           ; BSR set to: 0
   524                           ;CanToSerial.c: 72: id = ((id << 8) | usartRx[0]);
   525  000E06  0100               	movlb	0	; () banked
   526  000E08  5160               	movf	_usartRx& (0+255),w,b
   527  000E0A  C022  F087         	movff	_id,??_main+1
   528  000E0E  C023  F088         	movff	_id+1,??_main+2
   529  000E12  C024  F089         	movff	_id+2,??_main+3
   530  000E16  0100               	movlb	0	; () banked
   531  000E18  6B86               	clrf	??_main& (0+255),b
   532  000E1A  0100               	movlb	0	; () banked
   533  000E1C  1186               	iorwf	??_main& (0+255),w,b
   534  000E1E  6E22               	movwf	_id,c
   535  000E20  0100               	movlb	0	; () banked
   536  000E22  5187               	movf	(??_main+1)& (0+255),w,b
   537  000E24  6E23               	movwf	_id+1,c
   538  000E26  0100               	movlb	0	; () banked
   539  000E28  5188               	movf	(??_main+2)& (0+255),w,b
   540  000E2A  6E24               	movwf	_id+2,c
   541  000E2C  0100               	movlb	0	; () banked
   542  000E2E  5189               	movf	(??_main+3)& (0+255),w,b
   543  000E30  6E25               	movwf	_id+3,c
   544                           
   545                           ; BSR set to: 0
   546                           ;CanToSerial.c: 73: for (int i = 0; i < 8; i++) {
   547  000E32  0E00               	movlw	0
   548  000E34  0100               	movlb	0	; () banked
   549  000E36  6F8B               	movwf	(main@i+1)& (0+255),b
   550  000E38  0E00               	movlw	0
   551  000E3A  6F8A               	movwf	main@i& (0+255),b
   552  000E3C  0100               	movlb	0	; () banked
   553  000E3E  BF8B               	btfsc	(main@i+1)& (0+255),7,b
   554  000E40  D008               	goto	l3105
   555  000E42  0100               	movlb	0	; () banked
   556  000E44  518B               	movf	(main@i+1)& (0+255),w,b
   557  000E46  E125               	bnz	l3111
   558  000E48  0E08               	movlw	8
   559  000E4A  0100               	movlb	0	; () banked
   560  000E4C  5D8A               	subwf	main@i& (0+255),w,b
   561  000E4E  B0D8               	btfsc	status,0,c
   562  000E50  D020               	goto	l3111
   563  000E52                     l3105:
   564                           
   565                           ; BSR set to: 0
   566                           ;CanToSerial.c: 74: data[i] = usartRx[(i + 3)];
   567  000E52  0E03               	movlw	3
   568  000E54  0100               	movlb	0	; () banked
   569  000E56  258A               	addwf	main@i& (0+255),w,b
   570  000E58  0100               	movlb	0	; () banked
   571  000E5A  6F86               	movwf	??_main& (0+255),b
   572  000E5C  0E00               	movlw	0
   573  000E5E  0100               	movlb	0	; () banked
   574  000E60  218B               	addwfc	(main@i+1)& (0+255),w,b
   575  000E62  0100               	movlb	0	; () banked
   576  000E64  6F87               	movwf	(??_main+1)& (0+255),b
   577  000E66  0E60               	movlw	low _usartRx
   578  000E68  0100               	movlb	0	; () banked
   579  000E6A  2586               	addwf	??_main& (0+255),w,b
   580  000E6C  6ED9               	movwf	fsr2l,c
   581  000E6E  0E00               	movlw	high _usartRx
   582  000E70  0100               	movlb	0	; () banked
   583  000E72  2187               	addwfc	(??_main+1)& (0+255),w,b
   584  000E74  6EDA               	movwf	fsr2h,c
   585  000E76  0E38               	movlw	low _data
   586  000E78  0100               	movlb	0	; () banked
   587  000E7A  258A               	addwf	main@i& (0+255),w,b
   588  000E7C  6EE1               	movwf	fsr1l,c
   589  000E7E  0E00               	movlw	high _data
   590  000E80  0100               	movlb	0	; () banked
   591  000E82  218B               	addwfc	(main@i+1)& (0+255),w,b
   592  000E84  6EE2               	movwf	fsr1h,c
   593  000E86  CFDF FFE7          	movff	indf2,indf1
   594                           
   595                           ; BSR set to: 0
   596  000E8A  0100               	movlb	0	; () banked
   597  000E8C  4B8A               	infsnz	main@i& (0+255),f,b
   598  000E8E  2B8B               	incf	(main@i+1)& (0+255),f,b
   599  000E90  D7D5               	goto	L1
   600  000E92                     l3111:
   601                           
   602                           ; BSR set to: 0
   603                           ;CanToSerial.c: 75: }
   604                           ;CanToSerial.c: 76: if (CANisTxReady()) {
   605  000E92  ECC5  F007         	call	_CANisTxReady	;wreg free
   606  000E96  0900               	iorlw	0
   607  000E98  B4D8               	btfsc	status,2,c
   608  000E9A  D79C               	goto	l588
   609                           
   610                           ;CanToSerial.c: 77: if (RTR == 1){
   611  000E9C  A040               	btfss	_RTR/(0+8),_RTR& (0+7),c	;volatile
   612  000E9E  D017               	goto	l3117
   613                           
   614                           ;CanToSerial.c: 78: CANsendMessage(id, data, 8, CAN_CONFIG_STD_MSG & CAN_REMOTE_TX_FRAME
      +                           & CAN_TX_PRIORITY_0);
   615  000EA0  C022  F076         	movff	_id,CANsendMessage@identifier
   616  000EA4  C023  F077         	movff	_id+1,CANsendMessage@identifier+1
   617  000EA8  C024  F078         	movff	_id+2,CANsendMessage@identifier+2
   618  000EAC  C025  F079         	movff	_id+3,CANsendMessage@identifier+3
   619  000EB0  0E38               	movlw	low _data
   620  000EB2  0100               	movlb	0	; () banked
   621  000EB4  6F7A               	movwf	CANsendMessage@data& (0+255),b
   622  000EB6  0E00               	movlw	high _data
   623  000EB8  0100               	movlb	0	; () banked
   624  000EBA  6F7B               	movwf	(CANsendMessage@data+1)& (0+255),b
   625  000EBC  0E08               	movlw	8
   626  000EBE  0100               	movlb	0	; () banked
   627  000EC0  6F7C               	movwf	CANsendMessage@dataLength& (0+255),b
   628  000EC2  0EFC               	movlw	252
   629  000EC4  0100               	movlb	0	; () banked
   630  000EC6  6F7D               	movwf	CANsendMessage@flags& (0+255),b
   631  000EC8  EC9E  F000         	call	_CANsendMessage	;wreg free
   632                           
   633                           ;CanToSerial.c: 79: }
   634  000ECC  D783               	goto	l588
   635  000ECE                     l3117:
   636                           
   637                           ;CanToSerial.c: 80: else {
   638                           ;CanToSerial.c: 81: CANsendMessage(id, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRAME
      +                           & CAN_TX_PRIORITY_0);
   639  000ECE  C022  F076         	movff	_id,CANsendMessage@identifier
   640  000ED2  C023  F077         	movff	_id+1,CANsendMessage@identifier+1
   641  000ED6  C024  F078         	movff	_id+2,CANsendMessage@identifier+2
   642  000EDA  C025  F079         	movff	_id+3,CANsendMessage@identifier+3
   643  000EDE  0E38               	movlw	low _data
   644  000EE0  0100               	movlb	0	; () banked
   645  000EE2  6F7A               	movwf	CANsendMessage@data& (0+255),b
   646  000EE4  0E00               	movlw	high _data
   647  000EE6  0100               	movlb	0	; () banked
   648  000EE8  6F7B               	movwf	(CANsendMessage@data+1)& (0+255),b
   649  000EEA  0E08               	movlw	8
   650  000EEC  0100               	movlb	0	; () banked
   651  000EEE  6F7C               	movwf	CANsendMessage@dataLength& (0+255),b
   652  000EF0  0EBC               	movlw	188
   653  000EF2  0100               	movlb	0	; () banked
   654  000EF4  6F7D               	movwf	CANsendMessage@flags& (0+255),b
   655  000EF6  EC9E  F000         	call	_CANsendMessage	;wreg free
   656  000EFA  D76C               	goto	l588
   657  000EFC                     __end_of_main:
   658                           	opt stack 0
   659                           tblptru	equ	0xFF8
   660                           tblptrh	equ	0xFF7
   661                           tblptrl	equ	0xFF6
   662                           tablat	equ	0xFF5
   663                           postinc0	equ	0xFEE
   664                           wreg	equ	0xFE8
   665                           indf1	equ	0xFE7
   666                           fsr1h	equ	0xFE2
   667                           fsr1l	equ	0xFE1
   668                           indf2	equ	0xFDF
   669                           fsr2h	equ	0xFDA
   670                           fsr2l	equ	0xFD9
   671                           status	equ	0xFD8
   672                           
   673 ;; *************** function _putsUSART *****************
   674 ;; Defined at:
   675 ;;		line 14 in file "sources\pic18\plib\USART\uputs.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;  data            2    1[BANK0 ] PTR unsigned char 
   678 ;;		 -> usartTx(11), 
   679 ;; Auto vars:     Size  Location     Type
   680 ;;		None
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   690 ;;      Params:         0       2       0       0
   691 ;;      Locals:         0       0       0       0
   692 ;;      Temps:          0       0       0       0
   693 ;;      Totals:         0       2       0       0
   694 ;;Total ram usage:        2 bytes
   695 ;; Hardware stack levels used:    1
   696 ;; Hardware stack levels required when called:    4
   697 ;; This function calls:
   698 ;;		_WriteUSART
   699 ;; This function is called by:
   700 ;;		_main
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704                           	psect	text1
   705  000F62                     __ptext1:
   706                           	opt stack 0
   707  000F62                     _putsUSART:
   708                           	opt stack 26
   709  000F62                     l655:
   710  000F62  A2AC               	btfss	4012,1,c	;volatile
   711  000F64  D7FE               	goto	l655
   712  000F66  C077  FFD9         	movff	putsUSART@data,fsr2l
   713  000F6A  C078  FFDA         	movff	putsUSART@data+1,fsr2h
   714  000F6E  50DF               	movf	indf2,w,c
   715  000F70  ECF1  F007         	call	_WriteUSART
   716  000F74  C077  FFD9         	movff	putsUSART@data,fsr2l
   717  000F78  C078  FFDA         	movff	putsUSART@data+1,fsr2h
   718  000F7C  0100               	movlb	0	; () banked
   719  000F7E  4B77               	infsnz	putsUSART@data& (0+255),f,b
   720  000F80  2B78               	incf	(putsUSART@data+1)& (0+255),f,b
   721  000F82  50DF               	movf	indf2,w,c
   722  000F84  B4D8               	btfsc	status,2,c
   723  000F86  0012               	return	
   724  000F88  D7EC               	goto	l655
   725  000F8A                     __end_of_putsUSART:
   726                           	opt stack 0
   727                           tblptru	equ	0xFF8
   728                           tblptrh	equ	0xFF7
   729                           tblptrl	equ	0xFF6
   730                           tablat	equ	0xFF5
   731                           postinc0	equ	0xFEE
   732                           wreg	equ	0xFE8
   733                           indf1	equ	0xFE7
   734                           fsr1h	equ	0xFE2
   735                           fsr1l	equ	0xFE1
   736                           indf2	equ	0xFDF
   737                           fsr2h	equ	0xFDA
   738                           fsr2l	equ	0xFD9
   739                           status	equ	0xFD8
   740                           
   741 ;; *************** function _WriteUSART *****************
   742 ;; Defined at:
   743 ;;		line 13 in file "sources\pic18\plib\USART\uwrite.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;  data            1    wreg     unsigned char 
   746 ;; Auto vars:     Size  Location     Type
   747 ;;  data            1    0[BANK0 ] unsigned char 
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		wreg
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   757 ;;      Params:         0       0       0       0
   758 ;;      Locals:         0       1       0       0
   759 ;;      Temps:          0       0       0       0
   760 ;;      Totals:         0       1       0       0
   761 ;;Total ram usage:        1 bytes
   762 ;; Hardware stack levels used:    1
   763 ;; Hardware stack levels required when called:    3
   764 ;; This function calls:
   765 ;;		Nothing
   766 ;; This function is called by:
   767 ;;		_putsUSART
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           	psect	text2
   772  000FE2                     __ptext2:
   773                           	opt stack 0
   774  000FE2                     _WriteUSART:
   775                           	opt stack 26
   776                           
   777                           ; BSR set to: 0
   778                           ;incstack = 0
   779                           ;WriteUSART@data stored from wreg
   780  000FE2  0100               	movlb	0	; () banked
   781  000FE4  6F76               	movwf	WriteUSART@data& (0+255),b
   782  000FE6  ACAC               	btfss	4012,6,c	;volatile
   783  000FE8  D003               	goto	l2841
   784  000FEA  90AC               	bcf	4012,0,c	;volatile
   785  000FEC  B228               	btfsc	_USART_Status,1,c
   786  000FEE  80AC               	bsf	4012,0,c	;volatile
   787  000FF0                     l2841:
   788  000FF0  C076  FFAD         	movff	WriteUSART@data,4013	;volatile
   789  000FF4  0012               	return		;funcret
   790  000FF6                     __end_of_WriteUSART:
   791                           	opt stack 0
   792                           tblptru	equ	0xFF8
   793                           tblptrh	equ	0xFF7
   794                           tblptrl	equ	0xFF6
   795                           tablat	equ	0xFF5
   796                           postinc0	equ	0xFEE
   797                           wreg	equ	0xFE8
   798                           indf1	equ	0xFE7
   799                           fsr1h	equ	0xFE2
   800                           fsr1l	equ	0xFE1
   801                           indf2	equ	0xFDF
   802                           fsr2h	equ	0xFDA
   803                           fsr2l	equ	0xFD9
   804                           status	equ	0xFD8
   805                           
   806 ;; *************** function _CANsendMessage *****************
   807 ;; Defined at:
   808 ;;		line 294 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
   809 ;; Parameters:    Size  Location     Type
   810 ;;  identifier      4    0[BANK0 ] unsigned long 
   811 ;;  data            2    4[BANK0 ] PTR unsigned char 
   812 ;;		 -> data(8), 
   813 ;;  dataLength      1    6[BANK0 ] unsigned char 
   814 ;;  flags           1    7[BANK0 ] enum E16873
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  tamp            4   12[BANK0 ] unsigned long 
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   826 ;;      Params:         0       8       0       0
   827 ;;      Locals:         0       4       0       0
   828 ;;      Temps:          0       4       0       0
   829 ;;      Totals:         0      16       0       0
   830 ;;Total ram usage:       16 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; Hardware stack levels required when called:    3
   833 ;; This function calls:
   834 ;;		Nothing
   835 ;; This function is called by:
   836 ;;		_main
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           	psect	text3
   841  00013C                     __ptext3:
   842                           	opt stack 0
   843  00013C                     _CANsendMessage:
   844                           	opt stack 27
   845                           
   846                           ;inc\CANlib.h: 296: unsigned long tamp;
   847                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
   848                           
   849                           ;incstack = 0
   850  00013C  010F               	movlb	15	; () banked
   851  00013E  B740               	btfsc	64,3,b	;volatile
   852  000140  D13F               	goto	l341
   853                           
   854                           ; BSR set to: 15
   855                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
   856  000142  C07C  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
   857                           
   858                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
   859  000146  0100               	movlb	0	; () banked
   860  000148  AD7D               	btfss	CANsendMessage@flags& (0+255),6,b
   861  00014A  D003               	goto	l342
   862                           
   863                           ; BSR set to: 0
   864                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
   865  00014C  010F               	movlb	15	; () banked
   866  00014E  8D45               	bsf	69,6,b	;volatile
   867  000150  D002               	goto	l343
   868  000152                     l342:
   869                           
   870                           ; BSR set to: 0
   871                           ;inc\CANlib.h: 302: else
   872                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
   873  000152  010F               	movlb	15	; () banked
   874  000154  9D45               	bcf	69,6,b	;volatile
   875  000156                     l343:
   876                           
   877                           ; BSR set to: 15
   878                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
   879  000156  0100               	movlb	0	; () banked
   880  000158  A77D               	btfss	CANsendMessage@flags& (0+255),3,b
   881  00015A  D079               	goto	l344
   882                           
   883                           ; BSR set to: 0
   884                           ;inc\CANlib.h: 306: {
   885                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
   886  00015C  0100               	movlb	0	; () banked
   887  00015E  5176               	movf	CANsendMessage@identifier& (0+255),w,b
   888  000160  0100               	movlb	0	; () banked
   889  000162  6F82               	movwf	CANsendMessage@tamp& (0+255),b
   890  000164  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
   891  000166  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
   892  000168  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
   893                           
   894                           ; BSR set to: 0
   895                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
   896  00016A  C082  FF44         	movff	CANsendMessage@tamp,3908	;volatile
   897                           
   898                           ; BSR set to: 0
   899                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
   900  00016E  0E00               	movlw	0
   901  000170  0100               	movlb	0	; () banked
   902  000172  1576               	andwf	CANsendMessage@identifier& (0+255),w,b
   903  000174  0100               	movlb	0	; () banked
   904  000176  6F82               	movwf	CANsendMessage@tamp& (0+255),b
   905  000178  0EFF               	movlw	255
   906  00017A  0100               	movlb	0	; () banked
   907  00017C  1577               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
   908  00017E  0100               	movlb	0	; () banked
   909  000180  6F83               	movwf	(CANsendMessage@tamp+1)& (0+255),b
   910  000182  0E00               	movlw	0
   911  000184  0100               	movlb	0	; () banked
   912  000186  1578               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
   913  000188  0100               	movlb	0	; () banked
   914  00018A  6F84               	movwf	(CANsendMessage@tamp+2)& (0+255),b
   915  00018C  0E00               	movlw	0
   916  00018E  0100               	movlb	0	; () banked
   917  000190  1579               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
   918  000192  0100               	movlb	0	; () banked
   919  000194  6F85               	movwf	(CANsendMessage@tamp+3)& (0+255),b
   920                           
   921                           ; BSR set to: 0
   922                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
   923  000196  C082  F07E         	movff	CANsendMessage@tamp,??_CANsendMessage
   924  00019A  C083  F07F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
   925  00019E  C084  F080         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
   926  0001A2  C085  F081         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
   927  0001A6  C07F  F07E         	movff	??_CANsendMessage+1,??_CANsendMessage
   928  0001AA  C080  F07F         	movff	??_CANsendMessage+2,??_CANsendMessage+1
   929  0001AE  C081  F080         	movff	??_CANsendMessage+3,??_CANsendMessage+2
   930  0001B2  0100               	movlb	0	; () banked
   931  0001B4  6B81               	clrf	(??_CANsendMessage+3)& (0+255),b
   932  0001B6  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
   933  0001BA  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
   934  0001BE  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
   935  0001C2  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
   936                           
   937                           ; BSR set to: 0
   938                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
   939  0001C6  C082  FF43         	movff	CANsendMessage@tamp,3907	;volatile
   940                           
   941                           ; BSR set to: 0
   942                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
   943  0001CA  0E00               	movlw	0
   944  0001CC  010F               	movlb	15	; () banked
   945  0001CE  6F42               	movwf	66,b	;volatile
   946                           
   947                           ; BSR set to: 15
   948                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
   949  0001D0  010F               	movlb	15	; () banked
   950  0001D2  8742               	bsf	66,3,b	;volatile
   951                           
   952                           ; BSR set to: 15
   953                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
   954  0001D4  0100               	movlb	0	; () banked
   955  0001D6  A178               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
   956  0001D8  D002               	goto	l345
   957                           
   958                           ; BSR set to: 0
   959                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
   960  0001DA  010F               	movlb	15	; () banked
   961  0001DC  8142               	bsf	66,0,b	;volatile
   962  0001DE                     l345:
   963                           
   964                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
   965  0001DE  0100               	movlb	0	; () banked
   966  0001E0  A378               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
   967  0001E2  D002               	goto	l346
   968                           
   969                           ; BSR set to: 0
   970                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
   971  0001E4  010F               	movlb	15	; () banked
   972  0001E6  8342               	bsf	66,1,b	;volatile
   973  0001E8                     l346:
   974                           
   975                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
   976  0001E8  0100               	movlb	0	; () banked
   977  0001EA  A578               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
   978  0001EC  D002               	goto	l347
   979                           
   980                           ; BSR set to: 0
   981                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
   982  0001EE  010F               	movlb	15	; () banked
   983  0001F0  8B42               	bsf	66,5,b	;volatile
   984  0001F2                     l347:
   985                           
   986                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
   987  0001F2  0100               	movlb	0	; () banked
   988  0001F4  A778               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
   989  0001F6  D002               	goto	l348
   990                           
   991                           ; BSR set to: 0
   992                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
   993  0001F8  010F               	movlb	15	; () banked
   994  0001FA  8D42               	bsf	66,6,b	;volatile
   995  0001FC                     l348:
   996                           
   997                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
   998  0001FC  0100               	movlb	0	; () banked
   999  0001FE  A978               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1000  000200  D002               	goto	l2875
  1001                           
  1002                           ; BSR set to: 0
  1003                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1004  000202  010F               	movlb	15	; () banked
  1005  000204  8F42               	bsf	66,7,b	;volatile
  1006  000206                     l2875:
  1007                           
  1008                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1009  000206  C076  F07E         	movff	CANsendMessage@identifier,??_CANsendMessage
  1010  00020A  C077  F07F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1011  00020E  C078  F080         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1012  000212  C079  F081         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1013  000216  0E16               	movlw	22
  1014  000218  D006               	goto	u2980
  1015  00021A                     u2985:
  1016  00021A  0100               	movlb	0	; () banked
  1017  00021C  90D8               	bcf	status,0,c
  1018  00021E  3381               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1019  000220  3380               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1020  000222  337F               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1021  000224  337E               	rrcf	??_CANsendMessage& (0+255),f,b
  1022  000226                     u2980:
  1023  000226  2EE8               	decfsz	wreg,f,c
  1024  000228  D7F8               	goto	u2985
  1025  00022A  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  1026  00022E  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1027  000232  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1028  000236  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1032  00023A  0100               	movlb	0	; () banked
  1033  00023C  5182               	movf	CANsendMessage@tamp& (0+255),w,b
  1034  00023E  0100               	movlb	0	; () banked
  1035  000240  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  1036  000242  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1037  000244  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1038  000246  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1039                           
  1040                           ; BSR set to: 0
  1041                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1042  000248  C082  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1043                           
  1044                           ;inc\CANlib.h: 332: }
  1045  00024C  D059               	goto	l2895
  1046  00024E                     l344:
  1047                           
  1048                           ; BSR set to: 0
  1049                           ;inc\CANlib.h: 334: else
  1050                           ;inc\CANlib.h: 336: {
  1051                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1052  00024E  010F               	movlb	15	; () banked
  1053  000250  9742               	bcf	66,3,b	;volatile
  1054                           
  1055                           ; BSR set to: 15
  1056                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1057  000252  C076  F07E         	movff	CANsendMessage@identifier,??_CANsendMessage
  1058  000256  C077  F07F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1059  00025A  C078  F080         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1060  00025E  C079  F081         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1061  000262  0E04               	movlw	4
  1062  000264  D006               	goto	u2990
  1063  000266                     u2995:
  1064  000266  0100               	movlb	0	; () banked
  1065  000268  90D8               	bcf	status,0,c
  1066  00026A  3381               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1067  00026C  3380               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1068  00026E  337F               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1069  000270  337E               	rrcf	??_CANsendMessage& (0+255),f,b
  1070  000272                     u2990:
  1071  000272  2EE8               	decfsz	wreg,f,c
  1072  000274  D7F8               	goto	u2995
  1073  000276  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  1074  00027A  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1075  00027E  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1076  000282  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1077                           
  1078                           ; BSR set to: 0
  1079                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1080  000286  0100               	movlb	0	; () banked
  1081  000288  5182               	movf	CANsendMessage@tamp& (0+255),w,b
  1082  00028A  0100               	movlb	0	; () banked
  1083  00028C  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  1084  00028E  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1085  000290  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1086  000292  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1087                           
  1088                           ; BSR set to: 0
  1089                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1090  000294  C082  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1091                           
  1092                           ; BSR set to: 0
  1093                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1094  000298  0E07               	movlw	7
  1095  00029A  0100               	movlb	0	; () banked
  1096  00029C  1576               	andwf	CANsendMessage@identifier& (0+255),w,b
  1097  00029E  0100               	movlb	0	; () banked
  1098  0002A0  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  1099  0002A2  0E00               	movlw	0
  1100  0002A4  0100               	movlb	0	; () banked
  1101  0002A6  1577               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1102  0002A8  0100               	movlb	0	; () banked
  1103  0002AA  6F83               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1104  0002AC  0E00               	movlw	0
  1105  0002AE  0100               	movlb	0	; () banked
  1106  0002B0  1578               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1107  0002B2  0100               	movlb	0	; () banked
  1108  0002B4  6F84               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1109  0002B6  0E00               	movlw	0
  1110  0002B8  0100               	movlb	0	; () banked
  1111  0002BA  1579               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1112  0002BC  0100               	movlb	0	; () banked
  1113  0002BE  6F85               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1114                           
  1115                           ; BSR set to: 0
  1116                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1117  0002C0  C082  F07E         	movff	CANsendMessage@tamp,??_CANsendMessage
  1118  0002C4  C083  F07F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1119  0002C8  C084  F080         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1120  0002CC  C085  F081         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1121  0002D0  0E05               	movlw	5
  1122  0002D2                     u3005:
  1123  0002D2  90D8               	bcf	status,0,c
  1124  0002D4  0100               	movlb	0	; () banked
  1125  0002D6  377E               	rlcf	??_CANsendMessage& (0+255),f,b
  1126  0002D8  377F               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1127  0002DA  3780               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1128  0002DC  3781               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1129  0002DE  2EE8               	decfsz	wreg,f,c
  1130  0002E0  D7F8               	goto	u3005
  1131  0002E2  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  1132  0002E6  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1133  0002EA  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1134  0002EE  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1135                           
  1136                           ; BSR set to: 0
  1137                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1138  0002F2  010F               	movlb	15	; () banked
  1139  0002F4  5142               	movf	66,w,b	;volatile
  1140  0002F6  0B1F               	andlw	31
  1141  0002F8  010F               	movlb	15	; () banked
  1142  0002FA  6F42               	movwf	66,b	;volatile
  1143                           
  1144                           ; BSR set to: 15
  1145                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1146  0002FC  C082  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1147  000300                     l2895:
  1148                           
  1149                           ;inc\CANlib.h: 347: }
  1150                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  1151  000300  0100               	movlb	0	; () banked
  1152  000302  A17D               	btfss	CANsendMessage@flags& (0+255),0,b
  1153  000304  D003               	goto	l351
  1154                           
  1155                           ; BSR set to: 0
  1156                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  1157  000306  010F               	movlb	15	; () banked
  1158  000308  8140               	bsf	64,0,b	;volatile
  1159  00030A  D002               	goto	l352
  1160  00030C                     l351:
  1161                           
  1162                           ; BSR set to: 0
  1163                           ;inc\CANlib.h: 351: else
  1164                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  1165  00030C  010F               	movlb	15	; () banked
  1166  00030E  9140               	bcf	64,0,b	;volatile
  1167  000310                     l352:
  1168                           
  1169                           ; BSR set to: 15
  1170                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  1171  000310  0100               	movlb	0	; () banked
  1172  000312  A37D               	btfss	CANsendMessage@flags& (0+255),1,b
  1173  000314  D003               	goto	l353
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  1177  000316  010F               	movlb	15	; () banked
  1178  000318  8340               	bsf	64,1,b	;volatile
  1179  00031A  D002               	goto	l2901
  1180  00031C                     l353:
  1181                           
  1182                           ; BSR set to: 0
  1183                           ;inc\CANlib.h: 355: else
  1184                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  1185  00031C  010F               	movlb	15	; () banked
  1186  00031E  9340               	bcf	64,1,b	;volatile
  1187  000320                     l2901:
  1188                           
  1189                           ; BSR set to: 15
  1190                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  1191  000320  C07A  FFD9         	movff	CANsendMessage@data,fsr2l
  1192  000324  C07B  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1193  000328  50DF               	movf	indf2,w,c
  1194  00032A  010F               	movlb	15	; () banked
  1195  00032C  6F46               	movwf	70,b	;volatile
  1196                           
  1197                           ; BSR set to: 15
  1198                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  1199  00032E  0100               	movlb	0	; () banked
  1200  000330  EE20 F001          	lfsr	2,1
  1201  000334  517A               	movf	CANsendMessage@data& (0+255),w,b
  1202  000336  26D9               	addwf	fsr2l,f,c
  1203  000338  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1204  00033A  22DA               	addwfc	fsr2h,f,c
  1205  00033C  50DF               	movf	indf2,w,c
  1206  00033E  010F               	movlb	15	; () banked
  1207  000340  6F47               	movwf	71,b	;volatile
  1208                           
  1209                           ; BSR set to: 15
  1210                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  1211  000342  0100               	movlb	0	; () banked
  1212  000344  EE20 F002          	lfsr	2,2
  1213  000348  517A               	movf	CANsendMessage@data& (0+255),w,b
  1214  00034A  26D9               	addwf	fsr2l,f,c
  1215  00034C  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1216  00034E  22DA               	addwfc	fsr2h,f,c
  1217  000350  50DF               	movf	indf2,w,c
  1218  000352  010F               	movlb	15	; () banked
  1219  000354  6F48               	movwf	72,b	;volatile
  1220                           
  1221                           ; BSR set to: 15
  1222                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  1223  000356  0100               	movlb	0	; () banked
  1224  000358  EE20 F003          	lfsr	2,3
  1225  00035C  517A               	movf	CANsendMessage@data& (0+255),w,b
  1226  00035E  26D9               	addwf	fsr2l,f,c
  1227  000360  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1228  000362  22DA               	addwfc	fsr2h,f,c
  1229  000364  50DF               	movf	indf2,w,c
  1230  000366  010F               	movlb	15	; () banked
  1231  000368  6F49               	movwf	73,b	;volatile
  1232                           
  1233                           ; BSR set to: 15
  1234                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  1235  00036A  0100               	movlb	0	; () banked
  1236  00036C  EE20 F004          	lfsr	2,4
  1237  000370  517A               	movf	CANsendMessage@data& (0+255),w,b
  1238  000372  26D9               	addwf	fsr2l,f,c
  1239  000374  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1240  000376  22DA               	addwfc	fsr2h,f,c
  1241  000378  50DF               	movf	indf2,w,c
  1242  00037A  010F               	movlb	15	; () banked
  1243  00037C  6F4A               	movwf	74,b	;volatile
  1244                           
  1245                           ; BSR set to: 15
  1246                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  1247  00037E  0100               	movlb	0	; () banked
  1248  000380  EE20 F005          	lfsr	2,5
  1249  000384  517A               	movf	CANsendMessage@data& (0+255),w,b
  1250  000386  26D9               	addwf	fsr2l,f,c
  1251  000388  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1252  00038A  22DA               	addwfc	fsr2h,f,c
  1253  00038C  50DF               	movf	indf2,w,c
  1254  00038E  010F               	movlb	15	; () banked
  1255  000390  6F4B               	movwf	75,b	;volatile
  1256                           
  1257                           ; BSR set to: 15
  1258                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  1259  000392  0100               	movlb	0	; () banked
  1260  000394  EE20 F006          	lfsr	2,6
  1261  000398  517A               	movf	CANsendMessage@data& (0+255),w,b
  1262  00039A  26D9               	addwf	fsr2l,f,c
  1263  00039C  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1264  00039E  22DA               	addwfc	fsr2h,f,c
  1265  0003A0  50DF               	movf	indf2,w,c
  1266  0003A2  010F               	movlb	15	; () banked
  1267  0003A4  6F4C               	movwf	76,b	;volatile
  1268                           
  1269                           ; BSR set to: 15
  1270                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  1271  0003A6  0100               	movlb	0	; () banked
  1272  0003A8  EE20 F007          	lfsr	2,7
  1273  0003AC  517A               	movf	CANsendMessage@data& (0+255),w,b
  1274  0003AE  26D9               	addwf	fsr2l,f,c
  1275  0003B0  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1276  0003B2  22DA               	addwfc	fsr2h,f,c
  1277  0003B4  50DF               	movf	indf2,w,c
  1278  0003B6  010F               	movlb	15	; () banked
  1279  0003B8  6F4D               	movwf	77,b	;volatile
  1280                           
  1281                           ; BSR set to: 15
  1282                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  1283  0003BA  010F               	movlb	15	; () banked
  1284  0003BC  8740               	bsf	64,3,b	;volatile
  1285                           
  1286                           ; BSR set to: 15
  1287                           ;inc\CANlib.h: 368: return;
  1288  0003BE  0012               	return	
  1289  0003C0                     l341:
  1290                           
  1291                           ; BSR set to: 15
  1292                           ;inc\CANlib.h: 369: }
  1293                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  1294  0003C0  010F               	movlb	15	; () banked
  1295  0003C2  B730               	btfsc	48,3,b	;volatile
  1296  0003C4  D13F               	goto	l356
  1297                           
  1298                           ; BSR set to: 15
  1299                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  1300  0003C6  C07C  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  1301                           
  1302                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  1303  0003CA  0100               	movlb	0	; () banked
  1304  0003CC  AD7D               	btfss	CANsendMessage@flags& (0+255),6,b
  1305  0003CE  D003               	goto	l357
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  1309  0003D0  010F               	movlb	15	; () banked
  1310  0003D2  8D35               	bsf	53,6,b	;volatile
  1311  0003D4  D002               	goto	l358
  1312  0003D6                     l357:
  1313                           
  1314                           ; BSR set to: 0
  1315                           ;inc\CANlib.h: 378: else
  1316                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  1317  0003D6  010F               	movlb	15	; () banked
  1318  0003D8  9D35               	bcf	53,6,b	;volatile
  1319  0003DA                     l358:
  1320                           
  1321                           ; BSR set to: 15
  1322                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  1323  0003DA  0100               	movlb	0	; () banked
  1324  0003DC  A77D               	btfss	CANsendMessage@flags& (0+255),3,b
  1325  0003DE  D079               	goto	l359
  1326                           
  1327                           ; BSR set to: 0
  1328                           ;inc\CANlib.h: 382: {
  1329                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  1330  0003E0  0100               	movlb	0	; () banked
  1331  0003E2  5176               	movf	CANsendMessage@identifier& (0+255),w,b
  1332  0003E4  0100               	movlb	0	; () banked
  1333  0003E6  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  1334  0003E8  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1335  0003EA  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1336  0003EC  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  1340  0003EE  C082  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  1341                           
  1342                           ; BSR set to: 0
  1343                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  1344  0003F2  0E00               	movlw	0
  1345  0003F4  0100               	movlb	0	; () banked
  1346  0003F6  1576               	andwf	CANsendMessage@identifier& (0+255),w,b
  1347  0003F8  0100               	movlb	0	; () banked
  1348  0003FA  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  1349  0003FC  0EFF               	movlw	255
  1350  0003FE  0100               	movlb	0	; () banked
  1351  000400  1577               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1352  000402  0100               	movlb	0	; () banked
  1353  000404  6F83               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1354  000406  0E00               	movlw	0
  1355  000408  0100               	movlb	0	; () banked
  1356  00040A  1578               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1357  00040C  0100               	movlb	0	; () banked
  1358  00040E  6F84               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1359  000410  0E00               	movlw	0
  1360  000412  0100               	movlb	0	; () banked
  1361  000414  1579               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1362  000416  0100               	movlb	0	; () banked
  1363  000418  6F85               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1364                           
  1365                           ; BSR set to: 0
  1366                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  1367  00041A  C082  F07E         	movff	CANsendMessage@tamp,??_CANsendMessage
  1368  00041E  C083  F07F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1369  000422  C084  F080         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1370  000426  C085  F081         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1371  00042A  C07F  F07E         	movff	??_CANsendMessage+1,??_CANsendMessage
  1372  00042E  C080  F07F         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1373  000432  C081  F080         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1374  000436  0100               	movlb	0	; () banked
  1375  000438  6B81               	clrf	(??_CANsendMessage+3)& (0+255),b
  1376  00043A  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  1377  00043E  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1378  000442  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1379  000446  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  1383  00044A  C082  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  1387  00044E  0E00               	movlw	0
  1388  000450  010F               	movlb	15	; () banked
  1389  000452  6F32               	movwf	50,b	;volatile
  1390                           
  1391                           ; BSR set to: 15
  1392                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  1393  000454  010F               	movlb	15	; () banked
  1394  000456  8732               	bsf	50,3,b	;volatile
  1395                           
  1396                           ; BSR set to: 15
  1397                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  1398  000458  0100               	movlb	0	; () banked
  1399  00045A  A178               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1400  00045C  D002               	goto	l360
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  1404  00045E  010F               	movlb	15	; () banked
  1405  000460  8132               	bsf	50,0,b	;volatile
  1406  000462                     l360:
  1407                           
  1408                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  1409  000462  0100               	movlb	0	; () banked
  1410  000464  A378               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1411  000466  D002               	goto	l361
  1412                           
  1413                           ; BSR set to: 0
  1414                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  1415  000468  010F               	movlb	15	; () banked
  1416  00046A  8332               	bsf	50,1,b	;volatile
  1417  00046C                     l361:
  1418                           
  1419                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  1420  00046C  0100               	movlb	0	; () banked
  1421  00046E  A578               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1422  000470  D002               	goto	l362
  1423                           
  1424                           ; BSR set to: 0
  1425                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  1426  000472  010F               	movlb	15	; () banked
  1427  000474  8B32               	bsf	50,5,b	;volatile
  1428  000476                     l362:
  1429                           
  1430                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  1431  000476  0100               	movlb	0	; () banked
  1432  000478  A778               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1433  00047A  D002               	goto	l363
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  1437  00047C  010F               	movlb	15	; () banked
  1438  00047E  8D32               	bsf	50,6,b	;volatile
  1439  000480                     l363:
  1440                           
  1441                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  1442  000480  0100               	movlb	0	; () banked
  1443  000482  A978               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1444  000484  D002               	goto	l2951
  1445                           
  1446                           ; BSR set to: 0
  1447                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  1448  000486  010F               	movlb	15	; () banked
  1449  000488  8F32               	bsf	50,7,b	;volatile
  1450  00048A                     l2951:
  1451                           
  1452                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  1453  00048A  C076  F07E         	movff	CANsendMessage@identifier,??_CANsendMessage
  1454  00048E  C077  F07F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1455  000492  C078  F080         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1456  000496  C079  F081         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1457  00049A  0E16               	movlw	22
  1458  00049C  D006               	goto	u3110
  1459  00049E                     u3115:
  1460  00049E  0100               	movlb	0	; () banked
  1461  0004A0  90D8               	bcf	status,0,c
  1462  0004A2  3381               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1463  0004A4  3380               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1464  0004A6  337F               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1465  0004A8  337E               	rrcf	??_CANsendMessage& (0+255),f,b
  1466  0004AA                     u3110:
  1467  0004AA  2EE8               	decfsz	wreg,f,c
  1468  0004AC  D7F8               	goto	u3115
  1469  0004AE  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  1470  0004B2  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1471  0004B6  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1472  0004BA  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1473                           
  1474                           ; BSR set to: 0
  1475                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  1476  0004BE  0100               	movlb	0	; () banked
  1477  0004C0  5182               	movf	CANsendMessage@tamp& (0+255),w,b
  1478  0004C2  0100               	movlb	0	; () banked
  1479  0004C4  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  1480  0004C6  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1481  0004C8  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1482  0004CA  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1483                           
  1484                           ; BSR set to: 0
  1485                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  1486  0004CC  C082  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1487                           
  1488                           ;inc\CANlib.h: 407: }
  1489  0004D0  D059               	goto	l2971
  1490  0004D2                     l359:
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;inc\CANlib.h: 409: else
  1494                           ;inc\CANlib.h: 411: {
  1495                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  1496  0004D2  010F               	movlb	15	; () banked
  1497  0004D4  9732               	bcf	50,3,b	;volatile
  1498                           
  1499                           ; BSR set to: 15
  1500                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  1501  0004D6  C076  F07E         	movff	CANsendMessage@identifier,??_CANsendMessage
  1502  0004DA  C077  F07F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1503  0004DE  C078  F080         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1504  0004E2  C079  F081         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1505  0004E6  0E04               	movlw	4
  1506  0004E8  D006               	goto	u3120
  1507  0004EA                     u3125:
  1508  0004EA  0100               	movlb	0	; () banked
  1509  0004EC  90D8               	bcf	status,0,c
  1510  0004EE  3381               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1511  0004F0  3380               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1512  0004F2  337F               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1513  0004F4  337E               	rrcf	??_CANsendMessage& (0+255),f,b
  1514  0004F6                     u3120:
  1515  0004F6  2EE8               	decfsz	wreg,f,c
  1516  0004F8  D7F8               	goto	u3125
  1517  0004FA  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  1518  0004FE  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1519  000502  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1520  000506  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  1524  00050A  0100               	movlb	0	; () banked
  1525  00050C  5182               	movf	CANsendMessage@tamp& (0+255),w,b
  1526  00050E  0100               	movlb	0	; () banked
  1527  000510  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  1528  000512  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1529  000514  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1530  000516  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  1534  000518  C082  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1535                           
  1536                           ; BSR set to: 0
  1537                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  1538  00051C  0E07               	movlw	7
  1539  00051E  0100               	movlb	0	; () banked
  1540  000520  1576               	andwf	CANsendMessage@identifier& (0+255),w,b
  1541  000522  0100               	movlb	0	; () banked
  1542  000524  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  1543  000526  0E00               	movlw	0
  1544  000528  0100               	movlb	0	; () banked
  1545  00052A  1577               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1546  00052C  0100               	movlb	0	; () banked
  1547  00052E  6F83               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1548  000530  0E00               	movlw	0
  1549  000532  0100               	movlb	0	; () banked
  1550  000534  1578               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1551  000536  0100               	movlb	0	; () banked
  1552  000538  6F84               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1553  00053A  0E00               	movlw	0
  1554  00053C  0100               	movlb	0	; () banked
  1555  00053E  1579               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1556  000540  0100               	movlb	0	; () banked
  1557  000542  6F85               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1558                           
  1559                           ; BSR set to: 0
  1560                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  1561  000544  C082  F07E         	movff	CANsendMessage@tamp,??_CANsendMessage
  1562  000548  C083  F07F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1563  00054C  C084  F080         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1564  000550  C085  F081         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1565  000554  0E05               	movlw	5
  1566  000556                     u3135:
  1567  000556  90D8               	bcf	status,0,c
  1568  000558  0100               	movlb	0	; () banked
  1569  00055A  377E               	rlcf	??_CANsendMessage& (0+255),f,b
  1570  00055C  377F               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1571  00055E  3780               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1572  000560  3781               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1573  000562  2EE8               	decfsz	wreg,f,c
  1574  000564  D7F8               	goto	u3135
  1575  000566  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  1576  00056A  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1577  00056E  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1578  000572  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1579                           
  1580                           ; BSR set to: 0
  1581                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  1582  000576  010F               	movlb	15	; () banked
  1583  000578  5132               	movf	50,w,b	;volatile
  1584  00057A  0B1F               	andlw	31
  1585  00057C  010F               	movlb	15	; () banked
  1586  00057E  6F32               	movwf	50,b	;volatile
  1587                           
  1588                           ; BSR set to: 15
  1589                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  1590  000580  C082  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  1591  000584                     l2971:
  1592                           
  1593                           ;inc\CANlib.h: 422: }
  1594                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  1595  000584  0100               	movlb	0	; () banked
  1596  000586  A17D               	btfss	CANsendMessage@flags& (0+255),0,b
  1597  000588  D003               	goto	l366
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  1601  00058A  010F               	movlb	15	; () banked
  1602  00058C  8130               	bsf	48,0,b	;volatile
  1603  00058E  D002               	goto	l367
  1604  000590                     l366:
  1605                           
  1606                           ; BSR set to: 0
  1607                           ;inc\CANlib.h: 426: else
  1608                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  1609  000590  010F               	movlb	15	; () banked
  1610  000592  9130               	bcf	48,0,b	;volatile
  1611  000594                     l367:
  1612                           
  1613                           ; BSR set to: 15
  1614                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  1615  000594  0100               	movlb	0	; () banked
  1616  000596  A37D               	btfss	CANsendMessage@flags& (0+255),1,b
  1617  000598  D003               	goto	l368
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  1621  00059A  010F               	movlb	15	; () banked
  1622  00059C  8330               	bsf	48,1,b	;volatile
  1623  00059E  D002               	goto	l2977
  1624  0005A0                     l368:
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;inc\CANlib.h: 430: else
  1628                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  1629  0005A0  010F               	movlb	15	; () banked
  1630  0005A2  9330               	bcf	48,1,b	;volatile
  1631  0005A4                     l2977:
  1632                           
  1633                           ; BSR set to: 15
  1634                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  1635  0005A4  C07A  FFD9         	movff	CANsendMessage@data,fsr2l
  1636  0005A8  C07B  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1637  0005AC  50DF               	movf	indf2,w,c
  1638  0005AE  010F               	movlb	15	; () banked
  1639  0005B0  6F36               	movwf	54,b	;volatile
  1640                           
  1641                           ; BSR set to: 15
  1642                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  1643  0005B2  0100               	movlb	0	; () banked
  1644  0005B4  EE20 F001          	lfsr	2,1
  1645  0005B8  517A               	movf	CANsendMessage@data& (0+255),w,b
  1646  0005BA  26D9               	addwf	fsr2l,f,c
  1647  0005BC  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1648  0005BE  22DA               	addwfc	fsr2h,f,c
  1649  0005C0  50DF               	movf	indf2,w,c
  1650  0005C2  010F               	movlb	15	; () banked
  1651  0005C4  6F37               	movwf	55,b	;volatile
  1652                           
  1653                           ; BSR set to: 15
  1654                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  1655  0005C6  0100               	movlb	0	; () banked
  1656  0005C8  EE20 F002          	lfsr	2,2
  1657  0005CC  517A               	movf	CANsendMessage@data& (0+255),w,b
  1658  0005CE  26D9               	addwf	fsr2l,f,c
  1659  0005D0  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1660  0005D2  22DA               	addwfc	fsr2h,f,c
  1661  0005D4  50DF               	movf	indf2,w,c
  1662  0005D6  010F               	movlb	15	; () banked
  1663  0005D8  6F38               	movwf	56,b	;volatile
  1664                           
  1665                           ; BSR set to: 15
  1666                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  1667  0005DA  0100               	movlb	0	; () banked
  1668  0005DC  EE20 F003          	lfsr	2,3
  1669  0005E0  517A               	movf	CANsendMessage@data& (0+255),w,b
  1670  0005E2  26D9               	addwf	fsr2l,f,c
  1671  0005E4  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1672  0005E6  22DA               	addwfc	fsr2h,f,c
  1673  0005E8  50DF               	movf	indf2,w,c
  1674  0005EA  010F               	movlb	15	; () banked
  1675  0005EC  6F39               	movwf	57,b	;volatile
  1676                           
  1677                           ; BSR set to: 15
  1678                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  1679  0005EE  0100               	movlb	0	; () banked
  1680  0005F0  EE20 F004          	lfsr	2,4
  1681  0005F4  517A               	movf	CANsendMessage@data& (0+255),w,b
  1682  0005F6  26D9               	addwf	fsr2l,f,c
  1683  0005F8  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1684  0005FA  22DA               	addwfc	fsr2h,f,c
  1685  0005FC  50DF               	movf	indf2,w,c
  1686  0005FE  010F               	movlb	15	; () banked
  1687  000600  6F3A               	movwf	58,b	;volatile
  1688                           
  1689                           ; BSR set to: 15
  1690                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  1691  000602  0100               	movlb	0	; () banked
  1692  000604  EE20 F005          	lfsr	2,5
  1693  000608  517A               	movf	CANsendMessage@data& (0+255),w,b
  1694  00060A  26D9               	addwf	fsr2l,f,c
  1695  00060C  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1696  00060E  22DA               	addwfc	fsr2h,f,c
  1697  000610  50DF               	movf	indf2,w,c
  1698  000612  010F               	movlb	15	; () banked
  1699  000614  6F3B               	movwf	59,b	;volatile
  1700                           
  1701                           ; BSR set to: 15
  1702                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  1703  000616  0100               	movlb	0	; () banked
  1704  000618  EE20 F006          	lfsr	2,6
  1705  00061C  517A               	movf	CANsendMessage@data& (0+255),w,b
  1706  00061E  26D9               	addwf	fsr2l,f,c
  1707  000620  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1708  000622  22DA               	addwfc	fsr2h,f,c
  1709  000624  50DF               	movf	indf2,w,c
  1710  000626  010F               	movlb	15	; () banked
  1711  000628  6F3C               	movwf	60,b	;volatile
  1712                           
  1713                           ; BSR set to: 15
  1714                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  1715  00062A  0100               	movlb	0	; () banked
  1716  00062C  EE20 F007          	lfsr	2,7
  1717  000630  517A               	movf	CANsendMessage@data& (0+255),w,b
  1718  000632  26D9               	addwf	fsr2l,f,c
  1719  000634  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1720  000636  22DA               	addwfc	fsr2h,f,c
  1721  000638  50DF               	movf	indf2,w,c
  1722  00063A  010F               	movlb	15	; () banked
  1723  00063C  6F3D               	movwf	61,b	;volatile
  1724                           
  1725                           ; BSR set to: 15
  1726                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  1727  00063E  010F               	movlb	15	; () banked
  1728  000640  8730               	bsf	48,3,b	;volatile
  1729                           
  1730                           ; BSR set to: 15
  1731                           ;inc\CANlib.h: 444: return;
  1732  000642  0012               	return	
  1733  000644                     l356:
  1734                           
  1735                           ; BSR set to: 15
  1736                           ;inc\CANlib.h: 445: }
  1737                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  1738  000644  010F               	movlb	15	; () banked
  1739  000646  B720               	btfsc	32,3,b	;volatile
  1740  000648  0012               	return	
  1741                           
  1742                           ; BSR set to: 15
  1743                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  1744  00064A  C07C  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  1745                           
  1746                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  1747  00064E  0100               	movlb	0	; () banked
  1748  000650  AD7D               	btfss	CANsendMessage@flags& (0+255),6,b
  1749  000652  D003               	goto	l371
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  1753  000654  010F               	movlb	15	; () banked
  1754  000656  8D25               	bsf	37,6,b	;volatile
  1755  000658  D002               	goto	l372
  1756  00065A                     l371:
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;inc\CANlib.h: 454: else
  1760                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  1761  00065A  010F               	movlb	15	; () banked
  1762  00065C  9D25               	bcf	37,6,b	;volatile
  1763  00065E                     l372:
  1764                           
  1765                           ; BSR set to: 15
  1766                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  1767  00065E  0100               	movlb	0	; () banked
  1768  000660  A77D               	btfss	CANsendMessage@flags& (0+255),3,b
  1769  000662  D079               	goto	l373
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;inc\CANlib.h: 458: {
  1773                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  1774  000664  0100               	movlb	0	; () banked
  1775  000666  5176               	movf	CANsendMessage@identifier& (0+255),w,b
  1776  000668  0100               	movlb	0	; () banked
  1777  00066A  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  1778  00066C  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1779  00066E  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1780  000670  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  1784  000672  C082  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  1788  000676  0E00               	movlw	0
  1789  000678  0100               	movlb	0	; () banked
  1790  00067A  1576               	andwf	CANsendMessage@identifier& (0+255),w,b
  1791  00067C  0100               	movlb	0	; () banked
  1792  00067E  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  1793  000680  0EFF               	movlw	255
  1794  000682  0100               	movlb	0	; () banked
  1795  000684  1577               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1796  000686  0100               	movlb	0	; () banked
  1797  000688  6F83               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1798  00068A  0E00               	movlw	0
  1799  00068C  0100               	movlb	0	; () banked
  1800  00068E  1578               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1801  000690  0100               	movlb	0	; () banked
  1802  000692  6F84               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1803  000694  0E00               	movlw	0
  1804  000696  0100               	movlb	0	; () banked
  1805  000698  1579               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1806  00069A  0100               	movlb	0	; () banked
  1807  00069C  6F85               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1808                           
  1809                           ; BSR set to: 0
  1810                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  1811  00069E  C082  F07E         	movff	CANsendMessage@tamp,??_CANsendMessage
  1812  0006A2  C083  F07F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1813  0006A6  C084  F080         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1814  0006AA  C085  F081         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1815  0006AE  C07F  F07E         	movff	??_CANsendMessage+1,??_CANsendMessage
  1816  0006B2  C080  F07F         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1817  0006B6  C081  F080         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1818  0006BA  0100               	movlb	0	; () banked
  1819  0006BC  6B81               	clrf	(??_CANsendMessage+3)& (0+255),b
  1820  0006BE  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  1821  0006C2  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1822  0006C6  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1823  0006CA  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1824                           
  1825                           ; BSR set to: 0
  1826                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  1827  0006CE  C082  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  1828                           
  1829                           ; BSR set to: 0
  1830                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  1831  0006D2  0E00               	movlw	0
  1832  0006D4  010F               	movlb	15	; () banked
  1833  0006D6  6F22               	movwf	34,b	;volatile
  1834                           
  1835                           ; BSR set to: 15
  1836                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  1837  0006D8  010F               	movlb	15	; () banked
  1838  0006DA  8722               	bsf	34,3,b	;volatile
  1839                           
  1840                           ; BSR set to: 15
  1841                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  1842  0006DC  0100               	movlb	0	; () banked
  1843  0006DE  A178               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1844  0006E0  D002               	goto	l374
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  1848  0006E2  010F               	movlb	15	; () banked
  1849  0006E4  8122               	bsf	34,0,b	;volatile
  1850  0006E6                     l374:
  1851                           
  1852                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  1853  0006E6  0100               	movlb	0	; () banked
  1854  0006E8  A378               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1855  0006EA  D002               	goto	l375
  1856                           
  1857                           ; BSR set to: 0
  1858                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  1859  0006EC  010F               	movlb	15	; () banked
  1860  0006EE  8322               	bsf	34,1,b	;volatile
  1861  0006F0                     l375:
  1862                           
  1863                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  1864  0006F0  0100               	movlb	0	; () banked
  1865  0006F2  A578               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1866  0006F4  D002               	goto	l376
  1867                           
  1868                           ; BSR set to: 0
  1869                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  1870  0006F6  010F               	movlb	15	; () banked
  1871  0006F8  8B22               	bsf	34,5,b	;volatile
  1872  0006FA                     l376:
  1873                           
  1874                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  1875  0006FA  0100               	movlb	0	; () banked
  1876  0006FC  A778               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1877  0006FE  D002               	goto	l377
  1878                           
  1879                           ; BSR set to: 0
  1880                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  1881  000700  010F               	movlb	15	; () banked
  1882  000702  8D22               	bsf	34,6,b	;volatile
  1883  000704                     l377:
  1884                           
  1885                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  1886  000704  0100               	movlb	0	; () banked
  1887  000706  A978               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1888  000708  D002               	goto	l3027
  1889                           
  1890                           ; BSR set to: 0
  1891                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  1892  00070A  010F               	movlb	15	; () banked
  1893  00070C  8F22               	bsf	34,7,b	;volatile
  1894  00070E                     l3027:
  1895                           
  1896                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  1897  00070E  C076  F07E         	movff	CANsendMessage@identifier,??_CANsendMessage
  1898  000712  C077  F07F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1899  000716  C078  F080         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1900  00071A  C079  F081         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1901  00071E  0E16               	movlw	22
  1902  000720  D006               	goto	u3240
  1903  000722                     u3245:
  1904  000722  0100               	movlb	0	; () banked
  1905  000724  90D8               	bcf	status,0,c
  1906  000726  3381               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1907  000728  3380               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1908  00072A  337F               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1909  00072C  337E               	rrcf	??_CANsendMessage& (0+255),f,b
  1910  00072E                     u3240:
  1911  00072E  2EE8               	decfsz	wreg,f,c
  1912  000730  D7F8               	goto	u3245
  1913  000732  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  1914  000736  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1915  00073A  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1916  00073E  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  1920  000742  0100               	movlb	0	; () banked
  1921  000744  5182               	movf	CANsendMessage@tamp& (0+255),w,b
  1922  000746  0100               	movlb	0	; () banked
  1923  000748  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  1924  00074A  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1925  00074C  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1926  00074E  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1927                           
  1928                           ; BSR set to: 0
  1929                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  1930  000750  C082  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  1931                           
  1932                           ;inc\CANlib.h: 483: }
  1933  000754  D059               	goto	l3047
  1934  000756                     l373:
  1935                           
  1936                           ; BSR set to: 0
  1937                           ;inc\CANlib.h: 485: else
  1938                           ;inc\CANlib.h: 487: {
  1939                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  1940  000756  010F               	movlb	15	; () banked
  1941  000758  9722               	bcf	34,3,b	;volatile
  1942                           
  1943                           ; BSR set to: 15
  1944                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  1945  00075A  C076  F07E         	movff	CANsendMessage@identifier,??_CANsendMessage
  1946  00075E  C077  F07F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1947  000762  C078  F080         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1948  000766  C079  F081         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1949  00076A  0E04               	movlw	4
  1950  00076C  D006               	goto	u3250
  1951  00076E                     u3255:
  1952  00076E  0100               	movlb	0	; () banked
  1953  000770  90D8               	bcf	status,0,c
  1954  000772  3381               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1955  000774  3380               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1956  000776  337F               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1957  000778  337E               	rrcf	??_CANsendMessage& (0+255),f,b
  1958  00077A                     u3250:
  1959  00077A  2EE8               	decfsz	wreg,f,c
  1960  00077C  D7F8               	goto	u3255
  1961  00077E  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  1962  000782  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1963  000786  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1964  00078A  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  1968  00078E  0100               	movlb	0	; () banked
  1969  000790  5182               	movf	CANsendMessage@tamp& (0+255),w,b
  1970  000792  0100               	movlb	0	; () banked
  1971  000794  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  1972  000796  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1973  000798  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1974  00079A  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  1978  00079C  C082  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  1982  0007A0  0E07               	movlw	7
  1983  0007A2  0100               	movlb	0	; () banked
  1984  0007A4  1576               	andwf	CANsendMessage@identifier& (0+255),w,b
  1985  0007A6  0100               	movlb	0	; () banked
  1986  0007A8  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  1987  0007AA  0E00               	movlw	0
  1988  0007AC  0100               	movlb	0	; () banked
  1989  0007AE  1577               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1990  0007B0  0100               	movlb	0	; () banked
  1991  0007B2  6F83               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1992  0007B4  0E00               	movlw	0
  1993  0007B6  0100               	movlb	0	; () banked
  1994  0007B8  1578               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1995  0007BA  0100               	movlb	0	; () banked
  1996  0007BC  6F84               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1997  0007BE  0E00               	movlw	0
  1998  0007C0  0100               	movlb	0	; () banked
  1999  0007C2  1579               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2000  0007C4  0100               	movlb	0	; () banked
  2001  0007C6  6F85               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2002                           
  2003                           ; BSR set to: 0
  2004                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2005  0007C8  C082  F07E         	movff	CANsendMessage@tamp,??_CANsendMessage
  2006  0007CC  C083  F07F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2007  0007D0  C084  F080         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2008  0007D4  C085  F081         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2009  0007D8  0E05               	movlw	5
  2010  0007DA                     u3265:
  2011  0007DA  90D8               	bcf	status,0,c
  2012  0007DC  0100               	movlb	0	; () banked
  2013  0007DE  377E               	rlcf	??_CANsendMessage& (0+255),f,b
  2014  0007E0  377F               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2015  0007E2  3780               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2016  0007E4  3781               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2017  0007E6  2EE8               	decfsz	wreg,f,c
  2018  0007E8  D7F8               	goto	u3265
  2019  0007EA  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  2020  0007EE  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2021  0007F2  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2022  0007F6  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2026  0007FA  010F               	movlb	15	; () banked
  2027  0007FC  5122               	movf	34,w,b	;volatile
  2028  0007FE  0B1F               	andlw	31
  2029  000800  010F               	movlb	15	; () banked
  2030  000802  6F22               	movwf	34,b	;volatile
  2031                           
  2032                           ; BSR set to: 15
  2033                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2034  000804  C082  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2035  000808                     l3047:
  2036                           
  2037                           ;inc\CANlib.h: 498: }
  2038                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2039  000808  0100               	movlb	0	; () banked
  2040  00080A  A17D               	btfss	CANsendMessage@flags& (0+255),0,b
  2041  00080C  D003               	goto	l380
  2042                           
  2043                           ; BSR set to: 0
  2044                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2045  00080E  010F               	movlb	15	; () banked
  2046  000810  8120               	bsf	32,0,b	;volatile
  2047  000812  D002               	goto	l381
  2048  000814                     l380:
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;inc\CANlib.h: 502: else
  2052                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2053  000814  010F               	movlb	15	; () banked
  2054  000816  9120               	bcf	32,0,b	;volatile
  2055  000818                     l381:
  2056                           
  2057                           ; BSR set to: 15
  2058                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2059  000818  0100               	movlb	0	; () banked
  2060  00081A  A37D               	btfss	CANsendMessage@flags& (0+255),1,b
  2061  00081C  D003               	goto	l382
  2062                           
  2063                           ; BSR set to: 0
  2064                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2065  00081E  010F               	movlb	15	; () banked
  2066  000820  8320               	bsf	32,1,b	;volatile
  2067  000822  D002               	goto	l3053
  2068  000824                     l382:
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;inc\CANlib.h: 506: else
  2072                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2073  000824  010F               	movlb	15	; () banked
  2074  000826  9320               	bcf	32,1,b	;volatile
  2075  000828                     l3053:
  2076                           
  2077                           ; BSR set to: 15
  2078                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2079  000828  C07A  FFD9         	movff	CANsendMessage@data,fsr2l
  2080  00082C  C07B  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2081  000830  50DF               	movf	indf2,w,c
  2082  000832  010F               	movlb	15	; () banked
  2083  000834  6F26               	movwf	38,b	;volatile
  2084                           
  2085                           ; BSR set to: 15
  2086                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2087  000836  0100               	movlb	0	; () banked
  2088  000838  EE20 F001          	lfsr	2,1
  2089  00083C  517A               	movf	CANsendMessage@data& (0+255),w,b
  2090  00083E  26D9               	addwf	fsr2l,f,c
  2091  000840  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2092  000842  22DA               	addwfc	fsr2h,f,c
  2093  000844  50DF               	movf	indf2,w,c
  2094  000846  010F               	movlb	15	; () banked
  2095  000848  6F27               	movwf	39,b	;volatile
  2096                           
  2097                           ; BSR set to: 15
  2098                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  2099  00084A  0100               	movlb	0	; () banked
  2100  00084C  EE20 F002          	lfsr	2,2
  2101  000850  517A               	movf	CANsendMessage@data& (0+255),w,b
  2102  000852  26D9               	addwf	fsr2l,f,c
  2103  000854  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2104  000856  22DA               	addwfc	fsr2h,f,c
  2105  000858  50DF               	movf	indf2,w,c
  2106  00085A  010F               	movlb	15	; () banked
  2107  00085C  6F28               	movwf	40,b	;volatile
  2108                           
  2109                           ; BSR set to: 15
  2110                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  2111  00085E  0100               	movlb	0	; () banked
  2112  000860  EE20 F003          	lfsr	2,3
  2113  000864  517A               	movf	CANsendMessage@data& (0+255),w,b
  2114  000866  26D9               	addwf	fsr2l,f,c
  2115  000868  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2116  00086A  22DA               	addwfc	fsr2h,f,c
  2117  00086C  50DF               	movf	indf2,w,c
  2118  00086E  010F               	movlb	15	; () banked
  2119  000870  6F29               	movwf	41,b	;volatile
  2120                           
  2121                           ; BSR set to: 15
  2122                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  2123  000872  0100               	movlb	0	; () banked
  2124  000874  EE20 F004          	lfsr	2,4
  2125  000878  517A               	movf	CANsendMessage@data& (0+255),w,b
  2126  00087A  26D9               	addwf	fsr2l,f,c
  2127  00087C  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2128  00087E  22DA               	addwfc	fsr2h,f,c
  2129  000880  50DF               	movf	indf2,w,c
  2130  000882  010F               	movlb	15	; () banked
  2131  000884  6F2A               	movwf	42,b	;volatile
  2132                           
  2133                           ; BSR set to: 15
  2134                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  2135  000886  0100               	movlb	0	; () banked
  2136  000888  EE20 F005          	lfsr	2,5
  2137  00088C  517A               	movf	CANsendMessage@data& (0+255),w,b
  2138  00088E  26D9               	addwf	fsr2l,f,c
  2139  000890  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2140  000892  22DA               	addwfc	fsr2h,f,c
  2141  000894  50DF               	movf	indf2,w,c
  2142  000896  010F               	movlb	15	; () banked
  2143  000898  6F2B               	movwf	43,b	;volatile
  2144                           
  2145                           ; BSR set to: 15
  2146                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  2147  00089A  0100               	movlb	0	; () banked
  2148  00089C  EE20 F006          	lfsr	2,6
  2149  0008A0  517A               	movf	CANsendMessage@data& (0+255),w,b
  2150  0008A2  26D9               	addwf	fsr2l,f,c
  2151  0008A4  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2152  0008A6  22DA               	addwfc	fsr2h,f,c
  2153  0008A8  50DF               	movf	indf2,w,c
  2154  0008AA  010F               	movlb	15	; () banked
  2155  0008AC  6F2C               	movwf	44,b	;volatile
  2156                           
  2157                           ; BSR set to: 15
  2158                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  2159  0008AE  0100               	movlb	0	; () banked
  2160  0008B0  EE20 F007          	lfsr	2,7
  2161  0008B4  517A               	movf	CANsendMessage@data& (0+255),w,b
  2162  0008B6  26D9               	addwf	fsr2l,f,c
  2163  0008B8  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2164  0008BA  22DA               	addwfc	fsr2h,f,c
  2165  0008BC  50DF               	movf	indf2,w,c
  2166  0008BE  010F               	movlb	15	; () banked
  2167  0008C0  6F2D               	movwf	45,b	;volatile
  2168                           
  2169                           ; BSR set to: 15
  2170                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  2171  0008C2  010F               	movlb	15	; () banked
  2172  0008C4  8720               	bsf	32,3,b	;volatile
  2173                           
  2174                           ; BSR set to: 15
  2175                           ;inc\CANlib.h: 520: return;
  2176  0008C6  0012               	return	
  2177  0008C8                     __end_of_CANsendMessage:
  2178                           	opt stack 0
  2179                           tblptru	equ	0xFF8
  2180                           tblptrh	equ	0xFF7
  2181                           tblptrl	equ	0xFF6
  2182                           tablat	equ	0xFF5
  2183                           postinc0	equ	0xFEE
  2184                           wreg	equ	0xFE8
  2185                           indf1	equ	0xFE7
  2186                           fsr1h	equ	0xFE2
  2187                           fsr1l	equ	0xFE1
  2188                           indf2	equ	0xFDF
  2189                           fsr2h	equ	0xFDA
  2190                           fsr2l	equ	0xFD9
  2191                           status	equ	0xFD8
  2192                           
  2193 ;; *************** function _CANisTxReady *****************
  2194 ;; Defined at:
  2195 ;;		line 1154 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;		None
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;		None
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  1    wreg      unsigned char 
  2202 ;; Registers used:
  2203 ;;		wreg, status,2
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2209 ;;      Params:         0       0       0       0
  2210 ;;      Locals:         0       1       0       0
  2211 ;;      Temps:          0       0       0       0
  2212 ;;      Totals:         0       1       0       0
  2213 ;;Total ram usage:        1 bytes
  2214 ;; Hardware stack levels used:    1
  2215 ;; Hardware stack levels required when called:    3
  2216 ;; This function calls:
  2217 ;;		Nothing
  2218 ;; This function is called by:
  2219 ;;		_main
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           	psect	text4
  2224  000F8A                     __ptext4:
  2225                           	opt stack 0
  2226  000F8A                     _CANisTxReady:
  2227                           	opt stack 27
  2228                           
  2229                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  2230                           
  2231                           ; BSR set to: 15
  2232                           ;incstack = 0
  2233  000F8A  0E01               	movlw	1
  2234  000F8C  0100               	movlb	0	; () banked
  2235  000F8E  6F76               	movwf	_CANisTxReady$2713& (0+255),b
  2236                           
  2237                           ; BSR set to: 0
  2238  000F90  010F               	movlb	15	; () banked
  2239  000F92  A740               	btfss	64,3,b	;volatile
  2240  000F94  D009               	goto	l534
  2241                           
  2242                           ; BSR set to: 15
  2243  000F96  010F               	movlb	15	; () banked
  2244  000F98  A730               	btfss	48,3,b	;volatile
  2245  000F9A  D006               	goto	l534
  2246                           
  2247                           ; BSR set to: 15
  2248  000F9C  010F               	movlb	15	; () banked
  2249  000F9E  A720               	btfss	32,3,b	;volatile
  2250  000FA0  D003               	goto	l534
  2251                           
  2252                           ; BSR set to: 15
  2253  000FA2  0E00               	movlw	0
  2254  000FA4  0100               	movlb	0	; () banked
  2255  000FA6  6F76               	movwf	_CANisTxReady$2713& (0+255),b
  2256  000FA8                     l534:
  2257  000FA8  0100               	movlb	0	; () banked
  2258  000FAA  5176               	movf	_CANisTxReady$2713& (0+255),w,b
  2259  000FAC  0012               	return	
  2260  000FAE                     __end_of_CANisTxReady:
  2261                           	opt stack 0
  2262                           tblptru	equ	0xFF8
  2263                           tblptrh	equ	0xFF7
  2264                           tblptrl	equ	0xFF6
  2265                           tablat	equ	0xFF5
  2266                           postinc0	equ	0xFEE
  2267                           wreg	equ	0xFE8
  2268                           indf1	equ	0xFE7
  2269                           fsr1h	equ	0xFE2
  2270                           fsr1l	equ	0xFE1
  2271                           indf2	equ	0xFDF
  2272                           fsr2h	equ	0xFDA
  2273                           fsr2l	equ	0xFD9
  2274                           status	equ	0xFD8
  2275                           
  2276 ;; *************** function _ISR_bassa *****************
  2277 ;; Defined at:
  2278 ;;		line 41 in file "CanToSerial.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;		None
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;  i               2   31[COMRAM] int 
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  1    wreg      void 
  2285 ;; Registers used:
  2286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2292 ;;      Params:         0       0       0       0
  2293 ;;      Locals:         2       0       0       0
  2294 ;;      Temps:         19       0       0       0
  2295 ;;      Totals:        21       0       0       0
  2296 ;;Total ram usage:       21 bytes
  2297 ;; Hardware stack levels used:    1
  2298 ;; Hardware stack levels required when called:    2
  2299 ;; This function calls:
  2300 ;;		_CANisRxReady
  2301 ;;		_CANreceiveMessage
  2302 ;;		_getsUSART
  2303 ;; This function is called by:
  2304 ;;		Interrupt level 1
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           	psect	intcodelo
  2309  000018                     __pintcodelo:
  2310                           	opt stack 0
  2311  000018                     _ISR_bassa:
  2312                           	opt stack 26
  2313                           
  2314                           ; BSR set to: 0
  2315                           ;incstack = 0
  2316  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  2317  00001A  CFD8 F00F          	movff	status,??_ISR_bassa+2
  2318  00001E  CFE8 F010          	movff	wreg,??_ISR_bassa+3
  2319  000022  CFE0 F011          	movff	bsr,??_ISR_bassa+4
  2320  000026  CFFA F012          	movff	pclath,??_ISR_bassa+5
  2321  00002A  CFFB F013          	movff	pclatu,??_ISR_bassa+6
  2322  00002E  CFE9 F014          	movff	fsr0l,??_ISR_bassa+7
  2323  000032  CFEA F015          	movff	fsr0h,??_ISR_bassa+8
  2324  000036  CFE1 F016          	movff	fsr1l,??_ISR_bassa+9
  2325  00003A  CFE2 F017          	movff	fsr1h,??_ISR_bassa+10
  2326  00003E  CFD9 F018          	movff	fsr2l,??_ISR_bassa+11
  2327  000042  CFDA F019          	movff	fsr2h,??_ISR_bassa+12
  2328  000046  CFF3 F01A          	movff	prodl,??_ISR_bassa+13
  2329  00004A  CFF4 F01B          	movff	prodh,??_ISR_bassa+14
  2330  00004E  CFF6 F01C          	movff	tblptrl,??_ISR_bassa+15
  2331  000052  CFF7 F01D          	movff	tblptrh,??_ISR_bassa+16
  2332  000056  CFF8 F01E          	movff	tblptru,??_ISR_bassa+17
  2333  00005A  CFF5 F01F          	movff	tablat,??_ISR_bassa+18
  2334                           
  2335                           ;CanToSerial.c: 42: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  2336  00005E  A0A4               	btfss	4004,0,c	;volatile
  2337  000060  B2A4               	btfsc	4004,1,c	;volatile
  2338  000062  D001               	goto	i1l2781
  2339  000064  D03B               	goto	i1l578
  2340  000066                     i1l2781:
  2341                           
  2342                           ;CanToSerial.c: 43: if (CANisRxReady()) {
  2343  000066  ECE6  F007         	call	_CANisRxReady	;wreg free
  2344  00006A  0900               	iorlw	0
  2345  00006C  B4D8               	btfsc	status,2,c
  2346  00006E  D034               	goto	i1l581
  2347                           
  2348                           ;CanToSerial.c: 44: CANreceiveMessage(&msg);
  2349  000070  0E29               	movlw	low _msg
  2350  000072  6E01               	movwf	CANreceiveMessage@msg,c
  2351  000074  0E00               	movlw	high _msg
  2352  000076  6E02               	movwf	CANreceiveMessage@msg+1,c
  2353  000078  EC64  F004         	call	_CANreceiveMessage	;wreg free
  2354                           
  2355                           ;CanToSerial.c: 47: usartTx [0] = msg.RTR;
  2356  00007C  C037  F06B         	movff	_msg+14,_usartTx
  2357                           
  2358                           ;CanToSerial.c: 48: usartTx [1] = msg.identifier;
  2359  000080  C029  F06C         	movff	_msg,_usartTx+1
  2360                           
  2361                           ;CanToSerial.c: 49: usartTx [2] = (msg.identifier >> 8);
  2362  000084  C02A  F06D         	movff	_msg+1,_usartTx+2
  2363                           
  2364                           ;CanToSerial.c: 50: for (int i = 0; i < 8; i++) {
  2365  000088  0E00               	movlw	0
  2366  00008A  6E21               	movwf	ISR_bassa@i+1,c
  2367  00008C  0E00               	movlw	0
  2368  00008E  6E20               	movwf	ISR_bassa@i,c
  2369  000090  BE21               	btfsc	ISR_bassa@i+1,7,c
  2370  000092  D006               	goto	i1l2797
  2371  000094  5021               	movf	ISR_bassa@i+1,w,c
  2372  000096  E11F               	bnz	i1l583
  2373  000098  0E08               	movlw	8
  2374  00009A  5C20               	subwf	ISR_bassa@i,w,c
  2375  00009C  B0D8               	btfsc	status,0,c
  2376  00009E  D01B               	goto	i1l583
  2377  0000A0                     i1l2797:
  2378                           
  2379                           ;CanToSerial.c: 51: usartTx[(i + 3)] = msg.data[i];
  2380  0000A0  0E2D               	movlw	low (_msg+4)
  2381  0000A2  2420               	addwf	ISR_bassa@i,w,c
  2382  0000A4  6ED9               	movwf	fsr2l,c
  2383  0000A6  0E00               	movlw	high (_msg+4)
  2384  0000A8  2021               	addwfc	ISR_bassa@i+1,w,c
  2385  0000AA  6EDA               	movwf	fsr2h,c
  2386  0000AC  0E03               	movlw	3
  2387  0000AE  2420               	addwf	ISR_bassa@i,w,c
  2388  0000B0  6E0D               	movwf	??_ISR_bassa& (0+255),c
  2389  0000B2  0E00               	movlw	0
  2390  0000B4  2021               	addwfc	ISR_bassa@i+1,w,c
  2391  0000B6  6E0E               	movwf	(??_ISR_bassa+1)& (0+255),c
  2392  0000B8  0E6B               	movlw	low _usartTx
  2393  0000BA  240D               	addwf	??_ISR_bassa,w,c
  2394  0000BC  6EE1               	movwf	fsr1l,c
  2395  0000BE  0E00               	movlw	high _usartTx
  2396  0000C0  200E               	addwfc	??_ISR_bassa+1,w,c
  2397  0000C2  6EE2               	movwf	fsr1h,c
  2398  0000C4  CFDF FFE7          	movff	indf2,indf1
  2399  0000C8  4A20               	infsnz	ISR_bassa@i,f,c
  2400  0000CA  2A21               	incf	ISR_bassa@i+1,f,c
  2401  0000CC  BE21               	btfsc	ISR_bassa@i+1,7,c
  2402  0000CE  D7E8               	goto	i1l2797
  2403  0000D0  5021               	movf	ISR_bassa@i+1,w,c
  2404  0000D2  E101               	bnz	i1u278_20
  2405  0000D4  D7E1               	goto	L2
  2406  0000D6                     i1u278_20:
  2407  0000D6                     i1l583:
  2408                           
  2409                           ;CanToSerial.c: 52: }
  2410                           ;CanToSerial.c: 53: newMessageCan = 1;
  2411  0000D6  8240               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2412  0000D8                     i1l581:
  2413                           
  2414                           ;CanToSerial.c: 54: }
  2415                           ;CanToSerial.c: 55: PIR3bits.RXB0IF = 0;
  2416  0000D8  90A4               	bcf	4004,0,c	;volatile
  2417                           
  2418                           ;CanToSerial.c: 56: PIR3bits.RXB1IF = 0;
  2419  0000DA  92A4               	bcf	4004,1,c	;volatile
  2420  0000DC                     i1l578:
  2421                           
  2422                           ;CanToSerial.c: 57: }
  2423                           ;CanToSerial.c: 58: if (PIR1bits.RCIF == 1) {
  2424  0000DC  AA9E               	btfss	3998,5,c	;volatile
  2425  0000DE  D008               	goto	i1l585
  2426                           
  2427                           ;CanToSerial.c: 59: getsUSART((char*) usartRx, 11);
  2428  0000E0  0E60               	movlw	low _usartRx
  2429  0000E2  6E02               	movwf	getsUSART@buffer,c
  2430  0000E4  0E00               	movlw	high _usartRx
  2431  0000E6  6E03               	movwf	getsUSART@buffer+1,c
  2432  0000E8  0E0B               	movlw	11
  2433  0000EA  6E04               	movwf	getsUSART@len,c
  2434  0000EC  EC9B  F007         	call	_getsUSART	;wreg free
  2435  0000F0                     i1l585:
  2436  0000F0  C01F  FFF5         	movff	??_ISR_bassa+18,tablat
  2437  0000F4  C01E  FFF8         	movff	??_ISR_bassa+17,tblptru
  2438  0000F8  C01D  FFF7         	movff	??_ISR_bassa+16,tblptrh
  2439  0000FC  C01C  FFF6         	movff	??_ISR_bassa+15,tblptrl
  2440  000100  C01B  FFF4         	movff	??_ISR_bassa+14,prodh
  2441  000104  C01A  FFF3         	movff	??_ISR_bassa+13,prodl
  2442  000108  C019  FFDA         	movff	??_ISR_bassa+12,fsr2h
  2443  00010C  C018  FFD9         	movff	??_ISR_bassa+11,fsr2l
  2444  000110  C017  FFE2         	movff	??_ISR_bassa+10,fsr1h
  2445  000114  C016  FFE1         	movff	??_ISR_bassa+9,fsr1l
  2446  000118  C015  FFEA         	movff	??_ISR_bassa+8,fsr0h
  2447  00011C  C014  FFE9         	movff	??_ISR_bassa+7,fsr0l
  2448  000120  C013  FFFB         	movff	??_ISR_bassa+6,pclatu
  2449  000124  C012  FFFA         	movff	??_ISR_bassa+5,pclath
  2450  000128  C011  FFE0         	movff	??_ISR_bassa+4,bsr
  2451  00012C  C010  FFE8         	movff	??_ISR_bassa+3,wreg
  2452  000130  C00F  FFD8         	movff	??_ISR_bassa+2,status
  2453  000134  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  2454  000136  0010               	retfie	
  2455  000138                     __end_of_ISR_bassa:
  2456                           	opt stack 0
  2457                           pclatu	equ	0xFFB
  2458                           pclath	equ	0xFFA
  2459                           tblptru	equ	0xFF8
  2460                           tblptrh	equ	0xFF7
  2461                           tblptrl	equ	0xFF6
  2462                           tablat	equ	0xFF5
  2463                           prodh	equ	0xFF4
  2464                           prodl	equ	0xFF3
  2465                           postinc0	equ	0xFEE
  2466                           fsr0h	equ	0xFEA
  2467                           fsr0l	equ	0xFE9
  2468                           wreg	equ	0xFE8
  2469                           indf1	equ	0xFE7
  2470                           fsr1h	equ	0xFE2
  2471                           fsr1l	equ	0xFE1
  2472                           bsr	equ	0xFE0
  2473                           indf2	equ	0xFDF
  2474                           fsr2h	equ	0xFDA
  2475                           fsr2l	equ	0xFD9
  2476                           status	equ	0xFD8
  2477                           
  2478 ;; *************** function _getsUSART *****************
  2479 ;; Defined at:
  2480 ;;		line 14 in file "sources\pic18\plib\USART\ugets.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;  buffer          2    1[COMRAM] PTR unsigned char 
  2483 ;;		 -> usartRx(11), 
  2484 ;;  len             1    3[COMRAM] unsigned char 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  i               1    5[COMRAM] unsigned char 
  2487 ;;  data            1    4[COMRAM] unsigned char 
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  1    wreg      void 
  2490 ;; Registers used:
  2491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2497 ;;      Params:         3       0       0       0
  2498 ;;      Locals:         2       0       0       0
  2499 ;;      Temps:          0       0       0       0
  2500 ;;      Totals:         5       0       0       0
  2501 ;;Total ram usage:        5 bytes
  2502 ;; Hardware stack levels used:    1
  2503 ;; Hardware stack levels required when called:    1
  2504 ;; This function calls:
  2505 ;;		_ReadUSART
  2506 ;; This function is called by:
  2507 ;;		_ISR_bassa
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           	psect	text6
  2512  000F36                     __ptext6:
  2513                           	opt stack 0
  2514  000F36                     _getsUSART:
  2515                           	opt stack 26
  2516                           
  2517                           ;incstack = 0
  2518  000F36  0E00               	movlw	0
  2519  000F38  6E06               	movwf	getsUSART@i,c
  2520  000F3A  D00E               	goto	i1l2771
  2521  000F3C                     i1l610:
  2522  000F3C  AA9E               	btfss	3998,5,c	;volatile
  2523  000F3E  D7FE               	goto	i1l610
  2524  000F40  ECD7  F007         	call	_ReadUSART	;wreg free
  2525  000F44  6E05               	movwf	getsUSART@data,c
  2526  000F46  C002  FFD9         	movff	getsUSART@buffer,fsr2l
  2527  000F4A  C003  FFDA         	movff	getsUSART@buffer+1,fsr2h
  2528  000F4E  C005  FFDF         	movff	getsUSART@data,indf2
  2529  000F52  4A02               	infsnz	getsUSART@buffer,f,c
  2530  000F54  2A03               	incf	getsUSART@buffer+1,f,c
  2531  000F56  2A06               	incf	getsUSART@i,f,c
  2532  000F58                     i1l2771:
  2533  000F58  5004               	movf	getsUSART@len,w,c
  2534  000F5A  5C06               	subwf	getsUSART@i,w,c
  2535  000F5C  B0D8               	btfsc	status,0,c
  2536  000F5E  0012               	return	
  2537  000F60  D7ED               	goto	i1l610
  2538  000F62                     __end_of_getsUSART:
  2539                           	opt stack 0
  2540                           pclatu	equ	0xFFB
  2541                           pclath	equ	0xFFA
  2542                           tblptru	equ	0xFF8
  2543                           tblptrh	equ	0xFF7
  2544                           tblptrl	equ	0xFF6
  2545                           tablat	equ	0xFF5
  2546                           prodh	equ	0xFF4
  2547                           prodl	equ	0xFF3
  2548                           postinc0	equ	0xFEE
  2549                           fsr0h	equ	0xFEA
  2550                           fsr0l	equ	0xFE9
  2551                           wreg	equ	0xFE8
  2552                           indf1	equ	0xFE7
  2553                           fsr1h	equ	0xFE2
  2554                           fsr1l	equ	0xFE1
  2555                           bsr	equ	0xFE0
  2556                           indf2	equ	0xFDF
  2557                           fsr2h	equ	0xFDA
  2558                           fsr2l	equ	0xFD9
  2559                           status	equ	0xFD8
  2560                           
  2561 ;; *************** function _ReadUSART *****************
  2562 ;; Defined at:
  2563 ;;		line 15 in file "sources\pic18\plib\USART\uread.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;  data            1    0[COMRAM] unsigned char 
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      unsigned char 
  2570 ;; Registers used:
  2571 ;;		wreg, status,2, status,0
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2577 ;;      Params:         0       0       0       0
  2578 ;;      Locals:         1       0       0       0
  2579 ;;      Temps:          0       0       0       0
  2580 ;;      Totals:         1       0       0       0
  2581 ;;Total ram usage:        1 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; This function calls:
  2584 ;;		Nothing
  2585 ;; This function is called by:
  2586 ;;		_getsUSART
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590                           	psect	text7
  2591  000FAE                     __ptext7:
  2592                           	opt stack 0
  2593  000FAE                     _ReadUSART:
  2594                           	opt stack 26
  2595                           
  2596                           ;incstack = 0
  2597  000FAE  0EF2               	movlw	242
  2598  000FB0  1628               	andwf	_USART_Status,f,c
  2599  000FB2  ACAB               	btfss	4011,6,c	;volatile
  2600  000FB4  D003               	goto	i1l668
  2601  000FB6  9028               	bcf	_USART_Status,0,c
  2602  000FB8  B0AB               	btfsc	4011,0,c	;volatile
  2603  000FBA  8028               	bsf	_USART_Status,0,c
  2604  000FBC                     i1l668:
  2605  000FBC  B4AB               	btfsc	4011,2,c	;volatile
  2606  000FBE  8428               	bsf	_USART_Status,2,c
  2607  000FC0  B2AB               	btfsc	4011,1,c	;volatile
  2608  000FC2  8628               	bsf	_USART_Status,3,c
  2609  000FC4  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  2610  000FC8  5001               	movf	ReadUSART@data,w,c
  2611  000FCA  0012               	return	
  2612  000FCC                     __end_of_ReadUSART:
  2613                           	opt stack 0
  2614                           pclatu	equ	0xFFB
  2615                           pclath	equ	0xFFA
  2616                           tblptru	equ	0xFF8
  2617                           tblptrh	equ	0xFF7
  2618                           tblptrl	equ	0xFF6
  2619                           tablat	equ	0xFF5
  2620                           prodh	equ	0xFF4
  2621                           prodl	equ	0xFF3
  2622                           postinc0	equ	0xFEE
  2623                           fsr0h	equ	0xFEA
  2624                           fsr0l	equ	0xFE9
  2625                           wreg	equ	0xFE8
  2626                           indf1	equ	0xFE7
  2627                           fsr1h	equ	0xFE2
  2628                           fsr1l	equ	0xFE1
  2629                           bsr	equ	0xFE0
  2630                           indf2	equ	0xFDF
  2631                           fsr2h	equ	0xFDA
  2632                           fsr2l	equ	0xFD9
  2633                           status	equ	0xFD8
  2634                           
  2635 ;; *************** function _CANreceiveMessage *****************
  2636 ;; Defined at:
  2637 ;;		line 528 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;  msg             2    0[COMRAM] PTR struct .
  2640 ;;		 -> msg(15), 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  tamp            1   11[COMRAM] unsigned char 
  2643 ;;  error           1   10[COMRAM] unsigned char 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1    wreg      unsigned char 
  2646 ;; Registers used:
  2647 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2653 ;;      Params:         2       0       0       0
  2654 ;;      Locals:         2       0       0       0
  2655 ;;      Temps:          8       0       0       0
  2656 ;;      Totals:        12       0       0       0
  2657 ;;Total ram usage:       12 bytes
  2658 ;; Hardware stack levels used:    1
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		_ISR_bassa
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           	psect	text8
  2667  0008C8                     __ptext8:
  2668                           	opt stack 0
  2669  0008C8                     _CANreceiveMessage:
  2670                           	opt stack 27
  2671                           
  2672                           ;inc\CANlib.h: 530: BYTE tamp;
  2673                           ;inc\CANlib.h: 531: BYTE error = 0;
  2674                           
  2675                           ;incstack = 0
  2676  0008C8  0E00               	movlw	0
  2677  0008CA  6E0B               	movwf	CANreceiveMessage@error,c
  2678                           
  2679                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  2680  0008CC  BE74               	btfsc	3956,7,c	;volatile
  2681                           
  2682                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  2683  0008CE  800B               	bsf	CANreceiveMessage@error,0,c
  2684                           
  2685                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  2686  0008D0  BC74               	btfsc	3956,6,c	;volatile
  2687                           
  2688                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  2689  0008D2  820B               	bsf	CANreceiveMessage@error,1,c
  2690                           
  2691                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  2692  0008D4  010F               	movlb	15	; () banked
  2693  0008D6  AF50               	btfss	80,7,b	;volatile
  2694  0008D8  D143               	goto	i1l388
  2695                           
  2696                           ; BSR set to: 15
  2697                           ;inc\CANlib.h: 541: {
  2698                           ;inc\CANlib.h: 542: msg->identifier = 0;
  2699  0008DA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  2700  0008DE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  2701  0008E2  6ADE               	clrf	postinc2,c
  2702  0008E4  6ADE               	clrf	postinc2,c
  2703  0008E6  6ADE               	clrf	postinc2,c
  2704  0008E8  6ADD               	clrf	postdec2,c
  2705                           
  2706                           ; BSR set to: 15
  2707                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  2708  0008EA  EE20 F004          	lfsr	2,4
  2709  0008EE  5001               	movf	CANreceiveMessage@msg,w,c
  2710  0008F0  26D9               	addwf	fsr2l,f,c
  2711  0008F2  5002               	movf	CANreceiveMessage@msg+1,w,c
  2712  0008F4  22DA               	addwfc	fsr2h,f,c
  2713  0008F6  CF56 FFDF          	movff	3926,indf2	;volatile
  2714                           
  2715                           ; BSR set to: 15
  2716                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  2717  0008FA  EE20 F005          	lfsr	2,5
  2718  0008FE  5001               	movf	CANreceiveMessage@msg,w,c
  2719  000900  26D9               	addwf	fsr2l,f,c
  2720  000902  5002               	movf	CANreceiveMessage@msg+1,w,c
  2721  000904  22DA               	addwfc	fsr2h,f,c
  2722  000906  CF57 FFDF          	movff	3927,indf2	;volatile
  2723                           
  2724                           ; BSR set to: 15
  2725                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  2726  00090A  EE20 F006          	lfsr	2,6
  2727  00090E  5001               	movf	CANreceiveMessage@msg,w,c
  2728  000910  26D9               	addwf	fsr2l,f,c
  2729  000912  5002               	movf	CANreceiveMessage@msg+1,w,c
  2730  000914  22DA               	addwfc	fsr2h,f,c
  2731  000916  CF58 FFDF          	movff	3928,indf2	;volatile
  2732                           
  2733                           ; BSR set to: 15
  2734                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  2735  00091A  EE20 F007          	lfsr	2,7
  2736  00091E  5001               	movf	CANreceiveMessage@msg,w,c
  2737  000920  26D9               	addwf	fsr2l,f,c
  2738  000922  5002               	movf	CANreceiveMessage@msg+1,w,c
  2739  000924  22DA               	addwfc	fsr2h,f,c
  2740  000926  CF59 FFDF          	movff	3929,indf2	;volatile
  2741                           
  2742                           ; BSR set to: 15
  2743                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  2744  00092A  EE20 F008          	lfsr	2,8
  2745  00092E  5001               	movf	CANreceiveMessage@msg,w,c
  2746  000930  26D9               	addwf	fsr2l,f,c
  2747  000932  5002               	movf	CANreceiveMessage@msg+1,w,c
  2748  000934  22DA               	addwfc	fsr2h,f,c
  2749  000936  CF5A FFDF          	movff	3930,indf2	;volatile
  2750                           
  2751                           ; BSR set to: 15
  2752                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  2753  00093A  EE20 F009          	lfsr	2,9
  2754  00093E  5001               	movf	CANreceiveMessage@msg,w,c
  2755  000940  26D9               	addwf	fsr2l,f,c
  2756  000942  5002               	movf	CANreceiveMessage@msg+1,w,c
  2757  000944  22DA               	addwfc	fsr2h,f,c
  2758  000946  CF5B FFDF          	movff	3931,indf2	;volatile
  2759                           
  2760                           ; BSR set to: 15
  2761                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  2762  00094A  EE20 F00A          	lfsr	2,10
  2763  00094E  5001               	movf	CANreceiveMessage@msg,w,c
  2764  000950  26D9               	addwf	fsr2l,f,c
  2765  000952  5002               	movf	CANreceiveMessage@msg+1,w,c
  2766  000954  22DA               	addwfc	fsr2h,f,c
  2767  000956  CF5C FFDF          	movff	3932,indf2	;volatile
  2768                           
  2769                           ; BSR set to: 15
  2770                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  2771  00095A  EE20 F00B          	lfsr	2,11
  2772  00095E  5001               	movf	CANreceiveMessage@msg,w,c
  2773  000960  26D9               	addwf	fsr2l,f,c
  2774  000962  5002               	movf	CANreceiveMessage@msg+1,w,c
  2775  000964  22DA               	addwfc	fsr2h,f,c
  2776  000966  CF5D FFDF          	movff	3933,indf2	;volatile
  2777                           
  2778                           ; BSR set to: 15
  2779                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  2780  00096A  EE20 F00E          	lfsr	2,14
  2781  00096E  5001               	movf	CANreceiveMessage@msg,w,c
  2782  000970  26D9               	addwf	fsr2l,f,c
  2783  000972  5002               	movf	CANreceiveMessage@msg+1,w,c
  2784  000974  22DA               	addwfc	fsr2h,f,c
  2785  000976  010F               	movlb	15	; () banked
  2786  000978  AD55               	btfss	85,6,b	;volatile
  2787  00097A  D002               	goto	i1u244_20
  2788  00097C  0E01               	movlw	1
  2789  00097E  D001               	goto	i1u244_26
  2790  000980                     i1u244_20:
  2791  000980  0E00               	movlw	0
  2792  000982                     i1u244_26:
  2793  000982  6EDF               	movwf	indf2,c
  2794                           
  2795                           ; BSR set to: 15
  2796                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  2797  000984  EE20 F00D          	lfsr	2,13
  2798  000988  5001               	movf	CANreceiveMessage@msg,w,c
  2799  00098A  26D9               	addwf	fsr2l,f,c
  2800  00098C  5002               	movf	CANreceiveMessage@msg+1,w,c
  2801  00098E  22DA               	addwfc	fsr2h,f,c
  2802  000990  010F               	movlb	15	; () banked
  2803  000992  5155               	movf	85,w,b	;volatile
  2804  000994  0B0F               	andlw	15
  2805  000996  6EDF               	movwf	indf2,c
  2806                           
  2807                           ; BSR set to: 15
  2808                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  2809  000998  EE20 F00C          	lfsr	2,12
  2810  00099C  5001               	movf	CANreceiveMessage@msg,w,c
  2811  00099E  26D9               	addwf	fsr2l,f,c
  2812  0009A0  5002               	movf	CANreceiveMessage@msg+1,w,c
  2813  0009A2  22DA               	addwfc	fsr2h,f,c
  2814  0009A4  010F               	movlb	15	; () banked
  2815  0009A6  A752               	btfss	82,3,b	;volatile
  2816  0009A8  D002               	goto	i1u245_20
  2817  0009AA  0E01               	movlw	1
  2818  0009AC  D001               	goto	i1u245_26
  2819  0009AE                     i1u245_20:
  2820  0009AE  0E00               	movlw	0
  2821  0009B0                     i1u245_26:
  2822  0009B0  6EDF               	movwf	indf2,c
  2823                           
  2824                           ; BSR set to: 15
  2825                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  2826  0009B2  010F               	movlb	15	; () banked
  2827  0009B4  B752               	btfsc	82,3,b	;volatile
  2828  0009B6  D044               	goto	i1l2647
  2829                           
  2830                           ; BSR set to: 15
  2831                           ;inc\CANlib.h: 559: {
  2832                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  2833  0009B8  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  2834  0009BC  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  2835  0009BE  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  2836  0009C0  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  2837  0009C2  0E03               	movlw	3
  2838  0009C4                     i1u247_25:
  2839  0009C4  90D8               	bcf	status,0,c
  2840  0009C6  3603               	rlcf	??_CANreceiveMessage,f,c
  2841  0009C8  3604               	rlcf	??_CANreceiveMessage+1,f,c
  2842  0009CA  3605               	rlcf	??_CANreceiveMessage+2,f,c
  2843  0009CC  3606               	rlcf	??_CANreceiveMessage+3,f,c
  2844  0009CE  2EE8               	decfsz	wreg,f,c
  2845  0009D0  D7F9               	goto	i1u247_25
  2846  0009D2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  2847  0009D6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  2848  0009DA  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  2849  0009DE  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  2850  0009E2  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  2851  0009E6  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  2852                           
  2853                           ; BSR set to: 15
  2854                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  2855  0009EA  010F               	movlb	15	; () banked
  2856  0009EC  3952               	swapf	82,w,b	;volatile
  2857  0009EE  42E8               	rrncf	wreg,f,c
  2858  0009F0  0B07               	andlw	7
  2859  0009F2  0B07               	andlw	7
  2860  0009F4  6E0C               	movwf	CANreceiveMessage@tamp,c
  2861                           
  2862                           ; BSR set to: 15
  2863                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  2864  0009F6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  2865  0009FA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  2866  0009FE  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  2867  000A02  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  2868  000A06  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  2869  000A0A  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  2870  000A0E  500C               	movf	CANreceiveMessage@tamp,w,c
  2871  000A10  2403               	addwf	??_CANreceiveMessage,w,c
  2872  000A12  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  2873  000A14  0E00               	movlw	0
  2874  000A16  2004               	addwfc	??_CANreceiveMessage+1,w,c
  2875  000A18  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  2876  000A1A  0E00               	movlw	0
  2877  000A1C  2005               	addwfc	??_CANreceiveMessage+2,w,c
  2878  000A1E  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  2879  000A20  0E00               	movlw	0
  2880  000A22  2006               	addwfc	??_CANreceiveMessage+3,w,c
  2881  000A24  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  2882  000A26  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  2883  000A2A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  2884  000A2E  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  2885  000A32  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  2886  000A36  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  2887  000A3A  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  2888                           
  2889                           ;inc\CANlib.h: 563: }
  2890  000A3E  D08D               	goto	i1l2673
  2891  000A40                     i1l2647:
  2892                           
  2893                           ; BSR set to: 15
  2894                           ;inc\CANlib.h: 564: else
  2895                           ;inc\CANlib.h: 565: {
  2896                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  2897  000A40  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  2898  000A44  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  2899  000A46  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  2900  000A48  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  2901  000A4A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  2902  000A4E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  2903  000A52  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  2904  000A56  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  2905  000A5A  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  2906  000A5E  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  2907                           
  2908                           ; BSR set to: 15
  2909                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  2910  000A62  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  2911  000A66  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  2912  000A68  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  2913  000A6A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  2914  000A6C  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  2915  000A70  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  2916  000A74  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  2917  000A78  6A03               	clrf	??_CANreceiveMessage,c
  2918  000A7A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  2919  000A7E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  2920  000A82  5003               	movf	??_CANreceiveMessage,w,c
  2921  000A84  26DE               	addwf	postinc2,f,c
  2922  000A86  5004               	movf	??_CANreceiveMessage+1,w,c
  2923  000A88  22DE               	addwfc	postinc2,f,c
  2924  000A8A  5005               	movf	??_CANreceiveMessage+2,w,c
  2925  000A8C  22DE               	addwfc	postinc2,f,c
  2926  000A8E  5006               	movf	??_CANreceiveMessage+3,w,c
  2927  000A90  22DE               	addwfc	postinc2,f,c
  2928                           
  2929                           ; BSR set to: 15
  2930                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  2931  000A92  010F               	movlb	15	; () banked
  2932  000A94  A152               	btfss	82,0,b	;volatile
  2933  000A96  D00C               	goto	i1l2655
  2934                           
  2935                           ; BSR set to: 15
  2936                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  2937  000A98  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  2938  000A9C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  2939  000AA0  0E00               	movlw	0
  2940  000AA2  12DE               	iorwf	postinc2,f,c
  2941  000AA4  0E00               	movlw	0
  2942  000AA6  12DE               	iorwf	postinc2,f,c
  2943  000AA8  0E01               	movlw	1
  2944  000AAA  12DE               	iorwf	postinc2,f,c
  2945  000AAC  0E00               	movlw	0
  2946  000AAE  12DE               	iorwf	postinc2,f,c
  2947  000AB0                     i1l2655:
  2948                           
  2949                           ; BSR set to: 15
  2950                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  2951  000AB0  010F               	movlb	15	; () banked
  2952  000AB2  A352               	btfss	82,1,b	;volatile
  2953  000AB4  D00C               	goto	i1l2659
  2954                           
  2955                           ; BSR set to: 15
  2956                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  2957  000AB6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  2958  000ABA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  2959  000ABE  0E00               	movlw	0
  2960  000AC0  12DE               	iorwf	postinc2,f,c
  2961  000AC2  0E00               	movlw	0
  2962  000AC4  12DE               	iorwf	postinc2,f,c
  2963  000AC6  0E02               	movlw	2
  2964  000AC8  12DE               	iorwf	postinc2,f,c
  2965  000ACA  0E00               	movlw	0
  2966  000ACC  12DE               	iorwf	postinc2,f,c
  2967  000ACE                     i1l2659:
  2968                           
  2969                           ; BSR set to: 15
  2970                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  2971  000ACE  010F               	movlb	15	; () banked
  2972  000AD0  AB52               	btfss	82,5,b	;volatile
  2973  000AD2  D00C               	goto	i1l2663
  2974                           
  2975                           ; BSR set to: 15
  2976                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  2977  000AD4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  2978  000AD8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  2979  000ADC  0E00               	movlw	0
  2980  000ADE  12DE               	iorwf	postinc2,f,c
  2981  000AE0  0E00               	movlw	0
  2982  000AE2  12DE               	iorwf	postinc2,f,c
  2983  000AE4  0E04               	movlw	4
  2984  000AE6  12DE               	iorwf	postinc2,f,c
  2985  000AE8  0E00               	movlw	0
  2986  000AEA  12DE               	iorwf	postinc2,f,c
  2987  000AEC                     i1l2663:
  2988                           
  2989                           ; BSR set to: 15
  2990                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  2991  000AEC  010F               	movlb	15	; () banked
  2992  000AEE  AD52               	btfss	82,6,b	;volatile
  2993  000AF0  D00C               	goto	i1l2667
  2994                           
  2995                           ; BSR set to: 15
  2996                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  2997  000AF2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  2998  000AF6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  2999  000AFA  0E00               	movlw	0
  3000  000AFC  12DE               	iorwf	postinc2,f,c
  3001  000AFE  0E00               	movlw	0
  3002  000B00  12DE               	iorwf	postinc2,f,c
  3003  000B02  0E08               	movlw	8
  3004  000B04  12DE               	iorwf	postinc2,f,c
  3005  000B06  0E00               	movlw	0
  3006  000B08  12DE               	iorwf	postinc2,f,c
  3007  000B0A                     i1l2667:
  3008                           
  3009                           ; BSR set to: 15
  3010                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  3011  000B0A  010F               	movlb	15	; () banked
  3012  000B0C  AF52               	btfss	82,7,b	;volatile
  3013  000B0E  D00C               	goto	i1l2671
  3014                           
  3015                           ; BSR set to: 15
  3016                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  3017  000B10  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  3018  000B14  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  3019  000B18  0E00               	movlw	0
  3020  000B1A  12DE               	iorwf	postinc2,f,c
  3021  000B1C  0E00               	movlw	0
  3022  000B1E  12DE               	iorwf	postinc2,f,c
  3023  000B20  0E10               	movlw	16
  3024  000B22  12DE               	iorwf	postinc2,f,c
  3025  000B24  0E00               	movlw	0
  3026  000B26  12DE               	iorwf	postinc2,f,c
  3027  000B28                     i1l2671:
  3028                           
  3029                           ; BSR set to: 15
  3030                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  3031  000B28  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  3032  000B2C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  3033  000B2E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  3034  000B30  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  3035  000B32  0E15               	movlw	21
  3036  000B34                     i1u253_25:
  3037  000B34  90D8               	bcf	status,0,c
  3038  000B36  3603               	rlcf	??_CANreceiveMessage,f,c
  3039  000B38  3604               	rlcf	??_CANreceiveMessage+1,f,c
  3040  000B3A  3605               	rlcf	??_CANreceiveMessage+2,f,c
  3041  000B3C  3606               	rlcf	??_CANreceiveMessage+3,f,c
  3042  000B3E  2EE8               	decfsz	wreg,f,c
  3043  000B40  D7F9               	goto	i1u253_25
  3044  000B42  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  3045  000B46  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  3046  000B4A  5003               	movf	??_CANreceiveMessage,w,c
  3047  000B4C  12DE               	iorwf	postinc2,f,c
  3048  000B4E  5004               	movf	??_CANreceiveMessage+1,w,c
  3049  000B50  12DE               	iorwf	postinc2,f,c
  3050  000B52  5005               	movf	??_CANreceiveMessage+2,w,c
  3051  000B54  12DE               	iorwf	postinc2,f,c
  3052  000B56  5006               	movf	??_CANreceiveMessage+3,w,c
  3053  000B58  12DE               	iorwf	postinc2,f,c
  3054  000B5A                     i1l2673:
  3055                           
  3056                           ; BSR set to: 15
  3057                           ;inc\CANlib.h: 581: }
  3058                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  3059  000B5A  010F               	movlb	15	; () banked
  3060  000B5C  9F50               	bcf	80,7,b	;volatile
  3061                           
  3062                           ; BSR set to: 15
  3063                           ;inc\CANlib.h: 584: return (error);
  3064                           ;	Return value of _CANreceiveMessage is never used
  3065  000B5E  0012               	return	
  3066  000B60                     i1l388:
  3067                           
  3068                           ; BSR set to: 15
  3069                           ;inc\CANlib.h: 585: }
  3070                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  3071  000B60  AE60               	btfss	3936,7,c	;volatile
  3072  000B62  0012               	return	
  3073                           
  3074                           ; BSR set to: 15
  3075                           ;inc\CANlib.h: 588: {
  3076                           ;inc\CANlib.h: 589: msg->identifier = 0;
  3077  000B64  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  3078  000B68  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  3079  000B6C  6ADE               	clrf	postinc2,c
  3080  000B6E  6ADE               	clrf	postinc2,c
  3081  000B70  6ADE               	clrf	postinc2,c
  3082  000B72  6ADD               	clrf	postdec2,c
  3083                           
  3084                           ; BSR set to: 15
  3085                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  3086  000B74  EE20 F004          	lfsr	2,4
  3087  000B78  5001               	movf	CANreceiveMessage@msg,w,c
  3088  000B7A  26D9               	addwf	fsr2l,f,c
  3089  000B7C  5002               	movf	CANreceiveMessage@msg+1,w,c
  3090  000B7E  22DA               	addwfc	fsr2h,f,c
  3091  000B80  CF66 FFDF          	movff	3942,indf2	;volatile
  3092                           
  3093                           ; BSR set to: 15
  3094                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  3095  000B84  EE20 F005          	lfsr	2,5
  3096  000B88  5001               	movf	CANreceiveMessage@msg,w,c
  3097  000B8A  26D9               	addwf	fsr2l,f,c
  3098  000B8C  5002               	movf	CANreceiveMessage@msg+1,w,c
  3099  000B8E  22DA               	addwfc	fsr2h,f,c
  3100  000B90  CF67 FFDF          	movff	3943,indf2	;volatile
  3101                           
  3102                           ; BSR set to: 15
  3103                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  3104  000B94  EE20 F006          	lfsr	2,6
  3105  000B98  5001               	movf	CANreceiveMessage@msg,w,c
  3106  000B9A  26D9               	addwf	fsr2l,f,c
  3107  000B9C  5002               	movf	CANreceiveMessage@msg+1,w,c
  3108  000B9E  22DA               	addwfc	fsr2h,f,c
  3109  000BA0  CF68 FFDF          	movff	3944,indf2	;volatile
  3110                           
  3111                           ; BSR set to: 15
  3112                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  3113  000BA4  EE20 F007          	lfsr	2,7
  3114  000BA8  5001               	movf	CANreceiveMessage@msg,w,c
  3115  000BAA  26D9               	addwf	fsr2l,f,c
  3116  000BAC  5002               	movf	CANreceiveMessage@msg+1,w,c
  3117  000BAE  22DA               	addwfc	fsr2h,f,c
  3118  000BB0  CF69 FFDF          	movff	3945,indf2	;volatile
  3119                           
  3120                           ; BSR set to: 15
  3121                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  3122  000BB4  EE20 F008          	lfsr	2,8
  3123  000BB8  5001               	movf	CANreceiveMessage@msg,w,c
  3124  000BBA  26D9               	addwf	fsr2l,f,c
  3125  000BBC  5002               	movf	CANreceiveMessage@msg+1,w,c
  3126  000BBE  22DA               	addwfc	fsr2h,f,c
  3127  000BC0  CF6A FFDF          	movff	3946,indf2	;volatile
  3128                           
  3129                           ; BSR set to: 15
  3130                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  3131  000BC4  EE20 F009          	lfsr	2,9
  3132  000BC8  5001               	movf	CANreceiveMessage@msg,w,c
  3133  000BCA  26D9               	addwf	fsr2l,f,c
  3134  000BCC  5002               	movf	CANreceiveMessage@msg+1,w,c
  3135  000BCE  22DA               	addwfc	fsr2h,f,c
  3136  000BD0  CF6B FFDF          	movff	3947,indf2	;volatile
  3137                           
  3138                           ; BSR set to: 15
  3139                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  3140  000BD4  EE20 F00A          	lfsr	2,10
  3141  000BD8  5001               	movf	CANreceiveMessage@msg,w,c
  3142  000BDA  26D9               	addwf	fsr2l,f,c
  3143  000BDC  5002               	movf	CANreceiveMessage@msg+1,w,c
  3144  000BDE  22DA               	addwfc	fsr2h,f,c
  3145  000BE0  CF6C FFDF          	movff	3948,indf2	;volatile
  3146                           
  3147                           ; BSR set to: 15
  3148                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  3149  000BE4  EE20 F00B          	lfsr	2,11
  3150  000BE8  5001               	movf	CANreceiveMessage@msg,w,c
  3151  000BEA  26D9               	addwf	fsr2l,f,c
  3152  000BEC  5002               	movf	CANreceiveMessage@msg+1,w,c
  3153  000BEE  22DA               	addwfc	fsr2h,f,c
  3154  000BF0  CF6D FFDF          	movff	3949,indf2	;volatile
  3155                           
  3156                           ; BSR set to: 15
  3157                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  3158  000BF4  EE20 F00E          	lfsr	2,14
  3159  000BF8  5001               	movf	CANreceiveMessage@msg,w,c
  3160  000BFA  26D9               	addwf	fsr2l,f,c
  3161  000BFC  5002               	movf	CANreceiveMessage@msg+1,w,c
  3162  000BFE  22DA               	addwfc	fsr2h,f,c
  3163  000C00  AC65               	btfss	3941,6,c	;volatile
  3164  000C02  D002               	goto	i1u255_20
  3165  000C04  0E01               	movlw	1
  3166  000C06  D001               	goto	i1u255_26
  3167  000C08                     i1u255_20:
  3168  000C08  0E00               	movlw	0
  3169  000C0A                     i1u255_26:
  3170  000C0A  6EDF               	movwf	indf2,c
  3171                           
  3172                           ; BSR set to: 15
  3173                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  3174  000C0C  EE20 F00D          	lfsr	2,13
  3175  000C10  5001               	movf	CANreceiveMessage@msg,w,c
  3176  000C12  26D9               	addwf	fsr2l,f,c
  3177  000C14  5002               	movf	CANreceiveMessage@msg+1,w,c
  3178  000C16  22DA               	addwfc	fsr2h,f,c
  3179  000C18  5065               	movf	3941,w,c	;volatile
  3180  000C1A  0B0F               	andlw	15
  3181  000C1C  6EDF               	movwf	indf2,c
  3182                           
  3183                           ; BSR set to: 15
  3184                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  3185  000C1E  EE20 F00C          	lfsr	2,12
  3186  000C22  5001               	movf	CANreceiveMessage@msg,w,c
  3187  000C24  26D9               	addwf	fsr2l,f,c
  3188  000C26  5002               	movf	CANreceiveMessage@msg+1,w,c
  3189  000C28  22DA               	addwfc	fsr2h,f,c
  3190  000C2A  A662               	btfss	3938,3,c	;volatile
  3191  000C2C  D002               	goto	i1u256_20
  3192  000C2E  0E01               	movlw	1
  3193  000C30  D001               	goto	i1u256_26
  3194  000C32                     i1u256_20:
  3195  000C32  0E00               	movlw	0
  3196  000C34                     i1u256_26:
  3197  000C34  6EDF               	movwf	indf2,c
  3198                           
  3199                           ; BSR set to: 15
  3200                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  3201  000C36  B662               	btfsc	3938,3,c	;volatile
  3202  000C38  D043               	goto	i1l2709
  3203                           
  3204                           ; BSR set to: 15
  3205                           ;inc\CANlib.h: 606: {
  3206                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  3207  000C3A  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  3208  000C3E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  3209  000C40  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  3210  000C42  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  3211  000C44  0E03               	movlw	3
  3212  000C46                     i1u258_25:
  3213  000C46  90D8               	bcf	status,0,c
  3214  000C48  3603               	rlcf	??_CANreceiveMessage,f,c
  3215  000C4A  3604               	rlcf	??_CANreceiveMessage+1,f,c
  3216  000C4C  3605               	rlcf	??_CANreceiveMessage+2,f,c
  3217  000C4E  3606               	rlcf	??_CANreceiveMessage+3,f,c
  3218  000C50  2EE8               	decfsz	wreg,f,c
  3219  000C52  D7F9               	goto	i1u258_25
  3220  000C54  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  3221  000C58  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  3222  000C5C  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  3223  000C60  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  3224  000C64  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  3225  000C68  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  3226                           
  3227                           ; BSR set to: 15
  3228                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  3229  000C6C  3862               	swapf	3938,w,c	;volatile
  3230  000C6E  42E8               	rrncf	wreg,f,c
  3231  000C70  0B07               	andlw	7
  3232  000C72  0B07               	andlw	7
  3233  000C74  6E0C               	movwf	CANreceiveMessage@tamp,c
  3234                           
  3235                           ; BSR set to: 15
  3236                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  3237  000C76  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  3238  000C7A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  3239  000C7E  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  3240  000C82  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  3241  000C86  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  3242  000C8A  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  3243  000C8E  500C               	movf	CANreceiveMessage@tamp,w,c
  3244  000C90  2403               	addwf	??_CANreceiveMessage,w,c
  3245  000C92  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  3246  000C94  0E00               	movlw	0
  3247  000C96  2004               	addwfc	??_CANreceiveMessage+1,w,c
  3248  000C98  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  3249  000C9A  0E00               	movlw	0
  3250  000C9C  2005               	addwfc	??_CANreceiveMessage+2,w,c
  3251  000C9E  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  3252  000CA0  0E00               	movlw	0
  3253  000CA2  2006               	addwfc	??_CANreceiveMessage+3,w,c
  3254  000CA4  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  3255  000CA6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  3256  000CAA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  3257  000CAE  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  3258  000CB2  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  3259  000CB6  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  3260  000CBA  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  3261                           
  3262                           ;inc\CANlib.h: 610: }
  3263  000CBE  D088               	goto	i1l2735
  3264  000CC0                     i1l2709:
  3265                           
  3266                           ; BSR set to: 15
  3267                           ;inc\CANlib.h: 611: else
  3268                           ;inc\CANlib.h: 612: {
  3269                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  3270  000CC0  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  3271  000CC4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  3272  000CC6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  3273  000CC8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  3274  000CCA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  3275  000CCE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  3276  000CD2  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  3277  000CD6  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  3278  000CDA  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  3279  000CDE  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  3280                           
  3281                           ; BSR set to: 15
  3282                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  3283  000CE2  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  3284  000CE6  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  3285  000CE8  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  3286  000CEA  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  3287  000CEC  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  3288  000CF0  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  3289  000CF4  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  3290  000CF8  6A03               	clrf	??_CANreceiveMessage,c
  3291  000CFA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  3292  000CFE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  3293  000D02  5003               	movf	??_CANreceiveMessage,w,c
  3294  000D04  26DE               	addwf	postinc2,f,c
  3295  000D06  5004               	movf	??_CANreceiveMessage+1,w,c
  3296  000D08  22DE               	addwfc	postinc2,f,c
  3297  000D0A  5005               	movf	??_CANreceiveMessage+2,w,c
  3298  000D0C  22DE               	addwfc	postinc2,f,c
  3299  000D0E  5006               	movf	??_CANreceiveMessage+3,w,c
  3300  000D10  22DE               	addwfc	postinc2,f,c
  3301                           
  3302                           ; BSR set to: 15
  3303                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  3304  000D12  A062               	btfss	3938,0,c	;volatile
  3305  000D14  D00C               	goto	i1l2717
  3306                           
  3307                           ; BSR set to: 15
  3308                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  3309  000D16  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  3310  000D1A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  3311  000D1E  0E00               	movlw	0
  3312  000D20  12DE               	iorwf	postinc2,f,c
  3313  000D22  0E00               	movlw	0
  3314  000D24  12DE               	iorwf	postinc2,f,c
  3315  000D26  0E01               	movlw	1
  3316  000D28  12DE               	iorwf	postinc2,f,c
  3317  000D2A  0E00               	movlw	0
  3318  000D2C  12DE               	iorwf	postinc2,f,c
  3319  000D2E                     i1l2717:
  3320                           
  3321                           ; BSR set to: 15
  3322                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  3323  000D2E  A262               	btfss	3938,1,c	;volatile
  3324  000D30  D00C               	goto	i1l2721
  3325                           
  3326                           ; BSR set to: 15
  3327                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  3328  000D32  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  3329  000D36  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  3330  000D3A  0E00               	movlw	0
  3331  000D3C  12DE               	iorwf	postinc2,f,c
  3332  000D3E  0E00               	movlw	0
  3333  000D40  12DE               	iorwf	postinc2,f,c
  3334  000D42  0E02               	movlw	2
  3335  000D44  12DE               	iorwf	postinc2,f,c
  3336  000D46  0E00               	movlw	0
  3337  000D48  12DE               	iorwf	postinc2,f,c
  3338  000D4A                     i1l2721:
  3339                           
  3340                           ; BSR set to: 15
  3341                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  3342  000D4A  AA62               	btfss	3938,5,c	;volatile
  3343  000D4C  D00C               	goto	i1l2725
  3344                           
  3345                           ; BSR set to: 15
  3346                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  3347  000D4E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  3348  000D52  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  3349  000D56  0E00               	movlw	0
  3350  000D58  12DE               	iorwf	postinc2,f,c
  3351  000D5A  0E00               	movlw	0
  3352  000D5C  12DE               	iorwf	postinc2,f,c
  3353  000D5E  0E04               	movlw	4
  3354  000D60  12DE               	iorwf	postinc2,f,c
  3355  000D62  0E00               	movlw	0
  3356  000D64  12DE               	iorwf	postinc2,f,c
  3357  000D66                     i1l2725:
  3358                           
  3359                           ; BSR set to: 15
  3360                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  3361  000D66  AC62               	btfss	3938,6,c	;volatile
  3362  000D68  D00C               	goto	i1l2729
  3363                           
  3364                           ; BSR set to: 15
  3365                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  3366  000D6A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  3367  000D6E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  3368  000D72  0E00               	movlw	0
  3369  000D74  12DE               	iorwf	postinc2,f,c
  3370  000D76  0E00               	movlw	0
  3371  000D78  12DE               	iorwf	postinc2,f,c
  3372  000D7A  0E08               	movlw	8
  3373  000D7C  12DE               	iorwf	postinc2,f,c
  3374  000D7E  0E00               	movlw	0
  3375  000D80  12DE               	iorwf	postinc2,f,c
  3376  000D82                     i1l2729:
  3377                           
  3378                           ; BSR set to: 15
  3379                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  3380  000D82  AE62               	btfss	3938,7,c	;volatile
  3381  000D84  D00C               	goto	i1l2733
  3382                           
  3383                           ; BSR set to: 15
  3384                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  3385  000D86  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  3386  000D8A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  3387  000D8E  0E00               	movlw	0
  3388  000D90  12DE               	iorwf	postinc2,f,c
  3389  000D92  0E00               	movlw	0
  3390  000D94  12DE               	iorwf	postinc2,f,c
  3391  000D96  0E10               	movlw	16
  3392  000D98  12DE               	iorwf	postinc2,f,c
  3393  000D9A  0E00               	movlw	0
  3394  000D9C  12DE               	iorwf	postinc2,f,c
  3395  000D9E                     i1l2733:
  3396                           
  3397                           ; BSR set to: 15
  3398                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  3399  000D9E  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  3400  000DA2  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  3401  000DA4  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  3402  000DA6  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  3403  000DA8  0E15               	movlw	21
  3404  000DAA                     i1u264_25:
  3405  000DAA  90D8               	bcf	status,0,c
  3406  000DAC  3603               	rlcf	??_CANreceiveMessage,f,c
  3407  000DAE  3604               	rlcf	??_CANreceiveMessage+1,f,c
  3408  000DB0  3605               	rlcf	??_CANreceiveMessage+2,f,c
  3409  000DB2  3606               	rlcf	??_CANreceiveMessage+3,f,c
  3410  000DB4  2EE8               	decfsz	wreg,f,c
  3411  000DB6  D7F9               	goto	i1u264_25
  3412  000DB8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  3413  000DBC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  3414  000DC0  5003               	movf	??_CANreceiveMessage,w,c
  3415  000DC2  12DE               	iorwf	postinc2,f,c
  3416  000DC4  5004               	movf	??_CANreceiveMessage+1,w,c
  3417  000DC6  12DE               	iorwf	postinc2,f,c
  3418  000DC8  5005               	movf	??_CANreceiveMessage+2,w,c
  3419  000DCA  12DE               	iorwf	postinc2,f,c
  3420  000DCC  5006               	movf	??_CANreceiveMessage+3,w,c
  3421  000DCE  12DE               	iorwf	postinc2,f,c
  3422  000DD0                     i1l2735:
  3423                           
  3424                           ; BSR set to: 15
  3425                           ;inc\CANlib.h: 629: }
  3426                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  3427  000DD0  9E60               	bcf	3936,7,c	;volatile
  3428                           
  3429                           ; BSR set to: 15
  3430                           ;inc\CANlib.h: 632: return (error);
  3431                           ;	Return value of _CANreceiveMessage is never used
  3432  000DD2  0012               	return	
  3433  000DD4                     __end_of_CANreceiveMessage:
  3434                           	opt stack 0
  3435                           pclatu	equ	0xFFB
  3436                           pclath	equ	0xFFA
  3437                           tblptru	equ	0xFF8
  3438                           tblptrh	equ	0xFF7
  3439                           tblptrl	equ	0xFF6
  3440                           tablat	equ	0xFF5
  3441                           prodh	equ	0xFF4
  3442                           prodl	equ	0xFF3
  3443                           postinc0	equ	0xFEE
  3444                           fsr0h	equ	0xFEA
  3445                           fsr0l	equ	0xFE9
  3446                           wreg	equ	0xFE8
  3447                           indf1	equ	0xFE7
  3448                           fsr1h	equ	0xFE2
  3449                           fsr1l	equ	0xFE1
  3450                           bsr	equ	0xFE0
  3451                           indf2	equ	0xFDF
  3452                           postinc2	equ	0xFDE
  3453                           postdec2	equ	0xFDD
  3454                           fsr2h	equ	0xFDA
  3455                           fsr2l	equ	0xFD9
  3456                           status	equ	0xFD8
  3457                           
  3458 ;; *************** function _CANisRxReady *****************
  3459 ;; Defined at:
  3460 ;;		line 1163 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;		None
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1    wreg      unsigned char 
  3467 ;; Registers used:
  3468 ;;		wreg, status,2
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3474 ;;      Params:         0       0       0       0
  3475 ;;      Locals:         1       0       0       0
  3476 ;;      Temps:          0       0       0       0
  3477 ;;      Totals:         1       0       0       0
  3478 ;;Total ram usage:        1 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; This function calls:
  3481 ;;		Nothing
  3482 ;; This function is called by:
  3483 ;;		_ISR_bassa
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487                           	psect	text9
  3488  000FCC                     __ptext9:
  3489                           	opt stack 0
  3490  000FCC                     _CANisRxReady:
  3491                           	opt stack 27
  3492                           
  3493                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  3494                           
  3495                           ; BSR set to: 15
  3496                           ;incstack = 0
  3497  000FCC  0E01               	movlw	1
  3498  000FCE  6E01               	movwf	_CANisRxReady$2715,c
  3499  000FD0  BE60               	btfsc	3936,7,c	;volatile
  3500  000FD2  D005               	goto	i1l539
  3501  000FD4  010F               	movlb	15	; () banked
  3502  000FD6  BF50               	btfsc	80,7,b	;volatile
  3503  000FD8  D002               	goto	i1l539
  3504                           
  3505                           ; BSR set to: 15
  3506  000FDA  0E00               	movlw	0
  3507  000FDC  6E01               	movwf	_CANisRxReady$2715,c
  3508  000FDE                     i1l539:
  3509  000FDE  5001               	movf	_CANisRxReady$2715,w,c
  3510  000FE0  0012               	return	
  3511  000FE2                     __end_of_CANisRxReady:
  3512                           	opt stack 0
  3513  0000                     pclatu	equ	0xFFB
  3514                           pclath	equ	0xFFA
  3515                           tblptru	equ	0xFF8
  3516                           tblptrh	equ	0xFF7
  3517                           tblptrl	equ	0xFF6
  3518                           tablat	equ	0xFF5
  3519                           prodh	equ	0xFF4
  3520                           prodl	equ	0xFF3
  3521                           postinc0	equ	0xFEE
  3522                           fsr0h	equ	0xFEA
  3523                           fsr0l	equ	0xFE9
  3524                           wreg	equ	0xFE8
  3525                           indf1	equ	0xFE7
  3526                           fsr1h	equ	0xFE2
  3527                           fsr1l	equ	0xFE1
  3528                           bsr	equ	0xFE0
  3529                           indf2	equ	0xFDF
  3530                           postinc2	equ	0xFDE
  3531                           postdec2	equ	0xFDD
  3532                           fsr2h	equ	0xFDA
  3533                           fsr2l	equ	0xFD9
  3534                           status	equ	0xFD8
  3535                           pclatu	equ	0xFFB
  3536                           pclath	equ	0xFFA
  3537                           tblptru	equ	0xFF8
  3538                           tblptrh	equ	0xFF7
  3539                           tblptrl	equ	0xFF6
  3540                           tablat	equ	0xFF5
  3541                           prodh	equ	0xFF4
  3542                           prodl	equ	0xFF3
  3543                           postinc0	equ	0xFEE
  3544                           fsr0h	equ	0xFEA
  3545                           fsr0l	equ	0xFE9
  3546                           wreg	equ	0xFE8
  3547                           indf1	equ	0xFE7
  3548                           fsr1h	equ	0xFE2
  3549                           fsr1l	equ	0xFE1
  3550                           bsr	equ	0xFE0
  3551                           indf2	equ	0xFDF
  3552                           postinc2	equ	0xFDE
  3553                           postdec2	equ	0xFDD
  3554                           fsr2h	equ	0xFDA
  3555                           fsr2l	equ	0xFD9
  3556                           status	equ	0xFD8
  3557                           
  3558                           	psect	rparam
  3559  0000                     pclatu	equ	0xFFB
  3560                           pclath	equ	0xFFA
  3561                           tblptru	equ	0xFF8
  3562                           tblptrh	equ	0xFF7
  3563                           tblptrl	equ	0xFF6
  3564                           tablat	equ	0xFF5
  3565                           prodh	equ	0xFF4
  3566                           prodl	equ	0xFF3
  3567                           postinc0	equ	0xFEE
  3568                           fsr0h	equ	0xFEA
  3569                           fsr0l	equ	0xFE9
  3570                           wreg	equ	0xFE8
  3571                           indf1	equ	0xFE7
  3572                           fsr1h	equ	0xFE2
  3573                           fsr1l	equ	0xFE1
  3574                           bsr	equ	0xFE0
  3575                           indf2	equ	0xFDF
  3576                           postinc2	equ	0xFDE
  3577                           postdec2	equ	0xFDD
  3578                           fsr2h	equ	0xFDA
  3579                           fsr2l	equ	0xFD9
  3580                           status	equ	0xFD8
  3581                           
  3582                           	psect	temp
  3583  000042                     btemp:
  3584                           	opt stack 0
  3585  000042                     	ds	1
  3586  0000                     int$flags	set	btemp
  3587                           pclatu	equ	0xFFB
  3588                           pclath	equ	0xFFA
  3589                           tblptru	equ	0xFF8
  3590                           tblptrh	equ	0xFF7
  3591                           tblptrl	equ	0xFF6
  3592                           tablat	equ	0xFF5
  3593                           prodh	equ	0xFF4
  3594                           prodl	equ	0xFF3
  3595                           postinc0	equ	0xFEE
  3596                           fsr0h	equ	0xFEA
  3597                           fsr0l	equ	0xFE9
  3598                           wreg	equ	0xFE8
  3599                           indf1	equ	0xFE7
  3600                           fsr1h	equ	0xFE2
  3601                           fsr1l	equ	0xFE1
  3602                           bsr	equ	0xFE0
  3603                           indf2	equ	0xFDF
  3604                           postinc2	equ	0xFDE
  3605                           postdec2	equ	0xFDD
  3606                           fsr2h	equ	0xFDA
  3607                           fsr2l	equ	0xFD9
  3608                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         52
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      65
    BANK0           160     22      44
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    putsUSART@data	PTR unsigned char  size(2) Largest target is 11
		 -> usartTx(BANK0[11]), 

    getsUSART@buffer	PTR unsigned char  size(2) Largest target is 11
		 -> usartRx(BANK0[11]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage
    _getsUSART->_ReadUSART

Critical Paths under _main in BANK0

    _main->_CANsendMessage
    _putsUSART->_WriteUSART

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    4010
                                             16 BANK0      6     6      0
                       _CANisTxReady
                     _CANsendMessage
                          _putsUSART
 ---------------------------------------------------------------------------------
 (1) _putsUSART                                            2     0      2     170
                                              1 BANK0      2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CANsendMessage                                      16     8      8    3673
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (1) _CANisTxReady                                         1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR_bassa                                           21    21      0    1494
                                             12 COMRAM    21    21      0
                       _CANisRxReady
                  _CANreceiveMessage
                          _getsUSART
 ---------------------------------------------------------------------------------
 (4) _getsUSART                                            5     2      3     243
                                              1 COMRAM     5     2      3
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (5) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (4) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisTxReady
   _CANsendMessage
   _putsUSART
     _WriteUSART

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   _getsUSART
     _ReadUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     16      2C       4       27.5%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     21      41       1       69.1%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6D       9        0.0%
DATA                 0      0      6D      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Mon Feb 08 11:24:41 2016

                          _id 0022                            bsr 000FE0                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                   __CFG_OSC$HS 000000  
                 __CFG_LVP$ON 000000                           l341 03C0                           l342 0152  
                         l351 030C                           l343 0156                           l360 0462  
                         l352 0310                           l344 024E                           l361 046C  
                         l353 031C                           l345 01DE                           l362 0476  
                         l346 01E8                           l371 065A                           l363 0480  
                         l347 01F2                           l380 0814                           l372 065E  
                         l356 0644                           l348 01FC                           l381 0818  
                         l373 0756                           l357 03D6                           l534 0FA8  
                         l382 0824                           l374 06E6                           l366 0590  
                         l358 03DA                           l375 06F0                           l367 0594  
                         l359 04D2                           l376 06FA                           l368 05A0  
                         l377 0704                           l655 0F62                           l588 0DD4  
                getsUSART@len 0004                  __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000  
                         _RTR 0200                           _msg 0029                           wreg 000FE8  
                __CFG_WDT$OFF 000000                          l3111 0E92                          l3105 0E52  
                        l3027 070E                          l3053 0828                          l3117 0ECE  
                        l3047 0808                          l3093 0DEA                          l3097 0DFA  
                        l2901 0320                          l2841 0FF0                          l2951 048A  
                        l2971 0584                          l2875 0206                          l2895 0300  
                        l2977 05A4                 getsUSART@data 0005                          u3005 02D2  
                        _LATA 000F89                          u3110 04AA                          _LATB 000F8A  
                        _LATC 000F8B                          u3120 04F6                          _LATD 000F8C  
                        _LATE 000F8D                          u3115 049E                          u3125 04EA  
                        u3135 0556                          u3240 072E                          u3250 077A  
                        u3245 0722                          u3255 076E                          _PIE1 000F9D  
                        u3360 0DF8                          u3265 07DA                          u2980 0226  
                        u2990 0272                          u2985 021A                          u2995 0266  
                        _data 0038                          _main 0DD4                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr0l 000FE9                          fsr2h 000FDA  
                        indf1 000FE7                          fsr1l 000FE1                          indf2 000FDF  
                        fsr2l 000FD9                          btemp 0042                          pclat 000FFA  
                        prodh 000FF4                          prodl 000FF3                          start 0138  
               __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000                  ___param_bank 000010  
  __size_of_CANreceiveMessage 050C                         ?_main 0001                         i1l610 0F3C  
                       i1l539 0FDE                         i1l388 0B60                         i1l581 00D8  
                       i1l583 00D6                         i1l585 00F0                         i1l578 00DC  
                       i1l668 0FBC                         _RCREG 000FAE                         _RCSTA 000FAB  
           _CANisRxReady$2715 0001                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISC 000F94                         _TRISD 000F95                         _TRISE 000F96  
                       _TXREG 000FAD                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000            __size_of_ISR_bassa 0120                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
                       main@i 008A                __pbitbssCOMRAM 0200          __end_of_CANisRxReady 0FE2  
                       tablat 000FF5          __end_of_CANisTxReady 0FAE                         status 000FD8  
              __CFG_PBADEN$ON 000000                WriteUSART@data 0076               __initialization 0EFC  
                __end_of_main 0EFC                        ??_main 0086                 __activetblptr 000002  
           _CANisTxReady$2713 0076                        _CANCON 000F6F               __CFG_BBSIZ$1024 000000  
             getsUSART@buffer 0002                        i1l2721 0D4A                        i1l2733 0D9E  
                      i1l2725 0D66                        i1l2717 0D2E                        i1l2709 0CC0  
                      i1l2735 0DD0                        i1l2671 0B28                        i1l2663 0AEC  
                      i1l2655 0AB0                        i1l2647 0A40                        i1l2729 0D82  
                      i1l2673 0B5A                        i1l2667 0B0A                        i1l2659 0ACE  
                      i1l2771 0F58                        i1l2781 0066                        i1l2797 00A0  
          __size_of_ReadUSART 001E               _newMessageUsart 0202                        _RXB0D0 000F66  
                      _RXB0D1 000F67                        _RXB0D2 000F68                        _RXB0D3 000F69  
                      _RXB0D4 000F6A                        _RXB1D0 000F56                        _RXB0D5 000F6B  
                      _RXB1D1 000F57                        _RXB0D6 000F6C                        _RXB1D2 000F58  
                      _RXB0D7 000F6D                        _RXB1D3 000F59                        _RXB1D4 000F5A  
                      _RXB1D5 000F5B                        _RXB1D6 000F5C                        _RXB1D7 000F5D  
                      _TXB0D0 000F46                        _TXB0D1 000F47                        _TXB0D2 000F48  
                      _TXB0D3 000F49                        _TXB1D0 000F36                        _TXB0D4 000F4A  
                      _TXB1D1 000F37                        _TXB0D5 000F4B                        _TXB1D2 000F38  
                      _TXB0D6 000F4C                        _TXB1D3 000F39                        _TXB0D7 000F4D  
                      _TXB2D0 000F26                        _TXB1D4 000F3A                        _TXB2D1 000F27  
                      _TXB1D5 000F3B                        _TXB2D2 000F28                        _TXB1D6 000F3C  
                      _TXB2D3 000F29                        _TXB1D7 000F3D                        _TXB2D4 000F2A  
                      _TXB2D5 000F2B                        _TXB2D6 000F2C                        _TXB2D7 000F2D  
          CANsendMessage@data 007A            CANsendMessage@tamp 0082                __CFG_XINST$OFF 000000  
           __end_of_ISR_bassa 0138                __CFG_STVREN$ON 000000                        clear_0 0F02  
                      clear_1 0F10               __CFG_BOREN$BOHW 000000                  __pdataCOMRAM 0041  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                  __accesstop 0060       __end_of__initialization 0F28                 ___rparam_used 000001  
                  _WriteUSART 0FE2                __pcstackCOMRAM 0001             __end_of_ReadUSART 0FCC  
               _newMessageCan 0201         __size_of_CANisRxReady 0016            __size_of_getsUSART 002C  
       __size_of_CANisTxReady 0024                 ReadUSART@data 0001                    __pbssBANK0 0060  
     __size_of_CANsendMessage 078C                 putsUSART@data 0077                  _CANisRxReady 0FCC  
                     _CANSTAT 000F6E                  _CANisTxReady 0F8A                       _BRGCON1 000F70  
                     _BRGCON2 000F71                       _BRGCON3 000F72                       _RXB0DLC 000F65  
                     _RXB1DLC 000F55                       _RXB0CON 000F60                       _RXB1CON 000F50  
                     _TXB0DLC 000F45                       _TXB1DLC 000F35                       _TXB2DLC 000F25  
          __size_of_putsUSART 0028           CANsendMessage@flags 007D                       __Hparam 0000  
                     __Lparam 0000             __end_of_getsUSART 0F62                   ?_WriteUSART 0001  
                     __pcinit 0EFC                       __ramtop 0300                       __ptext0 0DD4  
                     __ptext1 0F62                       __ptext2 0FE2                       __ptext3 013C  
                     __ptext4 0F8A                       __ptext6 0F36                       __ptext7 0FAE  
                     __ptext8 08C8                       __ptext9 0FCC        CANreceiveMessage@error 000B  
                     _usartRx 0060                       _usartTx 006B          end_of_initialization 0F28  
               __Lmediumconst 0000                     _RCSTAbits 000FAB                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE             __end_of_putsUSART 0F8A  
                   _ISR_bassa 0018                    getsUSART@i 0006           __size_of_WriteUSART 0014  
     _clock_counter_reference 0026                _CANsendMessage 013C                     _TXSTAbits 000FAC  
                  ?_ISR_bassa 0001                 __pidataCOMRAM 0FF6           start_initialization 0EFC  
                   _ReadUSART 0FAE        __end_of_CANsendMessage 08C8              __CFG_LPT1OSC$OFF 000000  
                 __pbssCOMRAM 0022                    ?_ReadUSART 0001                 __pcstackBANK0 0076  
                 _BRGCON2bits 000F71                   _BRGCON3bits 000F72               ?_CANsendMessage 0076  
                ??_WriteUSART 0076                   ??_ISR_bassa 000D                     _getsUSART 0F36  
                 __pintcodelo 0018                   _COMSTATbits 000F74                    ISR_bassa@i 0020  
          __end_of_WriteUSART 0FF6         CANreceiveMessage@tamp 000C                      _IPR1bits 000F9F  
_delay_quartz_frequency_value 0041                      _PIE1bits 000F9D                      _IPR3bits 000FA5  
                    _PIE3bits 000FA3                      i1u244_20 0980                      i1u244_26 0982  
                    i1u245_20 09AE                      i1u253_25 0B34                      i1u245_26 09B0  
                    i1u255_20 0C08                      i1u247_25 09C4                      i1u255_26 0C0A  
                    i1u256_20 0C32                      i1u264_25 0DAA                      i1u256_26 0C34  
                    i1u258_25 0C46                      i1u278_20 00D6                      _PIR1bits 000F9E  
                    _PIR3bits 000FA4                      _RXB0EIDH 000F63                      _RXB0EIDL 000F64  
                    _RXB1EIDH 000F53                      _RXB1EIDL 000F54                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000                      _RXB0SIDH 000F61                      _RXB0SIDL 000F62  
                    _RXF0EIDH 000F02                      _RXB1SIDH 000F51                      _RXF0EIDL 000F03  
                    _RXB1SIDL 000F52                      _RXF1EIDH 000F06                      _RXF1EIDL 000F07  
                    _RXF2EIDH 000F0A                      _RXF2EIDL 000F0B                      _RXF3EIDH 000F0E  
                    _RXF3EIDL 000F0F                      _RXF4EIDH 000F12                      _RXF4EIDL 000F13  
                    _RXF5EIDH 000F16                      _RXF5EIDL 000F17                      _RXF0SIDH 000F00  
                    _RXF0SIDL 000F01                      _TXB0EIDH 000F43                      _RXF1SIDH 000F04  
                    _TXB0EIDL 000F44                      _RXF1SIDL 000F05                      _TXB1EIDH 000F33  
                    _RXF2SIDH 000F08                      _TXB1EIDL 000F34                      _RXF2SIDL 000F09  
                    _TXB2EIDH 000F23                      _RXF3SIDH 000F0C                      _TXB2EIDL 000F24  
                    _RXF3SIDL 000F0D                      _RXF4SIDH 000F10                      _RXF4SIDL 000F11  
                    _RXF5SIDH 000F14                      _RXF5SIDL 000F15                      _RXM0EIDH 000F1A  
                    _RXM0EIDL 000F1B                      _TXB0SIDH 000F41                      _RXM1EIDH 000F1E  
                    _TXB0SIDL 000F42                      _RXM1EIDL 000F1F                      _TXB1SIDH 000F31  
                    _TXB1SIDL 000F32                      _TXB2SIDH 000F21                      _TXB2SIDL 000F22  
                    _RXM0SIDH 000F18                      _RXM0SIDL 000F19                      _RXM1SIDH 000F1C  
                    _RXM1SIDL 000F1D                    ?_getsUSART 0002                      _RXERRCNT 000F75  
                    _TXERRCNT 000F76                     _putsUSART 0F62                   ??_ReadUSART 0001  
                  _CANCONbits 000F6F                      __Hrparam 0000                  _RXB0SIDLbits 000F62  
                    __Lrparam 0000                  _RXB1SIDLbits 000F52                    ?_putsUSART 0077  
                _RXF0SIDLbits 000F01                  _RXF1SIDLbits 000F05                  _RXF2SIDLbits 000F09  
                _RXF3SIDLbits 000F0D                  _RXF4SIDLbits 000F11                  _RXF5SIDLbits 000F15  
    CANsendMessage@dataLength 007C                 __size_of_main 0128          CANreceiveMessage@msg 0001  
                _TXB0SIDLbits 000F42                  _TXB1SIDLbits 000F32                  _TXB2SIDLbits 000F22  
                    int$flags 0042                 ?_CANisRxReady 0001                   ??_getsUSART 0005  
               ?_CANisTxReady 0001                   _RXB0DLCbits 000F65                   _RXB1DLCbits 000F55  
                _RXM0SIDLbits 000F19                   _RXB0CONbits 000F60                   _RXB1CONbits 000F50  
           _CANreceiveMessage 08C8                  _RXM1SIDLbits 000F1D                    _INTCONbits 000FF2  
            ??_CANsendMessage 007E            ?_CANreceiveMessage 0001      CANsendMessage@identifier 0076  
                    intlevel1 0000           ??_CANreceiveMessage 0003                   _TXB0DLCbits 000F45  
                 _TXB1DLCbits 000F35                   _TXB0CONbits 000F40                   _TXB2DLCbits 000F25  
                 _TXB1CONbits 000F30                   _TXB2CONbits 000F20                ??_CANisRxReady 0001  
              ??_CANisTxReady 0076     __end_of_CANreceiveMessage 0DD4                   ??_putsUSART 0079  
                _USART_Status 0028  
