

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Mar 24 18:35:36 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           	psect	idataCOMRAM
    41  002480                     __pidataCOMRAM:
    42                           	opt stack 0
    43                           
    44                           ;initializer for _delay_quartz_frequency_value
    45  002480  10                 	db	16
    46                           
    47                           ;initializer for _SerialOutput
    48  002481  AA                 	db	170
    49  002482  00                 	db	0
    50  002483  00                 	db	0
    51  002484  00                 	db	0
    52  002485  00                 	db	0
    53  002486  00                 	db	0
    54  002487  AA                 	db	170
    55  002488  00                 	db	0
    56                           
    57                           	psect	idataBANK0
    58  002489                     __pidataBANK0:
    59                           	opt stack 0
    60                           
    61                           ;initializer for _SerialOutputOld
    62  002489  AA                 	db	170
    63  00248A  00                 	db	0
    64  00248B  00                 	db	0
    65  00248C  00                 	db	0
    66  00248D  00                 	db	0
    67  00248E  00                 	db	0
    68  00248F  AA                 	db	170
    69  002490  00                 	db	0
    70  0000                     _RXB1CON	set	3920
    71  0000                     _RXB1CONbits	set	3920
    72  0000                     _RXB1D0	set	3926
    73  0000                     _RXB1D1	set	3927
    74  0000                     _RXB1D2	set	3928
    75  0000                     _RXB1D3	set	3929
    76  0000                     _RXB1D4	set	3930
    77  0000                     _RXB1D5	set	3931
    78  0000                     _RXB1D6	set	3932
    79  0000                     _RXB1D7	set	3933
    80  0000                     _RXB1DLC	set	3925
    81  0000                     _RXB1DLCbits	set	3925
    82  0000                     _RXB1EIDH	set	3923
    83  0000                     _RXB1EIDL	set	3924
    84  0000                     _RXB1SIDH	set	3921
    85  0000                     _RXB1SIDL	set	3922
    86  0000                     _RXB1SIDLbits	set	3922
    87  0000                     _RXF0EIDH	set	3842
    88  0000                     _RXF0EIDL	set	3843
    89  0000                     _RXF0SIDH	set	3840
    90  0000                     _RXF0SIDL	set	3841
    91  0000                     _RXF0SIDLbits	set	3841
    92  0000                     _RXF1EIDH	set	3846
    93  0000                     _RXF1EIDL	set	3847
    94  0000                     _RXF1SIDH	set	3844
    95  0000                     _RXF1SIDL	set	3845
    96  0000                     _RXF1SIDLbits	set	3845
    97  0000                     _RXF2EIDH	set	3850
    98  0000                     _RXF2EIDL	set	3851
    99  0000                     _RXF2SIDH	set	3848
   100  0000                     _RXF2SIDL	set	3849
   101  0000                     _RXF2SIDLbits	set	3849
   102  0000                     _RXF3EIDH	set	3854
   103  0000                     _RXF3EIDL	set	3855
   104  0000                     _RXF3SIDH	set	3852
   105  0000                     _RXF3SIDL	set	3853
   106  0000                     _RXF3SIDLbits	set	3853
   107  0000                     _RXF4EIDH	set	3858
   108  0000                     _RXF4EIDL	set	3859
   109  0000                     _RXF4SIDH	set	3856
   110  0000                     _RXF4SIDL	set	3857
   111  0000                     _RXF4SIDLbits	set	3857
   112  0000                     _RXF5EIDH	set	3862
   113  0000                     _RXF5EIDL	set	3863
   114  0000                     _RXF5SIDH	set	3860
   115  0000                     _RXF5SIDL	set	3861
   116  0000                     _RXF5SIDLbits	set	3861
   117  0000                     _RXM0EIDH	set	3866
   118  0000                     _RXM0EIDL	set	3867
   119  0000                     _RXM0SIDH	set	3864
   120  0000                     _RXM0SIDL	set	3865
   121  0000                     _RXM0SIDLbits	set	3865
   122  0000                     _RXM1EIDH	set	3870
   123  0000                     _RXM1EIDL	set	3871
   124  0000                     _RXM1SIDH	set	3868
   125  0000                     _RXM1SIDL	set	3869
   126  0000                     _RXM1SIDLbits	set	3869
   127  0000                     _TXB0CONbits	set	3904
   128  0000                     _TXB0D0	set	3910
   129  0000                     _TXB0D1	set	3911
   130  0000                     _TXB0D2	set	3912
   131  0000                     _TXB0D3	set	3913
   132  0000                     _TXB0D4	set	3914
   133  0000                     _TXB0D5	set	3915
   134  0000                     _TXB0D6	set	3916
   135  0000                     _TXB0D7	set	3917
   136  0000                     _TXB0DLC	set	3909
   137  0000                     _TXB0DLCbits	set	3909
   138  0000                     _TXB0EIDH	set	3907
   139  0000                     _TXB0EIDL	set	3908
   140  0000                     _TXB0SIDH	set	3905
   141  0000                     _TXB0SIDL	set	3906
   142  0000                     _TXB0SIDLbits	set	3906
   143  0000                     _TXB1CONbits	set	3888
   144  0000                     _TXB1D0	set	3894
   145  0000                     _TXB1D1	set	3895
   146  0000                     _TXB1D2	set	3896
   147  0000                     _TXB1D3	set	3897
   148  0000                     _TXB1D4	set	3898
   149  0000                     _TXB1D5	set	3899
   150  0000                     _TXB1D6	set	3900
   151  0000                     _TXB1D7	set	3901
   152  0000                     _TXB1DLC	set	3893
   153  0000                     _TXB1DLCbits	set	3893
   154  0000                     _TXB1EIDH	set	3891
   155  0000                     _TXB1EIDL	set	3892
   156  0000                     _TXB1SIDH	set	3889
   157  0000                     _TXB1SIDL	set	3890
   158  0000                     _TXB1SIDLbits	set	3890
   159  0000                     _TXB2CONbits	set	3872
   160  0000                     _TXB2D0	set	3878
   161  0000                     _TXB2D1	set	3879
   162  0000                     _TXB2D2	set	3880
   163  0000                     _TXB2D3	set	3881
   164  0000                     _TXB2D4	set	3882
   165  0000                     _TXB2D5	set	3883
   166  0000                     _TXB2D6	set	3884
   167  0000                     _TXB2D7	set	3885
   168  0000                     _TXB2DLC	set	3877
   169  0000                     _TXB2DLCbits	set	3877
   170  0000                     _TXB2EIDH	set	3875
   171  0000                     _TXB2EIDL	set	3876
   172  0000                     _TXB2SIDH	set	3873
   173  0000                     _TXB2SIDL	set	3874
   174  0000                     _TXB2SIDLbits	set	3874
   175  0000                     _ADCON1bits	set	4033
   176  0000                     _BRGCON1	set	3952
   177  0000                     _BRGCON2	set	3953
   178  0000                     _BRGCON2bits	set	3953
   179  0000                     _BRGCON3	set	3954
   180  0000                     _BRGCON3bits	set	3954
   181  0000                     _CANCON	set	3951
   182  0000                     _CANCONbits	set	3951
   183  0000                     _CANSTAT	set	3950
   184  0000                     _COMSTATbits	set	3956
   185  0000                     _INTCONbits	set	4082
   186  0000                     _IPR1bits	set	3999
   187  0000                     _IPR2bits	set	4002
   188  0000                     _IPR3bits	set	4005
   189  0000                     _LATA	set	3977
   190  0000                     _LATB	set	3978
   191  0000                     _LATC	set	3979
   192  0000                     _LATD	set	3980
   193  0000                     _LATDbits	set	3980
   194  0000                     _LATE	set	3981
   195  0000                     _PIE1	set	3997
   196  0000                     _PIE1bits	set	3997
   197  0000                     _PIE2bits	set	4000
   198  0000                     _PIE3bits	set	4003
   199  0000                     _PIR1bits	set	3998
   200  0000                     _PIR2bits	set	4001
   201  0000                     _PIR3bits	set	4004
   202  0000                     _PORTAbits	set	3968
   203  0000                     _PORTCbits	set	3970
   204  0000                     _RCONbits	set	4048
   205  0000                     _RCREG	set	4014
   206  0000                     _RCSTA	set	4011
   207  0000                     _RCSTAbits	set	4011
   208  0000                     _RXB0CON	set	3936
   209  0000                     _RXB0CONbits	set	3936
   210  0000                     _RXB0D0	set	3942
   211  0000                     _RXB0D1	set	3943
   212  0000                     _RXB0D2	set	3944
   213  0000                     _RXB0D3	set	3945
   214  0000                     _RXB0D4	set	3946
   215  0000                     _RXB0D5	set	3947
   216  0000                     _RXB0D6	set	3948
   217  0000                     _RXB0D7	set	3949
   218  0000                     _RXB0DLC	set	3941
   219  0000                     _RXB0DLCbits	set	3941
   220  0000                     _RXB0EIDH	set	3939
   221  0000                     _RXB0EIDL	set	3940
   222  0000                     _RXB0SIDH	set	3937
   223  0000                     _RXB0SIDL	set	3938
   224  0000                     _RXB0SIDLbits	set	3938
   225  0000                     _RXERRCNT	set	3957
   226  0000                     _SPBRG	set	4015
   227  0000                     _SPBRGH	set	4016
   228  0000                     _T3CON	set	4017
   229  0000                     _TMR3H	set	4019
   230  0000                     _TMR3L	set	4018
   231  0000                     _TRISA	set	3986
   232  0000                     _TRISB	set	3987
   233  0000                     _TRISC	set	3988
   234  0000                     _TRISCbits	set	3988
   235  0000                     _TRISD	set	3989
   236  0000                     _TRISE	set	3990
   237  0000                     _TXERRCNT	set	3958
   238  0000                     _TXREG	set	4013
   239  0000                     _TXSTA	set	4012
   240  0000                     _TXSTAbits	set	4012
   241                           
   242                           ; #config settings
   243  0000                     
   244                           	psect	cinit
   245  002226                     __pcinit:
   246                           	opt stack 0
   247  002226                     start_initialization:
   248                           	opt stack 0
   249  002226                     __initialization:
   250                           	opt stack 0
   251                           
   252                           ; Clear objects allocated to BANK0 (62 bytes)
   253  002226  EE00  F060         	lfsr	0,__pbssBANK0
   254  00222A  0E3E               	movlw	62
   255  00222C                     clear_0:
   256  00222C  6AEE               	clrf	postinc0,c
   257  00222E  06E8               	decf	wreg,f,c
   258  002230  E1FD               	bnz	clear_0
   259                           
   260                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   261  002232  6A42               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   262                           
   263                           ; Clear objects allocated to COMRAM (23 bytes)
   264  002234  EE00  F022         	lfsr	0,__pbssCOMRAM
   265  002238  0E17               	movlw	23
   266  00223A                     clear_1:
   267  00223A  6AEE               	clrf	postinc0,c
   268  00223C  06E8               	decf	wreg,f,c
   269  00223E  E1FD               	bnz	clear_1
   270                           
   271                           ; Initialize objects allocated to BANK0 (8 bytes)
   272                           ; load TBLPTR registers with __pidataBANK0
   273  002240  0E89               	movlw	low __pidataBANK0
   274  002242  6EF6               	movwf	tblptrl,c
   275  002244  0E24               	movlw	high __pidataBANK0
   276  002246  6EF7               	movwf	tblptrh,c
   277  002248  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   278  00224A  6EF8               	movwf	tblptru,c
   279  00224C  EE00  F0B4         	lfsr	0,__pdataBANK0
   280  002250  EE10 F008          	lfsr	1,8
   281  002254                     copy_data0:
   282  002254  0009               	tblrd		*+
   283  002256  CFF5 FFEE          	movff	tablat,postinc0
   284  00225A  50E5               	movf	postdec1,w,c
   285  00225C  50E1               	movf	fsr1l,w,c
   286  00225E  E1FA               	bnz	copy_data0
   287                           
   288                           ; Initialize objects allocated to COMRAM (9 bytes)
   289                           ; load TBLPTR registers with __pidataCOMRAM
   290  002260  0E80               	movlw	low __pidataCOMRAM
   291  002262  6EF6               	movwf	tblptrl,c
   292  002264  0E24               	movlw	high __pidataCOMRAM
   293  002266  6EF7               	movwf	tblptrh,c
   294  002268  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   295  00226A  6EF8               	movwf	tblptru,c
   296  00226C  EE00  F039         	lfsr	0,__pdataCOMRAM
   297  002270  EE10 F009          	lfsr	1,9
   298  002274                     copy_data1:
   299  002274  0009               	tblrd		*+
   300  002276  CFF5 FFEE          	movff	tablat,postinc0
   301  00227A  50E5               	movf	postdec1,w,c
   302  00227C  50E1               	movf	fsr1l,w,c
   303  00227E  E1FA               	bnz	copy_data1
   304  002280                     end_of_initialization:
   305                           	opt stack 0
   306  002280                     __end_of__initialization:
   307                           	opt stack 0
   308  002280  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   309  002282  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   310  002284  0E00               	movlw	low (__Lmediumconst shr (0+16))
   311  002286  6EF8               	movwf	tblptru,c
   312  002288  0100               	movlb	0
   313  00228A  EFEC  F00E         	goto	_main	;jump to C main() function
   314                           tblptru	equ	0xFF8
   315                           tblptrh	equ	0xFF7
   316                           tblptrl	equ	0xFF6
   317                           tablat	equ	0xFF5
   318                           postinc0	equ	0xFEE
   319                           wreg	equ	0xFE8
   320                           postdec1	equ	0xFE5
   321                           fsr1l	equ	0xFE1
   322                           
   323                           	psect	bitbssCOMRAM
   324  000210                     __pbitbssCOMRAM:
   325                           	opt stack 0
   326  000210                     _RTR_Flag:
   327                           	opt stack 0
   328  000210                     	ds	1
   329  000211                     _dir:
   330                           	opt stack 0
   331  000211                     	ds	1
   332  000212                     _newMessageCan:
   333                           	opt stack 0
   334  000212                     	ds	1
   335  000213                     _newMessageUsart:
   336                           	opt stack 0
   337  000213                     	ds	1
   338  000214                     _sendMessage:
   339                           	opt stack 0
   340  000214                     	ds	1
   341                           tblptru	equ	0xFF8
   342                           tblptrh	equ	0xFF7
   343                           tblptrl	equ	0xFF6
   344                           tablat	equ	0xFF5
   345                           postinc0	equ	0xFEE
   346                           wreg	equ	0xFE8
   347                           postdec1	equ	0xFE5
   348                           fsr1l	equ	0xFE1
   349                           
   350                           	psect	bssCOMRAM
   351  000022                     __pbssCOMRAM:
   352                           	opt stack 0
   353  000022                     _id:
   354                           	opt stack 0
   355  000022                     	ds	4
   356  000026                     _previousTimeCounter:
   357                           	opt stack 0
   358  000026                     	ds	4
   359  00002A                     _timeCounter:
   360                           	opt stack 0
   361  00002A                     	ds	4
   362  00002E                     _clock_counter_reference:
   363                           	opt stack 0
   364  00002E                     	ds	2
   365  000030                     _left_speed:
   366                           	opt stack 0
   367  000030                     	ds	2
   368  000032                     _right_speed:
   369                           	opt stack 0
   370  000032                     	ds	2
   371  000034                     _USART_Status:
   372                           	opt stack 0
   373  000034                     	ds	1
   374  000035                     _analogic_brake_old:
   375                           	opt stack 0
   376  000035                     	ds	1
   377  000036                     _buffer:
   378                           	opt stack 0
   379  000036                     	ds	1
   380  000037                     _set_steering_old:
   381                           	opt stack 0
   382  000037                     	ds	1
   383  000038                     _spam_counter:
   384                           	opt stack 0
   385  000038                     	ds	1
   386                           tblptru	equ	0xFF8
   387                           tblptrh	equ	0xFF7
   388                           tblptrl	equ	0xFF6
   389                           tablat	equ	0xFF5
   390                           postinc0	equ	0xFEE
   391                           wreg	equ	0xFE8
   392                           postdec1	equ	0xFE5
   393                           fsr1l	equ	0xFE1
   394                           
   395                           	psect	dataCOMRAM
   396  000039                     __pdataCOMRAM:
   397                           	opt stack 0
   398  000039                     _delay_quartz_frequency_value:
   399                           	opt stack 0
   400  000039                     	ds	1
   401  00003A                     _SerialOutput:
   402                           	opt stack 0
   403  00003A                     	ds	8
   404                           tblptru	equ	0xFF8
   405                           tblptrh	equ	0xFF7
   406                           tblptrl	equ	0xFF6
   407                           tablat	equ	0xFF5
   408                           postinc0	equ	0xFEE
   409                           wreg	equ	0xFE8
   410                           postdec1	equ	0xFE5
   411                           fsr1l	equ	0xFE1
   412                           
   413                           	psect	bssBANK0
   414  000060                     __pbssBANK0:
   415                           	opt stack 0
   416  000060                     _set_speed_old:
   417                           	opt stack 0
   418  000060                     	ds	8
   419  000068                     _USART_Rx:
   420                           	opt stack 0
   421  000068                     	ds	7
   422  00006F                     _msg:
   423                           	opt stack 0
   424  00006F                     	ds	15
   425  00007E                     _analogic_brake:
   426                           	opt stack 0
   427  00007E                     	ds	8
   428  000086                     _data:
   429                           	opt stack 0
   430  000086                     	ds	8
   431  00008E                     _set_speed:
   432                           	opt stack 0
   433  00008E                     	ds	8
   434  000096                     _set_steering:
   435                           	opt stack 0
   436  000096                     	ds	8
   437                           tblptru	equ	0xFF8
   438                           tblptrh	equ	0xFF7
   439                           tblptrl	equ	0xFF6
   440                           tablat	equ	0xFF5
   441                           postinc0	equ	0xFEE
   442                           wreg	equ	0xFE8
   443                           postdec1	equ	0xFE5
   444                           fsr1l	equ	0xFE1
   445                           
   446                           	psect	dataBANK0
   447  0000B4                     __pdataBANK0:
   448                           	opt stack 0
   449  0000B4                     _SerialOutputOld:
   450                           	opt stack 0
   451  0000B4                     	ds	8
   452                           tblptru	equ	0xFF8
   453                           tblptrh	equ	0xFF7
   454                           tblptrl	equ	0xFF6
   455                           tablat	equ	0xFF5
   456                           postinc0	equ	0xFEE
   457                           wreg	equ	0xFE8
   458                           postdec1	equ	0xFE5
   459                           fsr1l	equ	0xFE1
   460                           
   461                           	psect	cstackBANK0
   462  00009E                     __pcstackBANK0:
   463                           	opt stack 0
   464  00009E                     ??_CANSetMask:
   465  00009E                     ??_CANSetFilter:
   466  00009E                     usart_tx@i:
   467                           	opt stack 0
   468  00009E                     ___wmul@product:
   469                           	opt stack 0
   470  00009E                     CANsendMessage@identifier:
   471                           	opt stack 0
   472                           
   473                           ; 4 bytes @ 0x0
   474  00009E                     	ds	1
   475  00009F                     usart_tx@i_3324:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x1
   479  00009F                     	ds	1
   480  0000A0                     usart_tx@i_3341:
   481                           	opt stack 0
   482  0000A0                     delay_ms@value_ms:
   483                           	opt stack 0
   484                           
   485                           ; 2 bytes @ 0x2
   486  0000A0                     	ds	2
   487  0000A2                     CANSetMask@numBuffer:
   488                           	opt stack 0
   489  0000A2                     CANSetFilter@numBuffer:
   490                           	opt stack 0
   491  0000A2                     CANsendMessage@data:
   492                           	opt stack 0
   493                           
   494                           ; 2 bytes @ 0x4
   495  0000A2                     	ds	1
   496  0000A3                     CANSetMask@tamp:
   497                           	opt stack 0
   498  0000A3                     CANSetFilter@tamp:
   499                           	opt stack 0
   500                           
   501                           ; 4 bytes @ 0x5
   502  0000A3                     	ds	1
   503  0000A4                     CANsendMessage@dataLength:
   504                           	opt stack 0
   505                           
   506                           ; 1 bytes @ 0x6
   507  0000A4                     	ds	1
   508  0000A5                     CANsendMessage@flags:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x7
   512  0000A5                     	ds	1
   513  0000A6                     CANsendMessage@tamp:
   514                           	opt stack 0
   515                           
   516                           ; 4 bytes @ 0x8
   517  0000A6                     	ds	1
   518  0000A7                     CANInitialize@phaseSeg1:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0x9
   522  0000A7                     	ds	1
   523  0000A8                     CANInitialize@phaseSeg2:
   524                           	opt stack 0
   525                           
   526                           ; 1 bytes @ 0xA
   527  0000A8                     	ds	1
   528  0000A9                     CANInitialize@SJW:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0xB
   532  0000A9                     	ds	1
   533  0000AA                     ??_can_interpreter:
   534  0000AA                     CANInitialize@BRP:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0xC
   538  0000AA                     	ds	1
   539  0000AB                     CANInitialize@flags:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0xD
   543  0000AB                     	ds	1
   544  0000AC                     ??_CANInitialize:
   545                           
   546                           ; 0 bytes @ 0xE
   547  0000AC                     	ds	4
   548  0000B0                     CANInitialize@propSeg:
   549                           	opt stack 0
   550                           
   551                           ; 1 bytes @ 0x12
   552  0000B0                     	ds	1
   553  0000B1                     CANInitialize@FilterConfig1:
   554                           	opt stack 0
   555                           
   556                           ; 1 bytes @ 0x13
   557  0000B1                     	ds	1
   558  0000B2                     CANInitialize@FilterConfig2:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x14
   562  0000B2                     	ds	1
   563  0000B3                     ??_main:
   564                           
   565                           ; 0 bytes @ 0x15
   566  0000B3                     	ds	1
   567                           tblptru	equ	0xFF8
   568                           tblptrh	equ	0xFF7
   569                           tblptrl	equ	0xFF6
   570                           tablat	equ	0xFF5
   571                           postinc0	equ	0xFEE
   572                           wreg	equ	0xFE8
   573                           postdec1	equ	0xFE5
   574                           fsr1l	equ	0xFE1
   575                           
   576                           	psect	cstackCOMRAM
   577  000001                     __pcstackCOMRAM:
   578                           	opt stack 0
   579  000001                     ??_usart_rx:
   580  000001                     _CANisRxReady$3215:
   581                           	opt stack 0
   582  000001                     CANreceiveMessage@msg:
   583                           	opt stack 0
   584                           
   585                           ; 2 bytes @ 0x0
   586  000001                     	ds	1
   587  000002                     usart_rx@i:
   588                           	opt stack 0
   589                           
   590                           ; 1 bytes @ 0x1
   591  000002                     	ds	1
   592  000003                     ??_CANreceiveMessage:
   593                           
   594                           ; 0 bytes @ 0x2
   595  000003                     	ds	8
   596  00000B                     CANreceiveMessage@error:
   597                           	opt stack 0
   598                           
   599                           ; 1 bytes @ 0xA
   600  00000B                     	ds	1
   601  00000C                     CANreceiveMessage@tamp:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0xB
   605  00000C                     	ds	1
   606  00000D                     ??_ISR_alta:
   607                           
   608                           ; 0 bytes @ 0xC
   609  00000D                     	ds	15
   610  00001C                     ISR_alta@i:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0x1B
   614  00001C                     	ds	1
   615  00001D                     ??_CANsendMessage:
   616  00001D                     ?___wmul:
   617                           	opt stack 0
   618  00001D                     CANOperationMode@mode:
   619                           	opt stack 0
   620  00001D                     _CANisTxReady$3213:
   621                           	opt stack 0
   622  00001D                     WriteUSART@data:
   623                           	opt stack 0
   624  00001D                     OpenUSART@spbrg:
   625                           	opt stack 0
   626  00001D                     ___wmul@multiplier:
   627                           	opt stack 0
   628  00001D                     CANSetMask@mask:
   629                           	opt stack 0
   630  00001D                     CANSetFilter@filter:
   631                           	opt stack 0
   632                           
   633                           ; 4 bytes @ 0x1C
   634  00001D                     	ds	1
   635  00001E                     putsUSART@data:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x1D
   639  00001E                     	ds	1
   640  00001F                     OpenUSART@config:
   641                           	opt stack 0
   642  00001F                     ___wmul@multiplicand:
   643                           	opt stack 0
   644                           
   645                           ; 2 bytes @ 0x1E
   646  00001F                     	ds	1
   647  000020                     ??_usart_tx:
   648  000020                     
   649                           ; 0 bytes @ 0x1F
   650  000020                     	ds	1
   651  000021                     CANSetMask@type:
   652                           	opt stack 0
   653  000021                     CANSetFilter@type:
   654                           	opt stack 0
   655                           
   656                           ; 1 bytes @ 0x20
   657  000021                     	ds	1
   658  000022                     tblptru	equ	0xFF8
   659                           tblptrh	equ	0xFF7
   660                           tblptrl	equ	0xFF6
   661                           tablat	equ	0xFF5
   662                           postinc0	equ	0xFEE
   663                           wreg	equ	0xFE8
   664                           postdec1	equ	0xFE5
   665                           fsr1l	equ	0xFE1
   666                           
   667                           ; 0 bytes @ 0x21
   668 ;;
   669 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   670 ;;
   671 ;; *************** function _main *****************
   672 ;; Defined at:
   673 ;;		line 99 in file "CanToSerial.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;		None               void
   680 ;; Registers used:
   681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   687 ;;      Params:         0       0       0       0
   688 ;;      Locals:         0       0       0       0
   689 ;;      Temps:          0       1       0       0
   690 ;;      Totals:         0       1       0       0
   691 ;;Total ram usage:        1 bytes
   692 ;; Hardware stack levels required when called:    5
   693 ;; This function calls:
   694 ;;		_CANisTxReady
   695 ;;		_CANsendMessage
   696 ;;		_can_interpreter
   697 ;;		_configurazione_iniziale
   698 ;;		_delay_ms
   699 ;;		_usart_interpreter
   700 ;;		_usart_tx
   701 ;; This function is called by:
   702 ;;		Startup code after reset
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           	psect	text0
   707  001DD8                     __ptext0:
   708                           	opt stack 0
   709  001DD8                     _main:
   710                           	opt stack 26
   711                           
   712                           ;CanToSerial.c: 100: configurazione_iniziale();
   713                           
   714                           ;incstack = 0
   715  001DD8  ECC6  F010         	call	_configurazione_iniziale	;wreg free
   716                           
   717                           ;CanToSerial.c: 101: LATDbits.LATD2 = 1;
   718  001DDC  848C               	bsf	3980,2,c	;volatile
   719                           
   720                           ;CanToSerial.c: 102: LATDbits.LATD3 = 1;
   721  001DDE  868C               	bsf	3980,3,c	;volatile
   722                           
   723                           ;CanToSerial.c: 103: LATDbits.LATD0 = 1;
   724  001DE0  808C               	bsf	3980,0,c	;volatile
   725                           
   726                           ;CanToSerial.c: 104: LATDbits.LATD1 = 1;
   727  001DE2  828C               	bsf	3980,1,c	;volatile
   728                           
   729                           ;CanToSerial.c: 105: LATDbits.LATD4 = 1;
   730  001DE4  888C               	bsf	3980,4,c	;volatile
   731                           
   732                           ;CanToSerial.c: 106: LATDbits.LATD6 = 1;
   733  001DE6  8C8C               	bsf	3980,6,c	;volatile
   734                           
   735                           ;CanToSerial.c: 107: LATDbits.LATD5 = 1;
   736  001DE8  8A8C               	bsf	3980,5,c	;volatile
   737                           
   738                           ;CanToSerial.c: 108: delay_ms(500);
   739  001DEA  0E01               	movlw	1
   740  001DEC  0100               	movlb	0	; () banked
   741  001DEE  6FA1               	movwf	(delay_ms@value_ms+1)& (0+255),b
   742  001DF0  0EF4               	movlw	244
   743  001DF2  6FA0               	movwf	delay_ms@value_ms& (0+255),b
   744  001DF4  ECD3  F011         	call	_delay_ms	;wreg free
   745                           
   746                           ;CanToSerial.c: 109: LATDbits.LATD2 = 0;
   747  001DF8  948C               	bcf	3980,2,c	;volatile
   748                           
   749                           ;CanToSerial.c: 110: LATDbits.LATD3 = 0;
   750  001DFA  968C               	bcf	3980,3,c	;volatile
   751                           
   752                           ;CanToSerial.c: 111: LATDbits.LATD0 = 0;
   753  001DFC  908C               	bcf	3980,0,c	;volatile
   754                           
   755                           ;CanToSerial.c: 112: LATDbits.LATD1 = 0;
   756  001DFE  928C               	bcf	3980,1,c	;volatile
   757                           
   758                           ;CanToSerial.c: 113: LATDbits.LATD4 = 0;
   759  001E00  988C               	bcf	3980,4,c	;volatile
   760                           
   761                           ;CanToSerial.c: 114: LATDbits.LATD6 = 0;
   762  001E02  9C8C               	bcf	3980,6,c	;volatile
   763                           
   764                           ;CanToSerial.c: 115: LATDbits.LATD5 = 0;
   765  001E04  9A8C               	bcf	3980,5,c	;volatile
   766  001E06                     l4873:
   767                           
   768                           ;CanToSerial.c: 117: if (newMessageCan == 1) {
   769  001E06  A442               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
   770  001E08  D00B               	goto	l4887
   771                           
   772                           ;CanToSerial.c: 118: can_interpreter();
   773  001E0A  EC1F  F00D         	call	_can_interpreter	;wreg free
   774                           
   775                           ;CanToSerial.c: 119: SerialOutput[0] = 0xAA;
   776  001E0E  0EAA               	movlw	170
   777  001E10  6E3A               	movwf	_SerialOutput,c
   778                           
   779                           ;CanToSerial.c: 120: SerialOutput[6] = 0xAA;
   780  001E12  0EAA               	movlw	170
   781  001E14  6E40               	movwf	_SerialOutput+6,c
   782                           
   783                           ;CanToSerial.c: 121: SerialOutput[7] = '\0';
   784  001E16  0E00               	movlw	0
   785  001E18  6E41               	movwf	_SerialOutput+7,c
   786                           
   787                           ;CanToSerial.c: 122: usart_tx();
   788  001E1A  EC45  F010         	call	_usart_tx	;wreg free
   789                           
   790                           ;CanToSerial.c: 123: newMessageCan = 0;
   791  001E1E  9442               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
   792  001E20                     l4887:
   793                           
   794                           ;CanToSerial.c: 124: }
   795                           ;CanToSerial.c: 126: if (newMessageUsart == 1) {
   796  001E20  A642               	btfss	_newMessageUsart/(0+8),_newMessageUsart& (0+7),c	;volatile
   797  001E22  D7F1               	goto	l4873
   798                           
   799                           ;CanToSerial.c: 127: usart_interpreter();
   800  001E24  ECAB  F011         	call	_usart_interpreter	;wreg free
   801                           
   802                           ;CanToSerial.c: 128: if (set_steering_old != set_steering[0]) {
   803  001E28  5037               	movf	_set_steering_old,w,c	;volatile
   804  001E2A  0100               	movlb	0	; () banked
   805  001E2C  1996               	xorwf	_set_steering& (0+255),w,b
   806  001E2E  B4D8               	btfsc	status,2,c
   807  001E30  D02D               	goto	l4901
   808  001E32                     l4895:
   809  001E32  EC14  F012         	call	_CANisTxReady	;wreg free
   810  001E36  06E8               	decf	wreg,f,c
   811  001E38  A4D8               	btfss	status,2,c
   812  001E3A  D7FB               	goto	l4895
   813                           
   814                           ;CanToSerial.c: 130: CANsendMessage(0b00000000101, set_steering, 8, CAN_CONFIG_STD_MSG &
      +                           CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
   815  001E3C  0E05               	movlw	5
   816  001E3E  0100               	movlb	0	; () banked
   817  001E40  6F9E               	movwf	CANsendMessage@identifier& (0+255),b
   818  001E42  0E00               	movlw	0
   819  001E44  6F9F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   820  001E46  0E00               	movlw	0
   821  001E48  6FA0               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   822  001E4A  0E00               	movlw	0
   823  001E4C  6FA1               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   824  001E4E  0E96               	movlw	low _set_steering
   825  001E50  0100               	movlb	0	; () banked
   826  001E52  6FA2               	movwf	CANsendMessage@data& (0+255),b
   827  001E54  0E00               	movlw	high _set_steering
   828  001E56  0100               	movlb	0	; () banked
   829  001E58  6FA3               	movwf	(CANsendMessage@data+1)& (0+255),b
   830  001E5A  0E08               	movlw	8
   831  001E5C  0100               	movlb	0	; () banked
   832  001E5E  6FA4               	movwf	CANsendMessage@dataLength& (0+255),b
   833  001E60  0EBC               	movlw	188
   834  001E62  0100               	movlb	0	; () banked
   835  001E64  6FA5               	movwf	CANsendMessage@flags& (0+255),b
   836  001E66  EC30  F005         	call	_CANsendMessage	;wreg free
   837                           
   838                           ;CanToSerial.c: 131: LATDbits.LATD2 = ~LATDbits.LATD2;
   839  001E6A  A48C               	btfss	3980,2,c	;volatile
   840  001E6C  D002               	goto	u6640
   841  001E6E  0E01               	movlw	1
   842  001E70  D001               	goto	u6646
   843  001E72                     u6640:
   844  001E72  0E00               	movlw	0
   845  001E74                     u6646:
   846  001E74  0AFF               	xorlw	255
   847  001E76  0100               	movlb	0	; () banked
   848  001E78  6FB3               	movwf	??_main& (0+255),b
   849  001E7A  0100               	movlb	0	; () banked
   850  001E7C  47B3               	rlncf	??_main& (0+255),f,b
   851  001E7E  47B3               	rlncf	??_main& (0+255),f,b
   852  001E80  508C               	movf	3980,w,c	;volatile
   853  001E82  0100               	movlb	0	; () banked
   854  001E84  19B3               	xorwf	??_main& (0+255),w,b
   855  001E86  0BFB               	andlw	-5
   856  001E88  19B3               	xorwf	??_main& (0+255),w,b
   857  001E8A  6E8C               	movwf	3980,c	;volatile
   858  001E8C                     l4901:
   859                           
   860                           ; BSR set to: 0
   861                           ;CanToSerial.c: 132: }
   862                           ;CanToSerial.c: 133: if ((set_speed_old[0] != set_speed[0])&&(set_speed_old[1] != set_sp
      +                          eed[1])) {
   863  001E8C  0100               	movlb	0	; () banked
   864  001E8E  518E               	movf	_set_speed& (0+255),w,b
   865  001E90  0100               	movlb	0	; () banked
   866  001E92  1960               	xorwf	_set_speed_old& (0+255),w,b	;volatile
   867  001E94  B4D8               	btfsc	status,2,c
   868  001E96  D033               	goto	l4913
   869                           
   870                           ; BSR set to: 0
   871  001E98  0100               	movlb	0	; () banked
   872  001E9A  518F               	movf	(_set_speed+1)& (0+255),w,b
   873  001E9C  0100               	movlb	0	; () banked
   874  001E9E  1961               	xorwf	(_set_speed_old+1)& (0+255),w,b	;volatile
   875  001EA0  B4D8               	btfsc	status,2,c
   876  001EA2  D02D               	goto	l4913
   877  001EA4                     l4907:
   878  001EA4  EC14  F012         	call	_CANisTxReady	;wreg free
   879  001EA8  06E8               	decf	wreg,f,c
   880  001EAA  A4D8               	btfss	status,2,c
   881  001EAC  D7FB               	goto	l4907
   882                           
   883                           ;CanToSerial.c: 135: CANsendMessage(0b00000000011, set_speed, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
   884  001EAE  0E03               	movlw	3
   885  001EB0  0100               	movlb	0	; () banked
   886  001EB2  6F9E               	movwf	CANsendMessage@identifier& (0+255),b
   887  001EB4  0E00               	movlw	0
   888  001EB6  6F9F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   889  001EB8  0E00               	movlw	0
   890  001EBA  6FA0               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   891  001EBC  0E00               	movlw	0
   892  001EBE  6FA1               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   893  001EC0  0E8E               	movlw	low _set_speed
   894  001EC2  0100               	movlb	0	; () banked
   895  001EC4  6FA2               	movwf	CANsendMessage@data& (0+255),b
   896  001EC6  0E00               	movlw	high _set_speed
   897  001EC8  0100               	movlb	0	; () banked
   898  001ECA  6FA3               	movwf	(CANsendMessage@data+1)& (0+255),b
   899  001ECC  0E08               	movlw	8
   900  001ECE  0100               	movlb	0	; () banked
   901  001ED0  6FA4               	movwf	CANsendMessage@dataLength& (0+255),b
   902  001ED2  0EBC               	movlw	188
   903  001ED4  0100               	movlb	0	; () banked
   904  001ED6  6FA5               	movwf	CANsendMessage@flags& (0+255),b
   905  001ED8  EC30  F005         	call	_CANsendMessage	;wreg free
   906                           
   907                           ;CanToSerial.c: 136: LATDbits.LATD2 = ~LATDbits.LATD2;
   908  001EDC  A48C               	btfss	3980,2,c	;volatile
   909  001EDE  D002               	goto	u6680
   910  001EE0  0E01               	movlw	1
   911  001EE2  D001               	goto	u6686
   912  001EE4                     u6680:
   913  001EE4  0E00               	movlw	0
   914  001EE6                     u6686:
   915  001EE6  0AFF               	xorlw	255
   916  001EE8  0100               	movlb	0	; () banked
   917  001EEA  6FB3               	movwf	??_main& (0+255),b
   918  001EEC  0100               	movlb	0	; () banked
   919  001EEE  47B3               	rlncf	??_main& (0+255),f,b
   920  001EF0  47B3               	rlncf	??_main& (0+255),f,b
   921  001EF2  508C               	movf	3980,w,c	;volatile
   922  001EF4  0100               	movlb	0	; () banked
   923  001EF6  19B3               	xorwf	??_main& (0+255),w,b
   924  001EF8  0BFB               	andlw	-5
   925  001EFA  19B3               	xorwf	??_main& (0+255),w,b
   926  001EFC  6E8C               	movwf	3980,c	;volatile
   927  001EFE                     l4913:
   928                           
   929                           ; BSR set to: 0
   930                           ;CanToSerial.c: 137: }
   931                           ;CanToSerial.c: 138: if (analogic_brake_old != analogic_brake[0]) {
   932  001EFE  5035               	movf	_analogic_brake_old,w,c	;volatile
   933  001F00  0100               	movlb	0	; () banked
   934  001F02  197E               	xorwf	_analogic_brake& (0+255),w,b
   935  001F04  B4D8               	btfsc	status,2,c
   936  001F06  D030               	goto	l4923
   937                           
   938                           ; BSR set to: 0
   939                           ;CanToSerial.c: 139: analogic_brake[1] = 0x01;
   940  001F08  0E01               	movlw	1
   941  001F0A  0100               	movlb	0	; () banked
   942  001F0C  6F7F               	movwf	(_analogic_brake+1)& (0+255),b
   943  001F0E                     l4917:
   944  001F0E  EC14  F012         	call	_CANisTxReady	;wreg free
   945  001F12  06E8               	decf	wreg,f,c
   946  001F14  A4D8               	btfss	status,2,c
   947  001F16  D7FB               	goto	l4917
   948                           
   949                           ;CanToSerial.c: 141: CANsendMessage(0b00000000100, analogic_brake, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
   950  001F18  0E04               	movlw	4
   951  001F1A  0100               	movlb	0	; () banked
   952  001F1C  6F9E               	movwf	CANsendMessage@identifier& (0+255),b
   953  001F1E  0E00               	movlw	0
   954  001F20  6F9F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   955  001F22  0E00               	movlw	0
   956  001F24  6FA0               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   957  001F26  0E00               	movlw	0
   958  001F28  6FA1               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   959  001F2A  0E7E               	movlw	low _analogic_brake
   960  001F2C  0100               	movlb	0	; () banked
   961  001F2E  6FA2               	movwf	CANsendMessage@data& (0+255),b
   962  001F30  0E00               	movlw	high _analogic_brake
   963  001F32  0100               	movlb	0	; () banked
   964  001F34  6FA3               	movwf	(CANsendMessage@data+1)& (0+255),b
   965  001F36  0E08               	movlw	8
   966  001F38  0100               	movlb	0	; () banked
   967  001F3A  6FA4               	movwf	CANsendMessage@dataLength& (0+255),b
   968  001F3C  0EBC               	movlw	188
   969  001F3E  0100               	movlb	0	; () banked
   970  001F40  6FA5               	movwf	CANsendMessage@flags& (0+255),b
   971  001F42  EC30  F005         	call	_CANsendMessage	;wreg free
   972                           
   973                           ;CanToSerial.c: 142: LATDbits.LATD2 = ~LATDbits.LATD2;
   974  001F46  A48C               	btfss	3980,2,c	;volatile
   975  001F48  D002               	goto	u6710
   976  001F4A  0E01               	movlw	1
   977  001F4C  D001               	goto	u6716
   978  001F4E                     u6710:
   979  001F4E  0E00               	movlw	0
   980  001F50                     u6716:
   981  001F50  0AFF               	xorlw	255
   982  001F52  0100               	movlb	0	; () banked
   983  001F54  6FB3               	movwf	??_main& (0+255),b
   984  001F56  0100               	movlb	0	; () banked
   985  001F58  47B3               	rlncf	??_main& (0+255),f,b
   986  001F5A  47B3               	rlncf	??_main& (0+255),f,b
   987  001F5C  508C               	movf	3980,w,c	;volatile
   988  001F5E  0100               	movlb	0	; () banked
   989  001F60  19B3               	xorwf	??_main& (0+255),w,b
   990  001F62  0BFB               	andlw	-5
   991  001F64  19B3               	xorwf	??_main& (0+255),w,b
   992  001F66  6E8C               	movwf	3980,c	;volatile
   993  001F68                     l4923:
   994                           
   995                           ; BSR set to: 0
   996                           ;CanToSerial.c: 143: }
   997                           ;CanToSerial.c: 144: newMessageUsart = 0;
   998  001F68  9642               	bcf	_newMessageUsart/(0+8),_newMessageUsart& (0+7),c	;volatile
   999                           
  1000                           ; BSR set to: 0
  1001                           
  1002                           ; BSR set to: 0
  1003  001F6A  D74D               	goto	l4873
  1004  001F6C                     __end_of_main:
  1005                           	opt stack 0
  1006                           tblptru	equ	0xFF8
  1007                           tblptrh	equ	0xFF7
  1008                           tblptrl	equ	0xFF6
  1009                           tablat	equ	0xFF5
  1010                           postinc0	equ	0xFEE
  1011                           wreg	equ	0xFE8
  1012                           postdec1	equ	0xFE5
  1013                           fsr1l	equ	0xFE1
  1014                           status	equ	0xFD8
  1015                           
  1016 ;; *************** function _usart_tx *****************
  1017 ;; Defined at:
  1018 ;;		line 242 in file "CanToSerial.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;  i               1    2[BANK0 ] unsigned char 
  1023 ;;  i               1    1[BANK0 ] unsigned char 
  1024 ;;  i               1    0[BANK0 ] unsigned char 
  1025 ;; Return value:  Size  Location     Type
  1026 ;;		None               void
  1027 ;; Registers used:
  1028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1034 ;;      Params:         0       0       0       0
  1035 ;;      Locals:         0       3       0       0
  1036 ;;      Temps:          2       0       0       0
  1037 ;;      Totals:         2       3       0       0
  1038 ;;Total ram usage:        5 bytes
  1039 ;; Hardware stack levels used:    1
  1040 ;; Hardware stack levels required when called:    4
  1041 ;; This function calls:
  1042 ;;		_putsUSART
  1043 ;; This function is called by:
  1044 ;;		_main
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text1
  1049  00208A                     __ptext1:
  1050                           	opt stack 0
  1051  00208A                     _usart_tx:
  1052                           	opt stack 26
  1053                           
  1054                           ;CanToSerial.c: 249: for (char i = 0; i < 6; i++) {
  1055                           
  1056                           ; BSR set to: 0
  1057                           ;incstack = 0
  1058  00208A  0E00               	movlw	0
  1059  00208C  0100               	movlb	0	; () banked
  1060  00208E  6F9E               	movwf	usart_tx@i& (0+255),b
  1061  002090                     l4789:
  1062                           
  1063                           ; BSR set to: 0
  1064  002090  0E05               	movlw	5
  1065  002092  0100               	movlb	0	; () banked
  1066  002094  659E               	cpfsgt	usart_tx@i& (0+255),b
  1067  002096  D001               	goto	l4793
  1068  002098  D01A               	goto	l4801
  1069  00209A                     l4793:
  1070                           
  1071                           ; BSR set to: 0
  1072                           ;CanToSerial.c: 250: if (SerialOutput[i] == 0) {
  1073  00209A  0100               	movlb	0	; () banked
  1074  00209C  519E               	movf	usart_tx@i& (0+255),w,b
  1075  00209E  0D01               	mullw	1
  1076  0020A0  0E3A               	movlw	low _SerialOutput
  1077  0020A2  24F3               	addwf	prodl,w,c
  1078  0020A4  6ED9               	movwf	fsr2l,c
  1079  0020A6  0E00               	movlw	high _SerialOutput
  1080  0020A8  20F4               	addwfc	prodh,w,c
  1081  0020AA  6EDA               	movwf	fsr2h,c
  1082  0020AC  50DF               	movf	indf2,w,c
  1083  0020AE  A4D8               	btfss	status,2,c
  1084  0020B0  D00B               	goto	l4797
  1085                           
  1086                           ; BSR set to: 0
  1087                           ;CanToSerial.c: 251: SerialOutput[i] = 1;
  1088  0020B2  0100               	movlb	0	; () banked
  1089  0020B4  519E               	movf	usart_tx@i& (0+255),w,b
  1090  0020B6  0D01               	mullw	1
  1091  0020B8  0E3A               	movlw	low _SerialOutput
  1092  0020BA  24F3               	addwf	prodl,w,c
  1093  0020BC  6ED9               	movwf	fsr2l,c
  1094  0020BE  0E00               	movlw	high _SerialOutput
  1095  0020C0  20F4               	addwfc	prodh,w,c
  1096  0020C2  6EDA               	movwf	fsr2h,c
  1097  0020C4  0E01               	movlw	1
  1098  0020C6  6EDF               	movwf	indf2,c
  1099  0020C8                     l4797:
  1100                           
  1101                           ; BSR set to: 0
  1102  0020C8  0100               	movlb	0	; () banked
  1103  0020CA  2B9E               	incf	usart_tx@i& (0+255),f,b
  1104  0020CC  D7E1               	goto	l4789
  1105  0020CE                     l4801:
  1106                           
  1107                           ; BSR set to: 0
  1108                           ;CanToSerial.c: 252: }
  1109                           ;CanToSerial.c: 253: }
  1110                           ;CanToSerial.c: 263: spam_counter = 0;
  1111  0020CE  0E00               	movlw	0
  1112  0020D0  6E38               	movwf	_spam_counter,c
  1113                           
  1114                           ;CanToSerial.c: 264: for (char i = 1; i < 6; i++) {
  1115  0020D2  0E01               	movlw	1
  1116  0020D4  0100               	movlb	0	; () banked
  1117  0020D6  6F9F               	movwf	usart_tx@i_3324& (0+255),b
  1118  0020D8                     l4803:
  1119                           
  1120                           ; BSR set to: 0
  1121  0020D8  0E05               	movlw	5
  1122  0020DA  0100               	movlb	0	; () banked
  1123  0020DC  659F               	cpfsgt	usart_tx@i_3324& (0+255),b
  1124  0020DE  D001               	goto	l4807
  1125  0020E0  D019               	goto	l705
  1126  0020E2                     l4807:
  1127                           
  1128                           ; BSR set to: 0
  1129                           ;CanToSerial.c: 265: if (SerialOutput[i] == SerialOutputOld[i]) {
  1130  0020E2  0100               	movlb	0	; () banked
  1131  0020E4  519F               	movf	usart_tx@i_3324& (0+255),w,b
  1132  0020E6  0D01               	mullw	1
  1133  0020E8  0EB4               	movlw	low _SerialOutputOld
  1134  0020EA  24F3               	addwf	prodl,w,c
  1135  0020EC  6ED9               	movwf	fsr2l,c
  1136  0020EE  0E00               	movlw	high _SerialOutputOld
  1137  0020F0  20F4               	addwfc	prodh,w,c
  1138  0020F2  6EDA               	movwf	fsr2h,c
  1139  0020F4  0100               	movlb	0	; () banked
  1140  0020F6  519F               	movf	usart_tx@i_3324& (0+255),w,b
  1141  0020F8  0D01               	mullw	1
  1142  0020FA  0E3A               	movlw	low _SerialOutput
  1143  0020FC  24F3               	addwf	prodl,w,c
  1144  0020FE  6EE1               	movwf	fsr1l,c
  1145  002100  0E00               	movlw	high _SerialOutput
  1146  002102  20F4               	addwfc	prodh,w,c
  1147  002104  6EE2               	movwf	fsr1h,c
  1148  002106  50DE               	movf	postinc2,w,c
  1149  002108  18E6               	xorwf	postinc1,w,c
  1150  00210A  B4D8               	btfsc	status,2,c
  1151                           
  1152                           ; BSR set to: 0
  1153                           ;CanToSerial.c: 266: spam_counter++;
  1154  00210C  2A38               	incf	_spam_counter,f,c
  1155                           
  1156                           ; BSR set to: 0
  1157  00210E  0100               	movlb	0	; () banked
  1158  002110  2B9F               	incf	usart_tx@i_3324& (0+255),f,b
  1159  002112  D7E2               	goto	l4803
  1160  002114                     l705:
  1161                           
  1162                           ; BSR set to: 0
  1163                           ;CanToSerial.c: 267: }
  1164                           ;CanToSerial.c: 268: }
  1165                           ;CanToSerial.c: 269: if (((!TXSTAbits.TRMT) != 1)&&(spam_counter != 5)) {
  1166  002114  A2AC               	btfss	4012,1,c	;volatile
  1167  002116  D037               	goto	l707
  1168                           
  1169                           ; BSR set to: 0
  1170  002118  0E05               	movlw	5
  1171  00211A  1838               	xorwf	_spam_counter,w,c
  1172  00211C  B4D8               	btfsc	status,2,c
  1173  00211E  D033               	goto	l707
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;CanToSerial.c: 270: INTCONbits.GIEH = 0;
  1177  002120  9EF2               	bcf	intcon,7,c	;volatile
  1178                           
  1179                           ;CanToSerial.c: 271: INTCONbits.GIEL = 0;
  1180  002122  9CF2               	bcf	intcon,6,c	;volatile
  1181                           
  1182                           ; BSR set to: 0
  1183                           ;CanToSerial.c: 272: LATDbits.LATD0 = ~LATDbits.LATD0;
  1184  002124  A08C               	btfss	3980,0,c	;volatile
  1185  002126  D002               	goto	u6560
  1186  002128  0E01               	movlw	1
  1187  00212A  D001               	goto	u6566
  1188  00212C                     u6560:
  1189  00212C  0E00               	movlw	0
  1190  00212E                     u6566:
  1191  00212E  0AFF               	xorlw	255
  1192  002130  6E20               	movwf	??_usart_tx& (0+255),c
  1193  002132  508C               	movf	3980,w,c	;volatile
  1194  002134  1820               	xorwf	??_usart_tx,w,c
  1195  002136  0BFE               	andlw	-2
  1196  002138  1820               	xorwf	??_usart_tx,w,c
  1197  00213A  6E8C               	movwf	3980,c	;volatile
  1198                           
  1199                           ; BSR set to: 0
  1200                           ;CanToSerial.c: 273: putsUSART(SerialOutput);
  1201  00213C  0E3A               	movlw	low _SerialOutput
  1202  00213E  6E1E               	movwf	putsUSART@data,c
  1203  002140  0E00               	movlw	high _SerialOutput
  1204  002142  6E1F               	movwf	putsUSART@data+1,c
  1205  002144  EC01  F012         	call	_putsUSART	;wreg free
  1206                           
  1207                           ;CanToSerial.c: 274: for (char i = 0; i < 6; i++) {
  1208  002148  0E00               	movlw	0
  1209  00214A  0100               	movlb	0	; () banked
  1210  00214C  6FA0               	movwf	usart_tx@i_3341& (0+255),b
  1211  00214E                     l4823:
  1212                           
  1213                           ; BSR set to: 0
  1214  00214E  0E05               	movlw	5
  1215  002150  0100               	movlb	0	; () banked
  1216  002152  65A0               	cpfsgt	usart_tx@i_3341& (0+255),b
  1217  002154  D001               	goto	l4827
  1218  002156  D017               	goto	l707
  1219  002158                     l4827:
  1220                           
  1221                           ; BSR set to: 0
  1222                           ;CanToSerial.c: 275: SerialOutputOld[i] = SerialOutput[i];
  1223  002158  0100               	movlb	0	; () banked
  1224  00215A  51A0               	movf	usart_tx@i_3341& (0+255),w,b
  1225  00215C  0D01               	mullw	1
  1226  00215E  0E3A               	movlw	low _SerialOutput
  1227  002160  24F3               	addwf	prodl,w,c
  1228  002162  6ED9               	movwf	fsr2l,c
  1229  002164  0E00               	movlw	high _SerialOutput
  1230  002166  20F4               	addwfc	prodh,w,c
  1231  002168  6EDA               	movwf	fsr2h,c
  1232  00216A  0100               	movlb	0	; () banked
  1233  00216C  51A0               	movf	usart_tx@i_3341& (0+255),w,b
  1234  00216E  0D01               	mullw	1
  1235  002170  0EB4               	movlw	low _SerialOutputOld
  1236  002172  24F3               	addwf	prodl,w,c
  1237  002174  6EE1               	movwf	fsr1l,c
  1238  002176  0E00               	movlw	high _SerialOutputOld
  1239  002178  20F4               	addwfc	prodh,w,c
  1240  00217A  6EE2               	movwf	fsr1h,c
  1241  00217C  CFDF FFE7          	movff	indf2,indf1
  1242                           
  1243                           ; BSR set to: 0
  1244  002180  0100               	movlb	0	; () banked
  1245  002182  2BA0               	incf	usart_tx@i_3341& (0+255),f,b
  1246  002184  D7E4               	goto	l4823
  1247  002186                     l707:
  1248                           
  1249                           ; BSR set to: 0
  1250                           ;CanToSerial.c: 276: }
  1251                           ;CanToSerial.c: 277: }
  1252                           ;CanToSerial.c: 278: INTCONbits.GIEH = 1;
  1253  002186  8EF2               	bsf	intcon,7,c	;volatile
  1254                           
  1255                           ;CanToSerial.c: 279: INTCONbits.GIEL = 1;
  1256  002188  8CF2               	bsf	intcon,6,c	;volatile
  1257                           
  1258                           ; BSR set to: 0
  1259  00218A  0012               	return		;funcret
  1260  00218C                     __end_of_usart_tx:
  1261                           	opt stack 0
  1262                           tblptru	equ	0xFF8
  1263                           tblptrh	equ	0xFF7
  1264                           tblptrl	equ	0xFF6
  1265                           tablat	equ	0xFF5
  1266                           prodh	equ	0xFF4
  1267                           prodl	equ	0xFF3
  1268                           intcon	equ	0xFF2
  1269                           postinc0	equ	0xFEE
  1270                           wreg	equ	0xFE8
  1271                           indf1	equ	0xFE7
  1272                           postinc1	equ	0xFE6
  1273                           postdec1	equ	0xFE5
  1274                           fsr1h	equ	0xFE2
  1275                           fsr1l	equ	0xFE1
  1276                           indf2	equ	0xFDF
  1277                           postinc2	equ	0xFDE
  1278                           fsr2h	equ	0xFDA
  1279                           fsr2l	equ	0xFD9
  1280                           status	equ	0xFD8
  1281                           
  1282 ;; *************** function _putsUSART *****************
  1283 ;; Defined at:
  1284 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uputs.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;  data            2   29[COMRAM] PTR unsigned char 
  1287 ;;		 -> SerialOutput(8), 
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;		None               void
  1292 ;; Registers used:
  1293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1299 ;;      Params:         2       0       0       0
  1300 ;;      Locals:         0       0       0       0
  1301 ;;      Temps:          0       0       0       0
  1302 ;;      Totals:         2       0       0       0
  1303 ;;Total ram usage:        2 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    3
  1306 ;; This function calls:
  1307 ;;		_WriteUSART
  1308 ;; This function is called by:
  1309 ;;		_usart_tx
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           	psect	text2
  1314  002402                     __ptext2:
  1315                           	opt stack 0
  1316  002402                     _putsUSART:
  1317                           	opt stack 26
  1318  002402                     l754:
  1319  002402  A2AC               	btfss	4012,1,c	;volatile
  1320  002404  D7FE               	goto	l754
  1321  002406  C01E  FFD9         	movff	putsUSART@data,fsr2l
  1322  00240A  C01F  FFDA         	movff	putsUSART@data+1,fsr2h
  1323  00240E  50DF               	movf	indf2,w,c
  1324  002410  EC2E  F012         	call	_WriteUSART
  1325  002414  C01E  FFD9         	movff	putsUSART@data,fsr2l
  1326  002418  C01F  FFDA         	movff	putsUSART@data+1,fsr2h
  1327  00241C  4A1E               	infsnz	putsUSART@data,f,c
  1328  00241E  2A1F               	incf	putsUSART@data+1,f,c
  1329  002420  50DF               	movf	indf2,w,c
  1330  002422  B4D8               	btfsc	status,2,c
  1331  002424  0012               	return	
  1332  002426  D7ED               	goto	l754
  1333  002428                     __end_of_putsUSART:
  1334                           	opt stack 0
  1335                           tblptru	equ	0xFF8
  1336                           tblptrh	equ	0xFF7
  1337                           tblptrl	equ	0xFF6
  1338                           tablat	equ	0xFF5
  1339                           prodh	equ	0xFF4
  1340                           prodl	equ	0xFF3
  1341                           intcon	equ	0xFF2
  1342                           postinc0	equ	0xFEE
  1343                           wreg	equ	0xFE8
  1344                           indf1	equ	0xFE7
  1345                           postinc1	equ	0xFE6
  1346                           postdec1	equ	0xFE5
  1347                           fsr1h	equ	0xFE2
  1348                           fsr1l	equ	0xFE1
  1349                           indf2	equ	0xFDF
  1350                           postinc2	equ	0xFDE
  1351                           fsr2h	equ	0xFDA
  1352                           fsr2l	equ	0xFD9
  1353                           status	equ	0xFD8
  1354                           
  1355 ;; *************** function _WriteUSART *****************
  1356 ;; Defined at:
  1357 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uwrite.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;  data            1    wreg     unsigned char 
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;  data            1   28[COMRAM] unsigned char 
  1362 ;; Return value:  Size  Location     Type
  1363 ;;		None               void
  1364 ;; Registers used:
  1365 ;;		wreg
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1371 ;;      Params:         0       0       0       0
  1372 ;;      Locals:         1       0       0       0
  1373 ;;      Temps:          0       0       0       0
  1374 ;;      Totals:         1       0       0       0
  1375 ;;Total ram usage:        1 bytes
  1376 ;; Hardware stack levels used:    1
  1377 ;; Hardware stack levels required when called:    2
  1378 ;; This function calls:
  1379 ;;		Nothing
  1380 ;; This function is called by:
  1381 ;;		_putsUSART
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text3
  1386  00245C                     __ptext3:
  1387                           	opt stack 0
  1388  00245C                     _WriteUSART:
  1389                           	opt stack 26
  1390                           
  1391                           ;incstack = 0
  1392                           ;WriteUSART@data stored from wreg
  1393  00245C  6E1D               	movwf	WriteUSART@data,c
  1394  00245E  ACAC               	btfss	4012,6,c	;volatile
  1395  002460  D003               	goto	l4383
  1396  002462  90AC               	bcf	4012,0,c	;volatile
  1397  002464  B234               	btfsc	_USART_Status,1,c
  1398  002466  80AC               	bsf	4012,0,c	;volatile
  1399  002468                     l4383:
  1400  002468  C01D  FFAD         	movff	WriteUSART@data,4013	;volatile
  1401  00246C  0012               	return		;funcret
  1402  00246E                     __end_of_WriteUSART:
  1403                           	opt stack 0
  1404                           tblptru	equ	0xFF8
  1405                           tblptrh	equ	0xFF7
  1406                           tblptrl	equ	0xFF6
  1407                           tablat	equ	0xFF5
  1408                           prodh	equ	0xFF4
  1409                           prodl	equ	0xFF3
  1410                           intcon	equ	0xFF2
  1411                           postinc0	equ	0xFEE
  1412                           wreg	equ	0xFE8
  1413                           indf1	equ	0xFE7
  1414                           postinc1	equ	0xFE6
  1415                           postdec1	equ	0xFE5
  1416                           fsr1h	equ	0xFE2
  1417                           fsr1l	equ	0xFE1
  1418                           indf2	equ	0xFDF
  1419                           postinc2	equ	0xFDE
  1420                           fsr2h	equ	0xFDA
  1421                           fsr2l	equ	0xFD9
  1422                           status	equ	0xFD8
  1423                           
  1424 ;; *************** function _usart_interpreter *****************
  1425 ;; Defined at:
  1426 ;;		line 193 in file "CanToSerial.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;		None               void
  1433 ;; Registers used:
  1434 ;;		wreg, status,2, status,0
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1440 ;;      Params:         0       0       0       0
  1441 ;;      Locals:         0       0       0       0
  1442 ;;      Temps:          0       0       0       0
  1443 ;;      Totals:         0       0       0       0
  1444 ;;Total ram usage:        0 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; Hardware stack levels required when called:    2
  1447 ;; This function calls:
  1448 ;;		Nothing
  1449 ;; This function is called by:
  1450 ;;		_main
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text4
  1455  002356                     __ptext4:
  1456                           	opt stack 0
  1457  002356                     _usart_interpreter:
  1458                           	opt stack 28
  1459                           
  1460                           ;CanToSerial.c: 195: set_steering_old = set_steering[0];
  1461                           
  1462                           ;incstack = 0
  1463  002356  C096  F037         	movff	_set_steering,_set_steering_old	;volatile
  1464                           
  1465                           ;CanToSerial.c: 196: set_speed_old[0] = set_speed[0];
  1466  00235A  C08E  F060         	movff	_set_speed,_set_speed_old	;volatile
  1467                           
  1468                           ;CanToSerial.c: 197: set_speed_old[1] = set_speed[1];
  1469  00235E  C08F  F061         	movff	_set_speed+1,_set_speed_old+1	;volatile
  1470                           
  1471                           ;CanToSerial.c: 198: analogic_brake_old = analogic_brake[0];
  1472  002362  C07E  F035         	movff	_analogic_brake,_analogic_brake_old	;volatile
  1473                           
  1474                           ;CanToSerial.c: 202: if (USART_Rx[1] == 1) {
  1475  002366  0100               	movlb	0	; () banked
  1476  002368  0569               	decf	(_USART_Rx+1)& (0+255),w,b
  1477  00236A  A4D8               	btfss	status,2,c
  1478  00236C  D003               	goto	l3799
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;CanToSerial.c: 203: set_speed[2] = 0;
  1482  00236E  0E00               	movlw	0
  1483  002370  0100               	movlb	0	; () banked
  1484  002372  6F90               	movwf	(_set_speed+2)& (0+255),b
  1485  002374                     l3799:
  1486                           
  1487                           ; BSR set to: 0
  1488                           ;CanToSerial.c: 204: }
  1489                           ;CanToSerial.c: 205: if (USART_Rx[1] == 2) {
  1490  002374  0E02               	movlw	2
  1491  002376  0100               	movlb	0	; () banked
  1492  002378  1969               	xorwf	(_USART_Rx+1)& (0+255),w,b
  1493  00237A  A4D8               	btfss	status,2,c
  1494  00237C  D003               	goto	l3803
  1495                           
  1496                           ; BSR set to: 0
  1497                           ;CanToSerial.c: 206: set_speed[2] = 1;
  1498  00237E  0E01               	movlw	1
  1499  002380  0100               	movlb	0	; () banked
  1500  002382  6F90               	movwf	(_set_speed+2)& (0+255),b
  1501  002384                     l3803:
  1502                           
  1503                           ; BSR set to: 0
  1504                           ;CanToSerial.c: 207: }
  1505                           ;CanToSerial.c: 210: set_speed[0] = USART_Rx[3];
  1506  002384  C06B  F08E         	movff	_USART_Rx+3,_set_speed
  1507                           
  1508                           ; BSR set to: 0
  1509                           ;CanToSerial.c: 211: set_speed[1] = USART_Rx[2];
  1510  002388  C06A  F08F         	movff	_USART_Rx+2,_set_speed+1
  1511                           
  1512                           ; BSR set to: 0
  1513                           ;CanToSerial.c: 213: if (set_speed [1] == 0b10000000) {
  1514  00238C  0E80               	movlw	128
  1515  00238E  0100               	movlb	0	; () banked
  1516  002390  198F               	xorwf	(_set_speed+1)& (0+255),w,b
  1517  002392  A4D8               	btfss	status,2,c
  1518  002394  D003               	goto	l3811
  1519                           
  1520                           ; BSR set to: 0
  1521                           ;CanToSerial.c: 214: set_speed[1] = 0b00000000;
  1522  002396  0E00               	movlw	0
  1523  002398  0100               	movlb	0	; () banked
  1524  00239A  6F8F               	movwf	(_set_speed+1)& (0+255),b
  1525  00239C                     l3811:
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;CanToSerial.c: 215: }
  1529                           ;CanToSerial.c: 217: set_steering[0] = USART_Rx[4];
  1530  00239C  C06C  F096         	movff	_USART_Rx+4,_set_steering
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;CanToSerial.c: 219: analogic_brake[0] = USART_Rx[5];
  1534  0023A0  C06D  F07E         	movff	_USART_Rx+5,_analogic_brake
  1535                           
  1536                           ; BSR set to: 0
  1537  0023A4  0012               	return		;funcret
  1538  0023A6                     __end_of_usart_interpreter:
  1539                           	opt stack 0
  1540                           tblptru	equ	0xFF8
  1541                           tblptrh	equ	0xFF7
  1542                           tblptrl	equ	0xFF6
  1543                           tablat	equ	0xFF5
  1544                           prodh	equ	0xFF4
  1545                           prodl	equ	0xFF3
  1546                           intcon	equ	0xFF2
  1547                           postinc0	equ	0xFEE
  1548                           wreg	equ	0xFE8
  1549                           indf1	equ	0xFE7
  1550                           postinc1	equ	0xFE6
  1551                           postdec1	equ	0xFE5
  1552                           fsr1h	equ	0xFE2
  1553                           fsr1l	equ	0xFE1
  1554                           indf2	equ	0xFDF
  1555                           postinc2	equ	0xFDE
  1556                           fsr2h	equ	0xFDA
  1557                           fsr2l	equ	0xFD9
  1558                           status	equ	0xFD8
  1559                           
  1560 ;; *************** function _delay_ms *****************
  1561 ;; Defined at:
  1562 ;;		line 61 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  value_ms        2    2[BANK0 ] unsigned int 
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;		None
  1567 ;; Return value:  Size  Location     Type
  1568 ;;		None               void
  1569 ;; Registers used:
  1570 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1576 ;;      Params:         0       2       0       0
  1577 ;;      Locals:         0       0       0       0
  1578 ;;      Temps:          0       0       0       0
  1579 ;;      Totals:         0       2       0       0
  1580 ;;Total ram usage:        2 bytes
  1581 ;; Hardware stack levels used:    1
  1582 ;; Hardware stack levels required when called:    3
  1583 ;; This function calls:
  1584 ;;		___wmul
  1585 ;; This function is called by:
  1586 ;;		_main
  1587 ;;		_delay_s
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           	psect	text5
  1592  0023A6                     __ptext5:
  1593                           	opt stack 0
  1594  0023A6                     _delay_ms:
  1595                           	opt stack 27
  1596                           
  1597                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;incstack = 0
  1601  0023A6  C039  F01D         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  1602  0023AA  6A1E               	clrf	___wmul@multiplier+1,c
  1603  0023AC  C0A0  F01F         	movff	delay_ms@value_ms,___wmul@multiplicand
  1604  0023B0  C0A1  F020         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  1605  0023B4  ECEC  F011         	call	___wmul	;wreg free
  1606  0023B8  C01D  F02E         	movff	?___wmul,_clock_counter_reference	;volatile
  1607  0023BC  C01E  F02F         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  1608                           
  1609                           ;src\delay.c: 75: while (clock_counter_reference) {
  1610  0023C0  D006               	goto	l579
  1611  0023C2                     l4679:
  1612                           
  1613                           ;src\delay.c: 85: _delay(240);
  1614  0023C2  0E50               	movlw	80
  1615  0023C4                     u6727:
  1616  0023C4  2EE8               	decfsz	wreg,f,c
  1617  0023C6  D7FE               	goto	u6727
  1618                           
  1619                           ;src\delay.c: 88: clock_counter_reference--;
  1620  0023C8  062E               	decf	_clock_counter_reference,f,c	;volatile
  1621  0023CA  A0D8               	btfss	status,0,c
  1622  0023CC  062F               	decf	_clock_counter_reference+1,f,c	;volatile
  1623  0023CE                     l579:
  1624  0023CE  502E               	movf	_clock_counter_reference,w,c	;volatile
  1625  0023D0  102F               	iorwf	_clock_counter_reference+1,w,c	;volatile
  1626  0023D2  B4D8               	btfsc	status,2,c
  1627  0023D4  0012               	return	
  1628  0023D6  D7F5               	goto	l4679
  1629  0023D8                     __end_of_delay_ms:
  1630                           	opt stack 0
  1631                           tblptru	equ	0xFF8
  1632                           tblptrh	equ	0xFF7
  1633                           tblptrl	equ	0xFF6
  1634                           tablat	equ	0xFF5
  1635                           prodh	equ	0xFF4
  1636                           prodl	equ	0xFF3
  1637                           intcon	equ	0xFF2
  1638                           postinc0	equ	0xFEE
  1639                           wreg	equ	0xFE8
  1640                           indf1	equ	0xFE7
  1641                           postinc1	equ	0xFE6
  1642                           postdec1	equ	0xFE5
  1643                           fsr1h	equ	0xFE2
  1644                           fsr1l	equ	0xFE1
  1645                           indf2	equ	0xFDF
  1646                           postinc2	equ	0xFDE
  1647                           fsr2h	equ	0xFDA
  1648                           fsr2l	equ	0xFD9
  1649                           status	equ	0xFD8
  1650                           
  1651 ;; *************** function ___wmul *****************
  1652 ;; Defined at:
  1653 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  multiplier      2   28[COMRAM] unsigned int 
  1656 ;;  multiplicand    2   30[COMRAM] unsigned int 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  product         2    0[BANK0 ] unsigned int 
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  2   28[COMRAM] unsigned int 
  1661 ;; Registers used:
  1662 ;;		wreg, status,2, status,0, prodl, prodh
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1668 ;;      Params:         4       0       0       0
  1669 ;;      Locals:         0       2       0       0
  1670 ;;      Temps:          0       0       0       0
  1671 ;;      Totals:         4       2       0       0
  1672 ;;Total ram usage:        6 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    2
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_delay_ms
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text6
  1683  0023D8                     __ptext6:
  1684                           	opt stack 0
  1685  0023D8                     ___wmul:
  1686                           	opt stack 27
  1687                           
  1688                           ;incstack = 0
  1689  0023D8  501D               	movf	___wmul@multiplier,w,c
  1690  0023DA  021F               	mulwf	___wmul@multiplicand,c
  1691  0023DC  CFF3 F09E          	movff	prodl,___wmul@product
  1692  0023E0  CFF4 F09F          	movff	prodh,___wmul@product+1
  1693  0023E4  501D               	movf	___wmul@multiplier,w,c
  1694  0023E6  0220               	mulwf	___wmul@multiplicand+1,c
  1695  0023E8  50F3               	movf	prodl,w,c
  1696  0023EA  0100               	movlb	0	; () banked
  1697  0023EC  279F               	addwf	(___wmul@product+1)& (0+255),f,b
  1698  0023EE  501E               	movf	___wmul@multiplier+1,w,c
  1699  0023F0  021F               	mulwf	___wmul@multiplicand,c
  1700  0023F2  50F3               	movf	prodl,w,c
  1701  0023F4  0100               	movlb	0	; () banked
  1702  0023F6  279F               	addwf	(___wmul@product+1)& (0+255),f,b
  1703                           
  1704                           ; BSR set to: 0
  1705  0023F8  C09E  F01D         	movff	___wmul@product,?___wmul
  1706  0023FC  C09F  F01E         	movff	___wmul@product+1,?___wmul+1
  1707  002400  0012               	return	
  1708  002402                     __end_of___wmul:
  1709                           	opt stack 0
  1710                           tblptru	equ	0xFF8
  1711                           tblptrh	equ	0xFF7
  1712                           tblptrl	equ	0xFF6
  1713                           tablat	equ	0xFF5
  1714                           prodh	equ	0xFF4
  1715                           prodl	equ	0xFF3
  1716                           intcon	equ	0xFF2
  1717                           postinc0	equ	0xFEE
  1718                           wreg	equ	0xFE8
  1719                           indf1	equ	0xFE7
  1720                           postinc1	equ	0xFE6
  1721                           postdec1	equ	0xFE5
  1722                           fsr1h	equ	0xFE2
  1723                           fsr1l	equ	0xFE1
  1724                           indf2	equ	0xFDF
  1725                           postinc2	equ	0xFDE
  1726                           fsr2h	equ	0xFDA
  1727                           fsr2l	equ	0xFD9
  1728                           status	equ	0xFD8
  1729                           
  1730 ;; *************** function _configurazione_iniziale *****************
  1731 ;; Defined at:
  1732 ;;		line 283 in file "CanToSerial.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;		None               void
  1739 ;; Registers used:
  1740 ;;		wreg, status,2, status,0, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1746 ;;      Params:         0       0       0       0
  1747 ;;      Locals:         0       0       0       0
  1748 ;;      Temps:          0       0       0       0
  1749 ;;      Totals:         0       0       0       0
  1750 ;;Total ram usage:        0 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    4
  1753 ;; This function calls:
  1754 ;;		_CANInitialize
  1755 ;;		_OpenUSART
  1756 ;; This function is called by:
  1757 ;;		_main
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           	psect	text7
  1762  00218C                     __ptext7:
  1763                           	opt stack 0
  1764  00218C                     _configurazione_iniziale:
  1765                           	opt stack 26
  1766                           
  1767                           ;CanToSerial.c: 284: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;incstack = 0
  1771  00218C  0E4F               	movlw	79
  1772  00218E  16AB               	andwf	4011,f,c	;volatile
  1773  002190  9AAC               	bcf	4012,5,c	;volatile
  1774  002192  0ECF               	movlw	207
  1775  002194  169D               	andwf	3997,f,c	;volatile
  1776                           
  1777                           ;CanToSerial.c: 285: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFI
      +                          G_SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  1778  002196  0E06               	movlw	6
  1779  002198  0100               	movlb	0	; () banked
  1780  00219A  6FA7               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1781  00219C  0E05               	movlw	5
  1782  00219E  0100               	movlb	0	; () banked
  1783  0021A0  6FA8               	movwf	CANInitialize@phaseSeg2& (0+255),b
  1784  0021A2  0E01               	movlw	1
  1785  0021A4  0100               	movlb	0	; () banked
  1786  0021A6  6FA9               	movwf	CANInitialize@SJW& (0+255),b
  1787  0021A8  0E03               	movlw	3
  1788  0021AA  0100               	movlb	0	; () banked
  1789  0021AC  6FAA               	movwf	CANInitialize@BRP& (0+255),b
  1790  0021AE  0E9D               	movlw	157
  1791  0021B0  0100               	movlb	0	; () banked
  1792  0021B2  6FAB               	movwf	CANInitialize@flags& (0+255),b
  1793  0021B4  0E04               	movlw	4
  1794  0021B6  EC13  F00E         	call	_CANInitialize
  1795                           
  1796                           ;CanToSerial.c: 289: OpenUSART(0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b111
      +                          11111 & 0b11111111, 25);
  1797  0021BA  0E00               	movlw	0
  1798  0021BC  6E1E               	movwf	OpenUSART@spbrg+1,c
  1799  0021BE  0E19               	movlw	25
  1800  0021C0  6E1D               	movwf	OpenUSART@spbrg,c
  1801  0021C2  0E3C               	movlw	60
  1802  0021C4  EC7B  F011         	call	_OpenUSART
  1803                           
  1804                           ;CanToSerial.c: 291: RCSTAbits.SPEN = 1;
  1805  0021C8  8EAB               	bsf	4011,7,c	;volatile
  1806                           
  1807                           ;CanToSerial.c: 294: RCONbits.IPEN = 1;
  1808  0021CA  8ED0               	bsf	4048,7,c	;volatile
  1809                           
  1810                           ;CanToSerial.c: 295: PIR3bits.RXB1IF = 0;
  1811  0021CC  92A4               	bcf	4004,1,c	;volatile
  1812                           
  1813                           ;CanToSerial.c: 296: PIR3bits.RXB0IF = 0;
  1814  0021CE  90A4               	bcf	4004,0,c	;volatile
  1815                           
  1816                           ;CanToSerial.c: 297: PIR1bits.RCIF = 0;
  1817  0021D0  9A9E               	bcf	3998,5,c	;volatile
  1818                           
  1819                           ;CanToSerial.c: 299: IPR3bits.RXB1IP = 1;
  1820  0021D2  82A5               	bsf	4005,1,c	;volatile
  1821                           
  1822                           ;CanToSerial.c: 300: IPR3bits.RXB0IP = 1;
  1823  0021D4  80A5               	bsf	4005,0,c	;volatile
  1824                           
  1825                           ;CanToSerial.c: 301: IPR1bits.RCIP = 1;
  1826  0021D6  8A9F               	bsf	3999,5,c	;volatile
  1827                           
  1828                           ;CanToSerial.c: 303: PIE3bits.RXB1IE = 1;
  1829  0021D8  82A3               	bsf	4003,1,c	;volatile
  1830                           
  1831                           ;CanToSerial.c: 304: PIE3bits.RXB0IE = 1;
  1832  0021DA  80A3               	bsf	4003,0,c	;volatile
  1833                           
  1834                           ;CanToSerial.c: 305: PIE1bits.RCIE = 1;
  1835  0021DC  8A9D               	bsf	3997,5,c	;volatile
  1836                           
  1837                           ;CanToSerial.c: 307: LATA = 0x00;
  1838  0021DE  0E00               	movlw	0
  1839  0021E0  6E89               	movwf	3977,c	;volatile
  1840                           
  1841                           ;CanToSerial.c: 308: TRISA = 0b01111101;
  1842  0021E2  0E7D               	movlw	125
  1843  0021E4  6E92               	movwf	3986,c	;volatile
  1844                           
  1845                           ;CanToSerial.c: 310: LATB = 0x00;
  1846  0021E6  0E00               	movlw	0
  1847  0021E8  6E8A               	movwf	3978,c	;volatile
  1848                           
  1849                           ;CanToSerial.c: 311: TRISB = 0b11111011;
  1850  0021EA  0EFB               	movlw	251
  1851  0021EC  6E93               	movwf	3987,c	;volatile
  1852                           
  1853                           ;CanToSerial.c: 313: LATC = 0x00;
  1854  0021EE  0E00               	movlw	0
  1855  0021F0  6E8B               	movwf	3979,c	;volatile
  1856                           
  1857                           ;CanToSerial.c: 314: TRISC = 0b10111111;
  1858  0021F2  0EBF               	movlw	191
  1859  0021F4  6E94               	movwf	3988,c	;volatile
  1860                           
  1861                           ;CanToSerial.c: 316: LATD = 0x00;
  1862  0021F6  0E00               	movlw	0
  1863  0021F8  6E8C               	movwf	3980,c	;volatile
  1864                           
  1865                           ;CanToSerial.c: 317: TRISD = 0x00;
  1866  0021FA  0E00               	movlw	0
  1867  0021FC  6E95               	movwf	3989,c	;volatile
  1868                           
  1869                           ;CanToSerial.c: 319: LATE = 0x00;
  1870  0021FE  0E00               	movlw	0
  1871  002200  6E8D               	movwf	3981,c	;volatile
  1872                           
  1873                           ;CanToSerial.c: 320: TRISE = 0b00000100;
  1874  002202  0E04               	movlw	4
  1875  002204  6E96               	movwf	3990,c	;volatile
  1876                           
  1877                           ;CanToSerial.c: 322: ADCON1bits.PCFG0 = 1;
  1878  002206  80C1               	bsf	4033,0,c	;volatile
  1879                           
  1880                           ;CanToSerial.c: 323: ADCON1bits.PCFG1 = 1;
  1881  002208  82C1               	bsf	4033,1,c	;volatile
  1882                           
  1883                           ;CanToSerial.c: 324: ADCON1bits.PCFG2 = 1;
  1884  00220A  84C1               	bsf	4033,2,c	;volatile
  1885                           
  1886                           ;CanToSerial.c: 325: ADCON1bits.PCFG3 = 1;
  1887  00220C  86C1               	bsf	4033,3,c	;volatile
  1888                           
  1889                           ;CanToSerial.c: 328: T3CON = 0x01;
  1890  00220E  0E01               	movlw	1
  1891  002210  6EB1               	movwf	4017,c	;volatile
  1892                           
  1893                           ;CanToSerial.c: 329: PIR2bits.TMR3IF = 0;
  1894  002212  92A1               	bcf	4001,1,c	;volatile
  1895                           
  1896                           ;CanToSerial.c: 330: IPR2bits.TMR3IP = 0;
  1897  002214  92A2               	bcf	4002,1,c	;volatile
  1898                           
  1899                           ;CanToSerial.c: 332: TMR3H = 0x63;
  1900  002216  0E63               	movlw	99
  1901  002218  6EB3               	movwf	4019,c	;volatile
  1902                           
  1903                           ;CanToSerial.c: 333: TMR3L = 0xC0;
  1904  00221A  0EC0               	movlw	192
  1905  00221C  6EB2               	movwf	4018,c	;volatile
  1906                           
  1907                           ;CanToSerial.c: 335: PIE2bits.TMR3IE = 1;
  1908  00221E  82A0               	bsf	4000,1,c	;volatile
  1909                           
  1910                           ;CanToSerial.c: 337: INTCONbits.GIEH = 1;
  1911  002220  8EF2               	bsf	intcon,7,c	;volatile
  1912                           
  1913                           ;CanToSerial.c: 338: INTCONbits.GIEL = 1;
  1914  002222  8CF2               	bsf	intcon,6,c	;volatile
  1915  002224  0012               	return		;funcret
  1916  002226                     __end_of_configurazione_iniziale:
  1917                           	opt stack 0
  1918                           tblptru	equ	0xFF8
  1919                           tblptrh	equ	0xFF7
  1920                           tblptrl	equ	0xFF6
  1921                           tablat	equ	0xFF5
  1922                           prodh	equ	0xFF4
  1923                           prodl	equ	0xFF3
  1924                           intcon	equ	0xFF2
  1925                           postinc0	equ	0xFEE
  1926                           wreg	equ	0xFE8
  1927                           indf1	equ	0xFE7
  1928                           postinc1	equ	0xFE6
  1929                           postdec1	equ	0xFE5
  1930                           fsr1h	equ	0xFE2
  1931                           fsr1l	equ	0xFE1
  1932                           indf2	equ	0xFDF
  1933                           postinc2	equ	0xFDE
  1934                           fsr2h	equ	0xFDA
  1935                           fsr2l	equ	0xFD9
  1936                           status	equ	0xFD8
  1937                           
  1938 ;; *************** function _OpenUSART *****************
  1939 ;; Defined at:
  1940 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uopen.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;  config          1    wreg     unsigned char 
  1943 ;;  spbrg           2   28[COMRAM] unsigned int 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  config          1   30[COMRAM] unsigned char 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;		None               void
  1948 ;; Registers used:
  1949 ;;		wreg, status,2
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1955 ;;      Params:         2       0       0       0
  1956 ;;      Locals:         1       0       0       0
  1957 ;;      Temps:          0       0       0       0
  1958 ;;      Totals:         3       0       0       0
  1959 ;;Total ram usage:        3 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; Hardware stack levels required when called:    2
  1962 ;; This function calls:
  1963 ;;		Nothing
  1964 ;; This function is called by:
  1965 ;;		_configurazione_iniziale
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text8
  1970  0022F6                     __ptext8:
  1971                           	opt stack 0
  1972  0022F6                     _OpenUSART:
  1973                           	opt stack 27
  1974                           
  1975                           ;incstack = 0
  1976                           ;OpenUSART@config stored from wreg
  1977  0022F6  6E1F               	movwf	OpenUSART@config,c
  1978  0022F8  0E00               	movlw	0
  1979  0022FA  6EAC               	movwf	4012,c	;volatile
  1980  0022FC  0E00               	movlw	0
  1981  0022FE  6EAB               	movwf	4011,c	;volatile
  1982  002300  B01F               	btfsc	OpenUSART@config,0,c
  1983  002302  88AC               	bsf	4012,4,c	;volatile
  1984  002304  A21F               	btfss	OpenUSART@config,1,c
  1985  002306  D002               	goto	l3419
  1986  002308  8CAC               	bsf	4012,6,c	;volatile
  1987  00230A  8CAB               	bsf	4011,6,c	;volatile
  1988  00230C                     l3419:
  1989  00230C  B41F               	btfsc	OpenUSART@config,2,c
  1990  00230E  8EAC               	bsf	4012,7,c	;volatile
  1991  002310  A61F               	btfss	OpenUSART@config,3,c
  1992  002312  D002               	goto	l737
  1993  002314  88AB               	bsf	4011,4,c	;volatile
  1994  002316  D001               	goto	l3427
  1995  002318                     l737:
  1996  002318  8AAB               	bsf	4011,5,c	;volatile
  1997  00231A                     l3427:
  1998  00231A  B81F               	btfsc	OpenUSART@config,4,c
  1999  00231C  84AC               	bsf	4012,2,c	;volatile
  2000  00231E  989E               	bcf	3998,4,c	;volatile
  2001  002320  BA1F               	btfsc	OpenUSART@config,5,c
  2002  002322  86AB               	bsf	4011,3,c	;volatile
  2003  002324  AC1F               	btfss	OpenUSART@config,6,c
  2004  002326  D002               	goto	l741
  2005  002328  8A9D               	bsf	3997,5,c	;volatile
  2006  00232A  D001               	goto	l742
  2007  00232C                     l741:
  2008  00232C  9A9D               	bcf	3997,5,c	;volatile
  2009  00232E                     l742:
  2010  00232E  9A9E               	bcf	3998,5,c	;volatile
  2011  002330  AE1F               	btfss	OpenUSART@config,7,c
  2012  002332  D002               	goto	l743
  2013  002334  889D               	bsf	3997,4,c	;volatile
  2014  002336  D001               	goto	l744
  2015  002338                     l743:
  2016  002338  989D               	bcf	3997,4,c	;volatile
  2017  00233A                     l744:
  2018  00233A  C01D  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2019  00233E  501E               	movf	OpenUSART@spbrg+1,w,c
  2020  002340  6EB0               	movwf	4016,c	;volatile
  2021  002342  8AAC               	bsf	4012,5,c	;volatile
  2022  002344  8EAB               	bsf	4011,7,c	;volatile
  2023  002346  9C94               	bcf	3988,6,c	;volatile
  2024  002348  8E94               	bsf	3988,7,c	;volatile
  2025  00234A  A8AC               	btfss	4012,4,c	;volatile
  2026  00234C  0012               	return	
  2027  00234E  BEAC               	btfsc	4012,7,c	;volatile
  2028  002350  0012               	return	
  2029  002352  8C94               	bsf	3988,6,c	;volatile
  2030  002354  0012               	return	
  2031  002356                     __end_of_OpenUSART:
  2032                           	opt stack 0
  2033                           tblptru	equ	0xFF8
  2034                           tblptrh	equ	0xFF7
  2035                           tblptrl	equ	0xFF6
  2036                           tablat	equ	0xFF5
  2037                           prodh	equ	0xFF4
  2038                           prodl	equ	0xFF3
  2039                           intcon	equ	0xFF2
  2040                           postinc0	equ	0xFEE
  2041                           wreg	equ	0xFE8
  2042                           indf1	equ	0xFE7
  2043                           postinc1	equ	0xFE6
  2044                           postdec1	equ	0xFE5
  2045                           fsr1h	equ	0xFE2
  2046                           fsr1l	equ	0xFE1
  2047                           indf2	equ	0xFDF
  2048                           postinc2	equ	0xFDE
  2049                           fsr2h	equ	0xFDA
  2050                           fsr2l	equ	0xFD9
  2051                           status	equ	0xFD8
  2052                           
  2053 ;; *************** function _CANInitialize *****************
  2054 ;; Defined at:
  2055 ;;		line 219 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;  propSeg         1    wreg     unsigned char 
  2058 ;;  phaseSeg1       1    9[BANK0 ] unsigned char 
  2059 ;;  phaseSeg2       1   10[BANK0 ] unsigned char 
  2060 ;;  SJW             1   11[BANK0 ] unsigned char 
  2061 ;;  BRP             1   12[BANK0 ] unsigned char 
  2062 ;;  flags           1   13[BANK0 ] enum E16844
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;  propSeg         1   18[BANK0 ] unsigned char 
  2065 ;;  FilterConfig    1   20[BANK0 ] unsigned char 
  2066 ;;  FilterConfig    1   19[BANK0 ] unsigned char 
  2067 ;; Return value:  Size  Location     Type
  2068 ;;		None               void
  2069 ;; Registers used:
  2070 ;;		wreg, status,2, status,0, cstack
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2076 ;;      Params:         0       5       0       0
  2077 ;;      Locals:         0       3       0       0
  2078 ;;      Temps:          0       4       0       0
  2079 ;;      Totals:         0      12       0       0
  2080 ;;Total ram usage:       12 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; Hardware stack levels required when called:    3
  2083 ;; This function calls:
  2084 ;;		_CANOperationMode
  2085 ;;		_CANSetFilter
  2086 ;;		_CANSetMask
  2087 ;; This function is called by:
  2088 ;;		_configurazione_iniziale
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text9
  2093  001C26                     __ptext9:
  2094                           	opt stack 0
  2095  001C26                     _CANInitialize:
  2096                           	opt stack 26
  2097                           
  2098                           ;incstack = 0
  2099                           ;CANInitialize@propSeg stored from wreg
  2100  001C26  0100               	movlb	0	; () banked
  2101  001C28  6FB0               	movwf	CANInitialize@propSeg& (0+255),b
  2102                           
  2103                           ;inc\CANlib.h: 221: BYTE FilterConfig1;
  2104                           ;inc\CANlib.h: 222: BYTE FilterConfig2;
  2105                           ;inc\CANlib.h: 224: CANOperationMode(CAN_OP_MODE_CONFIG);
  2106  001C2A  0E80               	movlw	128
  2107  001C2C  EC37  F012         	call	_CANOperationMode
  2108                           
  2109                           ;inc\CANlib.h: 226: BRGCON1 = 0x00;
  2110  001C30  0E00               	movlw	0
  2111  001C32  6E70               	movwf	3952,c	;volatile
  2112                           
  2113                           ;inc\CANlib.h: 227: BRGCON2 = 0x00;
  2114  001C34  0E00               	movlw	0
  2115  001C36  6E71               	movwf	3953,c	;volatile
  2116                           
  2117                           ;inc\CANlib.h: 228: BRGCON3 = 0x00;
  2118  001C38  0E00               	movlw	0
  2119  001C3A  6E72               	movwf	3954,c	;volatile
  2120                           
  2121                           ;inc\CANlib.h: 230: SJW= SJW << 6;
  2122  001C3C  0100               	movlb	0	; () banked
  2123  001C3E  41A9               	rrncf	CANInitialize@SJW& (0+255),w,b
  2124  001C40  42E8               	rrncf	wreg,f,c
  2125  001C42  0BC0               	andlw	192
  2126  001C44  0100               	movlb	0	; () banked
  2127  001C46  6FA9               	movwf	CANInitialize@SJW& (0+255),b
  2128                           
  2129                           ; BSR set to: 0
  2130                           ;inc\CANlib.h: 231: BRGCON1 |= SJW;
  2131  001C48  0100               	movlb	0	; () banked
  2132  001C4A  51A9               	movf	CANInitialize@SJW& (0+255),w,b
  2133  001C4C  1270               	iorwf	3952,f,c	;volatile
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;inc\CANlib.h: 232: BRGCON1 |= BRP;
  2137  001C4E  0100               	movlb	0	; () banked
  2138  001C50  51AA               	movf	CANInitialize@BRP& (0+255),w,b
  2139  001C52  1270               	iorwf	3952,f,c	;volatile
  2140                           
  2141                           ; BSR set to: 0
  2142                           ;inc\CANlib.h: 234: BRGCON2 |= propSeg;
  2143  001C54  0100               	movlb	0	; () banked
  2144  001C56  51B0               	movf	CANInitialize@propSeg& (0+255),w,b
  2145  001C58  1271               	iorwf	3953,f,c	;volatile
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;inc\CANlib.h: 235: phaseSeg1 = phaseSeg1 <<3;
  2149  001C5A  0100               	movlb	0	; () banked
  2150  001C5C  39A7               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2151  001C5E  42E8               	rrncf	wreg,f,c
  2152  001C60  0BF8               	andlw	248
  2153  001C62  0100               	movlb	0	; () banked
  2154  001C64  6FA7               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2155                           
  2156                           ; BSR set to: 0
  2157                           ;inc\CANlib.h: 236: BRGCON2 |= phaseSeg1;
  2158  001C66  0100               	movlb	0	; () banked
  2159  001C68  51A7               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2160  001C6A  1271               	iorwf	3953,f,c	;volatile
  2161                           
  2162                           ; BSR set to: 0
  2163                           ;inc\CANlib.h: 238: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2164  001C6C  0100               	movlb	0	; () banked
  2165  001C6E  A5AB               	btfss	CANInitialize@flags& (0+255),2,b
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;inc\CANlib.h: 239: BRGCON2bits.SAM= 1;
  2169  001C70  8C71               	bsf	3953,6,c	;volatile
  2170                           
  2171                           ; BSR set to: 0
  2172                           ;inc\CANlib.h: 241: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2173  001C72  0100               	movlb	0	; () banked
  2174  001C74  B1AB               	btfsc	CANInitialize@flags& (0+255),0,b
  2175                           
  2176                           ; BSR set to: 0
  2177                           ;inc\CANlib.h: 242: BRGCON2bits.SEG2PHTS = 1;
  2178  001C76  8E71               	bsf	3953,7,c	;volatile
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;inc\CANlib.h: 244: BRGCON3 |= phaseSeg2;
  2182                           
  2183                           ; BSR set to: 0
  2184  001C78  0100               	movlb	0	; () banked
  2185  001C7A  51A8               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2186  001C7C  1272               	iorwf	3954,f,c	;volatile
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;inc\CANlib.h: 246: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2190  001C7E  0100               	movlb	0	; () banked
  2191  001C80  B3AB               	btfsc	CANInitialize@flags& (0+255),1,b
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;inc\CANlib.h: 247: BRGCON3bits.WAKFIL = 1;
  2195  001C82  8C72               	bsf	3954,6,c	;volatile
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;inc\CANlib.h: 252: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2199                           
  2200                           ; BSR set to: 0
  2201  001C84  0100               	movlb	0	; () banked
  2202  001C86  51AB               	movf	CANInitialize@flags& (0+255),w,b
  2203  001C88  0B60               	andlw	96
  2204  001C8A  6E60               	movwf	3936,c	;volatile
  2205                           
  2206                           ;inc\CANlib.h: 253: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  2207  001C8C  0100               	movlb	0	; () banked
  2208  001C8E  51AB               	movf	CANInitialize@flags& (0+255),w,b
  2209  001C90  0B10               	andlw	16
  2210  001C92  0AFF               	xorlw	255
  2211  001C94  B4D8               	btfsc	status,2,c
  2212                           
  2213                           ; BSR set to: 0
  2214                           ;inc\CANlib.h: 254: RXB0CONbits.RXB0DBEN = 1;
  2215  001C96  8460               	bsf	3936,2,c	;volatile
  2216                           
  2217                           ; BSR set to: 0
  2218                           ;inc\CANlib.h: 256: RXB1CON = RXB0CON;
  2219  001C98  CF60 FF50          	movff	3936,3920	;volatile
  2220                           
  2221                           ; BSR set to: 0
  2222                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2223  001C9C  0E00               	movlw	0
  2224  001C9E  6E1D               	movwf	CANSetMask@mask,c
  2225  001CA0  0E00               	movlw	0
  2226  001CA2  6E1E               	movwf	CANSetMask@mask+1,c
  2227  001CA4  0E00               	movlw	0
  2228  001CA6  6E1F               	movwf	CANSetMask@mask+2,c
  2229  001CA8  0E00               	movlw	0
  2230  001CAA  6E20               	movwf	CANSetMask@mask+3,c
  2231  001CAC  0EF7               	movlw	247
  2232  001CAE  6E21               	movwf	CANSetMask@type,c
  2233  001CB0  0E01               	movlw	1
  2234  001CB2  EC70  F00B         	call	_CANSetMask
  2235                           
  2236                           ;inc\CANlib.h: 261: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2237  001CB6  0E00               	movlw	0
  2238  001CB8  6E1D               	movwf	CANSetMask@mask,c
  2239  001CBA  0E00               	movlw	0
  2240  001CBC  6E1E               	movwf	CANSetMask@mask+1,c
  2241  001CBE  0E00               	movlw	0
  2242  001CC0  6E1F               	movwf	CANSetMask@mask+2,c
  2243  001CC2  0E00               	movlw	0
  2244  001CC4  6E20               	movwf	CANSetMask@mask+3,c
  2245  001CC6  0EF7               	movlw	247
  2246  001CC8  6E21               	movwf	CANSetMask@type,c
  2247  001CCA  0E02               	movlw	2
  2248  001CCC  EC70  F00B         	call	_CANSetMask
  2249                           
  2250                           ;inc\CANlib.h: 264: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2251  001CD0  D00F               	goto	l4429
  2252  001CD2                     l4423:
  2253                           
  2254                           ;inc\CANlib.h: 267: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2255  001CD2  0EF7               	movlw	247
  2256  001CD4  0100               	movlb	0	; () banked
  2257  001CD6  6FB1               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2258  001CD8  D007               	goto	l4425
  2259  001CDA                     l368:
  2260                           
  2261                           ; BSR set to: 0
  2262                           ;inc\CANlib.h: 272: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2263  001CDA  0100               	movlb	0	; () banked
  2264  001CDC  69B1               	setf	CANInitialize@FilterConfig1& (0+255),b
  2265                           
  2266                           ;inc\CANlib.h: 273: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2267  001CDE  0100               	movlb	0	; () banked
  2268  001CE0  69B2               	setf	CANInitialize@FilterConfig2& (0+255),b
  2269                           
  2270                           ;inc\CANlib.h: 274: break;
  2271  001CE2  D028               	goto	l4431
  2272  001CE4                     l369:
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;inc\CANlib.h: 276: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2276  001CE4  0100               	movlb	0	; () banked
  2277  001CE6  69B1               	setf	CANInitialize@FilterConfig1& (0+255),b
  2278  001CE8                     l4425:
  2279                           
  2280                           ; BSR set to: 0
  2281                           ;inc\CANlib.h: 277: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2282  001CE8  0EF7               	movlw	247
  2283  001CEA  0100               	movlb	0	; () banked
  2284  001CEC  6FB2               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;inc\CANlib.h: 279: }
  2288                           
  2289                           ;inc\CANlib.h: 278: break;
  2290  001CEE  D022               	goto	l4431
  2291  001CF0                     l4429:
  2292  001CF0  0E9F               	movlw	159
  2293  001CF2  0100               	movlb	0	; () banked
  2294  001CF4  6FAC               	movwf	??_CANInitialize& (0+255),b
  2295  001CF6  0EFF               	movlw	255
  2296  001CF8  0100               	movlb	0	; () banked
  2297  001CFA  6FAD               	movwf	(??_CANInitialize+1)& (0+255),b
  2298  001CFC  0100               	movlb	0	; () banked
  2299  001CFE  51AB               	movf	CANInitialize@flags& (0+255),w,b
  2300  001D00  0B60               	andlw	96
  2301  001D02  0100               	movlb	0	; () banked
  2302  001D04  6FAE               	movwf	(??_CANInitialize+2)& (0+255),b
  2303  001D06  6BAF               	clrf	(??_CANInitialize+3)& (0+255),b
  2304  001D08  0100               	movlb	0	; () banked
  2305  001D0A  51AC               	movf	??_CANInitialize& (0+255),w,b
  2306  001D0C  0100               	movlb	0	; () banked
  2307  001D0E  13AE               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2308  001D10  0100               	movlb	0	; () banked
  2309  001D12  51AD               	movf	(??_CANInitialize+1)& (0+255),w,b
  2310  001D14  0100               	movlb	0	; () banked
  2311  001D16  13AF               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2312                           
  2313                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2314                           ; Switch size 1, requested type "space"
  2315                           ; Number of cases is 1, Range of values is 0 to 0
  2316                           ; switch strategies available:
  2317                           ; Name         Instructions Cycles
  2318                           ; simple_byte            4     3 (average)
  2319                           ;	Chosen strategy is simple_byte
  2320  001D18  0100               	movlb	0	; () banked
  2321  001D1A  51AF               	movf	(??_CANInitialize+3)& (0+255),w,b
  2322  001D1C  0A00               	xorlw	0	; case 0
  2323  001D1E  A4D8               	btfss	status,2,c
  2324  001D20  D7E1               	goto	l369
  2325                           
  2326                           ; BSR set to: 0
  2327                           ; Switch size 1, requested type "space"
  2328                           ; Number of cases is 2, Range of values is 191 to 223
  2329                           ; switch strategies available:
  2330                           ; Name         Instructions Cycles
  2331                           ; simple_byte            7     4 (average)
  2332                           ;	Chosen strategy is simple_byte
  2333  001D22  0100               	movlb	0	; () banked
  2334  001D24  51AE               	movf	(??_CANInitialize+2)& (0+255),w,b
  2335  001D26  0ABF               	xorlw	191	; case 191
  2336  001D28  B4D8               	btfsc	status,2,c
  2337  001D2A  D7D7               	goto	l368
  2338  001D2C  0A60               	xorlw	96	; case 223
  2339  001D2E  B4D8               	btfsc	status,2,c
  2340  001D30  D7D0               	goto	l4423
  2341  001D32  D7D8               	goto	l369
  2342  001D34                     l4431:
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2346  001D34  0E00               	movlw	0
  2347  001D36  6E1D               	movwf	CANSetFilter@filter,c
  2348  001D38  0E00               	movlw	0
  2349  001D3A  6E1E               	movwf	CANSetFilter@filter+1,c
  2350  001D3C  0E00               	movlw	0
  2351  001D3E  6E1F               	movwf	CANSetFilter@filter+2,c
  2352  001D40  0E00               	movlw	0
  2353  001D42  6E20               	movwf	CANSetFilter@filter+3,c
  2354  001D44  C0B1  F021         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2355  001D48  0E00               	movlw	0
  2356  001D4A  EC0D  F000         	call	_CANSetFilter
  2357                           
  2358                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2359  001D4E  0E00               	movlw	0
  2360  001D50  6E1D               	movwf	CANSetFilter@filter,c
  2361  001D52  0E00               	movlw	0
  2362  001D54  6E1E               	movwf	CANSetFilter@filter+1,c
  2363  001D56  0E00               	movlw	0
  2364  001D58  6E1F               	movwf	CANSetFilter@filter+2,c
  2365  001D5A  0E00               	movlw	0
  2366  001D5C  6E20               	movwf	CANSetFilter@filter+3,c
  2367  001D5E  C0B1  F021         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2368  001D62  0E01               	movlw	1
  2369  001D64  EC0D  F000         	call	_CANSetFilter
  2370                           
  2371                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2372  001D68  0E00               	movlw	0
  2373  001D6A  6E1D               	movwf	CANSetFilter@filter,c
  2374  001D6C  0E00               	movlw	0
  2375  001D6E  6E1E               	movwf	CANSetFilter@filter+1,c
  2376  001D70  0E00               	movlw	0
  2377  001D72  6E1F               	movwf	CANSetFilter@filter+2,c
  2378  001D74  0E00               	movlw	0
  2379  001D76  6E20               	movwf	CANSetFilter@filter+3,c
  2380  001D78  C0B2  F021         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2381  001D7C  0E02               	movlw	2
  2382  001D7E  EC0D  F000         	call	_CANSetFilter
  2383                           
  2384                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2385  001D82  0E00               	movlw	0
  2386  001D84  6E1D               	movwf	CANSetFilter@filter,c
  2387  001D86  0E00               	movlw	0
  2388  001D88  6E1E               	movwf	CANSetFilter@filter+1,c
  2389  001D8A  0E00               	movlw	0
  2390  001D8C  6E1F               	movwf	CANSetFilter@filter+2,c
  2391  001D8E  0E00               	movlw	0
  2392  001D90  6E20               	movwf	CANSetFilter@filter+3,c
  2393  001D92  C0B2  F021         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2394  001D96  0E03               	movlw	3
  2395  001D98  EC0D  F000         	call	_CANSetFilter
  2396                           
  2397                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  2398  001D9C  0E00               	movlw	0
  2399  001D9E  6E1D               	movwf	CANSetFilter@filter,c
  2400  001DA0  0E00               	movlw	0
  2401  001DA2  6E1E               	movwf	CANSetFilter@filter+1,c
  2402  001DA4  0E00               	movlw	0
  2403  001DA6  6E1F               	movwf	CANSetFilter@filter+2,c
  2404  001DA8  0E00               	movlw	0
  2405  001DAA  6E20               	movwf	CANSetFilter@filter+3,c
  2406  001DAC  C0B2  F021         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2407  001DB0  0E04               	movlw	4
  2408  001DB2  EC0D  F000         	call	_CANSetFilter
  2409                           
  2410                           ;inc\CANlib.h: 286: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  2411  001DB6  0E00               	movlw	0
  2412  001DB8  6E1D               	movwf	CANSetFilter@filter,c
  2413  001DBA  0E00               	movlw	0
  2414  001DBC  6E1E               	movwf	CANSetFilter@filter+1,c
  2415  001DBE  0E00               	movlw	0
  2416  001DC0  6E1F               	movwf	CANSetFilter@filter+2,c
  2417  001DC2  0E00               	movlw	0
  2418  001DC4  6E20               	movwf	CANSetFilter@filter+3,c
  2419  001DC6  C0B2  F021         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2420  001DCA  0E05               	movlw	5
  2421  001DCC  EC0D  F000         	call	_CANSetFilter
  2422                           
  2423                           ;inc\CANlib.h: 288: CANOperationMode(CAN_OP_MODE_NORMAL);
  2424  001DD0  0E00               	movlw	0
  2425  001DD2  EC37  F012         	call	_CANOperationMode
  2426  001DD6  0012               	return		;funcret
  2427  001DD8                     __end_of_CANInitialize:
  2428                           	opt stack 0
  2429                           tblptru	equ	0xFF8
  2430                           tblptrh	equ	0xFF7
  2431                           tblptrl	equ	0xFF6
  2432                           tablat	equ	0xFF5
  2433                           prodh	equ	0xFF4
  2434                           prodl	equ	0xFF3
  2435                           intcon	equ	0xFF2
  2436                           postinc0	equ	0xFEE
  2437                           wreg	equ	0xFE8
  2438                           indf1	equ	0xFE7
  2439                           postinc1	equ	0xFE6
  2440                           postdec1	equ	0xFE5
  2441                           fsr1h	equ	0xFE2
  2442                           fsr1l	equ	0xFE1
  2443                           indf2	equ	0xFDF
  2444                           postinc2	equ	0xFDE
  2445                           fsr2h	equ	0xFDA
  2446                           fsr2l	equ	0xFD9
  2447                           status	equ	0xFD8
  2448                           
  2449 ;; *************** function _CANSetMask *****************
  2450 ;; Defined at:
  2451 ;;		line 641 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  numBuffer       1    wreg     enum E16878
  2454 ;;  mask            4   28[COMRAM] unsigned long 
  2455 ;;  type            1   32[COMRAM] enum E16844
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;  numBuffer       1    4[BANK0 ] enum E16878
  2458 ;;  tamp            4    5[BANK0 ] unsigned long 
  2459 ;; Return value:  Size  Location     Type
  2460 ;;		None               void
  2461 ;; Registers used:
  2462 ;;		wreg, status,2, status,0
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2468 ;;      Params:         5       0       0       0
  2469 ;;      Locals:         0       5       0       0
  2470 ;;      Temps:          0       4       0       0
  2471 ;;      Totals:         5       9       0       0
  2472 ;;Total ram usage:       14 bytes
  2473 ;; Hardware stack levels used:    1
  2474 ;; Hardware stack levels required when called:    2
  2475 ;; This function calls:
  2476 ;;		Nothing
  2477 ;; This function is called by:
  2478 ;;		_CANInitialize
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           	psect	text10
  2483  0016E0                     __ptext10:
  2484                           	opt stack 0
  2485  0016E0                     _CANSetMask:
  2486                           	opt stack 26
  2487                           
  2488                           ;incstack = 0
  2489                           ;CANSetMask@numBuffer stored from wreg
  2490  0016E0  0100               	movlb	0	; () banked
  2491  0016E2  6FA2               	movwf	CANSetMask@numBuffer& (0+255),b
  2492                           
  2493                           ;inc\CANlib.h: 644: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  2494  0016E4  0100               	movlb	0	; () banked
  2495  0016E6  05A2               	decf	CANSetMask@numBuffer& (0+255),w,b
  2496  0016E8  A4D8               	btfss	status,2,c
  2497  0016EA  D051               	goto	l3985
  2498                           
  2499                           ; BSR set to: 0
  2500  0016EC  2821               	incf	CANSetMask@type,w,c
  2501  0016EE  A4D8               	btfss	status,2,c
  2502  0016F0  D04E               	goto	l3985
  2503                           
  2504                           ; BSR set to: 0
  2505                           ;inc\CANlib.h: 645: {
  2506                           ;inc\CANlib.h: 646: tamp = (mask >> 3);
  2507  0016F2  C01D  F09E         	movff	CANSetMask@mask,??_CANSetMask
  2508  0016F6  C01E  F09F         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2509  0016FA  C01F  F0A0         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2510  0016FE  C020  F0A1         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2511  001702  0E04               	movlw	4
  2512  001704  D006               	goto	u4900
  2513  001706                     u4905:
  2514  001706  0100               	movlb	0	; () banked
  2515  001708  90D8               	bcf	status,0,c
  2516  00170A  33A1               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2517  00170C  33A0               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2518  00170E  339F               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2519  001710  339E               	rrcf	??_CANSetMask& (0+255),f,b
  2520  001712                     u4900:
  2521  001712  2EE8               	decfsz	wreg,f,c
  2522  001714  D7F8               	goto	u4905
  2523  001716  C09E  F0A3         	movff	??_CANSetMask,CANSetMask@tamp
  2524  00171A  C09F  F0A4         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2525  00171E  C0A0  F0A5         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2526  001722  C0A1  F0A6         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2527                           
  2528                           ; BSR set to: 0
  2529                           ;inc\CANlib.h: 647: tamp = tamp & 0x000000FF;
  2530  001726  0100               	movlb	0	; () banked
  2531  001728  51A3               	movf	CANSetMask@tamp& (0+255),w,b
  2532  00172A  0100               	movlb	0	; () banked
  2533  00172C  6FA3               	movwf	CANSetMask@tamp& (0+255),b
  2534  00172E  6BA4               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2535  001730  6BA5               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2536  001732  6BA6               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2537                           
  2538                           ; BSR set to: 0
  2539                           ;inc\CANlib.h: 648: RXM0SIDH = (unsigned char) tamp;
  2540  001734  C0A3  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2541                           
  2542                           ; BSR set to: 0
  2543                           ;inc\CANlib.h: 650: tamp = mask & 0x00000007;
  2544  001738  0E07               	movlw	7
  2545  00173A  141D               	andwf	CANSetMask@mask,w,c
  2546  00173C  0100               	movlb	0	; () banked
  2547  00173E  6FA3               	movwf	CANSetMask@tamp& (0+255),b
  2548  001740  0E00               	movlw	0
  2549  001742  141E               	andwf	CANSetMask@mask+1,w,c
  2550  001744  0100               	movlb	0	; () banked
  2551  001746  6FA4               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2552  001748  0E00               	movlw	0
  2553  00174A  141F               	andwf	CANSetMask@mask+2,w,c
  2554  00174C  0100               	movlb	0	; () banked
  2555  00174E  6FA5               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2556  001750  0E00               	movlw	0
  2557  001752  1420               	andwf	CANSetMask@mask+3,w,c
  2558  001754  0100               	movlb	0	; () banked
  2559  001756  6FA6               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;inc\CANlib.h: 651: tamp = tamp << 5;
  2563  001758  C0A3  F09E         	movff	CANSetMask@tamp,??_CANSetMask
  2564  00175C  C0A4  F09F         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2565  001760  C0A5  F0A0         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2566  001764  C0A6  F0A1         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2567  001768  0E05               	movlw	5
  2568  00176A                     u4915:
  2569  00176A  90D8               	bcf	status,0,c
  2570  00176C  0100               	movlb	0	; () banked
  2571  00176E  379E               	rlcf	??_CANSetMask& (0+255),f,b
  2572  001770  379F               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2573  001772  37A0               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2574  001774  37A1               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2575  001776  2EE8               	decfsz	wreg,f,c
  2576  001778  D7F8               	goto	u4915
  2577  00177A  C09E  F0A3         	movff	??_CANSetMask,CANSetMask@tamp
  2578  00177E  C09F  F0A4         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2579  001782  C0A0  F0A5         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2580  001786  C0A1  F0A6         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;inc\CANlib.h: 652: RXM0SIDL = (unsigned char) tamp;
  2584  00178A  C0A3  FF19         	movff	CANSetMask@tamp,3865	;volatile
  2585  00178E                     l3985:
  2586                           
  2587                           ; BSR set to: 0
  2588                           ;inc\CANlib.h: 653: }
  2589                           ;inc\CANlib.h: 655: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  2590  00178E  0E02               	movlw	2
  2591  001790  0100               	movlb	0	; () banked
  2592  001792  19A2               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2593  001794  A4D8               	btfss	status,2,c
  2594  001796  D051               	goto	l4001
  2595                           
  2596                           ; BSR set to: 0
  2597  001798  2821               	incf	CANSetMask@type,w,c
  2598  00179A  A4D8               	btfss	status,2,c
  2599  00179C  D04E               	goto	l4001
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;inc\CANlib.h: 656: {
  2603                           ;inc\CANlib.h: 657: tamp = (mask >> 3);
  2604  00179E  C01D  F09E         	movff	CANSetMask@mask,??_CANSetMask
  2605  0017A2  C01E  F09F         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2606  0017A6  C01F  F0A0         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2607  0017AA  C020  F0A1         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2608  0017AE  0E04               	movlw	4
  2609  0017B0  D006               	goto	u4940
  2610  0017B2                     u4945:
  2611  0017B2  0100               	movlb	0	; () banked
  2612  0017B4  90D8               	bcf	status,0,c
  2613  0017B6  33A1               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2614  0017B8  33A0               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2615  0017BA  339F               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2616  0017BC  339E               	rrcf	??_CANSetMask& (0+255),f,b
  2617  0017BE                     u4940:
  2618  0017BE  2EE8               	decfsz	wreg,f,c
  2619  0017C0  D7F8               	goto	u4945
  2620  0017C2  C09E  F0A3         	movff	??_CANSetMask,CANSetMask@tamp
  2621  0017C6  C09F  F0A4         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2622  0017CA  C0A0  F0A5         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2623  0017CE  C0A1  F0A6         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;inc\CANlib.h: 658: tamp = tamp & 0x000000FF;
  2627  0017D2  0100               	movlb	0	; () banked
  2628  0017D4  51A3               	movf	CANSetMask@tamp& (0+255),w,b
  2629  0017D6  0100               	movlb	0	; () banked
  2630  0017D8  6FA3               	movwf	CANSetMask@tamp& (0+255),b
  2631  0017DA  6BA4               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2632  0017DC  6BA5               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2633  0017DE  6BA6               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2634                           
  2635                           ; BSR set to: 0
  2636                           ;inc\CANlib.h: 659: RXM1SIDH = (unsigned char) tamp;
  2637  0017E0  C0A3  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2638                           
  2639                           ; BSR set to: 0
  2640                           ;inc\CANlib.h: 661: tamp = mask & 0x00000007;
  2641  0017E4  0E07               	movlw	7
  2642  0017E6  141D               	andwf	CANSetMask@mask,w,c
  2643  0017E8  0100               	movlb	0	; () banked
  2644  0017EA  6FA3               	movwf	CANSetMask@tamp& (0+255),b
  2645  0017EC  0E00               	movlw	0
  2646  0017EE  141E               	andwf	CANSetMask@mask+1,w,c
  2647  0017F0  0100               	movlb	0	; () banked
  2648  0017F2  6FA4               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2649  0017F4  0E00               	movlw	0
  2650  0017F6  141F               	andwf	CANSetMask@mask+2,w,c
  2651  0017F8  0100               	movlb	0	; () banked
  2652  0017FA  6FA5               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2653  0017FC  0E00               	movlw	0
  2654  0017FE  1420               	andwf	CANSetMask@mask+3,w,c
  2655  001800  0100               	movlb	0	; () banked
  2656  001802  6FA6               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;inc\CANlib.h: 662: tamp = tamp << 5;
  2660  001804  C0A3  F09E         	movff	CANSetMask@tamp,??_CANSetMask
  2661  001808  C0A4  F09F         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2662  00180C  C0A5  F0A0         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2663  001810  C0A6  F0A1         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2664  001814  0E05               	movlw	5
  2665  001816                     u4955:
  2666  001816  90D8               	bcf	status,0,c
  2667  001818  0100               	movlb	0	; () banked
  2668  00181A  379E               	rlcf	??_CANSetMask& (0+255),f,b
  2669  00181C  379F               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2670  00181E  37A0               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2671  001820  37A1               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2672  001822  2EE8               	decfsz	wreg,f,c
  2673  001824  D7F8               	goto	u4955
  2674  001826  C09E  F0A3         	movff	??_CANSetMask,CANSetMask@tamp
  2675  00182A  C09F  F0A4         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2676  00182E  C0A0  F0A5         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2677  001832  C0A1  F0A6         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;inc\CANlib.h: 663: RXM1SIDL = (unsigned char) tamp;
  2681  001836  C0A3  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  2682  00183A                     l4001:
  2683                           
  2684                           ; BSR set to: 0
  2685                           ;inc\CANlib.h: 664: }
  2686                           ;inc\CANlib.h: 666: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  2687  00183A  0100               	movlb	0	; () banked
  2688  00183C  05A2               	decf	CANSetMask@numBuffer& (0+255),w,b
  2689  00183E  A4D8               	btfss	status,2,c
  2690  001840  D07C               	goto	l4033
  2691                           
  2692                           ; BSR set to: 0
  2693  001842  0EF7               	movlw	247
  2694  001844  1821               	xorwf	CANSetMask@type,w,c
  2695  001846  A4D8               	btfss	status,2,c
  2696  001848  D078               	goto	l4033
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;inc\CANlib.h: 667: {
  2700                           ;inc\CANlib.h: 668: tamp = mask & 0x000000FF;
  2701  00184A  501D               	movf	CANSetMask@mask,w,c
  2702  00184C  0100               	movlb	0	; () banked
  2703  00184E  6FA3               	movwf	CANSetMask@tamp& (0+255),b
  2704  001850  6BA4               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2705  001852  6BA5               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2706  001854  6BA6               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;inc\CANlib.h: 669: RXM0EIDL = (unsigned char) tamp;
  2710  001856  C0A3  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  2711                           
  2712                           ; BSR set to: 0
  2713                           ;inc\CANlib.h: 671: tamp = mask & 0x0000FF00;
  2714  00185A  0E00               	movlw	0
  2715  00185C  141D               	andwf	CANSetMask@mask,w,c
  2716  00185E  0100               	movlb	0	; () banked
  2717  001860  6FA3               	movwf	CANSetMask@tamp& (0+255),b
  2718  001862  0EFF               	movlw	255
  2719  001864  141E               	andwf	CANSetMask@mask+1,w,c
  2720  001866  0100               	movlb	0	; () banked
  2721  001868  6FA4               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2722  00186A  0E00               	movlw	0
  2723  00186C  141F               	andwf	CANSetMask@mask+2,w,c
  2724  00186E  0100               	movlb	0	; () banked
  2725  001870  6FA5               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2726  001872  0E00               	movlw	0
  2727  001874  1420               	andwf	CANSetMask@mask+3,w,c
  2728  001876  0100               	movlb	0	; () banked
  2729  001878  6FA6               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2730                           
  2731                           ; BSR set to: 0
  2732                           ;inc\CANlib.h: 672: tamp = tamp >> 8;
  2733  00187A  C0A3  F09E         	movff	CANSetMask@tamp,??_CANSetMask
  2734  00187E  C0A4  F09F         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2735  001882  C0A5  F0A0         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2736  001886  C0A6  F0A1         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2737  00188A  C09F  F09E         	movff	??_CANSetMask+1,??_CANSetMask
  2738  00188E  C0A0  F09F         	movff	??_CANSetMask+2,??_CANSetMask+1
  2739  001892  C0A1  F0A0         	movff	??_CANSetMask+3,??_CANSetMask+2
  2740  001896  0100               	movlb	0	; () banked
  2741  001898  6BA1               	clrf	(??_CANSetMask+3)& (0+255),b
  2742  00189A  C09E  F0A3         	movff	??_CANSetMask,CANSetMask@tamp
  2743  00189E  C09F  F0A4         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2744  0018A2  C0A0  F0A5         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2745  0018A6  C0A1  F0A6         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2746                           
  2747                           ; BSR set to: 0
  2748                           ;inc\CANlib.h: 673: RXM0EIDH = (unsigned char) tamp;
  2749  0018AA  C0A3  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  2750                           
  2751                           ; BSR set to: 0
  2752                           ;inc\CANlib.h: 675: if (mask & 0x00010000)
  2753  0018AE  A01F               	btfss	CANSetMask@mask+2,0,c
  2754  0018B0  D003               	goto	l442
  2755                           
  2756                           ; BSR set to: 0
  2757                           ;inc\CANlib.h: 676: RXM0SIDLbits.EID16 = 0x01;
  2758  0018B2  010F               	movlb	15	; () banked
  2759  0018B4  8119               	bsf	25,0,b	;volatile
  2760  0018B6  D002               	goto	l443
  2761  0018B8                     l442:
  2762                           
  2763                           ; BSR set to: 0
  2764                           ;inc\CANlib.h: 677: else
  2765                           ;inc\CANlib.h: 678: RXM0SIDLbits.EID16 = 0x00;
  2766  0018B8  010F               	movlb	15	; () banked
  2767  0018BA  9119               	bcf	25,0,b	;volatile
  2768  0018BC                     l443:
  2769                           
  2770                           ; BSR set to: 15
  2771                           ;inc\CANlib.h: 680: if (mask & 0x00020000)
  2772  0018BC  A21F               	btfss	CANSetMask@mask+2,1,c
  2773  0018BE  D003               	goto	l444
  2774                           
  2775                           ; BSR set to: 15
  2776                           ;inc\CANlib.h: 681: RXM0SIDLbits.EID17 = 0x01;
  2777  0018C0  010F               	movlb	15	; () banked
  2778  0018C2  8319               	bsf	25,1,b	;volatile
  2779  0018C4  D002               	goto	l445
  2780  0018C6                     l444:
  2781                           
  2782                           ; BSR set to: 15
  2783                           ;inc\CANlib.h: 682: else
  2784                           ;inc\CANlib.h: 683: RXM0SIDLbits.EID17 = 0x00;
  2785  0018C6  010F               	movlb	15	; () banked
  2786  0018C8  9319               	bcf	25,1,b	;volatile
  2787  0018CA                     l445:
  2788                           
  2789                           ; BSR set to: 15
  2790                           ;inc\CANlib.h: 685: if (mask & 0x00040000)
  2791  0018CA  A41F               	btfss	CANSetMask@mask+2,2,c
  2792  0018CC  D003               	goto	l446
  2793                           
  2794                           ; BSR set to: 15
  2795                           ;inc\CANlib.h: 686: RXM0SIDLbits.SID0 = 0x01;
  2796  0018CE  010F               	movlb	15	; () banked
  2797  0018D0  8B19               	bsf	25,5,b	;volatile
  2798  0018D2  D002               	goto	l447
  2799  0018D4                     l446:
  2800                           
  2801                           ; BSR set to: 15
  2802                           ;inc\CANlib.h: 687: else
  2803                           ;inc\CANlib.h: 688: RXM0SIDLbits.SID0 = 0x00;
  2804  0018D4  010F               	movlb	15	; () banked
  2805  0018D6  9B19               	bcf	25,5,b	;volatile
  2806  0018D8                     l447:
  2807                           
  2808                           ; BSR set to: 15
  2809                           ;inc\CANlib.h: 690: if (mask & 0x00080000)
  2810  0018D8  A61F               	btfss	CANSetMask@mask+2,3,c
  2811  0018DA  D003               	goto	l448
  2812                           
  2813                           ; BSR set to: 15
  2814                           ;inc\CANlib.h: 691: RXM0SIDLbits.SID1 = 0x01;
  2815  0018DC  010F               	movlb	15	; () banked
  2816  0018DE  8D19               	bsf	25,6,b	;volatile
  2817  0018E0  D002               	goto	l449
  2818  0018E2                     l448:
  2819                           
  2820                           ; BSR set to: 15
  2821                           ;inc\CANlib.h: 692: else
  2822                           ;inc\CANlib.h: 693: RXM0SIDLbits.SID1 = 0x00;
  2823  0018E2  010F               	movlb	15	; () banked
  2824  0018E4  9D19               	bcf	25,6,b	;volatile
  2825  0018E6                     l449:
  2826                           
  2827                           ; BSR set to: 15
  2828                           ;inc\CANlib.h: 695: if (mask & 0x00100000)
  2829  0018E6  A81F               	btfss	CANSetMask@mask+2,4,c
  2830  0018E8  D003               	goto	l450
  2831                           
  2832                           ; BSR set to: 15
  2833                           ;inc\CANlib.h: 696: RXM0SIDLbits.SID2 = 0x01 ;
  2834  0018EA  010F               	movlb	15	; () banked
  2835  0018EC  8F19               	bsf	25,7,b	;volatile
  2836  0018EE  D002               	goto	l4027
  2837  0018F0                     l450:
  2838                           
  2839                           ; BSR set to: 15
  2840                           ;inc\CANlib.h: 697: else
  2841                           ;inc\CANlib.h: 698: RXM0SIDLbits.SID2 = 0x00 ;
  2842  0018F0  010F               	movlb	15	; () banked
  2843  0018F2  9F19               	bcf	25,7,b	;volatile
  2844  0018F4                     l4027:
  2845                           
  2846                           ; BSR set to: 15
  2847                           ;inc\CANlib.h: 700: tamp = (mask >> 21);
  2848  0018F4  C01D  F09E         	movff	CANSetMask@mask,??_CANSetMask
  2849  0018F8  C01E  F09F         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2850  0018FC  C01F  F0A0         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2851  001900  C020  F0A1         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2852  001904  0E16               	movlw	22
  2853  001906  D006               	goto	u5030
  2854  001908                     u5035:
  2855  001908  0100               	movlb	0	; () banked
  2856  00190A  90D8               	bcf	status,0,c
  2857  00190C  33A1               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2858  00190E  33A0               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2859  001910  339F               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2860  001912  339E               	rrcf	??_CANSetMask& (0+255),f,b
  2861  001914                     u5030:
  2862  001914  2EE8               	decfsz	wreg,f,c
  2863  001916  D7F8               	goto	u5035
  2864  001918  C09E  F0A3         	movff	??_CANSetMask,CANSetMask@tamp
  2865  00191C  C09F  F0A4         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2866  001920  C0A0  F0A5         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2867  001924  C0A1  F0A6         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;inc\CANlib.h: 701: tamp = tamp & 0x000000FF;
  2871  001928  0100               	movlb	0	; () banked
  2872  00192A  51A3               	movf	CANSetMask@tamp& (0+255),w,b
  2873  00192C  0100               	movlb	0	; () banked
  2874  00192E  6FA3               	movwf	CANSetMask@tamp& (0+255),b
  2875  001930  6BA4               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2876  001932  6BA5               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2877  001934  6BA6               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;inc\CANlib.h: 702: RXM0SIDH = (unsigned char) tamp;
  2881  001936  C0A3  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2882  00193A                     l4033:
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;inc\CANlib.h: 703: }
  2886                           ;inc\CANlib.h: 705: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  2887  00193A  0E02               	movlw	2
  2888  00193C  0100               	movlb	0	; () banked
  2889  00193E  19A2               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2890  001940  A4D8               	btfss	status,2,c
  2891  001942  0012               	return	
  2892                           
  2893                           ; BSR set to: 0
  2894  001944  0EF7               	movlw	247
  2895  001946  1821               	xorwf	CANSetMask@type,w,c
  2896  001948  A4D8               	btfss	status,2,c
  2897  00194A  0012               	return	
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;inc\CANlib.h: 706: {
  2901                           ;inc\CANlib.h: 707: tamp = mask & 0x000000FF;
  2902  00194C  501D               	movf	CANSetMask@mask,w,c
  2903  00194E  0100               	movlb	0	; () banked
  2904  001950  6FA3               	movwf	CANSetMask@tamp& (0+255),b
  2905  001952  6BA4               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2906  001954  6BA5               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2907  001956  6BA6               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;inc\CANlib.h: 708: RXM1EIDL = (unsigned char) tamp;
  2911  001958  C0A3  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  2912                           
  2913                           ; BSR set to: 0
  2914                           ;inc\CANlib.h: 710: tamp = mask & 0x0000FF00;
  2915  00195C  0E00               	movlw	0
  2916  00195E  141D               	andwf	CANSetMask@mask,w,c
  2917  001960  0100               	movlb	0	; () banked
  2918  001962  6FA3               	movwf	CANSetMask@tamp& (0+255),b
  2919  001964  0EFF               	movlw	255
  2920  001966  141E               	andwf	CANSetMask@mask+1,w,c
  2921  001968  0100               	movlb	0	; () banked
  2922  00196A  6FA4               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2923  00196C  0E00               	movlw	0
  2924  00196E  141F               	andwf	CANSetMask@mask+2,w,c
  2925  001970  0100               	movlb	0	; () banked
  2926  001972  6FA5               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2927  001974  0E00               	movlw	0
  2928  001976  1420               	andwf	CANSetMask@mask+3,w,c
  2929  001978  0100               	movlb	0	; () banked
  2930  00197A  6FA6               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2931                           
  2932                           ; BSR set to: 0
  2933                           ;inc\CANlib.h: 711: tamp = tamp >> 8;
  2934  00197C  C0A3  F09E         	movff	CANSetMask@tamp,??_CANSetMask
  2935  001980  C0A4  F09F         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2936  001984  C0A5  F0A0         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2937  001988  C0A6  F0A1         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2938  00198C  C09F  F09E         	movff	??_CANSetMask+1,??_CANSetMask
  2939  001990  C0A0  F09F         	movff	??_CANSetMask+2,??_CANSetMask+1
  2940  001994  C0A1  F0A0         	movff	??_CANSetMask+3,??_CANSetMask+2
  2941  001998  0100               	movlb	0	; () banked
  2942  00199A  6BA1               	clrf	(??_CANSetMask+3)& (0+255),b
  2943  00199C  C09E  F0A3         	movff	??_CANSetMask,CANSetMask@tamp
  2944  0019A0  C09F  F0A4         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2945  0019A4  C0A0  F0A5         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2946  0019A8  C0A1  F0A6         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2947                           
  2948                           ; BSR set to: 0
  2949                           ;inc\CANlib.h: 712: RXM1EIDH = (unsigned char) tamp;
  2950  0019AC  C0A3  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;inc\CANlib.h: 714: if (mask & 0x00010000)
  2954  0019B0  A01F               	btfss	CANSetMask@mask+2,0,c
  2955  0019B2  D003               	goto	l453
  2956                           
  2957                           ; BSR set to: 0
  2958                           ;inc\CANlib.h: 715: RXM1SIDLbits.EID16 = 0x01;
  2959  0019B4  010F               	movlb	15	; () banked
  2960  0019B6  811D               	bsf	29,0,b	;volatile
  2961  0019B8  D002               	goto	l454
  2962  0019BA                     l453:
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;inc\CANlib.h: 716: else
  2966                           ;inc\CANlib.h: 717: RXM1SIDLbits.EID16 = 0x00;
  2967  0019BA  010F               	movlb	15	; () banked
  2968  0019BC  911D               	bcf	29,0,b	;volatile
  2969  0019BE                     l454:
  2970                           
  2971                           ; BSR set to: 15
  2972                           ;inc\CANlib.h: 719: if (mask & 0x00020000)
  2973  0019BE  A21F               	btfss	CANSetMask@mask+2,1,c
  2974  0019C0  D003               	goto	l455
  2975                           
  2976                           ; BSR set to: 15
  2977                           ;inc\CANlib.h: 720: RXM1SIDLbits.EID17 = 0x01;
  2978  0019C2  010F               	movlb	15	; () banked
  2979  0019C4  831D               	bsf	29,1,b	;volatile
  2980  0019C6  D002               	goto	l456
  2981  0019C8                     l455:
  2982                           
  2983                           ; BSR set to: 15
  2984                           ;inc\CANlib.h: 721: else
  2985                           ;inc\CANlib.h: 722: RXM1SIDLbits.EID17 = 0x00;
  2986  0019C8  010F               	movlb	15	; () banked
  2987  0019CA  931D               	bcf	29,1,b	;volatile
  2988  0019CC                     l456:
  2989                           
  2990                           ; BSR set to: 15
  2991                           ;inc\CANlib.h: 724: if (mask & 0x00040000)
  2992  0019CC  A41F               	btfss	CANSetMask@mask+2,2,c
  2993  0019CE  D003               	goto	l457
  2994                           
  2995                           ; BSR set to: 15
  2996                           ;inc\CANlib.h: 725: RXM1SIDLbits.SID0 = 0x01;
  2997  0019D0  010F               	movlb	15	; () banked
  2998  0019D2  8B1D               	bsf	29,5,b	;volatile
  2999  0019D4  D002               	goto	l458
  3000  0019D6                     l457:
  3001                           
  3002                           ; BSR set to: 15
  3003                           ;inc\CANlib.h: 726: else
  3004                           ;inc\CANlib.h: 727: RXM1SIDLbits.SID0 = 0x00;
  3005  0019D6  010F               	movlb	15	; () banked
  3006  0019D8  9B1D               	bcf	29,5,b	;volatile
  3007  0019DA                     l458:
  3008                           
  3009                           ; BSR set to: 15
  3010                           ;inc\CANlib.h: 729: if (mask & 0x00080000)
  3011  0019DA  A61F               	btfss	CANSetMask@mask+2,3,c
  3012  0019DC  D003               	goto	l459
  3013                           
  3014                           ; BSR set to: 15
  3015                           ;inc\CANlib.h: 730: RXM1SIDLbits.SID1 = 0x01;
  3016  0019DE  010F               	movlb	15	; () banked
  3017  0019E0  8D1D               	bsf	29,6,b	;volatile
  3018  0019E2  D002               	goto	l460
  3019  0019E4                     l459:
  3020                           
  3021                           ; BSR set to: 15
  3022                           ;inc\CANlib.h: 731: else
  3023                           ;inc\CANlib.h: 732: RXM1SIDLbits.SID1 = 0x00;
  3024  0019E4  010F               	movlb	15	; () banked
  3025  0019E6  9D1D               	bcf	29,6,b	;volatile
  3026  0019E8                     l460:
  3027                           
  3028                           ; BSR set to: 15
  3029                           ;inc\CANlib.h: 734: if (mask & 0x00100000)
  3030  0019E8  A81F               	btfss	CANSetMask@mask+2,4,c
  3031  0019EA  D003               	goto	l461
  3032                           
  3033                           ; BSR set to: 15
  3034                           ;inc\CANlib.h: 735: RXM1SIDLbits.SID2 = 0x01 ;
  3035  0019EC  010F               	movlb	15	; () banked
  3036  0019EE  8F1D               	bsf	29,7,b	;volatile
  3037  0019F0  D002               	goto	l4059
  3038  0019F2                     l461:
  3039                           
  3040                           ; BSR set to: 15
  3041                           ;inc\CANlib.h: 736: else
  3042                           ;inc\CANlib.h: 737: RXM1SIDLbits.SID2 = 0x00 ;
  3043  0019F2  010F               	movlb	15	; () banked
  3044  0019F4  9F1D               	bcf	29,7,b	;volatile
  3045  0019F6                     l4059:
  3046                           
  3047                           ; BSR set to: 15
  3048                           ;inc\CANlib.h: 739: tamp = (mask >> 21);
  3049  0019F6  C01D  F09E         	movff	CANSetMask@mask,??_CANSetMask
  3050  0019FA  C01E  F09F         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3051  0019FE  C01F  F0A0         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3052  001A02  C020  F0A1         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3053  001A06  0E16               	movlw	22
  3054  001A08  D006               	goto	u5110
  3055  001A0A                     u5115:
  3056  001A0A  0100               	movlb	0	; () banked
  3057  001A0C  90D8               	bcf	status,0,c
  3058  001A0E  33A1               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3059  001A10  33A0               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3060  001A12  339F               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3061  001A14  339E               	rrcf	??_CANSetMask& (0+255),f,b
  3062  001A16                     u5110:
  3063  001A16  2EE8               	decfsz	wreg,f,c
  3064  001A18  D7F8               	goto	u5115
  3065  001A1A  C09E  F0A3         	movff	??_CANSetMask,CANSetMask@tamp
  3066  001A1E  C09F  F0A4         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3067  001A22  C0A0  F0A5         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3068  001A26  C0A1  F0A6         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3069                           
  3070                           ; BSR set to: 0
  3071                           ;inc\CANlib.h: 740: tamp = tamp & 0x000000FF;
  3072  001A2A  0100               	movlb	0	; () banked
  3073  001A2C  51A3               	movf	CANSetMask@tamp& (0+255),w,b
  3074  001A2E  0100               	movlb	0	; () banked
  3075  001A30  6FA3               	movwf	CANSetMask@tamp& (0+255),b
  3076  001A32  6BA4               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3077  001A34  6BA5               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3078  001A36  6BA6               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;inc\CANlib.h: 741: RXM1SIDH = (unsigned char) tamp;
  3082  001A38  C0A3  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3083  001A3C  0012               	return	
  3084  001A3E                     __end_of_CANSetMask:
  3085                           	opt stack 0
  3086                           tblptru	equ	0xFF8
  3087                           tblptrh	equ	0xFF7
  3088                           tblptrl	equ	0xFF6
  3089                           tablat	equ	0xFF5
  3090                           prodh	equ	0xFF4
  3091                           prodl	equ	0xFF3
  3092                           intcon	equ	0xFF2
  3093                           postinc0	equ	0xFEE
  3094                           wreg	equ	0xFE8
  3095                           indf1	equ	0xFE7
  3096                           postinc1	equ	0xFE6
  3097                           postdec1	equ	0xFE5
  3098                           fsr1h	equ	0xFE2
  3099                           fsr1l	equ	0xFE1
  3100                           indf2	equ	0xFDF
  3101                           postinc2	equ	0xFDE
  3102                           fsr2h	equ	0xFDA
  3103                           fsr2l	equ	0xFD9
  3104                           status	equ	0xFD8
  3105                           
  3106 ;; *************** function _CANSetFilter *****************
  3107 ;; Defined at:
  3108 ;;		line 749 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;  numBuffer       1    wreg     enum E16881
  3111 ;;  filter          4   28[COMRAM] unsigned long 
  3112 ;;  type            1   32[COMRAM] enum E16844
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  numBuffer       1    4[BANK0 ] enum E16881
  3115 ;;  tamp            4    5[BANK0 ] unsigned long 
  3116 ;; Return value:  Size  Location     Type
  3117 ;;		None               void
  3118 ;; Registers used:
  3119 ;;		wreg, status,2, status,0
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3125 ;;      Params:         5       0       0       0
  3126 ;;      Locals:         0       5       0       0
  3127 ;;      Temps:          0       4       0       0
  3128 ;;      Totals:         5       9       0       0
  3129 ;;Total ram usage:       14 bytes
  3130 ;; Hardware stack levels used:    1
  3131 ;; Hardware stack levels required when called:    2
  3132 ;; This function calls:
  3133 ;;		Nothing
  3134 ;; This function is called by:
  3135 ;;		_CANInitialize
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           	psect	text11
  3140  00001A                     __ptext11:
  3141                           	opt stack 0
  3142  00001A                     _CANSetFilter:
  3143                           	opt stack 26
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;incstack = 0
  3147                           ;CANSetFilter@numBuffer stored from wreg
  3148  00001A  0100               	movlb	0	; () banked
  3149  00001C  6FA2               	movwf	CANSetFilter@numBuffer& (0+255),b
  3150                           
  3151                           ;inc\CANlib.h: 751: unsigned long tamp;
  3152                           ;inc\CANlib.h: 753: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3153  00001E  0100               	movlb	0	; () banked
  3154  000020  51A2               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3155  000022  0100               	movlb	0	; () banked
  3156  000024  A4D8               	btfss	status,2,c
  3157  000026  D053               	goto	l4083
  3158                           
  3159                           ; BSR set to: 0
  3160  000028  2821               	incf	CANSetFilter@type,w,c
  3161  00002A  A4D8               	btfss	status,2,c
  3162  00002C  D050               	goto	l4083
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;inc\CANlib.h: 754: {
  3166                           ;inc\CANlib.h: 755: RXF0SIDLbits.EXIDEN = 0x00;
  3167  00002E  010F               	movlb	15	; () banked
  3168  000030  9701               	bcf	1,3,b	;volatile
  3169                           
  3170                           ; BSR set to: 15
  3171                           ;inc\CANlib.h: 757: tamp = (filter >> 3);
  3172  000032  C01D  F09E         	movff	CANSetFilter@filter,??_CANSetFilter
  3173  000036  C01E  F09F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3174  00003A  C01F  F0A0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3175  00003E  C020  F0A1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3176  000042  0E04               	movlw	4
  3177  000044  D006               	goto	u5140
  3178  000046                     u5145:
  3179  000046  0100               	movlb	0	; () banked
  3180  000048  90D8               	bcf	status,0,c
  3181  00004A  33A1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3182  00004C  33A0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3183  00004E  339F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3184  000050  339E               	rrcf	??_CANSetFilter& (0+255),f,b
  3185  000052                     u5140:
  3186  000052  2EE8               	decfsz	wreg,f,c
  3187  000054  D7F8               	goto	u5145
  3188  000056  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3189  00005A  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3190  00005E  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3191  000062  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3192                           
  3193                           ; BSR set to: 0
  3194                           ;inc\CANlib.h: 758: tamp = tamp & 0x000000FF;
  3195  000066  0100               	movlb	0	; () banked
  3196  000068  51A3               	movf	CANSetFilter@tamp& (0+255),w,b
  3197  00006A  0100               	movlb	0	; () banked
  3198  00006C  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3199  00006E  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3200  000070  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3201  000072  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3202                           
  3203                           ; BSR set to: 0
  3204                           ;inc\CANlib.h: 759: RXF0SIDH = (unsigned char) tamp;
  3205  000074  C0A3  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;inc\CANlib.h: 761: tamp = filter & 0x00000007;
  3209  000078  0E07               	movlw	7
  3210  00007A  141D               	andwf	CANSetFilter@filter,w,c
  3211  00007C  0100               	movlb	0	; () banked
  3212  00007E  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3213  000080  0E00               	movlw	0
  3214  000082  141E               	andwf	CANSetFilter@filter+1,w,c
  3215  000084  0100               	movlb	0	; () banked
  3216  000086  6FA4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3217  000088  0E00               	movlw	0
  3218  00008A  141F               	andwf	CANSetFilter@filter+2,w,c
  3219  00008C  0100               	movlb	0	; () banked
  3220  00008E  6FA5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3221  000090  0E00               	movlw	0
  3222  000092  1420               	andwf	CANSetFilter@filter+3,w,c
  3223  000094  0100               	movlb	0	; () banked
  3224  000096  6FA6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3225                           
  3226                           ; BSR set to: 0
  3227                           ;inc\CANlib.h: 762: tamp = tamp << 5;
  3228  000098  C0A3  F09E         	movff	CANSetFilter@tamp,??_CANSetFilter
  3229  00009C  C0A4  F09F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3230  0000A0  C0A5  F0A0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3231  0000A4  C0A6  F0A1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3232  0000A8  0E05               	movlw	5
  3233  0000AA                     u5155:
  3234  0000AA  90D8               	bcf	status,0,c
  3235  0000AC  0100               	movlb	0	; () banked
  3236  0000AE  379E               	rlcf	??_CANSetFilter& (0+255),f,b
  3237  0000B0  379F               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3238  0000B2  37A0               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3239  0000B4  37A1               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3240  0000B6  2EE8               	decfsz	wreg,f,c
  3241  0000B8  D7F8               	goto	u5155
  3242  0000BA  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3243  0000BE  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3244  0000C2  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3245  0000C6  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;inc\CANlib.h: 763: RXF0SIDL = (unsigned char) tamp;
  3249  0000CA  C0A3  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3250  0000CE                     l4083:
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;inc\CANlib.h: 764: }
  3254                           ;inc\CANlib.h: 766: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3255  0000CE  0100               	movlb	0	; () banked
  3256  0000D0  05A2               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3257  0000D2  A4D8               	btfss	status,2,c
  3258  0000D4  D053               	goto	l4101
  3259                           
  3260                           ; BSR set to: 0
  3261  0000D6  2821               	incf	CANSetFilter@type,w,c
  3262  0000D8  A4D8               	btfss	status,2,c
  3263  0000DA  D050               	goto	l4101
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;inc\CANlib.h: 767: {
  3267                           ;inc\CANlib.h: 768: RXF1SIDLbits.EXIDEN = 0x00;
  3268  0000DC  010F               	movlb	15	; () banked
  3269  0000DE  9705               	bcf	5,3,b	;volatile
  3270                           
  3271                           ; BSR set to: 15
  3272                           ;inc\CANlib.h: 770: tamp = (filter >> 3);
  3273  0000E0  C01D  F09E         	movff	CANSetFilter@filter,??_CANSetFilter
  3274  0000E4  C01E  F09F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3275  0000E8  C01F  F0A0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3276  0000EC  C020  F0A1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3277  0000F0  0E04               	movlw	4
  3278  0000F2  D006               	goto	u5180
  3279  0000F4                     u5185:
  3280  0000F4  0100               	movlb	0	; () banked
  3281  0000F6  90D8               	bcf	status,0,c
  3282  0000F8  33A1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3283  0000FA  33A0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3284  0000FC  339F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3285  0000FE  339E               	rrcf	??_CANSetFilter& (0+255),f,b
  3286  000100                     u5180:
  3287  000100  2EE8               	decfsz	wreg,f,c
  3288  000102  D7F8               	goto	u5185
  3289  000104  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3290  000108  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3291  00010C  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3292  000110  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;inc\CANlib.h: 771: tamp = tamp & 0x000000FF;
  3296  000114  0100               	movlb	0	; () banked
  3297  000116  51A3               	movf	CANSetFilter@tamp& (0+255),w,b
  3298  000118  0100               	movlb	0	; () banked
  3299  00011A  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3300  00011C  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3301  00011E  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3302  000120  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;inc\CANlib.h: 772: RXF1SIDH = (unsigned char) tamp;
  3306  000122  C0A3  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;inc\CANlib.h: 774: tamp = filter & 0x00000007;
  3310  000126  0E07               	movlw	7
  3311  000128  141D               	andwf	CANSetFilter@filter,w,c
  3312  00012A  0100               	movlb	0	; () banked
  3313  00012C  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3314  00012E  0E00               	movlw	0
  3315  000130  141E               	andwf	CANSetFilter@filter+1,w,c
  3316  000132  0100               	movlb	0	; () banked
  3317  000134  6FA4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3318  000136  0E00               	movlw	0
  3319  000138  141F               	andwf	CANSetFilter@filter+2,w,c
  3320  00013A  0100               	movlb	0	; () banked
  3321  00013C  6FA5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3322  00013E  0E00               	movlw	0
  3323  000140  1420               	andwf	CANSetFilter@filter+3,w,c
  3324  000142  0100               	movlb	0	; () banked
  3325  000144  6FA6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;inc\CANlib.h: 775: tamp = tamp << 5;
  3329  000146  C0A3  F09E         	movff	CANSetFilter@tamp,??_CANSetFilter
  3330  00014A  C0A4  F09F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3331  00014E  C0A5  F0A0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3332  000152  C0A6  F0A1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3333  000156  0E05               	movlw	5
  3334  000158                     u5195:
  3335  000158  90D8               	bcf	status,0,c
  3336  00015A  0100               	movlb	0	; () banked
  3337  00015C  379E               	rlcf	??_CANSetFilter& (0+255),f,b
  3338  00015E  379F               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3339  000160  37A0               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3340  000162  37A1               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3341  000164  2EE8               	decfsz	wreg,f,c
  3342  000166  D7F8               	goto	u5195
  3343  000168  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3344  00016C  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3345  000170  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3346  000174  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3347                           
  3348                           ; BSR set to: 0
  3349                           ;inc\CANlib.h: 776: RXF1SIDL = (unsigned char) tamp;
  3350  000178  C0A3  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3351  00017C                     l4101:
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;inc\CANlib.h: 777: }
  3355                           ;inc\CANlib.h: 779: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3356  00017C  0E02               	movlw	2
  3357  00017E  0100               	movlb	0	; () banked
  3358  000180  19A2               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3359  000182  A4D8               	btfss	status,2,c
  3360  000184  D053               	goto	l4119
  3361                           
  3362                           ; BSR set to: 0
  3363  000186  2821               	incf	CANSetFilter@type,w,c
  3364  000188  A4D8               	btfss	status,2,c
  3365  00018A  D050               	goto	l4119
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;inc\CANlib.h: 780: {
  3369                           ;inc\CANlib.h: 781: RXF2SIDLbits.EXIDEN = 0x00;
  3370  00018C  010F               	movlb	15	; () banked
  3371  00018E  9709               	bcf	9,3,b	;volatile
  3372                           
  3373                           ; BSR set to: 15
  3374                           ;inc\CANlib.h: 783: tamp = (filter >> 3);
  3375  000190  C01D  F09E         	movff	CANSetFilter@filter,??_CANSetFilter
  3376  000194  C01E  F09F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3377  000198  C01F  F0A0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3378  00019C  C020  F0A1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3379  0001A0  0E04               	movlw	4
  3380  0001A2  D006               	goto	u5220
  3381  0001A4                     u5225:
  3382  0001A4  0100               	movlb	0	; () banked
  3383  0001A6  90D8               	bcf	status,0,c
  3384  0001A8  33A1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3385  0001AA  33A0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3386  0001AC  339F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3387  0001AE  339E               	rrcf	??_CANSetFilter& (0+255),f,b
  3388  0001B0                     u5220:
  3389  0001B0  2EE8               	decfsz	wreg,f,c
  3390  0001B2  D7F8               	goto	u5225
  3391  0001B4  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3392  0001B8  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3393  0001BC  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3394  0001C0  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3395                           
  3396                           ; BSR set to: 0
  3397                           ;inc\CANlib.h: 784: tamp = tamp & 0x000000FF;
  3398  0001C4  0100               	movlb	0	; () banked
  3399  0001C6  51A3               	movf	CANSetFilter@tamp& (0+255),w,b
  3400  0001C8  0100               	movlb	0	; () banked
  3401  0001CA  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3402  0001CC  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3403  0001CE  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3404  0001D0  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3405                           
  3406                           ; BSR set to: 0
  3407                           ;inc\CANlib.h: 785: RXF2SIDH = (unsigned char) tamp;
  3408  0001D2  C0A3  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3409                           
  3410                           ; BSR set to: 0
  3411                           ;inc\CANlib.h: 787: tamp = filter & 0x00000007;
  3412  0001D6  0E07               	movlw	7
  3413  0001D8  141D               	andwf	CANSetFilter@filter,w,c
  3414  0001DA  0100               	movlb	0	; () banked
  3415  0001DC  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3416  0001DE  0E00               	movlw	0
  3417  0001E0  141E               	andwf	CANSetFilter@filter+1,w,c
  3418  0001E2  0100               	movlb	0	; () banked
  3419  0001E4  6FA4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3420  0001E6  0E00               	movlw	0
  3421  0001E8  141F               	andwf	CANSetFilter@filter+2,w,c
  3422  0001EA  0100               	movlb	0	; () banked
  3423  0001EC  6FA5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3424  0001EE  0E00               	movlw	0
  3425  0001F0  1420               	andwf	CANSetFilter@filter+3,w,c
  3426  0001F2  0100               	movlb	0	; () banked
  3427  0001F4  6FA6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;inc\CANlib.h: 788: tamp = tamp << 5;
  3431  0001F6  C0A3  F09E         	movff	CANSetFilter@tamp,??_CANSetFilter
  3432  0001FA  C0A4  F09F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3433  0001FE  C0A5  F0A0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3434  000202  C0A6  F0A1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3435  000206  0E05               	movlw	5
  3436  000208                     u5235:
  3437  000208  90D8               	bcf	status,0,c
  3438  00020A  0100               	movlb	0	; () banked
  3439  00020C  379E               	rlcf	??_CANSetFilter& (0+255),f,b
  3440  00020E  379F               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3441  000210  37A0               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3442  000212  37A1               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3443  000214  2EE8               	decfsz	wreg,f,c
  3444  000216  D7F8               	goto	u5235
  3445  000218  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3446  00021C  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3447  000220  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3448  000224  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3449                           
  3450                           ; BSR set to: 0
  3451                           ;inc\CANlib.h: 789: RXF2SIDL = (unsigned char) tamp;
  3452  000228  C0A3  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  3453  00022C                     l4119:
  3454                           
  3455                           ; BSR set to: 0
  3456                           ;inc\CANlib.h: 790: }
  3457                           ;inc\CANlib.h: 792: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  3458  00022C  0E03               	movlw	3
  3459  00022E  0100               	movlb	0	; () banked
  3460  000230  19A2               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3461  000232  A4D8               	btfss	status,2,c
  3462  000234  D053               	goto	l4137
  3463                           
  3464                           ; BSR set to: 0
  3465  000236  2821               	incf	CANSetFilter@type,w,c
  3466  000238  A4D8               	btfss	status,2,c
  3467  00023A  D050               	goto	l4137
  3468                           
  3469                           ; BSR set to: 0
  3470                           ;inc\CANlib.h: 793: {
  3471                           ;inc\CANlib.h: 794: RXF3SIDLbits.EXIDEN = 0x00;
  3472  00023C  010F               	movlb	15	; () banked
  3473  00023E  970D               	bcf	13,3,b	;volatile
  3474                           
  3475                           ; BSR set to: 15
  3476                           ;inc\CANlib.h: 796: tamp = (filter >> 3);
  3477  000240  C01D  F09E         	movff	CANSetFilter@filter,??_CANSetFilter
  3478  000244  C01E  F09F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3479  000248  C01F  F0A0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3480  00024C  C020  F0A1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3481  000250  0E04               	movlw	4
  3482  000252  D006               	goto	u5260
  3483  000254                     u5265:
  3484  000254  0100               	movlb	0	; () banked
  3485  000256  90D8               	bcf	status,0,c
  3486  000258  33A1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3487  00025A  33A0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3488  00025C  339F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3489  00025E  339E               	rrcf	??_CANSetFilter& (0+255),f,b
  3490  000260                     u5260:
  3491  000260  2EE8               	decfsz	wreg,f,c
  3492  000262  D7F8               	goto	u5265
  3493  000264  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3494  000268  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3495  00026C  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3496  000270  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3497                           
  3498                           ; BSR set to: 0
  3499                           ;inc\CANlib.h: 797: tamp = tamp & 0x000000FF;
  3500  000274  0100               	movlb	0	; () banked
  3501  000276  51A3               	movf	CANSetFilter@tamp& (0+255),w,b
  3502  000278  0100               	movlb	0	; () banked
  3503  00027A  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3504  00027C  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3505  00027E  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3506  000280  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;inc\CANlib.h: 798: RXF3SIDH = (unsigned char) tamp;
  3510  000282  C0A3  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;inc\CANlib.h: 800: tamp = filter & 0x00000007;
  3514  000286  0E07               	movlw	7
  3515  000288  141D               	andwf	CANSetFilter@filter,w,c
  3516  00028A  0100               	movlb	0	; () banked
  3517  00028C  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3518  00028E  0E00               	movlw	0
  3519  000290  141E               	andwf	CANSetFilter@filter+1,w,c
  3520  000292  0100               	movlb	0	; () banked
  3521  000294  6FA4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3522  000296  0E00               	movlw	0
  3523  000298  141F               	andwf	CANSetFilter@filter+2,w,c
  3524  00029A  0100               	movlb	0	; () banked
  3525  00029C  6FA5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3526  00029E  0E00               	movlw	0
  3527  0002A0  1420               	andwf	CANSetFilter@filter+3,w,c
  3528  0002A2  0100               	movlb	0	; () banked
  3529  0002A4  6FA6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;inc\CANlib.h: 801: tamp = tamp << 5;
  3533  0002A6  C0A3  F09E         	movff	CANSetFilter@tamp,??_CANSetFilter
  3534  0002AA  C0A4  F09F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3535  0002AE  C0A5  F0A0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3536  0002B2  C0A6  F0A1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3537  0002B6  0E05               	movlw	5
  3538  0002B8                     u5275:
  3539  0002B8  90D8               	bcf	status,0,c
  3540  0002BA  0100               	movlb	0	; () banked
  3541  0002BC  379E               	rlcf	??_CANSetFilter& (0+255),f,b
  3542  0002BE  379F               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3543  0002C0  37A0               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3544  0002C2  37A1               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3545  0002C4  2EE8               	decfsz	wreg,f,c
  3546  0002C6  D7F8               	goto	u5275
  3547  0002C8  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3548  0002CC  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3549  0002D0  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3550  0002D4  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;inc\CANlib.h: 802: RXF3SIDL = (unsigned char) tamp;
  3554  0002D8  C0A3  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  3555  0002DC                     l4137:
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;inc\CANlib.h: 803: }
  3559                           ;inc\CANlib.h: 805: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  3560  0002DC  0E04               	movlw	4
  3561  0002DE  0100               	movlb	0	; () banked
  3562  0002E0  19A2               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3563  0002E2  A4D8               	btfss	status,2,c
  3564  0002E4  D053               	goto	l4155
  3565                           
  3566                           ; BSR set to: 0
  3567  0002E6  2821               	incf	CANSetFilter@type,w,c
  3568  0002E8  A4D8               	btfss	status,2,c
  3569  0002EA  D050               	goto	l4155
  3570                           
  3571                           ; BSR set to: 0
  3572                           ;inc\CANlib.h: 806: {
  3573                           ;inc\CANlib.h: 807: RXF4SIDLbits.EXIDEN = 0x00;
  3574  0002EC  010F               	movlb	15	; () banked
  3575  0002EE  9711               	bcf	17,3,b	;volatile
  3576                           
  3577                           ; BSR set to: 15
  3578                           ;inc\CANlib.h: 809: tamp = (filter >> 3);
  3579  0002F0  C01D  F09E         	movff	CANSetFilter@filter,??_CANSetFilter
  3580  0002F4  C01E  F09F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3581  0002F8  C01F  F0A0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3582  0002FC  C020  F0A1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3583  000300  0E04               	movlw	4
  3584  000302  D006               	goto	u5300
  3585  000304                     u5305:
  3586  000304  0100               	movlb	0	; () banked
  3587  000306  90D8               	bcf	status,0,c
  3588  000308  33A1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3589  00030A  33A0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3590  00030C  339F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3591  00030E  339E               	rrcf	??_CANSetFilter& (0+255),f,b
  3592  000310                     u5300:
  3593  000310  2EE8               	decfsz	wreg,f,c
  3594  000312  D7F8               	goto	u5305
  3595  000314  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3596  000318  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3597  00031C  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3598  000320  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;inc\CANlib.h: 810: tamp = tamp & 0x000000FF;
  3602  000324  0100               	movlb	0	; () banked
  3603  000326  51A3               	movf	CANSetFilter@tamp& (0+255),w,b
  3604  000328  0100               	movlb	0	; () banked
  3605  00032A  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3606  00032C  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3607  00032E  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3608  000330  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3609                           
  3610                           ; BSR set to: 0
  3611                           ;inc\CANlib.h: 811: RXF4SIDH = (unsigned char) tamp;
  3612  000332  C0A3  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  3613                           
  3614                           ; BSR set to: 0
  3615                           ;inc\CANlib.h: 813: tamp = filter & 0x00000007;
  3616  000336  0E07               	movlw	7
  3617  000338  141D               	andwf	CANSetFilter@filter,w,c
  3618  00033A  0100               	movlb	0	; () banked
  3619  00033C  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3620  00033E  0E00               	movlw	0
  3621  000340  141E               	andwf	CANSetFilter@filter+1,w,c
  3622  000342  0100               	movlb	0	; () banked
  3623  000344  6FA4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3624  000346  0E00               	movlw	0
  3625  000348  141F               	andwf	CANSetFilter@filter+2,w,c
  3626  00034A  0100               	movlb	0	; () banked
  3627  00034C  6FA5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3628  00034E  0E00               	movlw	0
  3629  000350  1420               	andwf	CANSetFilter@filter+3,w,c
  3630  000352  0100               	movlb	0	; () banked
  3631  000354  6FA6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;inc\CANlib.h: 814: tamp = tamp << 5;
  3635  000356  C0A3  F09E         	movff	CANSetFilter@tamp,??_CANSetFilter
  3636  00035A  C0A4  F09F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3637  00035E  C0A5  F0A0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3638  000362  C0A6  F0A1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3639  000366  0E05               	movlw	5
  3640  000368                     u5315:
  3641  000368  90D8               	bcf	status,0,c
  3642  00036A  0100               	movlb	0	; () banked
  3643  00036C  379E               	rlcf	??_CANSetFilter& (0+255),f,b
  3644  00036E  379F               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3645  000370  37A0               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3646  000372  37A1               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3647  000374  2EE8               	decfsz	wreg,f,c
  3648  000376  D7F8               	goto	u5315
  3649  000378  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3650  00037C  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3651  000380  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3652  000384  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3653                           
  3654                           ; BSR set to: 0
  3655                           ;inc\CANlib.h: 815: RXF4SIDL = (unsigned char) tamp;
  3656  000388  C0A3  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  3657  00038C                     l4155:
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;inc\CANlib.h: 816: }
  3661                           ;inc\CANlib.h: 818: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  3662  00038C  0E05               	movlw	5
  3663  00038E  0100               	movlb	0	; () banked
  3664  000390  19A2               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3665  000392  A4D8               	btfss	status,2,c
  3666  000394  D053               	goto	l4173
  3667                           
  3668                           ; BSR set to: 0
  3669  000396  2821               	incf	CANSetFilter@type,w,c
  3670  000398  A4D8               	btfss	status,2,c
  3671  00039A  D050               	goto	l4173
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;inc\CANlib.h: 819: {
  3675                           ;inc\CANlib.h: 820: RXF5SIDLbits.EXIDEN = 0x00;
  3676  00039C  010F               	movlb	15	; () banked
  3677  00039E  9715               	bcf	21,3,b	;volatile
  3678                           
  3679                           ; BSR set to: 15
  3680                           ;inc\CANlib.h: 822: tamp = (filter >> 3);
  3681  0003A0  C01D  F09E         	movff	CANSetFilter@filter,??_CANSetFilter
  3682  0003A4  C01E  F09F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3683  0003A8  C01F  F0A0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3684  0003AC  C020  F0A1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3685  0003B0  0E04               	movlw	4
  3686  0003B2  D006               	goto	u5340
  3687  0003B4                     u5345:
  3688  0003B4  0100               	movlb	0	; () banked
  3689  0003B6  90D8               	bcf	status,0,c
  3690  0003B8  33A1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3691  0003BA  33A0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3692  0003BC  339F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3693  0003BE  339E               	rrcf	??_CANSetFilter& (0+255),f,b
  3694  0003C0                     u5340:
  3695  0003C0  2EE8               	decfsz	wreg,f,c
  3696  0003C2  D7F8               	goto	u5345
  3697  0003C4  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3698  0003C8  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3699  0003CC  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3700  0003D0  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;inc\CANlib.h: 823: tamp = tamp & 0x000000FF;
  3704  0003D4  0100               	movlb	0	; () banked
  3705  0003D6  51A3               	movf	CANSetFilter@tamp& (0+255),w,b
  3706  0003D8  0100               	movlb	0	; () banked
  3707  0003DA  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3708  0003DC  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3709  0003DE  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3710  0003E0  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;inc\CANlib.h: 824: RXF5SIDH = (unsigned char) tamp;
  3714  0003E2  C0A3  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;inc\CANlib.h: 826: tamp = filter & 0x00000007;
  3718  0003E6  0E07               	movlw	7
  3719  0003E8  141D               	andwf	CANSetFilter@filter,w,c
  3720  0003EA  0100               	movlb	0	; () banked
  3721  0003EC  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3722  0003EE  0E00               	movlw	0
  3723  0003F0  141E               	andwf	CANSetFilter@filter+1,w,c
  3724  0003F2  0100               	movlb	0	; () banked
  3725  0003F4  6FA4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3726  0003F6  0E00               	movlw	0
  3727  0003F8  141F               	andwf	CANSetFilter@filter+2,w,c
  3728  0003FA  0100               	movlb	0	; () banked
  3729  0003FC  6FA5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3730  0003FE  0E00               	movlw	0
  3731  000400  1420               	andwf	CANSetFilter@filter+3,w,c
  3732  000402  0100               	movlb	0	; () banked
  3733  000404  6FA6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;inc\CANlib.h: 827: tamp = tamp << 5;
  3737  000406  C0A3  F09E         	movff	CANSetFilter@tamp,??_CANSetFilter
  3738  00040A  C0A4  F09F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3739  00040E  C0A5  F0A0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3740  000412  C0A6  F0A1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3741  000416  0E05               	movlw	5
  3742  000418                     u5355:
  3743  000418  90D8               	bcf	status,0,c
  3744  00041A  0100               	movlb	0	; () banked
  3745  00041C  379E               	rlcf	??_CANSetFilter& (0+255),f,b
  3746  00041E  379F               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3747  000420  37A0               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3748  000422  37A1               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3749  000424  2EE8               	decfsz	wreg,f,c
  3750  000426  D7F8               	goto	u5355
  3751  000428  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3752  00042C  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3753  000430  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3754  000434  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;inc\CANlib.h: 828: RXF5SIDL = (unsigned char) tamp;
  3758  000438  C0A3  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  3759  00043C                     l4173:
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;inc\CANlib.h: 829: }
  3763                           ;inc\CANlib.h: 832: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  3764  00043C  0100               	movlb	0	; () banked
  3765  00043E  51A2               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3766  000440  0100               	movlb	0	; () banked
  3767  000442  A4D8               	btfss	status,2,c
  3768  000444  D07E               	goto	l4207
  3769                           
  3770                           ; BSR set to: 0
  3771  000446  0EF7               	movlw	247
  3772  000448  1821               	xorwf	CANSetFilter@type,w,c
  3773  00044A  A4D8               	btfss	status,2,c
  3774  00044C  D07A               	goto	l4207
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;inc\CANlib.h: 833: {
  3778                           ;inc\CANlib.h: 834: RXF0SIDLbits.EXIDEN = 0x01;
  3779  00044E  010F               	movlb	15	; () banked
  3780  000450  8701               	bsf	1,3,b	;volatile
  3781                           
  3782                           ; BSR set to: 15
  3783                           ;inc\CANlib.h: 836: tamp = filter & 0x000000FF;
  3784  000452  501D               	movf	CANSetFilter@filter,w,c
  3785  000454  0100               	movlb	0	; () banked
  3786  000456  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3787  000458  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3788  00045A  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3789  00045C  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;inc\CANlib.h: 837: RXF0EIDL = (unsigned char) tamp;
  3793  00045E  C0A3  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;inc\CANlib.h: 839: tamp = filter & 0x0000FF00;
  3797  000462  0E00               	movlw	0
  3798  000464  141D               	andwf	CANSetFilter@filter,w,c
  3799  000466  0100               	movlb	0	; () banked
  3800  000468  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3801  00046A  0EFF               	movlw	255
  3802  00046C  141E               	andwf	CANSetFilter@filter+1,w,c
  3803  00046E  0100               	movlb	0	; () banked
  3804  000470  6FA4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3805  000472  0E00               	movlw	0
  3806  000474  141F               	andwf	CANSetFilter@filter+2,w,c
  3807  000476  0100               	movlb	0	; () banked
  3808  000478  6FA5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3809  00047A  0E00               	movlw	0
  3810  00047C  1420               	andwf	CANSetFilter@filter+3,w,c
  3811  00047E  0100               	movlb	0	; () banked
  3812  000480  6FA6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;inc\CANlib.h: 840: tamp = tamp >> 8;
  3816  000482  C0A3  F09E         	movff	CANSetFilter@tamp,??_CANSetFilter
  3817  000486  C0A4  F09F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3818  00048A  C0A5  F0A0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3819  00048E  C0A6  F0A1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3820  000492  C09F  F09E         	movff	??_CANSetFilter+1,??_CANSetFilter
  3821  000496  C0A0  F09F         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3822  00049A  C0A1  F0A0         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3823  00049E  0100               	movlb	0	; () banked
  3824  0004A0  6BA1               	clrf	(??_CANSetFilter+3)& (0+255),b
  3825  0004A2  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3826  0004A6  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3827  0004AA  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3828  0004AE  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;inc\CANlib.h: 841: RXF0EIDH = (unsigned char) tamp;
  3832  0004B2  C0A3  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;inc\CANlib.h: 843: if (filter & 0x00010000)
  3836  0004B6  A01F               	btfss	CANSetFilter@filter+2,0,c
  3837  0004B8  D003               	goto	l473
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;inc\CANlib.h: 844: RXF0SIDLbits.EID16 = 0x01;
  3841  0004BA  010F               	movlb	15	; () banked
  3842  0004BC  8101               	bsf	1,0,b	;volatile
  3843  0004BE  D002               	goto	l474
  3844  0004C0                     l473:
  3845                           
  3846                           ; BSR set to: 0
  3847                           ;inc\CANlib.h: 845: else
  3848                           ;inc\CANlib.h: 846: RXF0SIDLbits.EID16 = 0x00;
  3849  0004C0  010F               	movlb	15	; () banked
  3850  0004C2  9101               	bcf	1,0,b	;volatile
  3851  0004C4                     l474:
  3852                           
  3853                           ; BSR set to: 15
  3854                           ;inc\CANlib.h: 848: if (filter & 0x00020000)
  3855  0004C4  A21F               	btfss	CANSetFilter@filter+2,1,c
  3856  0004C6  D003               	goto	l475
  3857                           
  3858                           ; BSR set to: 15
  3859                           ;inc\CANlib.h: 849: RXF0SIDLbits.EID17 = 0x01;
  3860  0004C8  010F               	movlb	15	; () banked
  3861  0004CA  8301               	bsf	1,1,b	;volatile
  3862  0004CC  D002               	goto	l476
  3863  0004CE                     l475:
  3864                           
  3865                           ; BSR set to: 15
  3866                           ;inc\CANlib.h: 850: else
  3867                           ;inc\CANlib.h: 851: RXF0SIDLbits.EID17 = 0x00;
  3868  0004CE  010F               	movlb	15	; () banked
  3869  0004D0  9301               	bcf	1,1,b	;volatile
  3870  0004D2                     l476:
  3871                           
  3872                           ; BSR set to: 15
  3873                           ;inc\CANlib.h: 853: if (filter & 0x00040000)
  3874  0004D2  A41F               	btfss	CANSetFilter@filter+2,2,c
  3875  0004D4  D003               	goto	l477
  3876                           
  3877                           ; BSR set to: 15
  3878                           ;inc\CANlib.h: 854: RXF0SIDLbits.SID0 = 0x01;
  3879  0004D6  010F               	movlb	15	; () banked
  3880  0004D8  8B01               	bsf	1,5,b	;volatile
  3881  0004DA  D002               	goto	l478
  3882  0004DC                     l477:
  3883                           
  3884                           ; BSR set to: 15
  3885                           ;inc\CANlib.h: 855: else
  3886                           ;inc\CANlib.h: 856: RXF0SIDLbits.SID0 = 0x00;
  3887  0004DC  010F               	movlb	15	; () banked
  3888  0004DE  9B01               	bcf	1,5,b	;volatile
  3889  0004E0                     l478:
  3890                           
  3891                           ; BSR set to: 15
  3892                           ;inc\CANlib.h: 858: if (filter & 0x00080000)
  3893  0004E0  A61F               	btfss	CANSetFilter@filter+2,3,c
  3894  0004E2  D003               	goto	l479
  3895                           
  3896                           ; BSR set to: 15
  3897                           ;inc\CANlib.h: 859: RXF0SIDLbits.SID1 = 0x01;
  3898  0004E4  010F               	movlb	15	; () banked
  3899  0004E6  8D01               	bsf	1,6,b	;volatile
  3900  0004E8  D002               	goto	l480
  3901  0004EA                     l479:
  3902                           
  3903                           ; BSR set to: 15
  3904                           ;inc\CANlib.h: 860: else
  3905                           ;inc\CANlib.h: 861: RXF0SIDLbits.SID1 = 0x00;
  3906  0004EA  010F               	movlb	15	; () banked
  3907  0004EC  9D01               	bcf	1,6,b	;volatile
  3908  0004EE                     l480:
  3909                           
  3910                           ; BSR set to: 15
  3911                           ;inc\CANlib.h: 863: if (filter & 0x00100000)
  3912  0004EE  A81F               	btfss	CANSetFilter@filter+2,4,c
  3913  0004F0  D003               	goto	l481
  3914                           
  3915                           ; BSR set to: 15
  3916                           ;inc\CANlib.h: 864: RXF0SIDLbits.SID2 = 0x01 ;
  3917  0004F2  010F               	movlb	15	; () banked
  3918  0004F4  8F01               	bsf	1,7,b	;volatile
  3919  0004F6  D002               	goto	l4201
  3920  0004F8                     l481:
  3921                           
  3922                           ; BSR set to: 15
  3923                           ;inc\CANlib.h: 865: else
  3924                           ;inc\CANlib.h: 866: RXF0SIDLbits.SID2 = 0x00 ;
  3925  0004F8  010F               	movlb	15	; () banked
  3926  0004FA  9F01               	bcf	1,7,b	;volatile
  3927  0004FC                     l4201:
  3928                           
  3929                           ; BSR set to: 15
  3930                           ;inc\CANlib.h: 868: tamp = (filter >> 21);
  3931  0004FC  C01D  F09E         	movff	CANSetFilter@filter,??_CANSetFilter
  3932  000500  C01E  F09F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3933  000504  C01F  F0A0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3934  000508  C020  F0A1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3935  00050C  0E16               	movlw	22
  3936  00050E  D006               	goto	u5430
  3937  000510                     u5435:
  3938  000510  0100               	movlb	0	; () banked
  3939  000512  90D8               	bcf	status,0,c
  3940  000514  33A1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3941  000516  33A0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3942  000518  339F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3943  00051A  339E               	rrcf	??_CANSetFilter& (0+255),f,b
  3944  00051C                     u5430:
  3945  00051C  2EE8               	decfsz	wreg,f,c
  3946  00051E  D7F8               	goto	u5435
  3947  000520  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3948  000524  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3949  000528  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3950  00052C  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;inc\CANlib.h: 869: tamp = tamp & 0x000000FF;
  3954  000530  0100               	movlb	0	; () banked
  3955  000532  51A3               	movf	CANSetFilter@tamp& (0+255),w,b
  3956  000534  0100               	movlb	0	; () banked
  3957  000536  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3958  000538  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3959  00053A  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3960  00053C  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;inc\CANlib.h: 870: RXF0SIDH = (unsigned char) tamp;
  3964  00053E  C0A3  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3965  000542                     l4207:
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;inc\CANlib.h: 871: }
  3969                           ;inc\CANlib.h: 873: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  3970  000542  0100               	movlb	0	; () banked
  3971  000544  05A2               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3972  000546  A4D8               	btfss	status,2,c
  3973  000548  D07E               	goto	l4241
  3974                           
  3975                           ; BSR set to: 0
  3976  00054A  0EF7               	movlw	247
  3977  00054C  1821               	xorwf	CANSetFilter@type,w,c
  3978  00054E  A4D8               	btfss	status,2,c
  3979  000550  D07A               	goto	l4241
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;inc\CANlib.h: 874: {
  3983                           ;inc\CANlib.h: 875: RXF1SIDLbits.EXIDEN = 0x01;
  3984  000552  010F               	movlb	15	; () banked
  3985  000554  8705               	bsf	5,3,b	;volatile
  3986                           
  3987                           ; BSR set to: 15
  3988                           ;inc\CANlib.h: 877: tamp = filter & 0x000000FF;
  3989  000556  501D               	movf	CANSetFilter@filter,w,c
  3990  000558  0100               	movlb	0	; () banked
  3991  00055A  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3992  00055C  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3993  00055E  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3994  000560  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;inc\CANlib.h: 878: RXF1EIDL = (unsigned char) tamp;
  3998  000562  C0A3  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  3999                           
  4000                           ; BSR set to: 0
  4001                           ;inc\CANlib.h: 880: tamp = filter & 0x0000FF00;
  4002  000566  0E00               	movlw	0
  4003  000568  141D               	andwf	CANSetFilter@filter,w,c
  4004  00056A  0100               	movlb	0	; () banked
  4005  00056C  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4006  00056E  0EFF               	movlw	255
  4007  000570  141E               	andwf	CANSetFilter@filter+1,w,c
  4008  000572  0100               	movlb	0	; () banked
  4009  000574  6FA4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4010  000576  0E00               	movlw	0
  4011  000578  141F               	andwf	CANSetFilter@filter+2,w,c
  4012  00057A  0100               	movlb	0	; () banked
  4013  00057C  6FA5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4014  00057E  0E00               	movlw	0
  4015  000580  1420               	andwf	CANSetFilter@filter+3,w,c
  4016  000582  0100               	movlb	0	; () banked
  4017  000584  6FA6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;inc\CANlib.h: 881: tamp = tamp >> 8;
  4021  000586  C0A3  F09E         	movff	CANSetFilter@tamp,??_CANSetFilter
  4022  00058A  C0A4  F09F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4023  00058E  C0A5  F0A0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4024  000592  C0A6  F0A1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4025  000596  C09F  F09E         	movff	??_CANSetFilter+1,??_CANSetFilter
  4026  00059A  C0A0  F09F         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4027  00059E  C0A1  F0A0         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4028  0005A2  0100               	movlb	0	; () banked
  4029  0005A4  6BA1               	clrf	(??_CANSetFilter+3)& (0+255),b
  4030  0005A6  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4031  0005AA  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4032  0005AE  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4033  0005B2  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4034                           
  4035                           ; BSR set to: 0
  4036                           ;inc\CANlib.h: 882: RXF1EIDH = (unsigned char) tamp;
  4037  0005B6  C0A3  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4038                           
  4039                           ; BSR set to: 0
  4040                           ;inc\CANlib.h: 884: if (filter & 0x00010000)
  4041  0005BA  A01F               	btfss	CANSetFilter@filter+2,0,c
  4042  0005BC  D003               	goto	l484
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;inc\CANlib.h: 885: RXF1SIDLbits.EID16 = 0x01;
  4046  0005BE  010F               	movlb	15	; () banked
  4047  0005C0  8105               	bsf	5,0,b	;volatile
  4048  0005C2  D002               	goto	l485
  4049  0005C4                     l484:
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;inc\CANlib.h: 886: else
  4053                           ;inc\CANlib.h: 887: RXF1SIDLbits.EID16 = 0x00;
  4054  0005C4  010F               	movlb	15	; () banked
  4055  0005C6  9105               	bcf	5,0,b	;volatile
  4056  0005C8                     l485:
  4057                           
  4058                           ; BSR set to: 15
  4059                           ;inc\CANlib.h: 889: if (filter & 0x00020000)
  4060  0005C8  A21F               	btfss	CANSetFilter@filter+2,1,c
  4061  0005CA  D003               	goto	l486
  4062                           
  4063                           ; BSR set to: 15
  4064                           ;inc\CANlib.h: 890: RXF1SIDLbits.EID17 = 0x01;
  4065  0005CC  010F               	movlb	15	; () banked
  4066  0005CE  8305               	bsf	5,1,b	;volatile
  4067  0005D0  D002               	goto	l487
  4068  0005D2                     l486:
  4069                           
  4070                           ; BSR set to: 15
  4071                           ;inc\CANlib.h: 891: else
  4072                           ;inc\CANlib.h: 892: RXF1SIDLbits.EID17 = 0x00;
  4073  0005D2  010F               	movlb	15	; () banked
  4074  0005D4  9305               	bcf	5,1,b	;volatile
  4075  0005D6                     l487:
  4076                           
  4077                           ; BSR set to: 15
  4078                           ;inc\CANlib.h: 894: if (filter & 0x00040000)
  4079  0005D6  A41F               	btfss	CANSetFilter@filter+2,2,c
  4080  0005D8  D003               	goto	l488
  4081                           
  4082                           ; BSR set to: 15
  4083                           ;inc\CANlib.h: 895: RXF1SIDLbits.SID0 = 0x01;
  4084  0005DA  010F               	movlb	15	; () banked
  4085  0005DC  8B05               	bsf	5,5,b	;volatile
  4086  0005DE  D002               	goto	l489
  4087  0005E0                     l488:
  4088                           
  4089                           ; BSR set to: 15
  4090                           ;inc\CANlib.h: 896: else
  4091                           ;inc\CANlib.h: 897: RXF1SIDLbits.SID0 = 0x00;
  4092  0005E0  010F               	movlb	15	; () banked
  4093  0005E2  9B05               	bcf	5,5,b	;volatile
  4094  0005E4                     l489:
  4095                           
  4096                           ; BSR set to: 15
  4097                           ;inc\CANlib.h: 899: if (filter & 0x00080000)
  4098  0005E4  A61F               	btfss	CANSetFilter@filter+2,3,c
  4099  0005E6  D003               	goto	l490
  4100                           
  4101                           ; BSR set to: 15
  4102                           ;inc\CANlib.h: 900: RXF1SIDLbits.SID1 = 0x01;
  4103  0005E8  010F               	movlb	15	; () banked
  4104  0005EA  8D05               	bsf	5,6,b	;volatile
  4105  0005EC  D002               	goto	l491
  4106  0005EE                     l490:
  4107                           
  4108                           ; BSR set to: 15
  4109                           ;inc\CANlib.h: 901: else
  4110                           ;inc\CANlib.h: 902: RXF1SIDLbits.SID1 = 0x00;
  4111  0005EE  010F               	movlb	15	; () banked
  4112  0005F0  9D05               	bcf	5,6,b	;volatile
  4113  0005F2                     l491:
  4114                           
  4115                           ; BSR set to: 15
  4116                           ;inc\CANlib.h: 904: if (filter & 0x00100000)
  4117  0005F2  A81F               	btfss	CANSetFilter@filter+2,4,c
  4118  0005F4  D003               	goto	l492
  4119                           
  4120                           ; BSR set to: 15
  4121                           ;inc\CANlib.h: 905: RXF1SIDLbits.SID2 = 0x01 ;
  4122  0005F6  010F               	movlb	15	; () banked
  4123  0005F8  8F05               	bsf	5,7,b	;volatile
  4124  0005FA  D002               	goto	l4235
  4125  0005FC                     l492:
  4126                           
  4127                           ; BSR set to: 15
  4128                           ;inc\CANlib.h: 906: else
  4129                           ;inc\CANlib.h: 907: RXF1SIDLbits.SID2 = 0x00 ;
  4130  0005FC  010F               	movlb	15	; () banked
  4131  0005FE  9F05               	bcf	5,7,b	;volatile
  4132  000600                     l4235:
  4133                           
  4134                           ; BSR set to: 15
  4135                           ;inc\CANlib.h: 909: tamp = (filter >> 21);
  4136  000600  C01D  F09E         	movff	CANSetFilter@filter,??_CANSetFilter
  4137  000604  C01E  F09F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4138  000608  C01F  F0A0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4139  00060C  C020  F0A1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4140  000610  0E16               	movlw	22
  4141  000612  D006               	goto	u5510
  4142  000614                     u5515:
  4143  000614  0100               	movlb	0	; () banked
  4144  000616  90D8               	bcf	status,0,c
  4145  000618  33A1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4146  00061A  33A0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4147  00061C  339F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4148  00061E  339E               	rrcf	??_CANSetFilter& (0+255),f,b
  4149  000620                     u5510:
  4150  000620  2EE8               	decfsz	wreg,f,c
  4151  000622  D7F8               	goto	u5515
  4152  000624  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4153  000628  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4154  00062C  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4155  000630  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;inc\CANlib.h: 910: tamp = tamp & 0x000000FF;
  4159  000634  0100               	movlb	0	; () banked
  4160  000636  51A3               	movf	CANSetFilter@tamp& (0+255),w,b
  4161  000638  0100               	movlb	0	; () banked
  4162  00063A  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4163  00063C  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4164  00063E  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4165  000640  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;inc\CANlib.h: 911: RXF1SIDH = (unsigned char) tamp;
  4169  000642  C0A3  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4170  000646                     l4241:
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;inc\CANlib.h: 912: }
  4174                           ;inc\CANlib.h: 915: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4175  000646  0E02               	movlw	2
  4176  000648  0100               	movlb	0	; () banked
  4177  00064A  19A2               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4178  00064C  A4D8               	btfss	status,2,c
  4179  00064E  D07E               	goto	l4275
  4180                           
  4181                           ; BSR set to: 0
  4182  000650  0EF7               	movlw	247
  4183  000652  1821               	xorwf	CANSetFilter@type,w,c
  4184  000654  A4D8               	btfss	status,2,c
  4185  000656  D07A               	goto	l4275
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;inc\CANlib.h: 916: {
  4189                           ;inc\CANlib.h: 917: RXF2SIDLbits.EXIDEN = 0x01;
  4190  000658  010F               	movlb	15	; () banked
  4191  00065A  8709               	bsf	9,3,b	;volatile
  4192                           
  4193                           ; BSR set to: 15
  4194                           ;inc\CANlib.h: 919: tamp = filter & 0x000000FF;
  4195  00065C  501D               	movf	CANSetFilter@filter,w,c
  4196  00065E  0100               	movlb	0	; () banked
  4197  000660  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4198  000662  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4199  000664  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4200  000666  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;inc\CANlib.h: 920: RXF2EIDL = (unsigned char) tamp;
  4204  000668  C0A3  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;inc\CANlib.h: 922: tamp = filter & 0x0000FF00;
  4208  00066C  0E00               	movlw	0
  4209  00066E  141D               	andwf	CANSetFilter@filter,w,c
  4210  000670  0100               	movlb	0	; () banked
  4211  000672  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4212  000674  0EFF               	movlw	255
  4213  000676  141E               	andwf	CANSetFilter@filter+1,w,c
  4214  000678  0100               	movlb	0	; () banked
  4215  00067A  6FA4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4216  00067C  0E00               	movlw	0
  4217  00067E  141F               	andwf	CANSetFilter@filter+2,w,c
  4218  000680  0100               	movlb	0	; () banked
  4219  000682  6FA5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4220  000684  0E00               	movlw	0
  4221  000686  1420               	andwf	CANSetFilter@filter+3,w,c
  4222  000688  0100               	movlb	0	; () banked
  4223  00068A  6FA6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4224                           
  4225                           ; BSR set to: 0
  4226                           ;inc\CANlib.h: 923: tamp = tamp >> 8;
  4227  00068C  C0A3  F09E         	movff	CANSetFilter@tamp,??_CANSetFilter
  4228  000690  C0A4  F09F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4229  000694  C0A5  F0A0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4230  000698  C0A6  F0A1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4231  00069C  C09F  F09E         	movff	??_CANSetFilter+1,??_CANSetFilter
  4232  0006A0  C0A0  F09F         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4233  0006A4  C0A1  F0A0         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4234  0006A8  0100               	movlb	0	; () banked
  4235  0006AA  6BA1               	clrf	(??_CANSetFilter+3)& (0+255),b
  4236  0006AC  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4237  0006B0  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4238  0006B4  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4239  0006B8  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;inc\CANlib.h: 924: RXF2EIDH = (unsigned char) tamp;
  4243  0006BC  C0A3  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;inc\CANlib.h: 926: if (filter & 0x00010000)
  4247  0006C0  A01F               	btfss	CANSetFilter@filter+2,0,c
  4248  0006C2  D003               	goto	l495
  4249                           
  4250                           ; BSR set to: 0
  4251                           ;inc\CANlib.h: 927: RXF2SIDLbits.EID16 = 0x01;
  4252  0006C4  010F               	movlb	15	; () banked
  4253  0006C6  8109               	bsf	9,0,b	;volatile
  4254  0006C8  D002               	goto	l496
  4255  0006CA                     l495:
  4256                           
  4257                           ; BSR set to: 0
  4258                           ;inc\CANlib.h: 928: else
  4259                           ;inc\CANlib.h: 929: RXF2SIDLbits.EID16 = 0x00;
  4260  0006CA  010F               	movlb	15	; () banked
  4261  0006CC  9109               	bcf	9,0,b	;volatile
  4262  0006CE                     l496:
  4263                           
  4264                           ; BSR set to: 15
  4265                           ;inc\CANlib.h: 931: if (filter & 0x00020000)
  4266  0006CE  A21F               	btfss	CANSetFilter@filter+2,1,c
  4267  0006D0  D003               	goto	l497
  4268                           
  4269                           ; BSR set to: 15
  4270                           ;inc\CANlib.h: 932: RXF2SIDLbits.EID17 = 0x01;
  4271  0006D2  010F               	movlb	15	; () banked
  4272  0006D4  8309               	bsf	9,1,b	;volatile
  4273  0006D6  D002               	goto	l498
  4274  0006D8                     l497:
  4275                           
  4276                           ; BSR set to: 15
  4277                           ;inc\CANlib.h: 933: else
  4278                           ;inc\CANlib.h: 934: RXF2SIDLbits.EID17 = 0x00;
  4279  0006D8  010F               	movlb	15	; () banked
  4280  0006DA  9309               	bcf	9,1,b	;volatile
  4281  0006DC                     l498:
  4282                           
  4283                           ; BSR set to: 15
  4284                           ;inc\CANlib.h: 936: if (filter & 0x00040000)
  4285  0006DC  A41F               	btfss	CANSetFilter@filter+2,2,c
  4286  0006DE  D003               	goto	l499
  4287                           
  4288                           ; BSR set to: 15
  4289                           ;inc\CANlib.h: 937: RXF2SIDLbits.SID0 = 0x01;
  4290  0006E0  010F               	movlb	15	; () banked
  4291  0006E2  8B09               	bsf	9,5,b	;volatile
  4292  0006E4  D002               	goto	l500
  4293  0006E6                     l499:
  4294                           
  4295                           ; BSR set to: 15
  4296                           ;inc\CANlib.h: 938: else
  4297                           ;inc\CANlib.h: 939: RXF2SIDLbits.SID0 = 0x00;
  4298  0006E6  010F               	movlb	15	; () banked
  4299  0006E8  9B09               	bcf	9,5,b	;volatile
  4300  0006EA                     l500:
  4301                           
  4302                           ; BSR set to: 15
  4303                           ;inc\CANlib.h: 941: if (filter & 0x00080000)
  4304  0006EA  A61F               	btfss	CANSetFilter@filter+2,3,c
  4305  0006EC  D003               	goto	l501
  4306                           
  4307                           ; BSR set to: 15
  4308                           ;inc\CANlib.h: 942: RXF2SIDLbits.SID1 = 0x01;
  4309  0006EE  010F               	movlb	15	; () banked
  4310  0006F0  8D09               	bsf	9,6,b	;volatile
  4311  0006F2  D002               	goto	l502
  4312  0006F4                     l501:
  4313                           
  4314                           ; BSR set to: 15
  4315                           ;inc\CANlib.h: 943: else
  4316                           ;inc\CANlib.h: 944: RXF2SIDLbits.SID1 = 0x00;
  4317  0006F4  010F               	movlb	15	; () banked
  4318  0006F6  9D09               	bcf	9,6,b	;volatile
  4319  0006F8                     l502:
  4320                           
  4321                           ; BSR set to: 15
  4322                           ;inc\CANlib.h: 946: if (filter & 0x00100000)
  4323  0006F8  A81F               	btfss	CANSetFilter@filter+2,4,c
  4324  0006FA  D003               	goto	l503
  4325                           
  4326                           ; BSR set to: 15
  4327                           ;inc\CANlib.h: 947: RXF2SIDLbits.SID2 = 0x01 ;
  4328  0006FC  010F               	movlb	15	; () banked
  4329  0006FE  8F09               	bsf	9,7,b	;volatile
  4330  000700  D002               	goto	l4269
  4331  000702                     l503:
  4332                           
  4333                           ; BSR set to: 15
  4334                           ;inc\CANlib.h: 948: else
  4335                           ;inc\CANlib.h: 949: RXF2SIDLbits.SID2 = 0x00 ;
  4336  000702  010F               	movlb	15	; () banked
  4337  000704  9F09               	bcf	9,7,b	;volatile
  4338  000706                     l4269:
  4339                           
  4340                           ; BSR set to: 15
  4341                           ;inc\CANlib.h: 951: tamp = (filter >> 21);
  4342  000706  C01D  F09E         	movff	CANSetFilter@filter,??_CANSetFilter
  4343  00070A  C01E  F09F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4344  00070E  C01F  F0A0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4345  000712  C020  F0A1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4346  000716  0E16               	movlw	22
  4347  000718  D006               	goto	u5590
  4348  00071A                     u5595:
  4349  00071A  0100               	movlb	0	; () banked
  4350  00071C  90D8               	bcf	status,0,c
  4351  00071E  33A1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4352  000720  33A0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4353  000722  339F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4354  000724  339E               	rrcf	??_CANSetFilter& (0+255),f,b
  4355  000726                     u5590:
  4356  000726  2EE8               	decfsz	wreg,f,c
  4357  000728  D7F8               	goto	u5595
  4358  00072A  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4359  00072E  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4360  000732  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4361  000736  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;inc\CANlib.h: 952: tamp = tamp & 0x000000FF;
  4365  00073A  0100               	movlb	0	; () banked
  4366  00073C  51A3               	movf	CANSetFilter@tamp& (0+255),w,b
  4367  00073E  0100               	movlb	0	; () banked
  4368  000740  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4369  000742  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4370  000744  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4371  000746  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;inc\CANlib.h: 953: RXF2SIDH = (unsigned char) tamp;
  4375  000748  C0A3  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4376  00074C                     l4275:
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;inc\CANlib.h: 954: }
  4380                           ;inc\CANlib.h: 956: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  4381  00074C  0E03               	movlw	3
  4382  00074E  0100               	movlb	0	; () banked
  4383  000750  19A2               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4384  000752  A4D8               	btfss	status,2,c
  4385  000754  D07E               	goto	l4309
  4386                           
  4387                           ; BSR set to: 0
  4388  000756  0EF7               	movlw	247
  4389  000758  1821               	xorwf	CANSetFilter@type,w,c
  4390  00075A  A4D8               	btfss	status,2,c
  4391  00075C  D07A               	goto	l4309
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;inc\CANlib.h: 957: {
  4395                           ;inc\CANlib.h: 958: RXF3SIDLbits.EXIDEN = 0x01;
  4396  00075E  010F               	movlb	15	; () banked
  4397  000760  870D               	bsf	13,3,b	;volatile
  4398                           
  4399                           ; BSR set to: 15
  4400                           ;inc\CANlib.h: 960: tamp = filter & 0x000000FF;
  4401  000762  501D               	movf	CANSetFilter@filter,w,c
  4402  000764  0100               	movlb	0	; () banked
  4403  000766  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4404  000768  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4405  00076A  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4406  00076C  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4407                           
  4408                           ; BSR set to: 0
  4409                           ;inc\CANlib.h: 961: RXF3EIDL = (unsigned char) tamp;
  4410  00076E  C0A3  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  4411                           
  4412                           ; BSR set to: 0
  4413                           ;inc\CANlib.h: 963: tamp = filter & 0x0000FF00;
  4414  000772  0E00               	movlw	0
  4415  000774  141D               	andwf	CANSetFilter@filter,w,c
  4416  000776  0100               	movlb	0	; () banked
  4417  000778  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4418  00077A  0EFF               	movlw	255
  4419  00077C  141E               	andwf	CANSetFilter@filter+1,w,c
  4420  00077E  0100               	movlb	0	; () banked
  4421  000780  6FA4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4422  000782  0E00               	movlw	0
  4423  000784  141F               	andwf	CANSetFilter@filter+2,w,c
  4424  000786  0100               	movlb	0	; () banked
  4425  000788  6FA5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4426  00078A  0E00               	movlw	0
  4427  00078C  1420               	andwf	CANSetFilter@filter+3,w,c
  4428  00078E  0100               	movlb	0	; () banked
  4429  000790  6FA6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;inc\CANlib.h: 964: tamp = tamp >> 8;
  4433  000792  C0A3  F09E         	movff	CANSetFilter@tamp,??_CANSetFilter
  4434  000796  C0A4  F09F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4435  00079A  C0A5  F0A0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4436  00079E  C0A6  F0A1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4437  0007A2  C09F  F09E         	movff	??_CANSetFilter+1,??_CANSetFilter
  4438  0007A6  C0A0  F09F         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4439  0007AA  C0A1  F0A0         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4440  0007AE  0100               	movlb	0	; () banked
  4441  0007B0  6BA1               	clrf	(??_CANSetFilter+3)& (0+255),b
  4442  0007B2  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4443  0007B6  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4444  0007BA  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4445  0007BE  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4446                           
  4447                           ; BSR set to: 0
  4448                           ;inc\CANlib.h: 965: RXF3EIDH = (unsigned char) tamp;
  4449  0007C2  C0A3  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;inc\CANlib.h: 967: if (filter & 0x00010000)
  4453  0007C6  A01F               	btfss	CANSetFilter@filter+2,0,c
  4454  0007C8  D003               	goto	l506
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;inc\CANlib.h: 968: RXF3SIDLbits.EID16 = 0x01;
  4458  0007CA  010F               	movlb	15	; () banked
  4459  0007CC  810D               	bsf	13,0,b	;volatile
  4460  0007CE  D002               	goto	l507
  4461  0007D0                     l506:
  4462                           
  4463                           ; BSR set to: 0
  4464                           ;inc\CANlib.h: 969: else
  4465                           ;inc\CANlib.h: 970: RXF3SIDLbits.EID16 = 0x00;
  4466  0007D0  010F               	movlb	15	; () banked
  4467  0007D2  910D               	bcf	13,0,b	;volatile
  4468  0007D4                     l507:
  4469                           
  4470                           ; BSR set to: 15
  4471                           ;inc\CANlib.h: 972: if (filter & 0x00020000)
  4472  0007D4  A21F               	btfss	CANSetFilter@filter+2,1,c
  4473  0007D6  D003               	goto	l508
  4474                           
  4475                           ; BSR set to: 15
  4476                           ;inc\CANlib.h: 973: RXF3SIDLbits.EID17 = 0x01;
  4477  0007D8  010F               	movlb	15	; () banked
  4478  0007DA  830D               	bsf	13,1,b	;volatile
  4479  0007DC  D002               	goto	l509
  4480  0007DE                     l508:
  4481                           
  4482                           ; BSR set to: 15
  4483                           ;inc\CANlib.h: 974: else
  4484                           ;inc\CANlib.h: 975: RXF3SIDLbits.EID17 = 0x00;
  4485  0007DE  010F               	movlb	15	; () banked
  4486  0007E0  930D               	bcf	13,1,b	;volatile
  4487  0007E2                     l509:
  4488                           
  4489                           ; BSR set to: 15
  4490                           ;inc\CANlib.h: 977: if (filter & 0x00040000)
  4491  0007E2  A41F               	btfss	CANSetFilter@filter+2,2,c
  4492  0007E4  D003               	goto	l510
  4493                           
  4494                           ; BSR set to: 15
  4495                           ;inc\CANlib.h: 978: RXF3SIDLbits.SID0 = 0x01;
  4496  0007E6  010F               	movlb	15	; () banked
  4497  0007E8  8B0D               	bsf	13,5,b	;volatile
  4498  0007EA  D002               	goto	l511
  4499  0007EC                     l510:
  4500                           
  4501                           ; BSR set to: 15
  4502                           ;inc\CANlib.h: 979: else
  4503                           ;inc\CANlib.h: 980: RXF3SIDLbits.SID0 = 0x00;
  4504  0007EC  010F               	movlb	15	; () banked
  4505  0007EE  9B0D               	bcf	13,5,b	;volatile
  4506  0007F0                     l511:
  4507                           
  4508                           ; BSR set to: 15
  4509                           ;inc\CANlib.h: 982: if (filter & 0x00080000)
  4510  0007F0  A61F               	btfss	CANSetFilter@filter+2,3,c
  4511  0007F2  D003               	goto	l512
  4512                           
  4513                           ; BSR set to: 15
  4514                           ;inc\CANlib.h: 983: RXF3SIDLbits.SID1 = 0x01;
  4515  0007F4  010F               	movlb	15	; () banked
  4516  0007F6  8D0D               	bsf	13,6,b	;volatile
  4517  0007F8  D002               	goto	l513
  4518  0007FA                     l512:
  4519                           
  4520                           ; BSR set to: 15
  4521                           ;inc\CANlib.h: 984: else
  4522                           ;inc\CANlib.h: 985: RXF3SIDLbits.SID1 = 0x00;
  4523  0007FA  010F               	movlb	15	; () banked
  4524  0007FC  9D0D               	bcf	13,6,b	;volatile
  4525  0007FE                     l513:
  4526                           
  4527                           ; BSR set to: 15
  4528                           ;inc\CANlib.h: 987: if (filter & 0x00100000)
  4529  0007FE  A81F               	btfss	CANSetFilter@filter+2,4,c
  4530  000800  D003               	goto	l514
  4531                           
  4532                           ; BSR set to: 15
  4533                           ;inc\CANlib.h: 988: RXF3SIDLbits.SID2 = 0x01 ;
  4534  000802  010F               	movlb	15	; () banked
  4535  000804  8F0D               	bsf	13,7,b	;volatile
  4536  000806  D002               	goto	l4303
  4537  000808                     l514:
  4538                           
  4539                           ; BSR set to: 15
  4540                           ;inc\CANlib.h: 989: else
  4541                           ;inc\CANlib.h: 990: RXF3SIDLbits.SID2 = 0x00 ;
  4542  000808  010F               	movlb	15	; () banked
  4543  00080A  9F0D               	bcf	13,7,b	;volatile
  4544  00080C                     l4303:
  4545                           
  4546                           ; BSR set to: 15
  4547                           ;inc\CANlib.h: 992: tamp = (filter >> 21);
  4548  00080C  C01D  F09E         	movff	CANSetFilter@filter,??_CANSetFilter
  4549  000810  C01E  F09F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4550  000814  C01F  F0A0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4551  000818  C020  F0A1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4552  00081C  0E16               	movlw	22
  4553  00081E  D006               	goto	u5670
  4554  000820                     u5675:
  4555  000820  0100               	movlb	0	; () banked
  4556  000822  90D8               	bcf	status,0,c
  4557  000824  33A1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4558  000826  33A0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4559  000828  339F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4560  00082A  339E               	rrcf	??_CANSetFilter& (0+255),f,b
  4561  00082C                     u5670:
  4562  00082C  2EE8               	decfsz	wreg,f,c
  4563  00082E  D7F8               	goto	u5675
  4564  000830  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4565  000834  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4566  000838  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4567  00083C  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;inc\CANlib.h: 993: tamp = tamp & 0x000000FF;
  4571  000840  0100               	movlb	0	; () banked
  4572  000842  51A3               	movf	CANSetFilter@tamp& (0+255),w,b
  4573  000844  0100               	movlb	0	; () banked
  4574  000846  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4575  000848  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4576  00084A  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4577  00084C  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4578                           
  4579                           ; BSR set to: 0
  4580                           ;inc\CANlib.h: 994: RXF3SIDH = (unsigned char) tamp;
  4581  00084E  C0A3  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4582  000852                     l4309:
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;inc\CANlib.h: 995: }
  4586                           ;inc\CANlib.h: 997: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  4587  000852  0E04               	movlw	4
  4588  000854  0100               	movlb	0	; () banked
  4589  000856  19A2               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4590  000858  A4D8               	btfss	status,2,c
  4591  00085A  D07E               	goto	l4343
  4592                           
  4593                           ; BSR set to: 0
  4594  00085C  0EF7               	movlw	247
  4595  00085E  1821               	xorwf	CANSetFilter@type,w,c
  4596  000860  A4D8               	btfss	status,2,c
  4597  000862  D07A               	goto	l4343
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;inc\CANlib.h: 998: {
  4601                           ;inc\CANlib.h: 999: RXF4SIDLbits.EXIDEN = 0x01;
  4602  000864  010F               	movlb	15	; () banked
  4603  000866  8711               	bsf	17,3,b	;volatile
  4604                           
  4605                           ; BSR set to: 15
  4606                           ;inc\CANlib.h: 1001: tamp = filter & 0x000000FF;
  4607  000868  501D               	movf	CANSetFilter@filter,w,c
  4608  00086A  0100               	movlb	0	; () banked
  4609  00086C  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4610  00086E  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4611  000870  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4612  000872  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;inc\CANlib.h: 1002: RXF4EIDL = (unsigned char) tamp;
  4616  000874  C0A3  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  4617                           
  4618                           ; BSR set to: 0
  4619                           ;inc\CANlib.h: 1004: tamp = filter & 0x0000FF00;
  4620  000878  0E00               	movlw	0
  4621  00087A  141D               	andwf	CANSetFilter@filter,w,c
  4622  00087C  0100               	movlb	0	; () banked
  4623  00087E  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4624  000880  0EFF               	movlw	255
  4625  000882  141E               	andwf	CANSetFilter@filter+1,w,c
  4626  000884  0100               	movlb	0	; () banked
  4627  000886  6FA4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4628  000888  0E00               	movlw	0
  4629  00088A  141F               	andwf	CANSetFilter@filter+2,w,c
  4630  00088C  0100               	movlb	0	; () banked
  4631  00088E  6FA5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4632  000890  0E00               	movlw	0
  4633  000892  1420               	andwf	CANSetFilter@filter+3,w,c
  4634  000894  0100               	movlb	0	; () banked
  4635  000896  6FA6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;inc\CANlib.h: 1005: tamp = tamp >> 8;
  4639  000898  C0A3  F09E         	movff	CANSetFilter@tamp,??_CANSetFilter
  4640  00089C  C0A4  F09F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4641  0008A0  C0A5  F0A0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4642  0008A4  C0A6  F0A1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4643  0008A8  C09F  F09E         	movff	??_CANSetFilter+1,??_CANSetFilter
  4644  0008AC  C0A0  F09F         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4645  0008B0  C0A1  F0A0         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4646  0008B4  0100               	movlb	0	; () banked
  4647  0008B6  6BA1               	clrf	(??_CANSetFilter+3)& (0+255),b
  4648  0008B8  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4649  0008BC  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4650  0008C0  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4651  0008C4  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;inc\CANlib.h: 1006: RXF4EIDH = (unsigned char) tamp;
  4655  0008C8  C0A3  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;inc\CANlib.h: 1008: if (filter & 0x00010000)
  4659  0008CC  A01F               	btfss	CANSetFilter@filter+2,0,c
  4660  0008CE  D003               	goto	l517
  4661                           
  4662                           ; BSR set to: 0
  4663                           ;inc\CANlib.h: 1009: RXF4SIDLbits.EID16 = 0x01;
  4664  0008D0  010F               	movlb	15	; () banked
  4665  0008D2  8111               	bsf	17,0,b	;volatile
  4666  0008D4  D002               	goto	l518
  4667  0008D6                     l517:
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;inc\CANlib.h: 1010: else
  4671                           ;inc\CANlib.h: 1011: RXF4SIDLbits.EID16 = 0x00;
  4672  0008D6  010F               	movlb	15	; () banked
  4673  0008D8  9111               	bcf	17,0,b	;volatile
  4674  0008DA                     l518:
  4675                           
  4676                           ; BSR set to: 15
  4677                           ;inc\CANlib.h: 1013: if (filter & 0x00020000)
  4678  0008DA  A21F               	btfss	CANSetFilter@filter+2,1,c
  4679  0008DC  D003               	goto	l519
  4680                           
  4681                           ; BSR set to: 15
  4682                           ;inc\CANlib.h: 1014: RXF4SIDLbits.EID17 = 0x01;
  4683  0008DE  010F               	movlb	15	; () banked
  4684  0008E0  8311               	bsf	17,1,b	;volatile
  4685  0008E2  D002               	goto	l520
  4686  0008E4                     l519:
  4687                           
  4688                           ; BSR set to: 15
  4689                           ;inc\CANlib.h: 1015: else
  4690                           ;inc\CANlib.h: 1016: RXF4SIDLbits.EID17 = 0x00;
  4691  0008E4  010F               	movlb	15	; () banked
  4692  0008E6  9311               	bcf	17,1,b	;volatile
  4693  0008E8                     l520:
  4694                           
  4695                           ; BSR set to: 15
  4696                           ;inc\CANlib.h: 1018: if (filter & 0x00040000)
  4697  0008E8  A41F               	btfss	CANSetFilter@filter+2,2,c
  4698  0008EA  D003               	goto	l521
  4699                           
  4700                           ; BSR set to: 15
  4701                           ;inc\CANlib.h: 1019: RXF4SIDLbits.SID0 = 0x01;
  4702  0008EC  010F               	movlb	15	; () banked
  4703  0008EE  8B11               	bsf	17,5,b	;volatile
  4704  0008F0  D002               	goto	l522
  4705  0008F2                     l521:
  4706                           
  4707                           ; BSR set to: 15
  4708                           ;inc\CANlib.h: 1020: else
  4709                           ;inc\CANlib.h: 1021: RXF4SIDLbits.SID0 = 0x00;
  4710  0008F2  010F               	movlb	15	; () banked
  4711  0008F4  9B11               	bcf	17,5,b	;volatile
  4712  0008F6                     l522:
  4713                           
  4714                           ; BSR set to: 15
  4715                           ;inc\CANlib.h: 1023: if (filter & 0x00080000)
  4716  0008F6  A61F               	btfss	CANSetFilter@filter+2,3,c
  4717  0008F8  D003               	goto	l523
  4718                           
  4719                           ; BSR set to: 15
  4720                           ;inc\CANlib.h: 1024: RXF4SIDLbits.SID1 = 0x01;
  4721  0008FA  010F               	movlb	15	; () banked
  4722  0008FC  8D11               	bsf	17,6,b	;volatile
  4723  0008FE  D002               	goto	l524
  4724  000900                     l523:
  4725                           
  4726                           ; BSR set to: 15
  4727                           ;inc\CANlib.h: 1025: else
  4728                           ;inc\CANlib.h: 1026: RXF4SIDLbits.SID1 = 0x00;
  4729  000900  010F               	movlb	15	; () banked
  4730  000902  9D11               	bcf	17,6,b	;volatile
  4731  000904                     l524:
  4732                           
  4733                           ; BSR set to: 15
  4734                           ;inc\CANlib.h: 1028: if (filter & 0x00100000)
  4735  000904  A81F               	btfss	CANSetFilter@filter+2,4,c
  4736  000906  D003               	goto	l525
  4737                           
  4738                           ; BSR set to: 15
  4739                           ;inc\CANlib.h: 1029: RXF4SIDLbits.SID2 = 0x01 ;
  4740  000908  010F               	movlb	15	; () banked
  4741  00090A  8F11               	bsf	17,7,b	;volatile
  4742  00090C  D002               	goto	l4337
  4743  00090E                     l525:
  4744                           
  4745                           ; BSR set to: 15
  4746                           ;inc\CANlib.h: 1030: else
  4747                           ;inc\CANlib.h: 1031: RXF4SIDLbits.SID2 = 0x00 ;
  4748  00090E  010F               	movlb	15	; () banked
  4749  000910  9F11               	bcf	17,7,b	;volatile
  4750  000912                     l4337:
  4751                           
  4752                           ; BSR set to: 15
  4753                           ;inc\CANlib.h: 1033: tamp = (filter >> 21);
  4754  000912  C01D  F09E         	movff	CANSetFilter@filter,??_CANSetFilter
  4755  000916  C01E  F09F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4756  00091A  C01F  F0A0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4757  00091E  C020  F0A1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4758  000922  0E16               	movlw	22
  4759  000924  D006               	goto	u5750
  4760  000926                     u5755:
  4761  000926  0100               	movlb	0	; () banked
  4762  000928  90D8               	bcf	status,0,c
  4763  00092A  33A1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4764  00092C  33A0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4765  00092E  339F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4766  000930  339E               	rrcf	??_CANSetFilter& (0+255),f,b
  4767  000932                     u5750:
  4768  000932  2EE8               	decfsz	wreg,f,c
  4769  000934  D7F8               	goto	u5755
  4770  000936  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4771  00093A  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4772  00093E  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4773  000942  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4774                           
  4775                           ; BSR set to: 0
  4776                           ;inc\CANlib.h: 1034: tamp = tamp & 0x000000FF;
  4777  000946  0100               	movlb	0	; () banked
  4778  000948  51A3               	movf	CANSetFilter@tamp& (0+255),w,b
  4779  00094A  0100               	movlb	0	; () banked
  4780  00094C  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4781  00094E  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4782  000950  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4783  000952  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4784                           
  4785                           ; BSR set to: 0
  4786                           ;inc\CANlib.h: 1035: RXF4SIDH = (unsigned char) tamp;
  4787  000954  C0A3  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4788  000958                     l4343:
  4789                           
  4790                           ; BSR set to: 0
  4791                           ;inc\CANlib.h: 1036: }
  4792                           ;inc\CANlib.h: 1038: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  4793  000958  0E05               	movlw	5
  4794  00095A  0100               	movlb	0	; () banked
  4795  00095C  19A2               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4796  00095E  A4D8               	btfss	status,2,c
  4797  000960  0012               	return	
  4798                           
  4799                           ; BSR set to: 0
  4800  000962  0EF7               	movlw	247
  4801  000964  1821               	xorwf	CANSetFilter@type,w,c
  4802  000966  A4D8               	btfss	status,2,c
  4803  000968  0012               	return	
  4804                           
  4805                           ; BSR set to: 0
  4806                           ;inc\CANlib.h: 1039: {
  4807                           ;inc\CANlib.h: 1040: RXF5SIDLbits.EXIDEN = 0x01;
  4808  00096A  010F               	movlb	15	; () banked
  4809  00096C  8715               	bsf	21,3,b	;volatile
  4810                           
  4811                           ; BSR set to: 15
  4812                           ;inc\CANlib.h: 1042: tamp = filter & 0x000000FF;
  4813  00096E  501D               	movf	CANSetFilter@filter,w,c
  4814  000970  0100               	movlb	0	; () banked
  4815  000972  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4816  000974  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4817  000976  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4818  000978  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4819                           
  4820                           ; BSR set to: 0
  4821                           ;inc\CANlib.h: 1043: RXF5EIDL = (unsigned char) tamp;
  4822  00097A  C0A3  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  4823                           
  4824                           ; BSR set to: 0
  4825                           ;inc\CANlib.h: 1045: tamp = filter & 0x0000FF00;
  4826  00097E  0E00               	movlw	0
  4827  000980  141D               	andwf	CANSetFilter@filter,w,c
  4828  000982  0100               	movlb	0	; () banked
  4829  000984  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4830  000986  0EFF               	movlw	255
  4831  000988  141E               	andwf	CANSetFilter@filter+1,w,c
  4832  00098A  0100               	movlb	0	; () banked
  4833  00098C  6FA4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4834  00098E  0E00               	movlw	0
  4835  000990  141F               	andwf	CANSetFilter@filter+2,w,c
  4836  000992  0100               	movlb	0	; () banked
  4837  000994  6FA5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4838  000996  0E00               	movlw	0
  4839  000998  1420               	andwf	CANSetFilter@filter+3,w,c
  4840  00099A  0100               	movlb	0	; () banked
  4841  00099C  6FA6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4842                           
  4843                           ; BSR set to: 0
  4844                           ;inc\CANlib.h: 1046: tamp = tamp >> 8;
  4845  00099E  C0A3  F09E         	movff	CANSetFilter@tamp,??_CANSetFilter
  4846  0009A2  C0A4  F09F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4847  0009A6  C0A5  F0A0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4848  0009AA  C0A6  F0A1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4849  0009AE  C09F  F09E         	movff	??_CANSetFilter+1,??_CANSetFilter
  4850  0009B2  C0A0  F09F         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4851  0009B6  C0A1  F0A0         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4852  0009BA  0100               	movlb	0	; () banked
  4853  0009BC  6BA1               	clrf	(??_CANSetFilter+3)& (0+255),b
  4854  0009BE  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4855  0009C2  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4856  0009C6  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4857  0009CA  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4858                           
  4859                           ; BSR set to: 0
  4860                           ;inc\CANlib.h: 1047: RXF5EIDH = (unsigned char) tamp;
  4861  0009CE  C0A3  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;inc\CANlib.h: 1049: if (filter & 0x00010000)
  4865  0009D2  A01F               	btfss	CANSetFilter@filter+2,0,c
  4866  0009D4  D003               	goto	l528
  4867                           
  4868                           ; BSR set to: 0
  4869                           ;inc\CANlib.h: 1050: RXF5SIDLbits.EID16 = 0x01;
  4870  0009D6  010F               	movlb	15	; () banked
  4871  0009D8  8115               	bsf	21,0,b	;volatile
  4872  0009DA  D002               	goto	l529
  4873  0009DC                     l528:
  4874                           
  4875                           ; BSR set to: 0
  4876                           ;inc\CANlib.h: 1051: else
  4877                           ;inc\CANlib.h: 1052: RXF5SIDLbits.EID16 = 0x00;
  4878  0009DC  010F               	movlb	15	; () banked
  4879  0009DE  9115               	bcf	21,0,b	;volatile
  4880  0009E0                     l529:
  4881                           
  4882                           ; BSR set to: 15
  4883                           ;inc\CANlib.h: 1054: if (filter & 0x00020000)
  4884  0009E0  A21F               	btfss	CANSetFilter@filter+2,1,c
  4885  0009E2  D003               	goto	l530
  4886                           
  4887                           ; BSR set to: 15
  4888                           ;inc\CANlib.h: 1055: RXF5SIDLbits.EID17 = 0x01;
  4889  0009E4  010F               	movlb	15	; () banked
  4890  0009E6  8315               	bsf	21,1,b	;volatile
  4891  0009E8  D002               	goto	l531
  4892  0009EA                     l530:
  4893                           
  4894                           ; BSR set to: 15
  4895                           ;inc\CANlib.h: 1056: else
  4896                           ;inc\CANlib.h: 1057: RXF5SIDLbits.EID17 = 0x00;
  4897  0009EA  010F               	movlb	15	; () banked
  4898  0009EC  9315               	bcf	21,1,b	;volatile
  4899  0009EE                     l531:
  4900                           
  4901                           ; BSR set to: 15
  4902                           ;inc\CANlib.h: 1059: if (filter & 0x00040000)
  4903  0009EE  A41F               	btfss	CANSetFilter@filter+2,2,c
  4904  0009F0  D003               	goto	l532
  4905                           
  4906                           ; BSR set to: 15
  4907                           ;inc\CANlib.h: 1060: RXF5SIDLbits.SID0 = 0x01;
  4908  0009F2  010F               	movlb	15	; () banked
  4909  0009F4  8B15               	bsf	21,5,b	;volatile
  4910  0009F6  D002               	goto	l533
  4911  0009F8                     l532:
  4912                           
  4913                           ; BSR set to: 15
  4914                           ;inc\CANlib.h: 1061: else
  4915                           ;inc\CANlib.h: 1062: RXF5SIDLbits.SID0 = 0x00;
  4916  0009F8  010F               	movlb	15	; () banked
  4917  0009FA  9B15               	bcf	21,5,b	;volatile
  4918  0009FC                     l533:
  4919                           
  4920                           ; BSR set to: 15
  4921                           ;inc\CANlib.h: 1064: if (filter & 0x00080000)
  4922  0009FC  A61F               	btfss	CANSetFilter@filter+2,3,c
  4923  0009FE  D003               	goto	l534
  4924                           
  4925                           ; BSR set to: 15
  4926                           ;inc\CANlib.h: 1065: RXF5SIDLbits.SID1 = 0x01;
  4927  000A00  010F               	movlb	15	; () banked
  4928  000A02  8D15               	bsf	21,6,b	;volatile
  4929  000A04  D002               	goto	l535
  4930  000A06                     l534:
  4931                           
  4932                           ; BSR set to: 15
  4933                           ;inc\CANlib.h: 1066: else
  4934                           ;inc\CANlib.h: 1067: RXF5SIDLbits.SID1 = 0x00;
  4935  000A06  010F               	movlb	15	; () banked
  4936  000A08  9D15               	bcf	21,6,b	;volatile
  4937  000A0A                     l535:
  4938                           
  4939                           ; BSR set to: 15
  4940                           ;inc\CANlib.h: 1069: if (filter & 0x00100000)
  4941  000A0A  A81F               	btfss	CANSetFilter@filter+2,4,c
  4942  000A0C  D003               	goto	l536
  4943                           
  4944                           ; BSR set to: 15
  4945                           ;inc\CANlib.h: 1070: RXF5SIDLbits.SID2 = 0x01 ;
  4946  000A0E  010F               	movlb	15	; () banked
  4947  000A10  8F15               	bsf	21,7,b	;volatile
  4948  000A12  D002               	goto	l4371
  4949  000A14                     l536:
  4950                           
  4951                           ; BSR set to: 15
  4952                           ;inc\CANlib.h: 1071: else
  4953                           ;inc\CANlib.h: 1072: RXF5SIDLbits.SID2 = 0x00 ;
  4954  000A14  010F               	movlb	15	; () banked
  4955  000A16  9F15               	bcf	21,7,b	;volatile
  4956  000A18                     l4371:
  4957                           
  4958                           ; BSR set to: 15
  4959                           ;inc\CANlib.h: 1074: tamp = (filter >> 21);
  4960  000A18  C01D  F09E         	movff	CANSetFilter@filter,??_CANSetFilter
  4961  000A1C  C01E  F09F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4962  000A20  C01F  F0A0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4963  000A24  C020  F0A1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4964  000A28  0E16               	movlw	22
  4965  000A2A  D006               	goto	u5830
  4966  000A2C                     u5835:
  4967  000A2C  0100               	movlb	0	; () banked
  4968  000A2E  90D8               	bcf	status,0,c
  4969  000A30  33A1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4970  000A32  33A0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4971  000A34  339F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4972  000A36  339E               	rrcf	??_CANSetFilter& (0+255),f,b
  4973  000A38                     u5830:
  4974  000A38  2EE8               	decfsz	wreg,f,c
  4975  000A3A  D7F8               	goto	u5835
  4976  000A3C  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4977  000A40  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4978  000A44  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4979  000A48  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4980                           
  4981                           ; BSR set to: 0
  4982                           ;inc\CANlib.h: 1075: tamp = tamp & 0x000000FF;
  4983  000A4C  0100               	movlb	0	; () banked
  4984  000A4E  51A3               	movf	CANSetFilter@tamp& (0+255),w,b
  4985  000A50  0100               	movlb	0	; () banked
  4986  000A52  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4987  000A54  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4988  000A56  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4989  000A58  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4990                           
  4991                           ; BSR set to: 0
  4992                           ;inc\CANlib.h: 1076: RXF5SIDH = (unsigned char) tamp;
  4993  000A5A  C0A3  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4994  000A5E  0012               	return	
  4995  000A60                     __end_of_CANSetFilter:
  4996                           	opt stack 0
  4997                           tblptru	equ	0xFF8
  4998                           tblptrh	equ	0xFF7
  4999                           tblptrl	equ	0xFF6
  5000                           tablat	equ	0xFF5
  5001                           prodh	equ	0xFF4
  5002                           prodl	equ	0xFF3
  5003                           intcon	equ	0xFF2
  5004                           postinc0	equ	0xFEE
  5005                           wreg	equ	0xFE8
  5006                           indf1	equ	0xFE7
  5007                           postinc1	equ	0xFE6
  5008                           postdec1	equ	0xFE5
  5009                           fsr1h	equ	0xFE2
  5010                           fsr1l	equ	0xFE1
  5011                           indf2	equ	0xFDF
  5012                           postinc2	equ	0xFDE
  5013                           fsr2h	equ	0xFDA
  5014                           fsr2l	equ	0xFD9
  5015                           status	equ	0xFD8
  5016                           
  5017 ;; *************** function _CANOperationMode *****************
  5018 ;; Defined at:
  5019 ;;		line 207 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  5020 ;; Parameters:    Size  Location     Type
  5021 ;;  mode            1    wreg     enum E16838
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;  mode            1   28[COMRAM] enum E16838
  5024 ;; Return value:  Size  Location     Type
  5025 ;;		None               void
  5026 ;; Registers used:
  5027 ;;		wreg, status,2, status,0
  5028 ;; Tracked objects:
  5029 ;;		On entry : 0/0
  5030 ;;		On exit  : 0/0
  5031 ;;		Unchanged: 0/0
  5032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5033 ;;      Params:         0       0       0       0
  5034 ;;      Locals:         1       0       0       0
  5035 ;;      Temps:          0       0       0       0
  5036 ;;      Totals:         1       0       0       0
  5037 ;;Total ram usage:        1 bytes
  5038 ;; Hardware stack levels used:    1
  5039 ;; Hardware stack levels required when called:    2
  5040 ;; This function calls:
  5041 ;;		Nothing
  5042 ;; This function is called by:
  5043 ;;		_CANInitialize
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046                           
  5047                           	psect	text12
  5048  00246E                     __ptext12:
  5049                           	opt stack 0
  5050  00246E                     _CANOperationMode:
  5051                           	opt stack 26
  5052                           
  5053                           ; BSR set to: 0
  5054                           ;incstack = 0
  5055                           ;CANOperationMode@mode stored from wreg
  5056  00246E  6E1D               	movwf	CANOperationMode@mode,c
  5057                           
  5058                           ;inc\CANlib.h: 209: CANCON = mode;
  5059  002470  C01D  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5060  002474                     l3967:
  5061  002474  506E               	movf	3950,w,c	;volatile
  5062  002476  0BE0               	andlw	224
  5063  002478  181D               	xorwf	CANOperationMode@mode,w,c
  5064  00247A  B4D8               	btfsc	status,2,c
  5065  00247C  0012               	return	
  5066  00247E  D7FA               	goto	l3967
  5067  002480                     __end_of_CANOperationMode:
  5068                           	opt stack 0
  5069                           tblptru	equ	0xFF8
  5070                           tblptrh	equ	0xFF7
  5071                           tblptrl	equ	0xFF6
  5072                           tablat	equ	0xFF5
  5073                           prodh	equ	0xFF4
  5074                           prodl	equ	0xFF3
  5075                           intcon	equ	0xFF2
  5076                           postinc0	equ	0xFEE
  5077                           wreg	equ	0xFE8
  5078                           indf1	equ	0xFE7
  5079                           postinc1	equ	0xFE6
  5080                           postdec1	equ	0xFE5
  5081                           fsr1h	equ	0xFE2
  5082                           fsr1l	equ	0xFE1
  5083                           indf2	equ	0xFDF
  5084                           postinc2	equ	0xFDE
  5085                           fsr2h	equ	0xFDA
  5086                           fsr2l	equ	0xFD9
  5087                           status	equ	0xFD8
  5088                           
  5089 ;; *************** function _can_interpreter *****************
  5090 ;; Defined at:
  5091 ;;		line 149 in file "CanToSerial.c"
  5092 ;; Parameters:    Size  Location     Type
  5093 ;;		None
  5094 ;; Auto vars:     Size  Location     Type
  5095 ;;		None
  5096 ;; Return value:  Size  Location     Type
  5097 ;;		None               void
  5098 ;; Registers used:
  5099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5100 ;; Tracked objects:
  5101 ;;		On entry : 0/0
  5102 ;;		On exit  : 0/0
  5103 ;;		Unchanged: 0/0
  5104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5105 ;;      Params:         0       0       0       0
  5106 ;;      Locals:         0       0       0       0
  5107 ;;      Temps:          0       8       0       0
  5108 ;;      Totals:         0       8       0       0
  5109 ;;Total ram usage:        8 bytes
  5110 ;; Hardware stack levels used:    1
  5111 ;; Hardware stack levels required when called:    3
  5112 ;; This function calls:
  5113 ;;		_CANisTxReady
  5114 ;;		_CANsendMessage
  5115 ;; This function is called by:
  5116 ;;		_main
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           	psect	text13
  5121  001A3E                     __ptext13:
  5122                           	opt stack 0
  5123  001A3E                     _can_interpreter:
  5124                           	opt stack 27
  5125                           
  5126                           ;CanToSerial.c: 151: if (id == 0b00000000010) {
  5127                           
  5128                           ;incstack = 0
  5129  001A3E  0E02               	movlw	2
  5130  001A40  1822               	xorwf	_id,w,c	;volatile
  5131  001A42  1023               	iorwf	_id+1,w,c	;volatile
  5132  001A44  1024               	iorwf	_id+2,w,c	;volatile
  5133  001A46  1025               	iorwf	_id+3,w,c	;volatile
  5134  001A48  A4D8               	btfss	status,2,c
  5135  001A4A  D094               	goto	l4767
  5136                           
  5137                           ;CanToSerial.c: 152: if (RTR_Flag == 1) {
  5138  001A4C  A042               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
  5139  001A4E  D02C               	goto	l4751
  5140                           
  5141                           ;CanToSerial.c: 153: previousTimeCounter = timeCounter;
  5142  001A50  C02A  F026         	movff	_timeCounter,_previousTimeCounter	;volatile
  5143  001A54  C02B  F027         	movff	_timeCounter+1,_previousTimeCounter+1	;volatile
  5144  001A58  C02C  F028         	movff	_timeCounter+2,_previousTimeCounter+2	;volatile
  5145  001A5C  C02D  F029         	movff	_timeCounter+3,_previousTimeCounter+3	;volatile
  5146                           
  5147                           ;CanToSerial.c: 154: data[0] = 0x03;
  5148  001A60  0E03               	movlw	3
  5149  001A62  0100               	movlb	0	; () banked
  5150  001A64  6F86               	movwf	_data& (0+255),b
  5151  001A66                     l4739:
  5152  001A66  EC14  F012         	call	_CANisTxReady	;wreg free
  5153  001A6A  06E8               	decf	wreg,f,c
  5154  001A6C  A4D8               	btfss	status,2,c
  5155  001A6E  D7FB               	goto	l4739
  5156                           
  5157                           ;CanToSerial.c: 156: CANsendMessage(0b00000000010, data, 8, CAN_CONFIG_STD_MSG & CAN_NOR
      +                          MAL_TX_FRAME & CAN_TX_PRIORITY_0);
  5158  001A70  0E02               	movlw	2
  5159  001A72  0100               	movlb	0	; () banked
  5160  001A74  6F9E               	movwf	CANsendMessage@identifier& (0+255),b
  5161  001A76  0E00               	movlw	0
  5162  001A78  6F9F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  5163  001A7A  0E00               	movlw	0
  5164  001A7C  6FA0               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  5165  001A7E  0E00               	movlw	0
  5166  001A80  6FA1               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  5167  001A82  0E86               	movlw	low _data
  5168  001A84  0100               	movlb	0	; () banked
  5169  001A86  6FA2               	movwf	CANsendMessage@data& (0+255),b
  5170  001A88  0E00               	movlw	high _data
  5171  001A8A  0100               	movlb	0	; () banked
  5172  001A8C  6FA3               	movwf	(CANsendMessage@data+1)& (0+255),b
  5173  001A8E  0E08               	movlw	8
  5174  001A90  0100               	movlb	0	; () banked
  5175  001A92  6FA4               	movwf	CANsendMessage@dataLength& (0+255),b
  5176  001A94  0EBC               	movlw	188
  5177  001A96  0100               	movlb	0	; () banked
  5178  001A98  6FA5               	movwf	CANsendMessage@flags& (0+255),b
  5179  001A9A  EC30  F005         	call	_CANsendMessage	;wreg free
  5180                           
  5181                           ;CanToSerial.c: 157: LATDbits.LATD4 = 1;
  5182  001A9E  888C               	bsf	3980,4,c	;volatile
  5183                           
  5184                           ;CanToSerial.c: 158: LATDbits.LATD5 = 0;
  5185  001AA0  9A8C               	bcf	3980,5,c	;volatile
  5186                           
  5187                           ;CanToSerial.c: 159: LATDbits.LATD6 = 0;
  5188  001AA2  9C8C               	bcf	3980,6,c	;volatile
  5189                           
  5190                           ;CanToSerial.c: 160: LATDbits.LATD2 = 1;
  5191  001AA4  848C               	bsf	3980,2,c	;volatile
  5192                           
  5193                           ;CanToSerial.c: 161: } else {
  5194  001AA6  D00D               	goto	l4759
  5195  001AA8                     l4751:
  5196                           
  5197                           ;CanToSerial.c: 162: if (data[0] == 0x01) {
  5198  001AA8  0100               	movlb	0	; () banked
  5199  001AAA  0586               	decf	_data& (0+255),w,b
  5200  001AAC  A4D8               	btfss	status,2,c
  5201  001AAE  D002               	goto	l4755
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;CanToSerial.c: 163: LATDbits.LATD5 = 1;
  5205  001AB0  8A8C               	bsf	3980,5,c	;volatile
  5206                           
  5207                           ;CanToSerial.c: 164: PORTCbits.RC5 = 0;
  5208  001AB2  9A82               	bcf	3970,5,c	;volatile
  5209  001AB4                     l4755:
  5210                           
  5211                           ; BSR set to: 0
  5212                           ;CanToSerial.c: 165: }
  5213                           ;CanToSerial.c: 166: if (data[0] == 0x02) {
  5214  001AB4  0E02               	movlw	2
  5215  001AB6  0100               	movlb	0	; () banked
  5216  001AB8  1986               	xorwf	_data& (0+255),w,b
  5217  001ABA  A4D8               	btfss	status,2,c
  5218  001ABC  D002               	goto	l4759
  5219                           
  5220                           ; BSR set to: 0
  5221                           ;CanToSerial.c: 167: LATDbits.LATD6 = 1;
  5222  001ABE  8C8C               	bsf	3980,6,c	;volatile
  5223                           
  5224                           ;CanToSerial.c: 168: PORTCbits.RC4 = 0;
  5225  001AC0  9882               	bcf	3970,4,c	;volatile
  5226  001AC2                     l4759:
  5227                           
  5228                           ;CanToSerial.c: 169: }
  5229                           ;CanToSerial.c: 170: }
  5230                           ;CanToSerial.c: 171: if (previousTimeCounter - timeCounter > 450) {
  5231  001AC2  C02A  F0AA         	movff	_timeCounter,??_can_interpreter	;volatile
  5232  001AC6  C02B  F0AB         	movff	_timeCounter+1,??_can_interpreter+1	;volatile
  5233  001ACA  C02C  F0AC         	movff	_timeCounter+2,??_can_interpreter+2	;volatile
  5234  001ACE  C02D  F0AD         	movff	_timeCounter+3,??_can_interpreter+3	;volatile
  5235  001AD2  0100               	movlb	0	; () banked
  5236  001AD4  1FAA               	comf	??_can_interpreter& (0+255),f,b
  5237  001AD6  1FAB               	comf	(??_can_interpreter+1)& (0+255),f,b
  5238  001AD8  1FAC               	comf	(??_can_interpreter+2)& (0+255),f,b
  5239  001ADA  1FAD               	comf	(??_can_interpreter+3)& (0+255),f,b
  5240  001ADC  2BAA               	incf	??_can_interpreter& (0+255),f,b
  5241  001ADE  0E00               	movlw	0
  5242  001AE0  23AB               	addwfc	(??_can_interpreter+1)& (0+255),f,b
  5243  001AE2  23AC               	addwfc	(??_can_interpreter+2)& (0+255),f,b
  5244  001AE4  23AD               	addwfc	(??_can_interpreter+3)& (0+255),f,b
  5245  001AE6  5026               	movf	_previousTimeCounter,w,c
  5246  001AE8  0100               	movlb	0	; () banked
  5247  001AEA  25AA               	addwf	??_can_interpreter& (0+255),w,b
  5248  001AEC  0100               	movlb	0	; () banked
  5249  001AEE  6FAE               	movwf	(??_can_interpreter+4)& (0+255),b
  5250  001AF0  5027               	movf	_previousTimeCounter+1,w,c
  5251  001AF2  0100               	movlb	0	; () banked
  5252  001AF4  21AB               	addwfc	(??_can_interpreter+1)& (0+255),w,b
  5253  001AF6  0100               	movlb	0	; () banked
  5254  001AF8  6FAF               	movwf	(??_can_interpreter+5)& (0+255),b
  5255  001AFA  5028               	movf	_previousTimeCounter+2,w,c
  5256  001AFC  0100               	movlb	0	; () banked
  5257  001AFE  21AC               	addwfc	(??_can_interpreter+2)& (0+255),w,b
  5258  001B00  0100               	movlb	0	; () banked
  5259  001B02  6FB0               	movwf	(??_can_interpreter+6)& (0+255),b
  5260  001B04  5029               	movf	_previousTimeCounter+3,w,c
  5261  001B06  0100               	movlb	0	; () banked
  5262  001B08  21AD               	addwfc	(??_can_interpreter+3)& (0+255),w,b
  5263  001B0A  0100               	movlb	0	; () banked
  5264  001B0C  6FB1               	movwf	(??_can_interpreter+7)& (0+255),b
  5265  001B0E  0100               	movlb	0	; () banked
  5266  001B10  51B1               	movf	(??_can_interpreter+7)& (0+255),w,b
  5267  001B12  0100               	movlb	0	; () banked
  5268  001B14  11B0               	iorwf	(??_can_interpreter+6)& (0+255),w,b
  5269  001B16  E108               	bnz	u6370
  5270  001B18  0EC3               	movlw	195
  5271  001B1A  0100               	movlb	0	; () banked
  5272  001B1C  5DAE               	subwf	(??_can_interpreter+4)& (0+255),w,b
  5273  001B1E  0E01               	movlw	1
  5274  001B20  0100               	movlb	0	; () banked
  5275  001B22  59AF               	subwfb	(??_can_interpreter+5)& (0+255),w,b
  5276  001B24  A0D8               	btfss	status,0,c
  5277  001B26  D026               	goto	l4767
  5278  001B28                     u6370:
  5279                           
  5280                           ; BSR set to: 0
  5281                           ;CanToSerial.c: 172: SerialOutput[4] = LATDbits.LATD6;
  5282  001B28  0E00               	movlw	0
  5283  001B2A  BC8C               	btfsc	3980,6,c	;volatile
  5284  001B2C  0E01               	movlw	1
  5285  001B2E  6E3E               	movwf	_SerialOutput+4,c
  5286                           
  5287                           ; BSR set to: 0
  5288                           ;CanToSerial.c: 173: SerialOutput[4] = ((SerialOutput[5] < 1) | LATDbits.LATD5);
  5289  001B30  AA8C               	btfss	3980,5,c	;volatile
  5290  001B32  D004               	goto	u6380
  5291  001B34  0100               	movlb	0	; () banked
  5292  001B36  6BAA               	clrf	??_can_interpreter& (0+255),b
  5293  001B38  2BAA               	incf	??_can_interpreter& (0+255),f,b
  5294  001B3A  D002               	goto	u6388
  5295  001B3C                     u6380:
  5296  001B3C  0100               	movlb	0	; () banked
  5297  001B3E  6BAA               	clrf	??_can_interpreter& (0+255),b
  5298  001B40                     u6388:
  5299  001B40  503F               	movf	_SerialOutput+5,w,c
  5300  001B42  A4D8               	btfss	status,2,c
  5301  001B44  D002               	goto	u6390
  5302  001B46  0E01               	movlw	1
  5303  001B48  D001               	goto	u6400
  5304  001B4A                     u6390:
  5305  001B4A  0E00               	movlw	0
  5306  001B4C                     u6400:
  5307  001B4C  0100               	movlb	0	; () banked
  5308  001B4E  11AA               	iorwf	??_can_interpreter& (0+255),w,b
  5309  001B50  6E3E               	movwf	_SerialOutput+4,c
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;CanToSerial.c: 174: SerialOutput[4] = ((SerialOutput[5] < 1) | LATDbits.LATD4);
  5313  001B52  A88C               	btfss	3980,4,c	;volatile
  5314  001B54  D004               	goto	u6410
  5315  001B56  0100               	movlb	0	; () banked
  5316  001B58  6BAA               	clrf	??_can_interpreter& (0+255),b
  5317  001B5A  2BAA               	incf	??_can_interpreter& (0+255),f,b
  5318  001B5C  D002               	goto	u6418
  5319  001B5E                     u6410:
  5320  001B5E  0100               	movlb	0	; () banked
  5321  001B60  6BAA               	clrf	??_can_interpreter& (0+255),b
  5322  001B62                     u6418:
  5323  001B62  503F               	movf	_SerialOutput+5,w,c
  5324  001B64  A4D8               	btfss	status,2,c
  5325  001B66  D002               	goto	u6420
  5326  001B68  0E01               	movlw	1
  5327  001B6A  D001               	goto	u6430
  5328  001B6C                     u6420:
  5329  001B6C  0E00               	movlw	0
  5330  001B6E                     u6430:
  5331  001B6E  0100               	movlb	0	; () banked
  5332  001B70  11AA               	iorwf	??_can_interpreter& (0+255),w,b
  5333  001B72  6E3E               	movwf	_SerialOutput+4,c
  5334  001B74                     l4767:
  5335                           
  5336                           ;CanToSerial.c: 175: }
  5337                           ;CanToSerial.c: 176: }
  5338                           ;CanToSerial.c: 177: if ((id == 0b00000000110)&&(RTR_Flag == 0)) {
  5339  001B74  0E06               	movlw	6
  5340  001B76  1822               	xorwf	_id,w,c	;volatile
  5341  001B78  1023               	iorwf	_id+1,w,c	;volatile
  5342  001B7A  1024               	iorwf	_id+2,w,c	;volatile
  5343  001B7C  1025               	iorwf	_id+3,w,c	;volatile
  5344  001B7E  B4D8               	btfsc	status,2,c
  5345  001B80  B042               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
  5346  001B82  D047               	goto	l4783
  5347                           
  5348                           ;CanToSerial.c: 178: left_speed = data[1];
  5349  001B84  C087  F030         	movff	_data+1,_left_speed
  5350  001B88  6A31               	clrf	_left_speed+1,c
  5351                           
  5352                           ;CanToSerial.c: 179: left_speed = ((left_speed << 8) | (data[0]));
  5353  001B8A  5030               	movf	_left_speed,w,c
  5354  001B8C  0100               	movlb	0	; () banked
  5355  001B8E  6FAA               	movwf	??_can_interpreter& (0+255),b
  5356  001B90  0100               	movlb	0	; () banked
  5357  001B92  5186               	movf	_data& (0+255),w,b
  5358  001B94  6E30               	movwf	_left_speed,c
  5359  001B96  C0AA  F031         	movff	??_can_interpreter,_left_speed+1
  5360                           
  5361                           ; BSR set to: 0
  5362                           ;CanToSerial.c: 180: right_speed = data[3];
  5363  001B9A  C089  F032         	movff	_data+3,_right_speed
  5364  001B9E  6A33               	clrf	_right_speed+1,c
  5365                           
  5366                           ;CanToSerial.c: 181: right_speed = ((right_speed << 8) | (data[2]));
  5367  001BA0  5032               	movf	_right_speed,w,c
  5368  001BA2  0100               	movlb	0	; () banked
  5369  001BA4  6FAA               	movwf	??_can_interpreter& (0+255),b
  5370  001BA6  0100               	movlb	0	; () banked
  5371  001BA8  5188               	movf	(_data+2)& (0+255),w,b
  5372  001BAA  6E32               	movwf	_right_speed,c
  5373  001BAC  C0AA  F033         	movff	??_can_interpreter,_right_speed+1
  5374                           
  5375                           ; BSR set to: 0
  5376                           ;CanToSerial.c: 182: SerialOutput[3] = ((left_speed + right_speed) / 2);
  5377  001BB0  5032               	movf	_right_speed,w,c
  5378  001BB2  2430               	addwf	_left_speed,w,c
  5379  001BB4  0100               	movlb	0	; () banked
  5380  001BB6  6FAA               	movwf	??_can_interpreter& (0+255),b
  5381  001BB8  5033               	movf	_right_speed+1,w,c
  5382  001BBA  2031               	addwfc	_left_speed+1,w,c
  5383  001BBC  0100               	movlb	0	; () banked
  5384  001BBE  6FAB               	movwf	(??_can_interpreter+1)& (0+255),b
  5385  001BC0  90D8               	bcf	status,0,c
  5386  001BC2  0100               	movlb	0	; () banked
  5387  001BC4  31AB               	rrcf	(??_can_interpreter+1)& (0+255),w,b
  5388  001BC6  0100               	movlb	0	; () banked
  5389  001BC8  6FAD               	movwf	(??_can_interpreter+3)& (0+255),b
  5390  001BCA  0100               	movlb	0	; () banked
  5391  001BCC  31AA               	rrcf	??_can_interpreter& (0+255),w,b
  5392  001BCE  0100               	movlb	0	; () banked
  5393  001BD0  6FAC               	movwf	(??_can_interpreter+2)& (0+255),b
  5394  001BD2  0100               	movlb	0	; () banked
  5395  001BD4  51AC               	movf	(??_can_interpreter+2)& (0+255),w,b
  5396  001BD6  6E3D               	movwf	_SerialOutput+3,c
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;CanToSerial.c: 183: SerialOutput[2] = (((left_speed + right_speed) / 2) >> 8);
  5400  001BD8  5032               	movf	_right_speed,w,c
  5401  001BDA  2430               	addwf	_left_speed,w,c
  5402  001BDC  0100               	movlb	0	; () banked
  5403  001BDE  6FAA               	movwf	??_can_interpreter& (0+255),b
  5404  001BE0  5033               	movf	_right_speed+1,w,c
  5405  001BE2  2031               	addwfc	_left_speed+1,w,c
  5406  001BE4  0100               	movlb	0	; () banked
  5407  001BE6  6FAB               	movwf	(??_can_interpreter+1)& (0+255),b
  5408  001BE8  90D8               	bcf	status,0,c
  5409  001BEA  0100               	movlb	0	; () banked
  5410  001BEC  31AB               	rrcf	(??_can_interpreter+1)& (0+255),w,b
  5411  001BEE  0100               	movlb	0	; () banked
  5412  001BF0  6FAD               	movwf	(??_can_interpreter+3)& (0+255),b
  5413  001BF2  0100               	movlb	0	; () banked
  5414  001BF4  31AA               	rrcf	??_can_interpreter& (0+255),w,b
  5415  001BF6  0100               	movlb	0	; () banked
  5416  001BF8  6FAC               	movwf	(??_can_interpreter+2)& (0+255),b
  5417  001BFA  C0AD  F0AC         	movff	??_can_interpreter+3,??_can_interpreter+2
  5418  001BFE  0100               	movlb	0	; () banked
  5419  001C00  6BAD               	clrf	(??_can_interpreter+3)& (0+255),b
  5420  001C02  0100               	movlb	0	; () banked
  5421  001C04  51AC               	movf	(??_can_interpreter+2)& (0+255),w,b
  5422  001C06  6E3C               	movwf	_SerialOutput+2,c
  5423                           
  5424                           ;CanToSerial.c: 184: if (SerialOutput[2] == 0) {
  5425  001C08  503C               	movf	_SerialOutput+2,w,c
  5426  001C0A  A4D8               	btfss	status,2,c
  5427  001C0C  D002               	goto	l4783
  5428                           
  5429                           ; BSR set to: 0
  5430                           ;CanToSerial.c: 185: SerialOutput[2] = 0b10000000;
  5431  001C0E  0E80               	movlw	128
  5432  001C10  6E3C               	movwf	_SerialOutput+2,c
  5433  001C12                     l4783:
  5434                           
  5435                           ;CanToSerial.c: 186: }
  5436                           ;CanToSerial.c: 187: }
  5437                           ;CanToSerial.c: 188: if (id == 0b00000001001) {
  5438  001C12  0E09               	movlw	9
  5439  001C14  1822               	xorwf	_id,w,c	;volatile
  5440  001C16  1023               	iorwf	_id+1,w,c	;volatile
  5441  001C18  1024               	iorwf	_id+2,w,c	;volatile
  5442  001C1A  1025               	iorwf	_id+3,w,c	;volatile
  5443  001C1C  A4D8               	btfss	status,2,c
  5444  001C1E  0012               	return	
  5445                           
  5446                           ;CanToSerial.c: 189: SerialOutput[5] = data[0];
  5447  001C20  C086  F03F         	movff	_data,_SerialOutput+5
  5448  001C24  0012               	return	
  5449  001C26                     __end_of_can_interpreter:
  5450                           	opt stack 0
  5451                           tblptru	equ	0xFF8
  5452                           tblptrh	equ	0xFF7
  5453                           tblptrl	equ	0xFF6
  5454                           tablat	equ	0xFF5
  5455                           prodh	equ	0xFF4
  5456                           prodl	equ	0xFF3
  5457                           intcon	equ	0xFF2
  5458                           postinc0	equ	0xFEE
  5459                           wreg	equ	0xFE8
  5460                           indf1	equ	0xFE7
  5461                           postinc1	equ	0xFE6
  5462                           postdec1	equ	0xFE5
  5463                           fsr1h	equ	0xFE2
  5464                           fsr1l	equ	0xFE1
  5465                           indf2	equ	0xFDF
  5466                           postinc2	equ	0xFDE
  5467                           fsr2h	equ	0xFDA
  5468                           fsr2l	equ	0xFD9
  5469                           status	equ	0xFD8
  5470                           
  5471 ;; *************** function _CANsendMessage *****************
  5472 ;; Defined at:
  5473 ;;		line 295 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;  identifier      4    0[BANK0 ] unsigned long 
  5476 ;;  data            2    4[BANK0 ] PTR unsigned char 
  5477 ;;		 -> analogic_brake(8), set_speed(8), set_steering(8), data(8), 
  5478 ;;  dataLength      1    6[BANK0 ] unsigned char 
  5479 ;;  flags           1    7[BANK0 ] enum E16866
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;  tamp            4    8[BANK0 ] unsigned long 
  5482 ;; Return value:  Size  Location     Type
  5483 ;;		None               void
  5484 ;; Registers used:
  5485 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5491 ;;      Params:         0       8       0       0
  5492 ;;      Locals:         0       4       0       0
  5493 ;;      Temps:          4       0       0       0
  5494 ;;      Totals:         4      12       0       0
  5495 ;;Total ram usage:       16 bytes
  5496 ;; Hardware stack levels used:    1
  5497 ;; Hardware stack levels required when called:    2
  5498 ;; This function calls:
  5499 ;;		Nothing
  5500 ;; This function is called by:
  5501 ;;		_main
  5502 ;;		_can_interpreter
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           	psect	text14
  5507  000A60                     __ptext14:
  5508                           	opt stack 0
  5509  000A60                     _CANsendMessage:
  5510                           	opt stack 27
  5511                           
  5512                           ;inc\CANlib.h: 297: unsigned long tamp;
  5513                           ;inc\CANlib.h: 299: if (TXB0CONbits.TXREQ == 0)
  5514                           
  5515                           ;incstack = 0
  5516  000A60  010F               	movlb	15	; () banked
  5517  000A62  B740               	btfsc	64,3,b	;volatile
  5518  000A64  D13B               	goto	l373
  5519                           
  5520                           ; BSR set to: 15
  5521                           ;inc\CANlib.h: 300: { TXB0DLC = dataLength;
  5522  000A66  C0A4  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  5523                           
  5524                           ;inc\CANlib.h: 301: if (0b01000000 & flags)
  5525  000A6A  0100               	movlb	0	; () banked
  5526  000A6C  ADA5               	btfss	CANsendMessage@flags& (0+255),6,b
  5527  000A6E  D003               	goto	l374
  5528                           
  5529                           ; BSR set to: 0
  5530                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x01;
  5531  000A70  010F               	movlb	15	; () banked
  5532  000A72  8D45               	bsf	69,6,b	;volatile
  5533  000A74  D002               	goto	l375
  5534  000A76                     l374:
  5535                           
  5536                           ; BSR set to: 0
  5537                           ;inc\CANlib.h: 303: else
  5538                           ;inc\CANlib.h: 304: TXB0DLCbits.TXRTR = 0x00;
  5539  000A76  010F               	movlb	15	; () banked
  5540  000A78  9D45               	bcf	69,6,b	;volatile
  5541  000A7A                     l375:
  5542                           
  5543                           ; BSR set to: 15
  5544                           ;inc\CANlib.h: 306: if (CAN_TX_FRAME_MASK & flags)
  5545  000A7A  0100               	movlb	0	; () banked
  5546  000A7C  A7A5               	btfss	CANsendMessage@flags& (0+255),3,b
  5547  000A7E  D077               	goto	l376
  5548                           
  5549                           ; BSR set to: 0
  5550                           ;inc\CANlib.h: 307: {
  5551                           ;inc\CANlib.h: 309: tamp = identifier & 0x000000FF;
  5552  000A80  0100               	movlb	0	; () banked
  5553  000A82  519E               	movf	CANsendMessage@identifier& (0+255),w,b
  5554  000A84  0100               	movlb	0	; () banked
  5555  000A86  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  5556  000A88  6BA7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5557  000A8A  6BA8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5558  000A8C  6BA9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;inc\CANlib.h: 310: TXB0EIDL = (unsigned char) tamp;
  5562  000A8E  C0A6  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;inc\CANlib.h: 312: tamp = identifier & 0x0000FF00;
  5566  000A92  0E00               	movlw	0
  5567  000A94  0100               	movlb	0	; () banked
  5568  000A96  159E               	andwf	CANsendMessage@identifier& (0+255),w,b
  5569  000A98  0100               	movlb	0	; () banked
  5570  000A9A  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  5571  000A9C  0EFF               	movlw	255
  5572  000A9E  0100               	movlb	0	; () banked
  5573  000AA0  159F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5574  000AA2  0100               	movlb	0	; () banked
  5575  000AA4  6FA7               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5576  000AA6  0E00               	movlw	0
  5577  000AA8  0100               	movlb	0	; () banked
  5578  000AAA  15A0               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5579  000AAC  0100               	movlb	0	; () banked
  5580  000AAE  6FA8               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5581  000AB0  0E00               	movlw	0
  5582  000AB2  0100               	movlb	0	; () banked
  5583  000AB4  15A1               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5584  000AB6  0100               	movlb	0	; () banked
  5585  000AB8  6FA9               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5586                           
  5587                           ; BSR set to: 0
  5588                           ;inc\CANlib.h: 313: tamp = tamp >> 8;
  5589  000ABA  C0A6  F01D         	movff	CANsendMessage@tamp,??_CANsendMessage
  5590  000ABE  C0A7  F01E         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5591  000AC2  C0A8  F01F         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5592  000AC6  C0A9  F020         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5593  000ACA  C01E  F01D         	movff	??_CANsendMessage+1,??_CANsendMessage
  5594  000ACE  C01F  F01E         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  5595  000AD2  C020  F01F         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  5596  000AD6  6A20               	clrf	??_CANsendMessage+3,c
  5597  000AD8  C01D  F0A6         	movff	??_CANsendMessage,CANsendMessage@tamp
  5598  000ADC  C01E  F0A7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5599  000AE0  C01F  F0A8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5600  000AE4  C020  F0A9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5601                           
  5602                           ; BSR set to: 0
  5603                           ;inc\CANlib.h: 314: TXB0EIDH = (unsigned char) tamp;
  5604  000AE8  C0A6  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;inc\CANlib.h: 316: TXB0SIDL = 0x00;
  5608  000AEC  0E00               	movlw	0
  5609  000AEE  010F               	movlb	15	; () banked
  5610  000AF0  6F42               	movwf	66,b	;volatile
  5611                           
  5612                           ; BSR set to: 15
  5613                           ;inc\CANlib.h: 317: TXB0SIDLbits.EXIDE = 0x01;
  5614  000AF2  010F               	movlb	15	; () banked
  5615  000AF4  8742               	bsf	66,3,b	;volatile
  5616                           
  5617                           ; BSR set to: 15
  5618                           ;inc\CANlib.h: 319: if (identifier & 0x00010000)
  5619  000AF6  0100               	movlb	0	; () banked
  5620  000AF8  A1A0               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  5621  000AFA  D002               	goto	l377
  5622                           
  5623                           ; BSR set to: 0
  5624                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID16 = 0x01;
  5625  000AFC  010F               	movlb	15	; () banked
  5626  000AFE  8142               	bsf	66,0,b	;volatile
  5627  000B00                     l377:
  5628                           
  5629                           ;inc\CANlib.h: 321: if (identifier & 0x00020000)
  5630  000B00  0100               	movlb	0	; () banked
  5631  000B02  A3A0               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  5632  000B04  D002               	goto	l378
  5633                           
  5634                           ; BSR set to: 0
  5635                           ;inc\CANlib.h: 322: TXB0SIDLbits.EID17 = 0x01;
  5636  000B06  010F               	movlb	15	; () banked
  5637  000B08  8342               	bsf	66,1,b	;volatile
  5638  000B0A                     l378:
  5639                           
  5640                           ;inc\CANlib.h: 323: if (identifier & 0x00040000)
  5641  000B0A  0100               	movlb	0	; () banked
  5642  000B0C  A5A0               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  5643  000B0E  D002               	goto	l379
  5644                           
  5645                           ; BSR set to: 0
  5646                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID0 = 0x01;
  5647  000B10  010F               	movlb	15	; () banked
  5648  000B12  8B42               	bsf	66,5,b	;volatile
  5649  000B14                     l379:
  5650                           
  5651                           ;inc\CANlib.h: 325: if (identifier & 0x00080000)
  5652  000B14  0100               	movlb	0	; () banked
  5653  000B16  A7A0               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  5654  000B18  D002               	goto	l380
  5655                           
  5656                           ; BSR set to: 0
  5657                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID1 = 0x01;
  5658  000B1A  010F               	movlb	15	; () banked
  5659  000B1C  8D42               	bsf	66,6,b	;volatile
  5660  000B1E                     l380:
  5661                           
  5662                           ;inc\CANlib.h: 327: if (identifier & 0x00100000)
  5663  000B1E  0100               	movlb	0	; () banked
  5664  000B20  A9A0               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  5665  000B22  D002               	goto	l4469
  5666                           
  5667                           ; BSR set to: 0
  5668                           ;inc\CANlib.h: 328: TXB0SIDLbits.SID2 = 0x01;
  5669  000B24  010F               	movlb	15	; () banked
  5670  000B26  8F42               	bsf	66,7,b	;volatile
  5671  000B28                     l4469:
  5672                           
  5673                           ;inc\CANlib.h: 330: tamp = (identifier >> 21);
  5674  000B28  C09E  F01D         	movff	CANsendMessage@identifier,??_CANsendMessage
  5675  000B2C  C09F  F01E         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5676  000B30  C0A0  F01F         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5677  000B34  C0A1  F020         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5678  000B38  0E16               	movlw	22
  5679  000B3A  D005               	goto	u5980
  5680  000B3C                     u5985:
  5681  000B3C  90D8               	bcf	status,0,c
  5682  000B3E  3220               	rrcf	??_CANsendMessage+3,f,c
  5683  000B40  321F               	rrcf	??_CANsendMessage+2,f,c
  5684  000B42  321E               	rrcf	??_CANsendMessage+1,f,c
  5685  000B44  321D               	rrcf	??_CANsendMessage,f,c
  5686  000B46                     u5980:
  5687  000B46  2EE8               	decfsz	wreg,f,c
  5688  000B48  D7F9               	goto	u5985
  5689  000B4A  C01D  F0A6         	movff	??_CANsendMessage,CANsendMessage@tamp
  5690  000B4E  C01E  F0A7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5691  000B52  C01F  F0A8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5692  000B56  C020  F0A9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5693                           
  5694                           ;inc\CANlib.h: 331: tamp = tamp & 0x000000FF;
  5695  000B5A  0100               	movlb	0	; () banked
  5696  000B5C  51A6               	movf	CANsendMessage@tamp& (0+255),w,b
  5697  000B5E  0100               	movlb	0	; () banked
  5698  000B60  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  5699  000B62  6BA7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5700  000B64  6BA8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5701  000B66  6BA9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5702                           
  5703                           ; BSR set to: 0
  5704                           ;inc\CANlib.h: 332: TXB0SIDH = (unsigned char) tamp;
  5705  000B68  C0A6  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5706                           
  5707                           ;inc\CANlib.h: 333: }
  5708  000B6C  D057               	goto	l4489
  5709  000B6E                     l376:
  5710                           
  5711                           ; BSR set to: 0
  5712                           ;inc\CANlib.h: 335: else
  5713                           ;inc\CANlib.h: 337: {
  5714                           ;inc\CANlib.h: 338: TXB0SIDLbits.EXIDE = 0x00;
  5715  000B6E  010F               	movlb	15	; () banked
  5716  000B70  9742               	bcf	66,3,b	;volatile
  5717                           
  5718                           ; BSR set to: 15
  5719                           ;inc\CANlib.h: 340: tamp = (identifier >> 3);
  5720  000B72  C09E  F01D         	movff	CANsendMessage@identifier,??_CANsendMessage
  5721  000B76  C09F  F01E         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5722  000B7A  C0A0  F01F         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5723  000B7E  C0A1  F020         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5724  000B82  0E04               	movlw	4
  5725  000B84  D005               	goto	u5990
  5726  000B86                     u5995:
  5727  000B86  90D8               	bcf	status,0,c
  5728  000B88  3220               	rrcf	??_CANsendMessage+3,f,c
  5729  000B8A  321F               	rrcf	??_CANsendMessage+2,f,c
  5730  000B8C  321E               	rrcf	??_CANsendMessage+1,f,c
  5731  000B8E  321D               	rrcf	??_CANsendMessage,f,c
  5732  000B90                     u5990:
  5733  000B90  2EE8               	decfsz	wreg,f,c
  5734  000B92  D7F9               	goto	u5995
  5735  000B94  C01D  F0A6         	movff	??_CANsendMessage,CANsendMessage@tamp
  5736  000B98  C01E  F0A7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5737  000B9C  C01F  F0A8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5738  000BA0  C020  F0A9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5739                           
  5740                           ; BSR set to: 15
  5741                           ;inc\CANlib.h: 341: tamp = tamp & 0x000000FF;
  5742  000BA4  0100               	movlb	0	; () banked
  5743  000BA6  51A6               	movf	CANsendMessage@tamp& (0+255),w,b
  5744  000BA8  0100               	movlb	0	; () banked
  5745  000BAA  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  5746  000BAC  6BA7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5747  000BAE  6BA8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5748  000BB0  6BA9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5749                           
  5750                           ; BSR set to: 0
  5751                           ;inc\CANlib.h: 342: TXB0SIDH = (unsigned char) tamp;
  5752  000BB2  C0A6  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;inc\CANlib.h: 344: tamp = identifier & 0x00000007;
  5756  000BB6  0E07               	movlw	7
  5757  000BB8  0100               	movlb	0	; () banked
  5758  000BBA  159E               	andwf	CANsendMessage@identifier& (0+255),w,b
  5759  000BBC  0100               	movlb	0	; () banked
  5760  000BBE  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  5761  000BC0  0E00               	movlw	0
  5762  000BC2  0100               	movlb	0	; () banked
  5763  000BC4  159F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5764  000BC6  0100               	movlb	0	; () banked
  5765  000BC8  6FA7               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5766  000BCA  0E00               	movlw	0
  5767  000BCC  0100               	movlb	0	; () banked
  5768  000BCE  15A0               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5769  000BD0  0100               	movlb	0	; () banked
  5770  000BD2  6FA8               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5771  000BD4  0E00               	movlw	0
  5772  000BD6  0100               	movlb	0	; () banked
  5773  000BD8  15A1               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5774  000BDA  0100               	movlb	0	; () banked
  5775  000BDC  6FA9               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5776                           
  5777                           ; BSR set to: 0
  5778                           ;inc\CANlib.h: 345: tamp = tamp << 5;
  5779  000BDE  C0A6  F01D         	movff	CANsendMessage@tamp,??_CANsendMessage
  5780  000BE2  C0A7  F01E         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5781  000BE6  C0A8  F01F         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5782  000BEA  C0A9  F020         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5783  000BEE  0E05               	movlw	5
  5784  000BF0                     u6005:
  5785  000BF0  90D8               	bcf	status,0,c
  5786  000BF2  361D               	rlcf	??_CANsendMessage,f,c
  5787  000BF4  361E               	rlcf	??_CANsendMessage+1,f,c
  5788  000BF6  361F               	rlcf	??_CANsendMessage+2,f,c
  5789  000BF8  3620               	rlcf	??_CANsendMessage+3,f,c
  5790  000BFA  2EE8               	decfsz	wreg,f,c
  5791  000BFC  D7F9               	goto	u6005
  5792  000BFE  C01D  F0A6         	movff	??_CANsendMessage,CANsendMessage@tamp
  5793  000C02  C01E  F0A7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5794  000C06  C01F  F0A8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5795  000C0A  C020  F0A9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;inc\CANlib.h: 346: TXB0SIDL = TXB0SIDL & 0b00011111;
  5799  000C0E  010F               	movlb	15	; () banked
  5800  000C10  5142               	movf	66,w,b	;volatile
  5801  000C12  0B1F               	andlw	31
  5802  000C14  010F               	movlb	15	; () banked
  5803  000C16  6F42               	movwf	66,b	;volatile
  5804                           
  5805                           ; BSR set to: 15
  5806                           ;inc\CANlib.h: 347: TXB0SIDL = (unsigned char) tamp;
  5807  000C18  C0A6  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  5808  000C1C                     l4489:
  5809                           
  5810                           ;inc\CANlib.h: 348: }
  5811                           ;inc\CANlib.h: 350: if (0b00000001 & flags)
  5812  000C1C  0100               	movlb	0	; () banked
  5813  000C1E  A1A5               	btfss	CANsendMessage@flags& (0+255),0,b
  5814  000C20  D003               	goto	l383
  5815                           
  5816                           ; BSR set to: 0
  5817                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x01;
  5818  000C22  010F               	movlb	15	; () banked
  5819  000C24  8140               	bsf	64,0,b	;volatile
  5820  000C26  D002               	goto	l384
  5821  000C28                     l383:
  5822                           
  5823                           ; BSR set to: 0
  5824                           ;inc\CANlib.h: 352: else
  5825                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI0 = 0x00;
  5826  000C28  010F               	movlb	15	; () banked
  5827  000C2A  9140               	bcf	64,0,b	;volatile
  5828  000C2C                     l384:
  5829                           
  5830                           ; BSR set to: 15
  5831                           ;inc\CANlib.h: 354: if (0b00000010 & flags)
  5832  000C2C  0100               	movlb	0	; () banked
  5833  000C2E  A3A5               	btfss	CANsendMessage@flags& (0+255),1,b
  5834  000C30  D003               	goto	l385
  5835                           
  5836                           ; BSR set to: 0
  5837                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x01;
  5838  000C32  010F               	movlb	15	; () banked
  5839  000C34  8340               	bsf	64,1,b	;volatile
  5840  000C36  D002               	goto	l4495
  5841  000C38                     l385:
  5842                           
  5843                           ; BSR set to: 0
  5844                           ;inc\CANlib.h: 356: else
  5845                           ;inc\CANlib.h: 357: TXB0CONbits.TXPRI1 = 0x00;
  5846  000C38  010F               	movlb	15	; () banked
  5847  000C3A  9340               	bcf	64,1,b	;volatile
  5848  000C3C                     l4495:
  5849                           
  5850                           ; BSR set to: 15
  5851                           ;inc\CANlib.h: 359: TXB0D0 = data[0];
  5852  000C3C  C0A2  FFD9         	movff	CANsendMessage@data,fsr2l
  5853  000C40  C0A3  FFDA         	movff	CANsendMessage@data+1,fsr2h
  5854  000C44  50DF               	movf	indf2,w,c
  5855  000C46  010F               	movlb	15	; () banked
  5856  000C48  6F46               	movwf	70,b	;volatile
  5857                           
  5858                           ; BSR set to: 15
  5859                           ;inc\CANlib.h: 360: TXB0D1 = data[1];
  5860  000C4A  0100               	movlb	0	; () banked
  5861  000C4C  EE20 F001          	lfsr	2,1
  5862  000C50  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5863  000C52  26D9               	addwf	fsr2l,f,c
  5864  000C54  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5865  000C56  22DA               	addwfc	fsr2h,f,c
  5866  000C58  50DF               	movf	indf2,w,c
  5867  000C5A  010F               	movlb	15	; () banked
  5868  000C5C  6F47               	movwf	71,b	;volatile
  5869                           
  5870                           ; BSR set to: 15
  5871                           ;inc\CANlib.h: 361: TXB0D2 = data[2];
  5872  000C5E  0100               	movlb	0	; () banked
  5873  000C60  EE20 F002          	lfsr	2,2
  5874  000C64  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5875  000C66  26D9               	addwf	fsr2l,f,c
  5876  000C68  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5877  000C6A  22DA               	addwfc	fsr2h,f,c
  5878  000C6C  50DF               	movf	indf2,w,c
  5879  000C6E  010F               	movlb	15	; () banked
  5880  000C70  6F48               	movwf	72,b	;volatile
  5881                           
  5882                           ; BSR set to: 15
  5883                           ;inc\CANlib.h: 362: TXB0D3 = data[3];
  5884  000C72  0100               	movlb	0	; () banked
  5885  000C74  EE20 F003          	lfsr	2,3
  5886  000C78  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5887  000C7A  26D9               	addwf	fsr2l,f,c
  5888  000C7C  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5889  000C7E  22DA               	addwfc	fsr2h,f,c
  5890  000C80  50DF               	movf	indf2,w,c
  5891  000C82  010F               	movlb	15	; () banked
  5892  000C84  6F49               	movwf	73,b	;volatile
  5893                           
  5894                           ; BSR set to: 15
  5895                           ;inc\CANlib.h: 363: TXB0D4 = data[4];
  5896  000C86  0100               	movlb	0	; () banked
  5897  000C88  EE20 F004          	lfsr	2,4
  5898  000C8C  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5899  000C8E  26D9               	addwf	fsr2l,f,c
  5900  000C90  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5901  000C92  22DA               	addwfc	fsr2h,f,c
  5902  000C94  50DF               	movf	indf2,w,c
  5903  000C96  010F               	movlb	15	; () banked
  5904  000C98  6F4A               	movwf	74,b	;volatile
  5905                           
  5906                           ; BSR set to: 15
  5907                           ;inc\CANlib.h: 364: TXB0D5 = data[5];
  5908  000C9A  0100               	movlb	0	; () banked
  5909  000C9C  EE20 F005          	lfsr	2,5
  5910  000CA0  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5911  000CA2  26D9               	addwf	fsr2l,f,c
  5912  000CA4  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5913  000CA6  22DA               	addwfc	fsr2h,f,c
  5914  000CA8  50DF               	movf	indf2,w,c
  5915  000CAA  010F               	movlb	15	; () banked
  5916  000CAC  6F4B               	movwf	75,b	;volatile
  5917                           
  5918                           ; BSR set to: 15
  5919                           ;inc\CANlib.h: 365: TXB0D6 = data[6];
  5920  000CAE  0100               	movlb	0	; () banked
  5921  000CB0  EE20 F006          	lfsr	2,6
  5922  000CB4  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5923  000CB6  26D9               	addwf	fsr2l,f,c
  5924  000CB8  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5925  000CBA  22DA               	addwfc	fsr2h,f,c
  5926  000CBC  50DF               	movf	indf2,w,c
  5927  000CBE  010F               	movlb	15	; () banked
  5928  000CC0  6F4C               	movwf	76,b	;volatile
  5929                           
  5930                           ; BSR set to: 15
  5931                           ;inc\CANlib.h: 366: TXB0D7 = data[7];
  5932  000CC2  0100               	movlb	0	; () banked
  5933  000CC4  EE20 F007          	lfsr	2,7
  5934  000CC8  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5935  000CCA  26D9               	addwf	fsr2l,f,c
  5936  000CCC  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5937  000CCE  22DA               	addwfc	fsr2h,f,c
  5938  000CD0  50DF               	movf	indf2,w,c
  5939  000CD2  010F               	movlb	15	; () banked
  5940  000CD4  6F4D               	movwf	77,b	;volatile
  5941                           
  5942                           ; BSR set to: 15
  5943                           ;inc\CANlib.h: 368: TXB0CONbits.TXREQ = 0x01;
  5944  000CD6  010F               	movlb	15	; () banked
  5945  000CD8  8740               	bsf	64,3,b	;volatile
  5946                           
  5947                           ; BSR set to: 15
  5948                           ;inc\CANlib.h: 369: return;
  5949  000CDA  0012               	return	
  5950  000CDC                     l373:
  5951                           
  5952                           ; BSR set to: 15
  5953                           ;inc\CANlib.h: 370: }
  5954                           ;inc\CANlib.h: 374: if (TXB1CONbits.TXREQ == 0)
  5955  000CDC  010F               	movlb	15	; () banked
  5956  000CDE  B730               	btfsc	48,3,b	;volatile
  5957  000CE0  D13B               	goto	l388
  5958                           
  5959                           ; BSR set to: 15
  5960                           ;inc\CANlib.h: 375: { TXB1DLC = dataLength;
  5961  000CE2  C0A4  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  5962                           
  5963                           ;inc\CANlib.h: 377: if (0b01000000 & flags)
  5964  000CE6  0100               	movlb	0	; () banked
  5965  000CE8  ADA5               	btfss	CANsendMessage@flags& (0+255),6,b
  5966  000CEA  D003               	goto	l389
  5967                           
  5968                           ; BSR set to: 0
  5969                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x01;
  5970  000CEC  010F               	movlb	15	; () banked
  5971  000CEE  8D35               	bsf	53,6,b	;volatile
  5972  000CF0  D002               	goto	l390
  5973  000CF2                     l389:
  5974                           
  5975                           ; BSR set to: 0
  5976                           ;inc\CANlib.h: 379: else
  5977                           ;inc\CANlib.h: 380: TXB1DLCbits.TXRTR = 0x00;
  5978  000CF2  010F               	movlb	15	; () banked
  5979  000CF4  9D35               	bcf	53,6,b	;volatile
  5980  000CF6                     l390:
  5981                           
  5982                           ; BSR set to: 15
  5983                           ;inc\CANlib.h: 382: if (CAN_TX_FRAME_MASK & flags)
  5984  000CF6  0100               	movlb	0	; () banked
  5985  000CF8  A7A5               	btfss	CANsendMessage@flags& (0+255),3,b
  5986  000CFA  D077               	goto	l391
  5987                           
  5988                           ; BSR set to: 0
  5989                           ;inc\CANlib.h: 383: {
  5990                           ;inc\CANlib.h: 384: tamp = identifier & 0x000000FF;
  5991  000CFC  0100               	movlb	0	; () banked
  5992  000CFE  519E               	movf	CANsendMessage@identifier& (0+255),w,b
  5993  000D00  0100               	movlb	0	; () banked
  5994  000D02  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  5995  000D04  6BA7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5996  000D06  6BA8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5997  000D08  6BA9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5998                           
  5999                           ; BSR set to: 0
  6000                           ;inc\CANlib.h: 385: TXB1EIDL = (unsigned char) tamp;
  6001  000D0A  C0A6  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  6002                           
  6003                           ; BSR set to: 0
  6004                           ;inc\CANlib.h: 387: tamp = identifier & 0x0000FF00;
  6005  000D0E  0E00               	movlw	0
  6006  000D10  0100               	movlb	0	; () banked
  6007  000D12  159E               	andwf	CANsendMessage@identifier& (0+255),w,b
  6008  000D14  0100               	movlb	0	; () banked
  6009  000D16  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  6010  000D18  0EFF               	movlw	255
  6011  000D1A  0100               	movlb	0	; () banked
  6012  000D1C  159F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6013  000D1E  0100               	movlb	0	; () banked
  6014  000D20  6FA7               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6015  000D22  0E00               	movlw	0
  6016  000D24  0100               	movlb	0	; () banked
  6017  000D26  15A0               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6018  000D28  0100               	movlb	0	; () banked
  6019  000D2A  6FA8               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6020  000D2C  0E00               	movlw	0
  6021  000D2E  0100               	movlb	0	; () banked
  6022  000D30  15A1               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6023  000D32  0100               	movlb	0	; () banked
  6024  000D34  6FA9               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6025                           
  6026                           ; BSR set to: 0
  6027                           ;inc\CANlib.h: 388: tamp = tamp >> 8;
  6028  000D36  C0A6  F01D         	movff	CANsendMessage@tamp,??_CANsendMessage
  6029  000D3A  C0A7  F01E         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6030  000D3E  C0A8  F01F         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6031  000D42  C0A9  F020         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6032  000D46  C01E  F01D         	movff	??_CANsendMessage+1,??_CANsendMessage
  6033  000D4A  C01F  F01E         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6034  000D4E  C020  F01F         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6035  000D52  6A20               	clrf	??_CANsendMessage+3,c
  6036  000D54  C01D  F0A6         	movff	??_CANsendMessage,CANsendMessage@tamp
  6037  000D58  C01E  F0A7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6038  000D5C  C01F  F0A8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6039  000D60  C020  F0A9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;inc\CANlib.h: 389: TXB1EIDH = (unsigned char) tamp;
  6043  000D64  C0A6  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  6044                           
  6045                           ; BSR set to: 0
  6046                           ;inc\CANlib.h: 391: TXB1SIDL = 0x00;
  6047  000D68  0E00               	movlw	0
  6048  000D6A  010F               	movlb	15	; () banked
  6049  000D6C  6F32               	movwf	50,b	;volatile
  6050                           
  6051                           ; BSR set to: 15
  6052                           ;inc\CANlib.h: 392: TXB1SIDLbits.EXIDE = 0x01;
  6053  000D6E  010F               	movlb	15	; () banked
  6054  000D70  8732               	bsf	50,3,b	;volatile
  6055                           
  6056                           ; BSR set to: 15
  6057                           ;inc\CANlib.h: 394: if (identifier & 0x00010000)
  6058  000D72  0100               	movlb	0	; () banked
  6059  000D74  A1A0               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6060  000D76  D002               	goto	l392
  6061                           
  6062                           ; BSR set to: 0
  6063                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID16 = 0x01;
  6064  000D78  010F               	movlb	15	; () banked
  6065  000D7A  8132               	bsf	50,0,b	;volatile
  6066  000D7C                     l392:
  6067                           
  6068                           ;inc\CANlib.h: 396: if (identifier & 0x00020000)
  6069  000D7C  0100               	movlb	0	; () banked
  6070  000D7E  A3A0               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6071  000D80  D002               	goto	l393
  6072                           
  6073                           ; BSR set to: 0
  6074                           ;inc\CANlib.h: 397: TXB1SIDLbits.EID17 = 0x01;
  6075  000D82  010F               	movlb	15	; () banked
  6076  000D84  8332               	bsf	50,1,b	;volatile
  6077  000D86                     l393:
  6078                           
  6079                           ;inc\CANlib.h: 398: if (identifier & 0x00040000)
  6080  000D86  0100               	movlb	0	; () banked
  6081  000D88  A5A0               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6082  000D8A  D002               	goto	l394
  6083                           
  6084                           ; BSR set to: 0
  6085                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID0 = 0x01;
  6086  000D8C  010F               	movlb	15	; () banked
  6087  000D8E  8B32               	bsf	50,5,b	;volatile
  6088  000D90                     l394:
  6089                           
  6090                           ;inc\CANlib.h: 400: if (identifier & 0x00080000)
  6091  000D90  0100               	movlb	0	; () banked
  6092  000D92  A7A0               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6093  000D94  D002               	goto	l395
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID1 = 0x01;
  6097  000D96  010F               	movlb	15	; () banked
  6098  000D98  8D32               	bsf	50,6,b	;volatile
  6099  000D9A                     l395:
  6100                           
  6101                           ;inc\CANlib.h: 402: if (identifier & 0x00100000)
  6102  000D9A  0100               	movlb	0	; () banked
  6103  000D9C  A9A0               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6104  000D9E  D002               	goto	l4545
  6105                           
  6106                           ; BSR set to: 0
  6107                           ;inc\CANlib.h: 403: TXB1SIDLbits.SID2 = 0x01;
  6108  000DA0  010F               	movlb	15	; () banked
  6109  000DA2  8F32               	bsf	50,7,b	;volatile
  6110  000DA4                     l4545:
  6111                           
  6112                           ;inc\CANlib.h: 405: tamp = (identifier >> 21);
  6113  000DA4  C09E  F01D         	movff	CANsendMessage@identifier,??_CANsendMessage
  6114  000DA8  C09F  F01E         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6115  000DAC  C0A0  F01F         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6116  000DB0  C0A1  F020         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6117  000DB4  0E16               	movlw	22
  6118  000DB6  D005               	goto	u6110
  6119  000DB8                     u6115:
  6120  000DB8  90D8               	bcf	status,0,c
  6121  000DBA  3220               	rrcf	??_CANsendMessage+3,f,c
  6122  000DBC  321F               	rrcf	??_CANsendMessage+2,f,c
  6123  000DBE  321E               	rrcf	??_CANsendMessage+1,f,c
  6124  000DC0  321D               	rrcf	??_CANsendMessage,f,c
  6125  000DC2                     u6110:
  6126  000DC2  2EE8               	decfsz	wreg,f,c
  6127  000DC4  D7F9               	goto	u6115
  6128  000DC6  C01D  F0A6         	movff	??_CANsendMessage,CANsendMessage@tamp
  6129  000DCA  C01E  F0A7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6130  000DCE  C01F  F0A8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6131  000DD2  C020  F0A9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6132                           
  6133                           ;inc\CANlib.h: 406: tamp = tamp & 0x000000FF;
  6134  000DD6  0100               	movlb	0	; () banked
  6135  000DD8  51A6               	movf	CANsendMessage@tamp& (0+255),w,b
  6136  000DDA  0100               	movlb	0	; () banked
  6137  000DDC  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  6138  000DDE  6BA7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6139  000DE0  6BA8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6140  000DE2  6BA9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6141                           
  6142                           ; BSR set to: 0
  6143                           ;inc\CANlib.h: 407: TXB1SIDH = (unsigned char) tamp;
  6144  000DE4  C0A6  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6145                           
  6146                           ;inc\CANlib.h: 408: }
  6147  000DE8  D057               	goto	l4565
  6148  000DEA                     l391:
  6149                           
  6150                           ; BSR set to: 0
  6151                           ;inc\CANlib.h: 410: else
  6152                           ;inc\CANlib.h: 412: {
  6153                           ;inc\CANlib.h: 413: TXB1SIDLbits.EXIDE = 0x00;
  6154  000DEA  010F               	movlb	15	; () banked
  6155  000DEC  9732               	bcf	50,3,b	;volatile
  6156                           
  6157                           ; BSR set to: 15
  6158                           ;inc\CANlib.h: 415: tamp = (identifier >> 3);
  6159  000DEE  C09E  F01D         	movff	CANsendMessage@identifier,??_CANsendMessage
  6160  000DF2  C09F  F01E         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6161  000DF6  C0A0  F01F         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6162  000DFA  C0A1  F020         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6163  000DFE  0E04               	movlw	4
  6164  000E00  D005               	goto	u6120
  6165  000E02                     u6125:
  6166  000E02  90D8               	bcf	status,0,c
  6167  000E04  3220               	rrcf	??_CANsendMessage+3,f,c
  6168  000E06  321F               	rrcf	??_CANsendMessage+2,f,c
  6169  000E08  321E               	rrcf	??_CANsendMessage+1,f,c
  6170  000E0A  321D               	rrcf	??_CANsendMessage,f,c
  6171  000E0C                     u6120:
  6172  000E0C  2EE8               	decfsz	wreg,f,c
  6173  000E0E  D7F9               	goto	u6125
  6174  000E10  C01D  F0A6         	movff	??_CANsendMessage,CANsendMessage@tamp
  6175  000E14  C01E  F0A7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6176  000E18  C01F  F0A8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6177  000E1C  C020  F0A9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6178                           
  6179                           ; BSR set to: 15
  6180                           ;inc\CANlib.h: 416: tamp = tamp & 0x000000FF;
  6181  000E20  0100               	movlb	0	; () banked
  6182  000E22  51A6               	movf	CANsendMessage@tamp& (0+255),w,b
  6183  000E24  0100               	movlb	0	; () banked
  6184  000E26  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  6185  000E28  6BA7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6186  000E2A  6BA8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6187  000E2C  6BA9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6188                           
  6189                           ; BSR set to: 0
  6190                           ;inc\CANlib.h: 417: TXB1SIDH = (unsigned char) tamp;
  6191  000E2E  C0A6  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6192                           
  6193                           ; BSR set to: 0
  6194                           ;inc\CANlib.h: 419: tamp = identifier & 0x00000007;
  6195  000E32  0E07               	movlw	7
  6196  000E34  0100               	movlb	0	; () banked
  6197  000E36  159E               	andwf	CANsendMessage@identifier& (0+255),w,b
  6198  000E38  0100               	movlb	0	; () banked
  6199  000E3A  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  6200  000E3C  0E00               	movlw	0
  6201  000E3E  0100               	movlb	0	; () banked
  6202  000E40  159F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6203  000E42  0100               	movlb	0	; () banked
  6204  000E44  6FA7               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6205  000E46  0E00               	movlw	0
  6206  000E48  0100               	movlb	0	; () banked
  6207  000E4A  15A0               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6208  000E4C  0100               	movlb	0	; () banked
  6209  000E4E  6FA8               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6210  000E50  0E00               	movlw	0
  6211  000E52  0100               	movlb	0	; () banked
  6212  000E54  15A1               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6213  000E56  0100               	movlb	0	; () banked
  6214  000E58  6FA9               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6215                           
  6216                           ; BSR set to: 0
  6217                           ;inc\CANlib.h: 420: tamp = tamp << 5;
  6218  000E5A  C0A6  F01D         	movff	CANsendMessage@tamp,??_CANsendMessage
  6219  000E5E  C0A7  F01E         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6220  000E62  C0A8  F01F         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6221  000E66  C0A9  F020         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6222  000E6A  0E05               	movlw	5
  6223  000E6C                     u6135:
  6224  000E6C  90D8               	bcf	status,0,c
  6225  000E6E  361D               	rlcf	??_CANsendMessage,f,c
  6226  000E70  361E               	rlcf	??_CANsendMessage+1,f,c
  6227  000E72  361F               	rlcf	??_CANsendMessage+2,f,c
  6228  000E74  3620               	rlcf	??_CANsendMessage+3,f,c
  6229  000E76  2EE8               	decfsz	wreg,f,c
  6230  000E78  D7F9               	goto	u6135
  6231  000E7A  C01D  F0A6         	movff	??_CANsendMessage,CANsendMessage@tamp
  6232  000E7E  C01E  F0A7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6233  000E82  C01F  F0A8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6234  000E86  C020  F0A9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6235                           
  6236                           ; BSR set to: 0
  6237                           ;inc\CANlib.h: 421: TXB1SIDL = TXB1SIDL & 0b00011111;
  6238  000E8A  010F               	movlb	15	; () banked
  6239  000E8C  5132               	movf	50,w,b	;volatile
  6240  000E8E  0B1F               	andlw	31
  6241  000E90  010F               	movlb	15	; () banked
  6242  000E92  6F32               	movwf	50,b	;volatile
  6243                           
  6244                           ; BSR set to: 15
  6245                           ;inc\CANlib.h: 422: TXB1SIDL = (unsigned char) tamp;
  6246  000E94  C0A6  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  6247  000E98                     l4565:
  6248                           
  6249                           ;inc\CANlib.h: 423: }
  6250                           ;inc\CANlib.h: 425: if (0b00000001 & flags)
  6251  000E98  0100               	movlb	0	; () banked
  6252  000E9A  A1A5               	btfss	CANsendMessage@flags& (0+255),0,b
  6253  000E9C  D003               	goto	l398
  6254                           
  6255                           ; BSR set to: 0
  6256                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x01;
  6257  000E9E  010F               	movlb	15	; () banked
  6258  000EA0  8130               	bsf	48,0,b	;volatile
  6259  000EA2  D002               	goto	l399
  6260  000EA4                     l398:
  6261                           
  6262                           ; BSR set to: 0
  6263                           ;inc\CANlib.h: 427: else
  6264                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI0 = 0x00;
  6265  000EA4  010F               	movlb	15	; () banked
  6266  000EA6  9130               	bcf	48,0,b	;volatile
  6267  000EA8                     l399:
  6268                           
  6269                           ; BSR set to: 15
  6270                           ;inc\CANlib.h: 429: if (0b00000010 & flags)
  6271  000EA8  0100               	movlb	0	; () banked
  6272  000EAA  A3A5               	btfss	CANsendMessage@flags& (0+255),1,b
  6273  000EAC  D003               	goto	l400
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x01;
  6277  000EAE  010F               	movlb	15	; () banked
  6278  000EB0  8330               	bsf	48,1,b	;volatile
  6279  000EB2  D002               	goto	l4571
  6280  000EB4                     l400:
  6281                           
  6282                           ; BSR set to: 0
  6283                           ;inc\CANlib.h: 431: else
  6284                           ;inc\CANlib.h: 432: TXB1CONbits.TXPRI1 = 0x00;
  6285  000EB4  010F               	movlb	15	; () banked
  6286  000EB6  9330               	bcf	48,1,b	;volatile
  6287  000EB8                     l4571:
  6288                           
  6289                           ; BSR set to: 15
  6290                           ;inc\CANlib.h: 434: TXB1D0 = data[0];
  6291  000EB8  C0A2  FFD9         	movff	CANsendMessage@data,fsr2l
  6292  000EBC  C0A3  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6293  000EC0  50DF               	movf	indf2,w,c
  6294  000EC2  010F               	movlb	15	; () banked
  6295  000EC4  6F36               	movwf	54,b	;volatile
  6296                           
  6297                           ; BSR set to: 15
  6298                           ;inc\CANlib.h: 435: TXB1D1 = data[1];
  6299  000EC6  0100               	movlb	0	; () banked
  6300  000EC8  EE20 F001          	lfsr	2,1
  6301  000ECC  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6302  000ECE  26D9               	addwf	fsr2l,f,c
  6303  000ED0  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6304  000ED2  22DA               	addwfc	fsr2h,f,c
  6305  000ED4  50DF               	movf	indf2,w,c
  6306  000ED6  010F               	movlb	15	; () banked
  6307  000ED8  6F37               	movwf	55,b	;volatile
  6308                           
  6309                           ; BSR set to: 15
  6310                           ;inc\CANlib.h: 436: TXB1D2 = data[2];
  6311  000EDA  0100               	movlb	0	; () banked
  6312  000EDC  EE20 F002          	lfsr	2,2
  6313  000EE0  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6314  000EE2  26D9               	addwf	fsr2l,f,c
  6315  000EE4  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6316  000EE6  22DA               	addwfc	fsr2h,f,c
  6317  000EE8  50DF               	movf	indf2,w,c
  6318  000EEA  010F               	movlb	15	; () banked
  6319  000EEC  6F38               	movwf	56,b	;volatile
  6320                           
  6321                           ; BSR set to: 15
  6322                           ;inc\CANlib.h: 437: TXB1D3 = data[3];
  6323  000EEE  0100               	movlb	0	; () banked
  6324  000EF0  EE20 F003          	lfsr	2,3
  6325  000EF4  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6326  000EF6  26D9               	addwf	fsr2l,f,c
  6327  000EF8  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6328  000EFA  22DA               	addwfc	fsr2h,f,c
  6329  000EFC  50DF               	movf	indf2,w,c
  6330  000EFE  010F               	movlb	15	; () banked
  6331  000F00  6F39               	movwf	57,b	;volatile
  6332                           
  6333                           ; BSR set to: 15
  6334                           ;inc\CANlib.h: 438: TXB1D4 = data[4];
  6335  000F02  0100               	movlb	0	; () banked
  6336  000F04  EE20 F004          	lfsr	2,4
  6337  000F08  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6338  000F0A  26D9               	addwf	fsr2l,f,c
  6339  000F0C  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6340  000F0E  22DA               	addwfc	fsr2h,f,c
  6341  000F10  50DF               	movf	indf2,w,c
  6342  000F12  010F               	movlb	15	; () banked
  6343  000F14  6F3A               	movwf	58,b	;volatile
  6344                           
  6345                           ; BSR set to: 15
  6346                           ;inc\CANlib.h: 439: TXB1D5 = data[5];
  6347  000F16  0100               	movlb	0	; () banked
  6348  000F18  EE20 F005          	lfsr	2,5
  6349  000F1C  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6350  000F1E  26D9               	addwf	fsr2l,f,c
  6351  000F20  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6352  000F22  22DA               	addwfc	fsr2h,f,c
  6353  000F24  50DF               	movf	indf2,w,c
  6354  000F26  010F               	movlb	15	; () banked
  6355  000F28  6F3B               	movwf	59,b	;volatile
  6356                           
  6357                           ; BSR set to: 15
  6358                           ;inc\CANlib.h: 440: TXB1D6 = data[6];
  6359  000F2A  0100               	movlb	0	; () banked
  6360  000F2C  EE20 F006          	lfsr	2,6
  6361  000F30  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6362  000F32  26D9               	addwf	fsr2l,f,c
  6363  000F34  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6364  000F36  22DA               	addwfc	fsr2h,f,c
  6365  000F38  50DF               	movf	indf2,w,c
  6366  000F3A  010F               	movlb	15	; () banked
  6367  000F3C  6F3C               	movwf	60,b	;volatile
  6368                           
  6369                           ; BSR set to: 15
  6370                           ;inc\CANlib.h: 441: TXB1D7 = data[7];
  6371  000F3E  0100               	movlb	0	; () banked
  6372  000F40  EE20 F007          	lfsr	2,7
  6373  000F44  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6374  000F46  26D9               	addwf	fsr2l,f,c
  6375  000F48  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6376  000F4A  22DA               	addwfc	fsr2h,f,c
  6377  000F4C  50DF               	movf	indf2,w,c
  6378  000F4E  010F               	movlb	15	; () banked
  6379  000F50  6F3D               	movwf	61,b	;volatile
  6380                           
  6381                           ; BSR set to: 15
  6382                           ;inc\CANlib.h: 443: TXB1CONbits.TXREQ = 0x01;
  6383  000F52  010F               	movlb	15	; () banked
  6384  000F54  8730               	bsf	48,3,b	;volatile
  6385                           
  6386                           ; BSR set to: 15
  6387                           ;inc\CANlib.h: 445: return;
  6388  000F56  0012               	return	
  6389  000F58                     l388:
  6390                           
  6391                           ; BSR set to: 15
  6392                           ;inc\CANlib.h: 446: }
  6393                           ;inc\CANlib.h: 450: if (TXB2CONbits.TXREQ == 0)
  6394  000F58  010F               	movlb	15	; () banked
  6395  000F5A  B720               	btfsc	32,3,b	;volatile
  6396  000F5C  0012               	return	
  6397                           
  6398                           ; BSR set to: 15
  6399                           ;inc\CANlib.h: 451: { TXB2DLC = dataLength;
  6400  000F5E  C0A4  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  6401                           
  6402                           ;inc\CANlib.h: 453: if (0b01000000 & flags)
  6403  000F62  0100               	movlb	0	; () banked
  6404  000F64  ADA5               	btfss	CANsendMessage@flags& (0+255),6,b
  6405  000F66  D003               	goto	l403
  6406                           
  6407                           ; BSR set to: 0
  6408                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x01;
  6409  000F68  010F               	movlb	15	; () banked
  6410  000F6A  8D25               	bsf	37,6,b	;volatile
  6411  000F6C  D002               	goto	l404
  6412  000F6E                     l403:
  6413                           
  6414                           ; BSR set to: 0
  6415                           ;inc\CANlib.h: 455: else
  6416                           ;inc\CANlib.h: 456: TXB2DLCbits.TXRTR = 0x00;
  6417  000F6E  010F               	movlb	15	; () banked
  6418  000F70  9D25               	bcf	37,6,b	;volatile
  6419  000F72                     l404:
  6420                           
  6421                           ; BSR set to: 15
  6422                           ;inc\CANlib.h: 458: if (CAN_TX_FRAME_MASK & flags)
  6423  000F72  0100               	movlb	0	; () banked
  6424  000F74  A7A5               	btfss	CANsendMessage@flags& (0+255),3,b
  6425  000F76  D077               	goto	l405
  6426                           
  6427                           ; BSR set to: 0
  6428                           ;inc\CANlib.h: 459: {
  6429                           ;inc\CANlib.h: 460: tamp = identifier & 0x000000FF;
  6430  000F78  0100               	movlb	0	; () banked
  6431  000F7A  519E               	movf	CANsendMessage@identifier& (0+255),w,b
  6432  000F7C  0100               	movlb	0	; () banked
  6433  000F7E  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  6434  000F80  6BA7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6435  000F82  6BA8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6436  000F84  6BA9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6437                           
  6438                           ; BSR set to: 0
  6439                           ;inc\CANlib.h: 461: TXB2EIDL = (unsigned char) tamp;
  6440  000F86  C0A6  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  6441                           
  6442                           ; BSR set to: 0
  6443                           ;inc\CANlib.h: 463: tamp = identifier & 0x0000FF00;
  6444  000F8A  0E00               	movlw	0
  6445  000F8C  0100               	movlb	0	; () banked
  6446  000F8E  159E               	andwf	CANsendMessage@identifier& (0+255),w,b
  6447  000F90  0100               	movlb	0	; () banked
  6448  000F92  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  6449  000F94  0EFF               	movlw	255
  6450  000F96  0100               	movlb	0	; () banked
  6451  000F98  159F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6452  000F9A  0100               	movlb	0	; () banked
  6453  000F9C  6FA7               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6454  000F9E  0E00               	movlw	0
  6455  000FA0  0100               	movlb	0	; () banked
  6456  000FA2  15A0               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6457  000FA4  0100               	movlb	0	; () banked
  6458  000FA6  6FA8               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6459  000FA8  0E00               	movlw	0
  6460  000FAA  0100               	movlb	0	; () banked
  6461  000FAC  15A1               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6462  000FAE  0100               	movlb	0	; () banked
  6463  000FB0  6FA9               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6464                           
  6465                           ; BSR set to: 0
  6466                           ;inc\CANlib.h: 464: tamp = tamp >> 8;
  6467  000FB2  C0A6  F01D         	movff	CANsendMessage@tamp,??_CANsendMessage
  6468  000FB6  C0A7  F01E         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6469  000FBA  C0A8  F01F         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6470  000FBE  C0A9  F020         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6471  000FC2  C01E  F01D         	movff	??_CANsendMessage+1,??_CANsendMessage
  6472  000FC6  C01F  F01E         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6473  000FCA  C020  F01F         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6474  000FCE  6A20               	clrf	??_CANsendMessage+3,c
  6475  000FD0  C01D  F0A6         	movff	??_CANsendMessage,CANsendMessage@tamp
  6476  000FD4  C01E  F0A7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6477  000FD8  C01F  F0A8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6478  000FDC  C020  F0A9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6479                           
  6480                           ; BSR set to: 0
  6481                           ;inc\CANlib.h: 465: TXB2EIDH = (unsigned char) tamp;
  6482  000FE0  C0A6  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  6483                           
  6484                           ; BSR set to: 0
  6485                           ;inc\CANlib.h: 467: TXB2SIDL = 0x00;
  6486  000FE4  0E00               	movlw	0
  6487  000FE6  010F               	movlb	15	; () banked
  6488  000FE8  6F22               	movwf	34,b	;volatile
  6489                           
  6490                           ; BSR set to: 15
  6491                           ;inc\CANlib.h: 468: TXB2SIDLbits.EXIDE = 0x01;
  6492  000FEA  010F               	movlb	15	; () banked
  6493  000FEC  8722               	bsf	34,3,b	;volatile
  6494                           
  6495                           ; BSR set to: 15
  6496                           ;inc\CANlib.h: 470: if (identifier & 0x00010000)
  6497  000FEE  0100               	movlb	0	; () banked
  6498  000FF0  A1A0               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6499  000FF2  D002               	goto	l406
  6500                           
  6501                           ; BSR set to: 0
  6502                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID16 = 0x01;
  6503  000FF4  010F               	movlb	15	; () banked
  6504  000FF6  8122               	bsf	34,0,b	;volatile
  6505  000FF8                     l406:
  6506                           
  6507                           ;inc\CANlib.h: 472: if (identifier & 0x00020000)
  6508  000FF8  0100               	movlb	0	; () banked
  6509  000FFA  A3A0               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6510  000FFC  D002               	goto	l407
  6511                           
  6512                           ; BSR set to: 0
  6513                           ;inc\CANlib.h: 473: TXB2SIDLbits.EID17 = 0x01;
  6514  000FFE  010F               	movlb	15	; () banked
  6515  001000  8322               	bsf	34,1,b	;volatile
  6516  001002                     l407:
  6517                           
  6518                           ;inc\CANlib.h: 474: if (identifier & 0x00040000)
  6519  001002  0100               	movlb	0	; () banked
  6520  001004  A5A0               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6521  001006  D002               	goto	l408
  6522                           
  6523                           ; BSR set to: 0
  6524                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID0 = 0x01;
  6525  001008  010F               	movlb	15	; () banked
  6526  00100A  8B22               	bsf	34,5,b	;volatile
  6527  00100C                     l408:
  6528                           
  6529                           ;inc\CANlib.h: 476: if (identifier & 0x00080000)
  6530  00100C  0100               	movlb	0	; () banked
  6531  00100E  A7A0               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6532  001010  D002               	goto	l409
  6533                           
  6534                           ; BSR set to: 0
  6535                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID1 = 0x01;
  6536  001012  010F               	movlb	15	; () banked
  6537  001014  8D22               	bsf	34,6,b	;volatile
  6538  001016                     l409:
  6539                           
  6540                           ;inc\CANlib.h: 478: if (identifier & 0x00100000)
  6541  001016  0100               	movlb	0	; () banked
  6542  001018  A9A0               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6543  00101A  D002               	goto	l4621
  6544                           
  6545                           ; BSR set to: 0
  6546                           ;inc\CANlib.h: 479: TXB2SIDLbits.SID2 = 0x01;
  6547  00101C  010F               	movlb	15	; () banked
  6548  00101E  8F22               	bsf	34,7,b	;volatile
  6549  001020                     l4621:
  6550                           
  6551                           ;inc\CANlib.h: 481: tamp = (identifier >> 21);
  6552  001020  C09E  F01D         	movff	CANsendMessage@identifier,??_CANsendMessage
  6553  001024  C09F  F01E         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6554  001028  C0A0  F01F         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6555  00102C  C0A1  F020         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6556  001030  0E16               	movlw	22
  6557  001032  D005               	goto	u6240
  6558  001034                     u6245:
  6559  001034  90D8               	bcf	status,0,c
  6560  001036  3220               	rrcf	??_CANsendMessage+3,f,c
  6561  001038  321F               	rrcf	??_CANsendMessage+2,f,c
  6562  00103A  321E               	rrcf	??_CANsendMessage+1,f,c
  6563  00103C  321D               	rrcf	??_CANsendMessage,f,c
  6564  00103E                     u6240:
  6565  00103E  2EE8               	decfsz	wreg,f,c
  6566  001040  D7F9               	goto	u6245
  6567  001042  C01D  F0A6         	movff	??_CANsendMessage,CANsendMessage@tamp
  6568  001046  C01E  F0A7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6569  00104A  C01F  F0A8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6570  00104E  C020  F0A9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6571                           
  6572                           ;inc\CANlib.h: 482: tamp = tamp & 0x000000FF;
  6573  001052  0100               	movlb	0	; () banked
  6574  001054  51A6               	movf	CANsendMessage@tamp& (0+255),w,b
  6575  001056  0100               	movlb	0	; () banked
  6576  001058  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  6577  00105A  6BA7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6578  00105C  6BA8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6579  00105E  6BA9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6580                           
  6581                           ; BSR set to: 0
  6582                           ;inc\CANlib.h: 483: TXB2SIDH = (unsigned char) tamp;
  6583  001060  C0A6  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6584                           
  6585                           ;inc\CANlib.h: 484: }
  6586  001064  D057               	goto	l4641
  6587  001066                     l405:
  6588                           
  6589                           ; BSR set to: 0
  6590                           ;inc\CANlib.h: 486: else
  6591                           ;inc\CANlib.h: 488: {
  6592                           ;inc\CANlib.h: 489: TXB2SIDLbits.EXIDE = 0x00;
  6593  001066  010F               	movlb	15	; () banked
  6594  001068  9722               	bcf	34,3,b	;volatile
  6595                           
  6596                           ; BSR set to: 15
  6597                           ;inc\CANlib.h: 491: tamp = (identifier >> 3);
  6598  00106A  C09E  F01D         	movff	CANsendMessage@identifier,??_CANsendMessage
  6599  00106E  C09F  F01E         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6600  001072  C0A0  F01F         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6601  001076  C0A1  F020         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6602  00107A  0E04               	movlw	4
  6603  00107C  D005               	goto	u6250
  6604  00107E                     u6255:
  6605  00107E  90D8               	bcf	status,0,c
  6606  001080  3220               	rrcf	??_CANsendMessage+3,f,c
  6607  001082  321F               	rrcf	??_CANsendMessage+2,f,c
  6608  001084  321E               	rrcf	??_CANsendMessage+1,f,c
  6609  001086  321D               	rrcf	??_CANsendMessage,f,c
  6610  001088                     u6250:
  6611  001088  2EE8               	decfsz	wreg,f,c
  6612  00108A  D7F9               	goto	u6255
  6613  00108C  C01D  F0A6         	movff	??_CANsendMessage,CANsendMessage@tamp
  6614  001090  C01E  F0A7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6615  001094  C01F  F0A8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6616  001098  C020  F0A9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6617                           
  6618                           ; BSR set to: 15
  6619                           ;inc\CANlib.h: 492: tamp = tamp & 0x000000FF;
  6620  00109C  0100               	movlb	0	; () banked
  6621  00109E  51A6               	movf	CANsendMessage@tamp& (0+255),w,b
  6622  0010A0  0100               	movlb	0	; () banked
  6623  0010A2  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  6624  0010A4  6BA7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6625  0010A6  6BA8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6626  0010A8  6BA9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6627                           
  6628                           ; BSR set to: 0
  6629                           ;inc\CANlib.h: 493: TXB2SIDH = (unsigned char) tamp;
  6630  0010AA  C0A6  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6631                           
  6632                           ; BSR set to: 0
  6633                           ;inc\CANlib.h: 495: tamp = identifier & 0x00000007;
  6634  0010AE  0E07               	movlw	7
  6635  0010B0  0100               	movlb	0	; () banked
  6636  0010B2  159E               	andwf	CANsendMessage@identifier& (0+255),w,b
  6637  0010B4  0100               	movlb	0	; () banked
  6638  0010B6  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  6639  0010B8  0E00               	movlw	0
  6640  0010BA  0100               	movlb	0	; () banked
  6641  0010BC  159F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6642  0010BE  0100               	movlb	0	; () banked
  6643  0010C0  6FA7               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6644  0010C2  0E00               	movlw	0
  6645  0010C4  0100               	movlb	0	; () banked
  6646  0010C6  15A0               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6647  0010C8  0100               	movlb	0	; () banked
  6648  0010CA  6FA8               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6649  0010CC  0E00               	movlw	0
  6650  0010CE  0100               	movlb	0	; () banked
  6651  0010D0  15A1               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6652  0010D2  0100               	movlb	0	; () banked
  6653  0010D4  6FA9               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6654                           
  6655                           ; BSR set to: 0
  6656                           ;inc\CANlib.h: 496: tamp = tamp << 5;
  6657  0010D6  C0A6  F01D         	movff	CANsendMessage@tamp,??_CANsendMessage
  6658  0010DA  C0A7  F01E         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6659  0010DE  C0A8  F01F         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6660  0010E2  C0A9  F020         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6661  0010E6  0E05               	movlw	5
  6662  0010E8                     u6265:
  6663  0010E8  90D8               	bcf	status,0,c
  6664  0010EA  361D               	rlcf	??_CANsendMessage,f,c
  6665  0010EC  361E               	rlcf	??_CANsendMessage+1,f,c
  6666  0010EE  361F               	rlcf	??_CANsendMessage+2,f,c
  6667  0010F0  3620               	rlcf	??_CANsendMessage+3,f,c
  6668  0010F2  2EE8               	decfsz	wreg,f,c
  6669  0010F4  D7F9               	goto	u6265
  6670  0010F6  C01D  F0A6         	movff	??_CANsendMessage,CANsendMessage@tamp
  6671  0010FA  C01E  F0A7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6672  0010FE  C01F  F0A8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6673  001102  C020  F0A9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6674                           
  6675                           ; BSR set to: 0
  6676                           ;inc\CANlib.h: 497: TXB2SIDL = TXB2SIDL & 0b00011111;
  6677  001106  010F               	movlb	15	; () banked
  6678  001108  5122               	movf	34,w,b	;volatile
  6679  00110A  0B1F               	andlw	31
  6680  00110C  010F               	movlb	15	; () banked
  6681  00110E  6F22               	movwf	34,b	;volatile
  6682                           
  6683                           ; BSR set to: 15
  6684                           ;inc\CANlib.h: 498: TXB2SIDL = (unsigned char) tamp;
  6685  001110  C0A6  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  6686  001114                     l4641:
  6687                           
  6688                           ;inc\CANlib.h: 499: }
  6689                           ;inc\CANlib.h: 501: if (0b00000001 & flags)
  6690  001114  0100               	movlb	0	; () banked
  6691  001116  A1A5               	btfss	CANsendMessage@flags& (0+255),0,b
  6692  001118  D003               	goto	l412
  6693                           
  6694                           ; BSR set to: 0
  6695                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x01;
  6696  00111A  010F               	movlb	15	; () banked
  6697  00111C  8120               	bsf	32,0,b	;volatile
  6698  00111E  D002               	goto	l413
  6699  001120                     l412:
  6700                           
  6701                           ; BSR set to: 0
  6702                           ;inc\CANlib.h: 503: else
  6703                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI0 = 0x00;
  6704  001120  010F               	movlb	15	; () banked
  6705  001122  9120               	bcf	32,0,b	;volatile
  6706  001124                     l413:
  6707                           
  6708                           ; BSR set to: 15
  6709                           ;inc\CANlib.h: 505: if (0b00000010 & flags)
  6710  001124  0100               	movlb	0	; () banked
  6711  001126  A3A5               	btfss	CANsendMessage@flags& (0+255),1,b
  6712  001128  D003               	goto	l414
  6713                           
  6714                           ; BSR set to: 0
  6715                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x01;
  6716  00112A  010F               	movlb	15	; () banked
  6717  00112C  8320               	bsf	32,1,b	;volatile
  6718  00112E  D002               	goto	l4647
  6719  001130                     l414:
  6720                           
  6721                           ; BSR set to: 0
  6722                           ;inc\CANlib.h: 507: else
  6723                           ;inc\CANlib.h: 508: TXB2CONbits.TXPRI1 = 0x00;
  6724  001130  010F               	movlb	15	; () banked
  6725  001132  9320               	bcf	32,1,b	;volatile
  6726  001134                     l4647:
  6727                           
  6728                           ; BSR set to: 15
  6729                           ;inc\CANlib.h: 510: TXB2D0 = data[0];
  6730  001134  C0A2  FFD9         	movff	CANsendMessage@data,fsr2l
  6731  001138  C0A3  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6732  00113C  50DF               	movf	indf2,w,c
  6733  00113E  010F               	movlb	15	; () banked
  6734  001140  6F26               	movwf	38,b	;volatile
  6735                           
  6736                           ; BSR set to: 15
  6737                           ;inc\CANlib.h: 511: TXB2D1 = data[1];
  6738  001142  0100               	movlb	0	; () banked
  6739  001144  EE20 F001          	lfsr	2,1
  6740  001148  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6741  00114A  26D9               	addwf	fsr2l,f,c
  6742  00114C  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6743  00114E  22DA               	addwfc	fsr2h,f,c
  6744  001150  50DF               	movf	indf2,w,c
  6745  001152  010F               	movlb	15	; () banked
  6746  001154  6F27               	movwf	39,b	;volatile
  6747                           
  6748                           ; BSR set to: 15
  6749                           ;inc\CANlib.h: 512: TXB2D2 = data[2];
  6750  001156  0100               	movlb	0	; () banked
  6751  001158  EE20 F002          	lfsr	2,2
  6752  00115C  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6753  00115E  26D9               	addwf	fsr2l,f,c
  6754  001160  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6755  001162  22DA               	addwfc	fsr2h,f,c
  6756  001164  50DF               	movf	indf2,w,c
  6757  001166  010F               	movlb	15	; () banked
  6758  001168  6F28               	movwf	40,b	;volatile
  6759                           
  6760                           ; BSR set to: 15
  6761                           ;inc\CANlib.h: 513: TXB2D3 = data[3];
  6762  00116A  0100               	movlb	0	; () banked
  6763  00116C  EE20 F003          	lfsr	2,3
  6764  001170  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6765  001172  26D9               	addwf	fsr2l,f,c
  6766  001174  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6767  001176  22DA               	addwfc	fsr2h,f,c
  6768  001178  50DF               	movf	indf2,w,c
  6769  00117A  010F               	movlb	15	; () banked
  6770  00117C  6F29               	movwf	41,b	;volatile
  6771                           
  6772                           ; BSR set to: 15
  6773                           ;inc\CANlib.h: 514: TXB2D4 = data[4];
  6774  00117E  0100               	movlb	0	; () banked
  6775  001180  EE20 F004          	lfsr	2,4
  6776  001184  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6777  001186  26D9               	addwf	fsr2l,f,c
  6778  001188  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6779  00118A  22DA               	addwfc	fsr2h,f,c
  6780  00118C  50DF               	movf	indf2,w,c
  6781  00118E  010F               	movlb	15	; () banked
  6782  001190  6F2A               	movwf	42,b	;volatile
  6783                           
  6784                           ; BSR set to: 15
  6785                           ;inc\CANlib.h: 515: TXB2D5 = data[5];
  6786  001192  0100               	movlb	0	; () banked
  6787  001194  EE20 F005          	lfsr	2,5
  6788  001198  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6789  00119A  26D9               	addwf	fsr2l,f,c
  6790  00119C  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6791  00119E  22DA               	addwfc	fsr2h,f,c
  6792  0011A0  50DF               	movf	indf2,w,c
  6793  0011A2  010F               	movlb	15	; () banked
  6794  0011A4  6F2B               	movwf	43,b	;volatile
  6795                           
  6796                           ; BSR set to: 15
  6797                           ;inc\CANlib.h: 516: TXB2D6 = data[6];
  6798  0011A6  0100               	movlb	0	; () banked
  6799  0011A8  EE20 F006          	lfsr	2,6
  6800  0011AC  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6801  0011AE  26D9               	addwf	fsr2l,f,c
  6802  0011B0  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6803  0011B2  22DA               	addwfc	fsr2h,f,c
  6804  0011B4  50DF               	movf	indf2,w,c
  6805  0011B6  010F               	movlb	15	; () banked
  6806  0011B8  6F2C               	movwf	44,b	;volatile
  6807                           
  6808                           ; BSR set to: 15
  6809                           ;inc\CANlib.h: 517: TXB2D7 = data[7];
  6810  0011BA  0100               	movlb	0	; () banked
  6811  0011BC  EE20 F007          	lfsr	2,7
  6812  0011C0  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6813  0011C2  26D9               	addwf	fsr2l,f,c
  6814  0011C4  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6815  0011C6  22DA               	addwfc	fsr2h,f,c
  6816  0011C8  50DF               	movf	indf2,w,c
  6817  0011CA  010F               	movlb	15	; () banked
  6818  0011CC  6F2D               	movwf	45,b	;volatile
  6819                           
  6820                           ; BSR set to: 15
  6821                           ;inc\CANlib.h: 519: TXB2CONbits.TXREQ = 0x01;
  6822  0011CE  010F               	movlb	15	; () banked
  6823  0011D0  8720               	bsf	32,3,b	;volatile
  6824                           
  6825                           ; BSR set to: 15
  6826                           ;inc\CANlib.h: 521: return;
  6827  0011D2  0012               	return	
  6828  0011D4                     __end_of_CANsendMessage:
  6829                           	opt stack 0
  6830                           tblptru	equ	0xFF8
  6831                           tblptrh	equ	0xFF7
  6832                           tblptrl	equ	0xFF6
  6833                           tablat	equ	0xFF5
  6834                           prodh	equ	0xFF4
  6835                           prodl	equ	0xFF3
  6836                           intcon	equ	0xFF2
  6837                           postinc0	equ	0xFEE
  6838                           wreg	equ	0xFE8
  6839                           indf1	equ	0xFE7
  6840                           postinc1	equ	0xFE6
  6841                           postdec1	equ	0xFE5
  6842                           fsr1h	equ	0xFE2
  6843                           fsr1l	equ	0xFE1
  6844                           indf2	equ	0xFDF
  6845                           postinc2	equ	0xFDE
  6846                           fsr2h	equ	0xFDA
  6847                           fsr2l	equ	0xFD9
  6848                           status	equ	0xFD8
  6849                           
  6850 ;; *************** function _CANisTxReady *****************
  6851 ;; Defined at:
  6852 ;;		line 1155 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;		None
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;		None
  6857 ;; Return value:  Size  Location     Type
  6858 ;;                  1    wreg      unsigned char 
  6859 ;; Registers used:
  6860 ;;		wreg, status,2
  6861 ;; Tracked objects:
  6862 ;;		On entry : 0/0
  6863 ;;		On exit  : 0/0
  6864 ;;		Unchanged: 0/0
  6865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6866 ;;      Params:         0       0       0       0
  6867 ;;      Locals:         1       0       0       0
  6868 ;;      Temps:          0       0       0       0
  6869 ;;      Totals:         1       0       0       0
  6870 ;;Total ram usage:        1 bytes
  6871 ;; Hardware stack levels used:    1
  6872 ;; Hardware stack levels required when called:    2
  6873 ;; This function calls:
  6874 ;;		Nothing
  6875 ;; This function is called by:
  6876 ;;		_main
  6877 ;;		_can_interpreter
  6878 ;; This function uses a non-reentrant model
  6879 ;;
  6880                           
  6881                           	psect	text15
  6882  002428                     __ptext15:
  6883                           	opt stack 0
  6884  002428                     _CANisTxReady:
  6885                           	opt stack 27
  6886                           
  6887                           ;inc\CANlib.h: 1157: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  6888                           
  6889                           ; BSR set to: 15
  6890                           ;incstack = 0
  6891  002428  0E01               	movlw	1
  6892  00242A  6E1D               	movwf	_CANisTxReady$3213,c
  6893  00242C  010F               	movlb	15	; () banked
  6894  00242E  A740               	btfss	64,3,b	;volatile
  6895  002430  D008               	goto	l566
  6896                           
  6897                           ; BSR set to: 15
  6898  002432  010F               	movlb	15	; () banked
  6899  002434  A730               	btfss	48,3,b	;volatile
  6900  002436  D005               	goto	l566
  6901                           
  6902                           ; BSR set to: 15
  6903  002438  010F               	movlb	15	; () banked
  6904  00243A  A720               	btfss	32,3,b	;volatile
  6905  00243C  D002               	goto	l566
  6906                           
  6907                           ; BSR set to: 15
  6908  00243E  0E00               	movlw	0
  6909  002440  6E1D               	movwf	_CANisTxReady$3213,c
  6910  002442                     l566:
  6911                           
  6912                           ; BSR set to: 15
  6913  002442  501D               	movf	_CANisTxReady$3213,w,c
  6914  002444  0012               	return	
  6915  002446                     __end_of_CANisTxReady:
  6916                           	opt stack 0
  6917                           tblptru	equ	0xFF8
  6918                           tblptrh	equ	0xFF7
  6919                           tblptrl	equ	0xFF6
  6920                           tablat	equ	0xFF5
  6921                           prodh	equ	0xFF4
  6922                           prodl	equ	0xFF3
  6923                           intcon	equ	0xFF2
  6924                           postinc0	equ	0xFEE
  6925                           wreg	equ	0xFE8
  6926                           indf1	equ	0xFE7
  6927                           postinc1	equ	0xFE6
  6928                           postdec1	equ	0xFE5
  6929                           fsr1h	equ	0xFE2
  6930                           fsr1l	equ	0xFE1
  6931                           indf2	equ	0xFDF
  6932                           postinc2	equ	0xFDE
  6933                           fsr2h	equ	0xFDA
  6934                           fsr2l	equ	0xFD9
  6935                           status	equ	0xFD8
  6936                           
  6937 ;; *************** function _ISR_alta *****************
  6938 ;; Defined at:
  6939 ;;		line 74 in file "CanToSerial.c"
  6940 ;; Parameters:    Size  Location     Type
  6941 ;;		None
  6942 ;; Auto vars:     Size  Location     Type
  6943 ;;  i               1   27[COMRAM] unsigned char 
  6944 ;; Return value:  Size  Location     Type
  6945 ;;		None               void
  6946 ;; Registers used:
  6947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6948 ;; Tracked objects:
  6949 ;;		On entry : 0/0
  6950 ;;		On exit  : 0/0
  6951 ;;		Unchanged: 0/0
  6952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6953 ;;      Params:         0       0       0       0
  6954 ;;      Locals:         1       0       0       0
  6955 ;;      Temps:         15       0       0       0
  6956 ;;      Totals:        16       0       0       0
  6957 ;;Total ram usage:       16 bytes
  6958 ;; Hardware stack levels used:    1
  6959 ;; Hardware stack levels required when called:    1
  6960 ;; This function calls:
  6961 ;;		_CANisRxReady
  6962 ;;		_CANreceiveMessage
  6963 ;;		_usart_rx
  6964 ;; This function is called by:
  6965 ;;		Interrupt level 2
  6966 ;; This function uses a non-reentrant model
  6967 ;;
  6968                           
  6969                           	psect	intcode
  6970  000008                     __pintcode:
  6971                           	opt stack 0
  6972  000008                     _ISR_alta:
  6973                           	opt stack 26
  6974                           
  6975                           ; BSR set to: 15
  6976                           ;incstack = 0
  6977  000008  8243               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6978  00000A  CFFA F00E          	movff	pclath,??_ISR_alta+1
  6979  00000E  CFFB F00F          	movff	pclatu,??_ISR_alta+2
  6980  000012  EDB6  F00F         	call	int_func,f	;refresh shadow registers
  6981                           pclatu	equ	0xFFB
  6982                           pclath	equ	0xFFA
  6983                           tblptru	equ	0xFF8
  6984                           tblptrh	equ	0xFF7
  6985                           tblptrl	equ	0xFF6
  6986                           tablat	equ	0xFF5
  6987                           prodh	equ	0xFF4
  6988                           prodl	equ	0xFF3
  6989                           intcon	equ	0xFF2
  6990                           postinc0	equ	0xFEE
  6991                           wreg	equ	0xFE8
  6992                           indf1	equ	0xFE7
  6993                           postinc1	equ	0xFE6
  6994                           postdec1	equ	0xFE5
  6995                           fsr1h	equ	0xFE2
  6996                           fsr1l	equ	0xFE1
  6997                           indf2	equ	0xFDF
  6998                           postinc2	equ	0xFDE
  6999                           fsr2h	equ	0xFDA
  7000                           fsr2l	equ	0xFD9
  7001                           status	equ	0xFD8
  7002                           
  7003                           	psect	intcode_body
  7004  001F6C                     __pintcode_body:
  7005                           	opt stack 26
  7006  001F6C                     int_func:
  7007                           	opt stack 26
  7008  001F6C  0006               	pop		; remove dummy address from shadow register refresh
  7009  001F6E  CFE9 F010          	movff	fsr0l,??_ISR_alta+3
  7010  001F72  CFEA F011          	movff	fsr0h,??_ISR_alta+4
  7011  001F76  CFE1 F012          	movff	fsr1l,??_ISR_alta+5
  7012  001F7A  CFE2 F013          	movff	fsr1h,??_ISR_alta+6
  7013  001F7E  CFD9 F014          	movff	fsr2l,??_ISR_alta+7
  7014  001F82  CFDA F015          	movff	fsr2h,??_ISR_alta+8
  7015  001F86  CFF3 F016          	movff	prodl,??_ISR_alta+9
  7016  001F8A  CFF4 F017          	movff	prodh,??_ISR_alta+10
  7017  001F8E  CFF6 F018          	movff	tblptrl,??_ISR_alta+11
  7018  001F92  CFF7 F019          	movff	tblptrh,??_ISR_alta+12
  7019  001F96  CFF8 F01A          	movff	tblptru,??_ISR_alta+13
  7020  001F9A  CFF5 F01B          	movff	tablat,??_ISR_alta+14
  7021                           
  7022                           ;CanToSerial.c: 75: usart_rx();
  7023  001F9E  EC47  F011         	call	_usart_rx	;wreg free
  7024                           
  7025                           ;CanToSerial.c: 77: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
  7026  001FA2  A2A4               	btfss	4004,1,c	;volatile
  7027  001FA4  B0A4               	btfsc	4004,0,c	;volatile
  7028  001FA6  D001               	goto	i2l3829
  7029  001FA8  D045               	goto	i2l640
  7030  001FAA                     i2l3829:
  7031                           
  7032                           ;CanToSerial.c: 78: LATDbits.LATD3 = ~LATDbits.LATD3;
  7033  001FAA  A68C               	btfss	3980,3,c	;volatile
  7034  001FAC  D002               	goto	i2u468_40
  7035  001FAE  0E01               	movlw	1
  7036  001FB0  D001               	goto	i2u468_46
  7037  001FB2                     i2u468_40:
  7038  001FB2  0E00               	movlw	0
  7039  001FB4                     i2u468_46:
  7040  001FB4  0AFF               	xorlw	255
  7041  001FB6  6E0D               	movwf	??_ISR_alta& (0+255),c
  7042  001FB8  460D               	rlncf	??_ISR_alta,f,c
  7043  001FBA  460D               	rlncf	??_ISR_alta,f,c
  7044  001FBC  460D               	rlncf	??_ISR_alta,f,c
  7045  001FBE  508C               	movf	3980,w,c	;volatile
  7046  001FC0  180D               	xorwf	??_ISR_alta,w,c
  7047  001FC2  0BF7               	andlw	-9
  7048  001FC4  180D               	xorwf	??_ISR_alta,w,c
  7049  001FC6  6E8C               	movwf	3980,c	;volatile
  7050                           
  7051                           ;CanToSerial.c: 79: if (CANisRxReady()) {
  7052  001FC8  EC23  F012         	call	_CANisRxReady	;wreg free
  7053  001FCC  0900               	iorlw	0
  7054  001FCE  B4D8               	btfsc	status,2,c
  7055  001FD0  D02F               	goto	i2l643
  7056                           
  7057                           ;CanToSerial.c: 80: CANreceiveMessage(&msg);
  7058  001FD2  0E6F               	movlw	low _msg
  7059  001FD4  6E01               	movwf	CANreceiveMessage@msg,c
  7060  001FD6  0E00               	movlw	high _msg
  7061  001FD8  6E02               	movwf	CANreceiveMessage@msg+1,c
  7062  001FDA  ECEA  F008         	call	_CANreceiveMessage	;wreg free
  7063                           
  7064                           ;CanToSerial.c: 81: RTR_Flag = msg.RTR;
  7065  001FDE  0100               	movlb	0	; () banked
  7066  001FE0  A17D               	btfss	(_msg+14)& (0+255),0,b
  7067  001FE2  D002               	goto	i2u470_40
  7068  001FE4  8042               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
  7069  001FE6  D001               	goto	i2l3837
  7070  001FE8                     i2u470_40:
  7071  001FE8  9042               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
  7072  001FEA                     i2l3837:
  7073                           
  7074                           ;CanToSerial.c: 82: id = msg.identifier;
  7075  001FEA  C06F  F022         	movff	_msg,_id	;volatile
  7076  001FEE  C070  F023         	movff	_msg+1,_id+1	;volatile
  7077  001FF2  C071  F024         	movff	_msg+2,_id+2	;volatile
  7078  001FF6  C072  F025         	movff	_msg+3,_id+3	;volatile
  7079                           
  7080                           ;CanToSerial.c: 83: newMessageCan = 1;
  7081  001FFA  8442               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  7082                           
  7083                           ;CanToSerial.c: 84: for (unsigned char i = 0; i < 8; i++) {
  7084  001FFC  0E00               	movlw	0
  7085  001FFE  6E1C               	movwf	ISR_alta@i,c
  7086  002000                     i2l3843:
  7087  002000  0E07               	movlw	7
  7088  002002  641C               	cpfsgt	ISR_alta@i,c
  7089  002004  D001               	goto	i2l3847
  7090  002006  D014               	goto	i2l643
  7091  002008                     i2l3847:
  7092                           
  7093                           ;CanToSerial.c: 85: data[i] = msg.data[i];
  7094  002008  501C               	movf	ISR_alta@i,w,c
  7095  00200A  0D01               	mullw	1
  7096  00200C  0E73               	movlw	low (_msg+4)
  7097  00200E  24F3               	addwf	prodl,w,c
  7098  002010  6ED9               	movwf	fsr2l,c
  7099  002012  0E00               	movlw	high (_msg+4)
  7100  002014  20F4               	addwfc	prodh,w,c
  7101  002016  6EDA               	movwf	fsr2h,c
  7102  002018  501C               	movf	ISR_alta@i,w,c
  7103  00201A  0D01               	mullw	1
  7104  00201C  0E86               	movlw	low _data
  7105  00201E  24F3               	addwf	prodl,w,c
  7106  002020  6EE1               	movwf	fsr1l,c
  7107  002022  0E00               	movlw	high _data
  7108  002024  20F4               	addwfc	prodh,w,c
  7109  002026  6EE2               	movwf	fsr1h,c
  7110  002028  CFDF FFE7          	movff	indf2,indf1
  7111  00202C  2A1C               	incf	ISR_alta@i,f,c
  7112  00202E  D7E8               	goto	i2l3843
  7113  002030                     i2l643:
  7114                           
  7115                           ;CanToSerial.c: 86: }
  7116                           ;CanToSerial.c: 87: }
  7117                           ;CanToSerial.c: 88: PIR3bits.RXB1IF = 0;
  7118  002030  92A4               	bcf	4004,1,c	;volatile
  7119                           
  7120                           ;CanToSerial.c: 89: PIR3bits.RXB0IF = 0;
  7121  002032  90A4               	bcf	4004,0,c	;volatile
  7122  002034                     i2l640:
  7123                           
  7124                           ;CanToSerial.c: 90: }
  7125                           ;CanToSerial.c: 91: if (PIR2bits.TMR3IF == 1) {
  7126  002034  A2A1               	btfss	4001,1,c	;volatile
  7127  002036  D00B               	goto	i2l647
  7128                           
  7129                           ;CanToSerial.c: 92: timeCounter++;
  7130  002038  0E01               	movlw	1
  7131  00203A  262A               	addwf	_timeCounter,f,c	;volatile
  7132  00203C  0E00               	movlw	0
  7133  00203E  222B               	addwfc	_timeCounter+1,f,c	;volatile
  7134  002040  222C               	addwfc	_timeCounter+2,f,c	;volatile
  7135  002042  222D               	addwfc	_timeCounter+3,f,c	;volatile
  7136                           
  7137                           ;CanToSerial.c: 93: TMR3H = 0x63;
  7138  002044  0E63               	movlw	99
  7139  002046  6EB3               	movwf	4019,c	;volatile
  7140                           
  7141                           ;CanToSerial.c: 94: TMR3L = 0xC0;
  7142  002048  0EC0               	movlw	192
  7143  00204A  6EB2               	movwf	4018,c	;volatile
  7144                           
  7145                           ;CanToSerial.c: 95: PIR2bits.TMR3IF = 0;
  7146  00204C  92A1               	bcf	4001,1,c	;volatile
  7147  00204E                     i2l647:
  7148  00204E  C01B  FFF5         	movff	??_ISR_alta+14,tablat
  7149  002052  C01A  FFF8         	movff	??_ISR_alta+13,tblptru
  7150  002056  C019  FFF7         	movff	??_ISR_alta+12,tblptrh
  7151  00205A  C018  FFF6         	movff	??_ISR_alta+11,tblptrl
  7152  00205E  C017  FFF4         	movff	??_ISR_alta+10,prodh
  7153  002062  C016  FFF3         	movff	??_ISR_alta+9,prodl
  7154  002066  C015  FFDA         	movff	??_ISR_alta+8,fsr2h
  7155  00206A  C014  FFD9         	movff	??_ISR_alta+7,fsr2l
  7156  00206E  C013  FFE2         	movff	??_ISR_alta+6,fsr1h
  7157  002072  C012  FFE1         	movff	??_ISR_alta+5,fsr1l
  7158  002076  C011  FFEA         	movff	??_ISR_alta+4,fsr0h
  7159  00207A  C010  FFE9         	movff	??_ISR_alta+3,fsr0l
  7160  00207E  C00F  FFFB         	movff	??_ISR_alta+2,pclatu
  7161  002082  C00E  FFFA         	movff	??_ISR_alta+1,pclath
  7162  002086  9243               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7163  002088  0011               	retfie		f
  7164  00208A                     __end_of_ISR_alta:
  7165                           	opt stack 0
  7166                           pclatu	equ	0xFFB
  7167                           pclath	equ	0xFFA
  7168                           tblptru	equ	0xFF8
  7169                           tblptrh	equ	0xFF7
  7170                           tblptrl	equ	0xFF6
  7171                           tablat	equ	0xFF5
  7172                           prodh	equ	0xFF4
  7173                           prodl	equ	0xFF3
  7174                           intcon	equ	0xFF2
  7175                           postinc0	equ	0xFEE
  7176                           fsr0h	equ	0xFEA
  7177                           fsr0l	equ	0xFE9
  7178                           wreg	equ	0xFE8
  7179                           indf1	equ	0xFE7
  7180                           postinc1	equ	0xFE6
  7181                           postdec1	equ	0xFE5
  7182                           fsr1h	equ	0xFE2
  7183                           fsr1l	equ	0xFE1
  7184                           indf2	equ	0xFDF
  7185                           postinc2	equ	0xFDE
  7186                           fsr2h	equ	0xFDA
  7187                           fsr2l	equ	0xFD9
  7188                           status	equ	0xFD8
  7189                           
  7190 ;; *************** function _usart_rx *****************
  7191 ;; Defined at:
  7192 ;;		line 222 in file "CanToSerial.c"
  7193 ;; Parameters:    Size  Location     Type
  7194 ;;		None
  7195 ;; Auto vars:     Size  Location     Type
  7196 ;;  i               1    1[COMRAM] unsigned char 
  7197 ;; Return value:  Size  Location     Type
  7198 ;;		None               void
  7199 ;; Registers used:
  7200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7201 ;; Tracked objects:
  7202 ;;		On entry : 0/0
  7203 ;;		On exit  : 0/0
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7206 ;;      Params:         0       0       0       0
  7207 ;;      Locals:         1       0       0       0
  7208 ;;      Temps:          1       0       0       0
  7209 ;;      Totals:         2       0       0       0
  7210 ;;Total ram usage:        2 bytes
  7211 ;; Hardware stack levels used:    1
  7212 ;; This function calls:
  7213 ;;		Nothing
  7214 ;; This function is called by:
  7215 ;;		_ISR_alta
  7216 ;; This function uses a non-reentrant model
  7217 ;;
  7218                           
  7219                           	psect	text17
  7220  00228E                     __ptext17:
  7221                           	opt stack 0
  7222  00228E                     _usart_rx:
  7223                           	opt stack 26
  7224                           
  7225                           ;CanToSerial.c: 223: if (PIR1bits.RCIF == 1) {
  7226                           
  7227                           ;incstack = 0
  7228  00228E  AA9E               	btfss	3998,5,c	;volatile
  7229  002290  0012               	return	
  7230                           
  7231                           ;CanToSerial.c: 224: PIE1bits.RCIE = 0;
  7232  002292  9A9D               	bcf	3997,5,c	;volatile
  7233                           
  7234                           ;CanToSerial.c: 225: for (unsigned char i = 0; i < 8; i++) {
  7235  002294  0E00               	movlw	0
  7236  002296  6E02               	movwf	usart_rx@i,c
  7237  002298                     i2l3623:
  7238  002298  0E07               	movlw	7
  7239  00229A  6402               	cpfsgt	usart_rx@i,c
  7240  00229C  D001               	goto	i2l3627
  7241  00229E  D01C               	goto	i2l3637
  7242  0022A0                     i2l3627:
  7243                           
  7244                           ;CanToSerial.c: 226: LATDbits.LATD1 = ~LATDbits.LATD1;
  7245  0022A0  A28C               	btfss	3980,1,c	;volatile
  7246  0022A2  D002               	goto	i2u430_40
  7247  0022A4  0E01               	movlw	1
  7248  0022A6  D001               	goto	i2u430_46
  7249  0022A8                     i2u430_40:
  7250  0022A8  0E00               	movlw	0
  7251  0022AA                     i2u430_46:
  7252  0022AA  0AFF               	xorlw	255
  7253  0022AC  6E01               	movwf	??_usart_rx& (0+255),c
  7254  0022AE  4601               	rlncf	??_usart_rx,f,c
  7255  0022B0  508C               	movf	3980,w,c	;volatile
  7256  0022B2  1801               	xorwf	??_usart_rx,w,c
  7257  0022B4  0BFD               	andlw	-3
  7258  0022B6  1801               	xorwf	??_usart_rx,w,c
  7259  0022B8  6E8C               	movwf	3980,c	;volatile
  7260  0022BA                     i2l694:
  7261  0022BA  AA9E               	btfss	3998,5,c	;volatile
  7262  0022BC  D7FE               	goto	i2l694
  7263                           
  7264                           ;CanToSerial.c: 229: USART_Rx[i] = RCREG;
  7265  0022BE  5002               	movf	usart_rx@i,w,c
  7266  0022C0  0D01               	mullw	1
  7267  0022C2  0E68               	movlw	low _USART_Rx
  7268  0022C4  24F3               	addwf	prodl,w,c
  7269  0022C6  6ED9               	movwf	fsr2l,c
  7270  0022C8  0E00               	movlw	high _USART_Rx
  7271  0022CA  20F4               	addwfc	prodh,w,c
  7272  0022CC  6EDA               	movwf	fsr2h,c
  7273  0022CE  CFAE FFDF          	movff	4014,indf2	;volatile
  7274                           
  7275                           ;CanToSerial.c: 230: PIR1bits.RCIF = 0;
  7276  0022D2  9A9E               	bcf	3998,5,c	;volatile
  7277  0022D4  2A02               	incf	usart_rx@i,f,c
  7278  0022D6  D7E0               	goto	i2l3623
  7279  0022D8                     i2l3637:
  7280                           
  7281                           ;CanToSerial.c: 231: }
  7282                           ;CanToSerial.c: 232: if ((USART_Rx[0] == 0xAA)&&(USART_Rx[6] == 0xAA)) {
  7283  0022D8  0EAA               	movlw	170
  7284  0022DA  0100               	movlb	0	; () banked
  7285  0022DC  1968               	xorwf	_USART_Rx& (0+255),w,b
  7286  0022DE  A4D8               	btfss	status,2,c
  7287  0022E0  D007               	goto	i2l697
  7288                           
  7289                           ; BSR set to: 0
  7290  0022E2  0EAA               	movlw	170
  7291  0022E4  0100               	movlb	0	; () banked
  7292  0022E6  196E               	xorwf	(_USART_Rx+6)& (0+255),w,b
  7293  0022E8  A4D8               	btfss	status,2,c
  7294  0022EA  D002               	goto	i2l697
  7295                           
  7296                           ; BSR set to: 0
  7297                           ;CanToSerial.c: 233: PORTAbits.RA1 = 1;
  7298  0022EC  8280               	bsf	3968,1,c	;volatile
  7299                           
  7300                           ;CanToSerial.c: 234: newMessageUsart = 1;
  7301  0022EE  8642               	bsf	_newMessageUsart/(0+8),_newMessageUsart& (0+7),c	;volatile
  7302  0022F0                     i2l697:
  7303                           
  7304                           ; BSR set to: 0
  7305                           ;CanToSerial.c: 235: }
  7306                           ;CanToSerial.c: 236: PIR1bits.RCIF = 0;
  7307  0022F0  9A9E               	bcf	3998,5,c	;volatile
  7308                           
  7309                           ;CanToSerial.c: 237: PIE1bits.RCIE = 1;
  7310  0022F2  8A9D               	bsf	3997,5,c	;volatile
  7311  0022F4  0012               	return	
  7312  0022F6                     __end_of_usart_rx:
  7313                           	opt stack 0
  7314                           pclatu	equ	0xFFB
  7315                           pclath	equ	0xFFA
  7316                           tblptru	equ	0xFF8
  7317                           tblptrh	equ	0xFF7
  7318                           tblptrl	equ	0xFF6
  7319                           tablat	equ	0xFF5
  7320                           prodh	equ	0xFF4
  7321                           prodl	equ	0xFF3
  7322                           intcon	equ	0xFF2
  7323                           postinc0	equ	0xFEE
  7324                           fsr0h	equ	0xFEA
  7325                           fsr0l	equ	0xFE9
  7326                           wreg	equ	0xFE8
  7327                           indf1	equ	0xFE7
  7328                           postinc1	equ	0xFE6
  7329                           postdec1	equ	0xFE5
  7330                           fsr1h	equ	0xFE2
  7331                           fsr1l	equ	0xFE1
  7332                           indf2	equ	0xFDF
  7333                           postinc2	equ	0xFDE
  7334                           fsr2h	equ	0xFDA
  7335                           fsr2l	equ	0xFD9
  7336                           status	equ	0xFD8
  7337                           
  7338 ;; *************** function _CANreceiveMessage *****************
  7339 ;; Defined at:
  7340 ;;		line 529 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7341 ;; Parameters:    Size  Location     Type
  7342 ;;  msg             2    0[COMRAM] PTR struct .
  7343 ;;		 -> msg(15), 
  7344 ;; Auto vars:     Size  Location     Type
  7345 ;;  tamp            1   11[COMRAM] unsigned char 
  7346 ;;  error           1   10[COMRAM] unsigned char 
  7347 ;; Return value:  Size  Location     Type
  7348 ;;                  1    wreg      unsigned char 
  7349 ;; Registers used:
  7350 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7351 ;; Tracked objects:
  7352 ;;		On entry : 0/0
  7353 ;;		On exit  : 0/0
  7354 ;;		Unchanged: 0/0
  7355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7356 ;;      Params:         2       0       0       0
  7357 ;;      Locals:         2       0       0       0
  7358 ;;      Temps:          8       0       0       0
  7359 ;;      Totals:        12       0       0       0
  7360 ;;Total ram usage:       12 bytes
  7361 ;; Hardware stack levels used:    1
  7362 ;; This function calls:
  7363 ;;		Nothing
  7364 ;; This function is called by:
  7365 ;;		_ISR_alta
  7366 ;; This function uses a non-reentrant model
  7367 ;;
  7368                           
  7369                           	psect	text18
  7370  0011D4                     __ptext18:
  7371                           	opt stack 0
  7372  0011D4                     _CANreceiveMessage:
  7373                           	opt stack 26
  7374                           
  7375                           ;inc\CANlib.h: 531: BYTE tamp;
  7376                           ;inc\CANlib.h: 532: BYTE error = 0;
  7377                           
  7378                           ;incstack = 0
  7379  0011D4  0E00               	movlw	0
  7380  0011D6  6E0B               	movwf	CANreceiveMessage@error,c
  7381                           
  7382                           ;inc\CANlib.h: 534: if (COMSTATbits.RXB0OVFL == 0x01)
  7383  0011D8  BE74               	btfsc	3956,7,c	;volatile
  7384                           
  7385                           ;inc\CANlib.h: 535: error |= CAN_RX_BUFFER_1_OVFL;
  7386  0011DA  800B               	bsf	CANreceiveMessage@error,0,c
  7387                           
  7388                           ;inc\CANlib.h: 537: if (COMSTATbits.RXB1OVFL == 0x01)
  7389  0011DC  BC74               	btfsc	3956,6,c	;volatile
  7390                           
  7391                           ;inc\CANlib.h: 538: error |= CAN_RX_BUFFER_2_OVFL;
  7392  0011DE  820B               	bsf	CANreceiveMessage@error,1,c
  7393                           
  7394                           ;inc\CANlib.h: 541: if (RXB1CONbits.RXFUL ==0x01)
  7395  0011E0  010F               	movlb	15	; () banked
  7396  0011E2  AF50               	btfss	80,7,b	;volatile
  7397  0011E4  D143               	goto	i2l420
  7398                           
  7399                           ; BSR set to: 15
  7400                           ;inc\CANlib.h: 542: {
  7401                           ;inc\CANlib.h: 543: msg->identifier = 0;
  7402  0011E6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7403  0011EA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7404  0011EE  6ADE               	clrf	postinc2,c
  7405  0011F0  6ADE               	clrf	postinc2,c
  7406  0011F2  6ADE               	clrf	postinc2,c
  7407  0011F4  6ADD               	clrf	postdec2,c
  7408                           
  7409                           ; BSR set to: 15
  7410                           ;inc\CANlib.h: 544: msg->data[0] =RXB1D0;
  7411  0011F6  EE20 F004          	lfsr	2,4
  7412  0011FA  5001               	movf	CANreceiveMessage@msg,w,c
  7413  0011FC  26D9               	addwf	fsr2l,f,c
  7414  0011FE  5002               	movf	CANreceiveMessage@msg+1,w,c
  7415  001200  22DA               	addwfc	fsr2h,f,c
  7416  001202  CF56 FFDF          	movff	3926,indf2	;volatile
  7417                           
  7418                           ; BSR set to: 15
  7419                           ;inc\CANlib.h: 545: msg->data[1] =RXB1D1;
  7420  001206  EE20 F005          	lfsr	2,5
  7421  00120A  5001               	movf	CANreceiveMessage@msg,w,c
  7422  00120C  26D9               	addwf	fsr2l,f,c
  7423  00120E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7424  001210  22DA               	addwfc	fsr2h,f,c
  7425  001212  CF57 FFDF          	movff	3927,indf2	;volatile
  7426                           
  7427                           ; BSR set to: 15
  7428                           ;inc\CANlib.h: 546: msg->data[2] =RXB1D2;
  7429  001216  EE20 F006          	lfsr	2,6
  7430  00121A  5001               	movf	CANreceiveMessage@msg,w,c
  7431  00121C  26D9               	addwf	fsr2l,f,c
  7432  00121E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7433  001220  22DA               	addwfc	fsr2h,f,c
  7434  001222  CF58 FFDF          	movff	3928,indf2	;volatile
  7435                           
  7436                           ; BSR set to: 15
  7437                           ;inc\CANlib.h: 547: msg->data[3] =RXB1D3;
  7438  001226  EE20 F007          	lfsr	2,7
  7439  00122A  5001               	movf	CANreceiveMessage@msg,w,c
  7440  00122C  26D9               	addwf	fsr2l,f,c
  7441  00122E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7442  001230  22DA               	addwfc	fsr2h,f,c
  7443  001232  CF59 FFDF          	movff	3929,indf2	;volatile
  7444                           
  7445                           ; BSR set to: 15
  7446                           ;inc\CANlib.h: 548: msg->data[4] =RXB1D4;
  7447  001236  EE20 F008          	lfsr	2,8
  7448  00123A  5001               	movf	CANreceiveMessage@msg,w,c
  7449  00123C  26D9               	addwf	fsr2l,f,c
  7450  00123E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7451  001240  22DA               	addwfc	fsr2h,f,c
  7452  001242  CF5A FFDF          	movff	3930,indf2	;volatile
  7453                           
  7454                           ; BSR set to: 15
  7455                           ;inc\CANlib.h: 549: msg->data[5] =RXB1D5;
  7456  001246  EE20 F009          	lfsr	2,9
  7457  00124A  5001               	movf	CANreceiveMessage@msg,w,c
  7458  00124C  26D9               	addwf	fsr2l,f,c
  7459  00124E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7460  001250  22DA               	addwfc	fsr2h,f,c
  7461  001252  CF5B FFDF          	movff	3931,indf2	;volatile
  7462                           
  7463                           ; BSR set to: 15
  7464                           ;inc\CANlib.h: 550: msg->data[6] =RXB1D6;
  7465  001256  EE20 F00A          	lfsr	2,10
  7466  00125A  5001               	movf	CANreceiveMessage@msg,w,c
  7467  00125C  26D9               	addwf	fsr2l,f,c
  7468  00125E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7469  001260  22DA               	addwfc	fsr2h,f,c
  7470  001262  CF5C FFDF          	movff	3932,indf2	;volatile
  7471                           
  7472                           ; BSR set to: 15
  7473                           ;inc\CANlib.h: 551: msg->data[7] =RXB1D7;
  7474  001266  EE20 F00B          	lfsr	2,11
  7475  00126A  5001               	movf	CANreceiveMessage@msg,w,c
  7476  00126C  26D9               	addwf	fsr2l,f,c
  7477  00126E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7478  001270  22DA               	addwfc	fsr2h,f,c
  7479  001272  CF5D FFDF          	movff	3933,indf2	;volatile
  7480                           
  7481                           ; BSR set to: 15
  7482                           ;inc\CANlib.h: 553: msg->RTR = RXB1DLCbits.RXRTR;
  7483  001276  EE20 F00E          	lfsr	2,14
  7484  00127A  5001               	movf	CANreceiveMessage@msg,w,c
  7485  00127C  26D9               	addwf	fsr2l,f,c
  7486  00127E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7487  001280  22DA               	addwfc	fsr2h,f,c
  7488  001282  010F               	movlb	15	; () banked
  7489  001284  AD55               	btfss	85,6,b	;volatile
  7490  001286  D002               	goto	i2u404_40
  7491  001288  0E01               	movlw	1
  7492  00128A  D001               	goto	i2u404_46
  7493  00128C                     i2u404_40:
  7494  00128C  0E00               	movlw	0
  7495  00128E                     i2u404_46:
  7496  00128E  6EDF               	movwf	indf2,c
  7497                           
  7498                           ; BSR set to: 15
  7499                           ;inc\CANlib.h: 555: msg->length = RXB1DLC & 0x0F;
  7500  001290  EE20 F00D          	lfsr	2,13
  7501  001294  5001               	movf	CANreceiveMessage@msg,w,c
  7502  001296  26D9               	addwf	fsr2l,f,c
  7503  001298  5002               	movf	CANreceiveMessage@msg+1,w,c
  7504  00129A  22DA               	addwfc	fsr2h,f,c
  7505  00129C  010F               	movlb	15	; () banked
  7506  00129E  5155               	movf	85,w,b	;volatile
  7507  0012A0  0B0F               	andlw	15
  7508  0012A2  6EDF               	movwf	indf2,c
  7509                           
  7510                           ; BSR set to: 15
  7511                           ;inc\CANlib.h: 557: msg->type = RXB1SIDLbits.EXID;
  7512  0012A4  EE20 F00C          	lfsr	2,12
  7513  0012A8  5001               	movf	CANreceiveMessage@msg,w,c
  7514  0012AA  26D9               	addwf	fsr2l,f,c
  7515  0012AC  5002               	movf	CANreceiveMessage@msg+1,w,c
  7516  0012AE  22DA               	addwfc	fsr2h,f,c
  7517  0012B0  010F               	movlb	15	; () banked
  7518  0012B2  A752               	btfss	82,3,b	;volatile
  7519  0012B4  D002               	goto	i2u405_40
  7520  0012B6  0E01               	movlw	1
  7521  0012B8  D001               	goto	i2u405_46
  7522  0012BA                     i2u405_40:
  7523  0012BA  0E00               	movlw	0
  7524  0012BC                     i2u405_46:
  7525  0012BC  6EDF               	movwf	indf2,c
  7526                           
  7527                           ; BSR set to: 15
  7528                           ;inc\CANlib.h: 559: if (RXB1SIDLbits.EXID == 0)
  7529  0012BE  010F               	movlb	15	; () banked
  7530  0012C0  B752               	btfsc	82,3,b	;volatile
  7531  0012C2  D044               	goto	i2l3509
  7532                           
  7533                           ; BSR set to: 15
  7534                           ;inc\CANlib.h: 560: {
  7535                           ;inc\CANlib.h: 561: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7536  0012C4  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7537  0012C8  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7538  0012CA  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7539  0012CC  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7540  0012CE  0E03               	movlw	3
  7541  0012D0                     i2u407_45:
  7542  0012D0  90D8               	bcf	status,0,c
  7543  0012D2  3603               	rlcf	??_CANreceiveMessage,f,c
  7544  0012D4  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7545  0012D6  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7546  0012D8  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7547  0012DA  2EE8               	decfsz	wreg,f,c
  7548  0012DC  D7F9               	goto	i2u407_45
  7549  0012DE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7550  0012E2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7551  0012E6  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7552  0012EA  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7553  0012EE  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7554  0012F2  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7555                           
  7556                           ; BSR set to: 15
  7557                           ;inc\CANlib.h: 562: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7558  0012F6  010F               	movlb	15	; () banked
  7559  0012F8  3952               	swapf	82,w,b	;volatile
  7560  0012FA  42E8               	rrncf	wreg,f,c
  7561  0012FC  0B07               	andlw	7
  7562  0012FE  0B07               	andlw	7
  7563  001300  6E0C               	movwf	CANreceiveMessage@tamp,c
  7564                           
  7565                           ; BSR set to: 15
  7566                           ;inc\CANlib.h: 563: msg->identifier = msg->identifier + tamp;
  7567  001302  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7568  001306  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7569  00130A  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7570  00130E  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7571  001312  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7572  001316  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7573  00131A  500C               	movf	CANreceiveMessage@tamp,w,c
  7574  00131C  2403               	addwf	??_CANreceiveMessage,w,c
  7575  00131E  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7576  001320  0E00               	movlw	0
  7577  001322  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7578  001324  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7579  001326  0E00               	movlw	0
  7580  001328  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7581  00132A  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7582  00132C  0E00               	movlw	0
  7583  00132E  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7584  001330  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7585  001332  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7586  001336  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7587  00133A  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7588  00133E  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7589  001342  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7590  001346  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7591                           
  7592                           ;inc\CANlib.h: 564: }
  7593  00134A  D08D               	goto	i2l3535
  7594  00134C                     i2l3509:
  7595                           
  7596                           ; BSR set to: 15
  7597                           ;inc\CANlib.h: 565: else
  7598                           ;inc\CANlib.h: 566: {
  7599                           ;inc\CANlib.h: 567: msg->identifier = (unsigned long) RXB1EIDL;
  7600  00134C  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  7601  001350  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7602  001352  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7603  001354  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7604  001356  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7605  00135A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7606  00135E  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7607  001362  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7608  001366  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7609  00136A  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7610                           
  7611                           ; BSR set to: 15
  7612                           ;inc\CANlib.h: 568: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7613  00136E  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  7614  001372  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7615  001374  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7616  001376  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7617  001378  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7618  00137C  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7619  001380  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7620  001384  6A03               	clrf	??_CANreceiveMessage,c
  7621  001386  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7622  00138A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7623  00138E  5003               	movf	??_CANreceiveMessage,w,c
  7624  001390  26DE               	addwf	postinc2,f,c
  7625  001392  5004               	movf	??_CANreceiveMessage+1,w,c
  7626  001394  22DE               	addwfc	postinc2,f,c
  7627  001396  5005               	movf	??_CANreceiveMessage+2,w,c
  7628  001398  22DE               	addwfc	postinc2,f,c
  7629  00139A  5006               	movf	??_CANreceiveMessage+3,w,c
  7630  00139C  22DE               	addwfc	postinc2,f,c
  7631                           
  7632                           ; BSR set to: 15
  7633                           ;inc\CANlib.h: 570: if (RXB1SIDLbits.EID16)
  7634  00139E  010F               	movlb	15	; () banked
  7635  0013A0  A152               	btfss	82,0,b	;volatile
  7636  0013A2  D00C               	goto	i2l3517
  7637                           
  7638                           ; BSR set to: 15
  7639                           ;inc\CANlib.h: 571: msg->identifier |= 0x00010000;
  7640  0013A4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7641  0013A8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7642  0013AC  0E00               	movlw	0
  7643  0013AE  12DE               	iorwf	postinc2,f,c
  7644  0013B0  0E00               	movlw	0
  7645  0013B2  12DE               	iorwf	postinc2,f,c
  7646  0013B4  0E01               	movlw	1
  7647  0013B6  12DE               	iorwf	postinc2,f,c
  7648  0013B8  0E00               	movlw	0
  7649  0013BA  12DE               	iorwf	postinc2,f,c
  7650  0013BC                     i2l3517:
  7651                           
  7652                           ; BSR set to: 15
  7653                           ;inc\CANlib.h: 572: if (RXB1SIDLbits.EID17)
  7654  0013BC  010F               	movlb	15	; () banked
  7655  0013BE  A352               	btfss	82,1,b	;volatile
  7656  0013C0  D00C               	goto	i2l3521
  7657                           
  7658                           ; BSR set to: 15
  7659                           ;inc\CANlib.h: 573: msg->identifier |= 0x00020000;
  7660  0013C2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7661  0013C6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7662  0013CA  0E00               	movlw	0
  7663  0013CC  12DE               	iorwf	postinc2,f,c
  7664  0013CE  0E00               	movlw	0
  7665  0013D0  12DE               	iorwf	postinc2,f,c
  7666  0013D2  0E02               	movlw	2
  7667  0013D4  12DE               	iorwf	postinc2,f,c
  7668  0013D6  0E00               	movlw	0
  7669  0013D8  12DE               	iorwf	postinc2,f,c
  7670  0013DA                     i2l3521:
  7671                           
  7672                           ; BSR set to: 15
  7673                           ;inc\CANlib.h: 574: if (RXB1SIDLbits.SID0)
  7674  0013DA  010F               	movlb	15	; () banked
  7675  0013DC  AB52               	btfss	82,5,b	;volatile
  7676  0013DE  D00C               	goto	i2l3525
  7677                           
  7678                           ; BSR set to: 15
  7679                           ;inc\CANlib.h: 575: msg->identifier |= 0x00040000;
  7680  0013E0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7681  0013E4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7682  0013E8  0E00               	movlw	0
  7683  0013EA  12DE               	iorwf	postinc2,f,c
  7684  0013EC  0E00               	movlw	0
  7685  0013EE  12DE               	iorwf	postinc2,f,c
  7686  0013F0  0E04               	movlw	4
  7687  0013F2  12DE               	iorwf	postinc2,f,c
  7688  0013F4  0E00               	movlw	0
  7689  0013F6  12DE               	iorwf	postinc2,f,c
  7690  0013F8                     i2l3525:
  7691                           
  7692                           ; BSR set to: 15
  7693                           ;inc\CANlib.h: 576: if (RXB1SIDLbits.SID1)
  7694  0013F8  010F               	movlb	15	; () banked
  7695  0013FA  AD52               	btfss	82,6,b	;volatile
  7696  0013FC  D00C               	goto	i2l3529
  7697                           
  7698                           ; BSR set to: 15
  7699                           ;inc\CANlib.h: 577: msg->identifier |= 0x00080000;
  7700  0013FE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7701  001402  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7702  001406  0E00               	movlw	0
  7703  001408  12DE               	iorwf	postinc2,f,c
  7704  00140A  0E00               	movlw	0
  7705  00140C  12DE               	iorwf	postinc2,f,c
  7706  00140E  0E08               	movlw	8
  7707  001410  12DE               	iorwf	postinc2,f,c
  7708  001412  0E00               	movlw	0
  7709  001414  12DE               	iorwf	postinc2,f,c
  7710  001416                     i2l3529:
  7711                           
  7712                           ; BSR set to: 15
  7713                           ;inc\CANlib.h: 578: if (RXB1SIDLbits.SID2)
  7714  001416  010F               	movlb	15	; () banked
  7715  001418  AF52               	btfss	82,7,b	;volatile
  7716  00141A  D00C               	goto	i2l3533
  7717                           
  7718                           ; BSR set to: 15
  7719                           ;inc\CANlib.h: 579: msg->identifier |= 0x00100000;
  7720  00141C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7721  001420  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7722  001424  0E00               	movlw	0
  7723  001426  12DE               	iorwf	postinc2,f,c
  7724  001428  0E00               	movlw	0
  7725  00142A  12DE               	iorwf	postinc2,f,c
  7726  00142C  0E10               	movlw	16
  7727  00142E  12DE               	iorwf	postinc2,f,c
  7728  001430  0E00               	movlw	0
  7729  001432  12DE               	iorwf	postinc2,f,c
  7730  001434                     i2l3533:
  7731                           
  7732                           ; BSR set to: 15
  7733                           ;inc\CANlib.h: 581: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  7734  001434  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7735  001438  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7736  00143A  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7737  00143C  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7738  00143E  0E15               	movlw	21
  7739  001440                     i2u413_45:
  7740  001440  90D8               	bcf	status,0,c
  7741  001442  3603               	rlcf	??_CANreceiveMessage,f,c
  7742  001444  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7743  001446  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7744  001448  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7745  00144A  2EE8               	decfsz	wreg,f,c
  7746  00144C  D7F9               	goto	i2u413_45
  7747  00144E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7748  001452  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7749  001456  5003               	movf	??_CANreceiveMessage,w,c
  7750  001458  12DE               	iorwf	postinc2,f,c
  7751  00145A  5004               	movf	??_CANreceiveMessage+1,w,c
  7752  00145C  12DE               	iorwf	postinc2,f,c
  7753  00145E  5005               	movf	??_CANreceiveMessage+2,w,c
  7754  001460  12DE               	iorwf	postinc2,f,c
  7755  001462  5006               	movf	??_CANreceiveMessage+3,w,c
  7756  001464  12DE               	iorwf	postinc2,f,c
  7757  001466                     i2l3535:
  7758                           
  7759                           ; BSR set to: 15
  7760                           ;inc\CANlib.h: 582: }
  7761                           ;inc\CANlib.h: 584: RXB1CONbits.RXFUL = 0x00;
  7762  001466  010F               	movlb	15	; () banked
  7763  001468  9F50               	bcf	80,7,b	;volatile
  7764                           
  7765                           ; BSR set to: 15
  7766                           ;inc\CANlib.h: 585: return (error);
  7767                           ;	Return value of _CANreceiveMessage is never used
  7768  00146A  0012               	return	
  7769  00146C                     i2l420:
  7770                           
  7771                           ; BSR set to: 15
  7772                           ;inc\CANlib.h: 586: }
  7773                           ;inc\CANlib.h: 588: if (RXB0CONbits.RXFUL ==0x01)
  7774  00146C  AE60               	btfss	3936,7,c	;volatile
  7775  00146E  0012               	return	
  7776                           
  7777                           ; BSR set to: 15
  7778                           ;inc\CANlib.h: 589: {
  7779                           ;inc\CANlib.h: 590: msg->identifier = 0;
  7780  001470  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7781  001474  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7782  001478  6ADE               	clrf	postinc2,c
  7783  00147A  6ADE               	clrf	postinc2,c
  7784  00147C  6ADE               	clrf	postinc2,c
  7785  00147E  6ADD               	clrf	postdec2,c
  7786                           
  7787                           ; BSR set to: 15
  7788                           ;inc\CANlib.h: 591: msg->data[0] =RXB0D0;
  7789  001480  EE20 F004          	lfsr	2,4
  7790  001484  5001               	movf	CANreceiveMessage@msg,w,c
  7791  001486  26D9               	addwf	fsr2l,f,c
  7792  001488  5002               	movf	CANreceiveMessage@msg+1,w,c
  7793  00148A  22DA               	addwfc	fsr2h,f,c
  7794  00148C  CF66 FFDF          	movff	3942,indf2	;volatile
  7795                           
  7796                           ; BSR set to: 15
  7797                           ;inc\CANlib.h: 592: msg->data[1] =RXB0D1;
  7798  001490  EE20 F005          	lfsr	2,5
  7799  001494  5001               	movf	CANreceiveMessage@msg,w,c
  7800  001496  26D9               	addwf	fsr2l,f,c
  7801  001498  5002               	movf	CANreceiveMessage@msg+1,w,c
  7802  00149A  22DA               	addwfc	fsr2h,f,c
  7803  00149C  CF67 FFDF          	movff	3943,indf2	;volatile
  7804                           
  7805                           ; BSR set to: 15
  7806                           ;inc\CANlib.h: 593: msg->data[2] =RXB0D2;
  7807  0014A0  EE20 F006          	lfsr	2,6
  7808  0014A4  5001               	movf	CANreceiveMessage@msg,w,c
  7809  0014A6  26D9               	addwf	fsr2l,f,c
  7810  0014A8  5002               	movf	CANreceiveMessage@msg+1,w,c
  7811  0014AA  22DA               	addwfc	fsr2h,f,c
  7812  0014AC  CF68 FFDF          	movff	3944,indf2	;volatile
  7813                           
  7814                           ; BSR set to: 15
  7815                           ;inc\CANlib.h: 594: msg->data[3] =RXB0D3;
  7816  0014B0  EE20 F007          	lfsr	2,7
  7817  0014B4  5001               	movf	CANreceiveMessage@msg,w,c
  7818  0014B6  26D9               	addwf	fsr2l,f,c
  7819  0014B8  5002               	movf	CANreceiveMessage@msg+1,w,c
  7820  0014BA  22DA               	addwfc	fsr2h,f,c
  7821  0014BC  CF69 FFDF          	movff	3945,indf2	;volatile
  7822                           
  7823                           ; BSR set to: 15
  7824                           ;inc\CANlib.h: 595: msg->data[4] =RXB0D4;
  7825  0014C0  EE20 F008          	lfsr	2,8
  7826  0014C4  5001               	movf	CANreceiveMessage@msg,w,c
  7827  0014C6  26D9               	addwf	fsr2l,f,c
  7828  0014C8  5002               	movf	CANreceiveMessage@msg+1,w,c
  7829  0014CA  22DA               	addwfc	fsr2h,f,c
  7830  0014CC  CF6A FFDF          	movff	3946,indf2	;volatile
  7831                           
  7832                           ; BSR set to: 15
  7833                           ;inc\CANlib.h: 596: msg->data[5] =RXB0D5;
  7834  0014D0  EE20 F009          	lfsr	2,9
  7835  0014D4  5001               	movf	CANreceiveMessage@msg,w,c
  7836  0014D6  26D9               	addwf	fsr2l,f,c
  7837  0014D8  5002               	movf	CANreceiveMessage@msg+1,w,c
  7838  0014DA  22DA               	addwfc	fsr2h,f,c
  7839  0014DC  CF6B FFDF          	movff	3947,indf2	;volatile
  7840                           
  7841                           ; BSR set to: 15
  7842                           ;inc\CANlib.h: 597: msg->data[6] =RXB0D6;
  7843  0014E0  EE20 F00A          	lfsr	2,10
  7844  0014E4  5001               	movf	CANreceiveMessage@msg,w,c
  7845  0014E6  26D9               	addwf	fsr2l,f,c
  7846  0014E8  5002               	movf	CANreceiveMessage@msg+1,w,c
  7847  0014EA  22DA               	addwfc	fsr2h,f,c
  7848  0014EC  CF6C FFDF          	movff	3948,indf2	;volatile
  7849                           
  7850                           ; BSR set to: 15
  7851                           ;inc\CANlib.h: 598: msg->data[7] =RXB0D7;
  7852  0014F0  EE20 F00B          	lfsr	2,11
  7853  0014F4  5001               	movf	CANreceiveMessage@msg,w,c
  7854  0014F6  26D9               	addwf	fsr2l,f,c
  7855  0014F8  5002               	movf	CANreceiveMessage@msg+1,w,c
  7856  0014FA  22DA               	addwfc	fsr2h,f,c
  7857  0014FC  CF6D FFDF          	movff	3949,indf2	;volatile
  7858                           
  7859                           ; BSR set to: 15
  7860                           ;inc\CANlib.h: 600: msg->RTR = RXB0DLCbits.RXRTR;
  7861  001500  EE20 F00E          	lfsr	2,14
  7862  001504  5001               	movf	CANreceiveMessage@msg,w,c
  7863  001506  26D9               	addwf	fsr2l,f,c
  7864  001508  5002               	movf	CANreceiveMessage@msg+1,w,c
  7865  00150A  22DA               	addwfc	fsr2h,f,c
  7866  00150C  AC65               	btfss	3941,6,c	;volatile
  7867  00150E  D002               	goto	i2u415_40
  7868  001510  0E01               	movlw	1
  7869  001512  D001               	goto	i2u415_46
  7870  001514                     i2u415_40:
  7871  001514  0E00               	movlw	0
  7872  001516                     i2u415_46:
  7873  001516  6EDF               	movwf	indf2,c
  7874                           
  7875                           ; BSR set to: 15
  7876                           ;inc\CANlib.h: 602: msg->length = RXB0DLC & 0x0F;
  7877  001518  EE20 F00D          	lfsr	2,13
  7878  00151C  5001               	movf	CANreceiveMessage@msg,w,c
  7879  00151E  26D9               	addwf	fsr2l,f,c
  7880  001520  5002               	movf	CANreceiveMessage@msg+1,w,c
  7881  001522  22DA               	addwfc	fsr2h,f,c
  7882  001524  5065               	movf	3941,w,c	;volatile
  7883  001526  0B0F               	andlw	15
  7884  001528  6EDF               	movwf	indf2,c
  7885                           
  7886                           ; BSR set to: 15
  7887                           ;inc\CANlib.h: 604: msg->type = RXB0SIDLbits.EXID;
  7888  00152A  EE20 F00C          	lfsr	2,12
  7889  00152E  5001               	movf	CANreceiveMessage@msg,w,c
  7890  001530  26D9               	addwf	fsr2l,f,c
  7891  001532  5002               	movf	CANreceiveMessage@msg+1,w,c
  7892  001534  22DA               	addwfc	fsr2h,f,c
  7893  001536  A662               	btfss	3938,3,c	;volatile
  7894  001538  D002               	goto	i2u416_40
  7895  00153A  0E01               	movlw	1
  7896  00153C  D001               	goto	i2u416_46
  7897  00153E                     i2u416_40:
  7898  00153E  0E00               	movlw	0
  7899  001540                     i2u416_46:
  7900  001540  6EDF               	movwf	indf2,c
  7901                           
  7902                           ; BSR set to: 15
  7903                           ;inc\CANlib.h: 606: if (RXB0SIDLbits.EXID == 0)
  7904  001542  B662               	btfsc	3938,3,c	;volatile
  7905  001544  D043               	goto	i2l3571
  7906                           
  7907                           ; BSR set to: 15
  7908                           ;inc\CANlib.h: 607: {
  7909                           ;inc\CANlib.h: 608: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  7910  001546  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  7911  00154A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7912  00154C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7913  00154E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7914  001550  0E03               	movlw	3
  7915  001552                     i2u418_45:
  7916  001552  90D8               	bcf	status,0,c
  7917  001554  3603               	rlcf	??_CANreceiveMessage,f,c
  7918  001556  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7919  001558  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7920  00155A  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7921  00155C  2EE8               	decfsz	wreg,f,c
  7922  00155E  D7F9               	goto	i2u418_45
  7923  001560  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7924  001564  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7925  001568  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7926  00156C  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7927  001570  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7928  001574  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7929                           
  7930                           ; BSR set to: 15
  7931                           ;inc\CANlib.h: 609: tamp = (RXB0SIDL >> 5 ) & 0x07;
  7932  001578  3862               	swapf	3938,w,c	;volatile
  7933  00157A  42E8               	rrncf	wreg,f,c
  7934  00157C  0B07               	andlw	7
  7935  00157E  0B07               	andlw	7
  7936  001580  6E0C               	movwf	CANreceiveMessage@tamp,c
  7937                           
  7938                           ; BSR set to: 15
  7939                           ;inc\CANlib.h: 610: msg->identifier = msg->identifier + tamp;
  7940  001582  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7941  001586  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7942  00158A  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7943  00158E  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7944  001592  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7945  001596  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7946  00159A  500C               	movf	CANreceiveMessage@tamp,w,c
  7947  00159C  2403               	addwf	??_CANreceiveMessage,w,c
  7948  00159E  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7949  0015A0  0E00               	movlw	0
  7950  0015A2  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7951  0015A4  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7952  0015A6  0E00               	movlw	0
  7953  0015A8  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7954  0015AA  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7955  0015AC  0E00               	movlw	0
  7956  0015AE  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7957  0015B0  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7958  0015B2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7959  0015B6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7960  0015BA  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7961  0015BE  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7962  0015C2  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7963  0015C6  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7964                           
  7965                           ;inc\CANlib.h: 611: }
  7966  0015CA  D088               	goto	i2l3597
  7967  0015CC                     i2l3571:
  7968                           
  7969                           ; BSR set to: 15
  7970                           ;inc\CANlib.h: 612: else
  7971                           ;inc\CANlib.h: 613: {
  7972                           ;inc\CANlib.h: 614: msg->identifier = (unsigned long) RXB0EIDL;
  7973  0015CC  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  7974  0015D0  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7975  0015D2  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7976  0015D4  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7977  0015D6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7978  0015DA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7979  0015DE  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7980  0015E2  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7981  0015E6  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7982  0015EA  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7983                           
  7984                           ; BSR set to: 15
  7985                           ;inc\CANlib.h: 615: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  7986  0015EE  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  7987  0015F2  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7988  0015F4  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7989  0015F6  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7990  0015F8  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7991  0015FC  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7992  001600  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7993  001604  6A03               	clrf	??_CANreceiveMessage,c
  7994  001606  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7995  00160A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7996  00160E  5003               	movf	??_CANreceiveMessage,w,c
  7997  001610  26DE               	addwf	postinc2,f,c
  7998  001612  5004               	movf	??_CANreceiveMessage+1,w,c
  7999  001614  22DE               	addwfc	postinc2,f,c
  8000  001616  5005               	movf	??_CANreceiveMessage+2,w,c
  8001  001618  22DE               	addwfc	postinc2,f,c
  8002  00161A  5006               	movf	??_CANreceiveMessage+3,w,c
  8003  00161C  22DE               	addwfc	postinc2,f,c
  8004                           
  8005                           ; BSR set to: 15
  8006                           ;inc\CANlib.h: 617: if (RXB0SIDLbits.EID16)
  8007  00161E  A062               	btfss	3938,0,c	;volatile
  8008  001620  D00C               	goto	i2l3579
  8009                           
  8010                           ; BSR set to: 15
  8011                           ;inc\CANlib.h: 618: msg->identifier |= 0x00010000;
  8012  001622  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8013  001626  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8014  00162A  0E00               	movlw	0
  8015  00162C  12DE               	iorwf	postinc2,f,c
  8016  00162E  0E00               	movlw	0
  8017  001630  12DE               	iorwf	postinc2,f,c
  8018  001632  0E01               	movlw	1
  8019  001634  12DE               	iorwf	postinc2,f,c
  8020  001636  0E00               	movlw	0
  8021  001638  12DE               	iorwf	postinc2,f,c
  8022  00163A                     i2l3579:
  8023                           
  8024                           ; BSR set to: 15
  8025                           ;inc\CANlib.h: 619: if (RXB0SIDLbits.EID17)
  8026  00163A  A262               	btfss	3938,1,c	;volatile
  8027  00163C  D00C               	goto	i2l3583
  8028                           
  8029                           ; BSR set to: 15
  8030                           ;inc\CANlib.h: 620: msg->identifier |= 0x00020000;
  8031  00163E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8032  001642  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8033  001646  0E00               	movlw	0
  8034  001648  12DE               	iorwf	postinc2,f,c
  8035  00164A  0E00               	movlw	0
  8036  00164C  12DE               	iorwf	postinc2,f,c
  8037  00164E  0E02               	movlw	2
  8038  001650  12DE               	iorwf	postinc2,f,c
  8039  001652  0E00               	movlw	0
  8040  001654  12DE               	iorwf	postinc2,f,c
  8041  001656                     i2l3583:
  8042                           
  8043                           ; BSR set to: 15
  8044                           ;inc\CANlib.h: 621: if (RXB0SIDLbits.SID0)
  8045  001656  AA62               	btfss	3938,5,c	;volatile
  8046  001658  D00C               	goto	i2l3587
  8047                           
  8048                           ; BSR set to: 15
  8049                           ;inc\CANlib.h: 622: msg->identifier |= 0x00040000;
  8050  00165A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8051  00165E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8052  001662  0E00               	movlw	0
  8053  001664  12DE               	iorwf	postinc2,f,c
  8054  001666  0E00               	movlw	0
  8055  001668  12DE               	iorwf	postinc2,f,c
  8056  00166A  0E04               	movlw	4
  8057  00166C  12DE               	iorwf	postinc2,f,c
  8058  00166E  0E00               	movlw	0
  8059  001670  12DE               	iorwf	postinc2,f,c
  8060  001672                     i2l3587:
  8061                           
  8062                           ; BSR set to: 15
  8063                           ;inc\CANlib.h: 623: if (RXB0SIDLbits.SID1)
  8064  001672  AC62               	btfss	3938,6,c	;volatile
  8065  001674  D00C               	goto	i2l3591
  8066                           
  8067                           ; BSR set to: 15
  8068                           ;inc\CANlib.h: 624: msg->identifier |= 0x00080000;
  8069  001676  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8070  00167A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8071  00167E  0E00               	movlw	0
  8072  001680  12DE               	iorwf	postinc2,f,c
  8073  001682  0E00               	movlw	0
  8074  001684  12DE               	iorwf	postinc2,f,c
  8075  001686  0E08               	movlw	8
  8076  001688  12DE               	iorwf	postinc2,f,c
  8077  00168A  0E00               	movlw	0
  8078  00168C  12DE               	iorwf	postinc2,f,c
  8079  00168E                     i2l3591:
  8080                           
  8081                           ; BSR set to: 15
  8082                           ;inc\CANlib.h: 625: if (RXB0SIDLbits.SID2)
  8083  00168E  AE62               	btfss	3938,7,c	;volatile
  8084  001690  D00C               	goto	i2l3595
  8085                           
  8086                           ; BSR set to: 15
  8087                           ;inc\CANlib.h: 626: msg->identifier |= 0x00100000;
  8088  001692  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8089  001696  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8090  00169A  0E00               	movlw	0
  8091  00169C  12DE               	iorwf	postinc2,f,c
  8092  00169E  0E00               	movlw	0
  8093  0016A0  12DE               	iorwf	postinc2,f,c
  8094  0016A2  0E10               	movlw	16
  8095  0016A4  12DE               	iorwf	postinc2,f,c
  8096  0016A6  0E00               	movlw	0
  8097  0016A8  12DE               	iorwf	postinc2,f,c
  8098  0016AA                     i2l3595:
  8099                           
  8100                           ; BSR set to: 15
  8101                           ;inc\CANlib.h: 628: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8102  0016AA  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8103  0016AE  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8104  0016B0  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8105  0016B2  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8106  0016B4  0E15               	movlw	21
  8107  0016B6                     i2u424_45:
  8108  0016B6  90D8               	bcf	status,0,c
  8109  0016B8  3603               	rlcf	??_CANreceiveMessage,f,c
  8110  0016BA  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8111  0016BC  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8112  0016BE  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8113  0016C0  2EE8               	decfsz	wreg,f,c
  8114  0016C2  D7F9               	goto	i2u424_45
  8115  0016C4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8116  0016C8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8117  0016CC  5003               	movf	??_CANreceiveMessage,w,c
  8118  0016CE  12DE               	iorwf	postinc2,f,c
  8119  0016D0  5004               	movf	??_CANreceiveMessage+1,w,c
  8120  0016D2  12DE               	iorwf	postinc2,f,c
  8121  0016D4  5005               	movf	??_CANreceiveMessage+2,w,c
  8122  0016D6  12DE               	iorwf	postinc2,f,c
  8123  0016D8  5006               	movf	??_CANreceiveMessage+3,w,c
  8124  0016DA  12DE               	iorwf	postinc2,f,c
  8125  0016DC                     i2l3597:
  8126                           
  8127                           ; BSR set to: 15
  8128                           ;inc\CANlib.h: 630: }
  8129                           ;inc\CANlib.h: 631: RXB0CONbits.RXFUL = 0x00;
  8130  0016DC  9E60               	bcf	3936,7,c	;volatile
  8131                           
  8132                           ; BSR set to: 15
  8133                           ;inc\CANlib.h: 633: return (error);
  8134                           ;	Return value of _CANreceiveMessage is never used
  8135  0016DE  0012               	return	
  8136  0016E0                     __end_of_CANreceiveMessage:
  8137                           	opt stack 0
  8138                           pclatu	equ	0xFFB
  8139                           pclath	equ	0xFFA
  8140                           tblptru	equ	0xFF8
  8141                           tblptrh	equ	0xFF7
  8142                           tblptrl	equ	0xFF6
  8143                           tablat	equ	0xFF5
  8144                           prodh	equ	0xFF4
  8145                           prodl	equ	0xFF3
  8146                           intcon	equ	0xFF2
  8147                           postinc0	equ	0xFEE
  8148                           fsr0h	equ	0xFEA
  8149                           fsr0l	equ	0xFE9
  8150                           wreg	equ	0xFE8
  8151                           indf1	equ	0xFE7
  8152                           postinc1	equ	0xFE6
  8153                           postdec1	equ	0xFE5
  8154                           fsr1h	equ	0xFE2
  8155                           fsr1l	equ	0xFE1
  8156                           indf2	equ	0xFDF
  8157                           postinc2	equ	0xFDE
  8158                           postdec2	equ	0xFDD
  8159                           fsr2h	equ	0xFDA
  8160                           fsr2l	equ	0xFD9
  8161                           status	equ	0xFD8
  8162                           
  8163 ;; *************** function _CANisRxReady *****************
  8164 ;; Defined at:
  8165 ;;		line 1164 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8166 ;; Parameters:    Size  Location     Type
  8167 ;;		None
  8168 ;; Auto vars:     Size  Location     Type
  8169 ;;		None
  8170 ;; Return value:  Size  Location     Type
  8171 ;;                  1    wreg      unsigned char 
  8172 ;; Registers used:
  8173 ;;		wreg, status,2
  8174 ;; Tracked objects:
  8175 ;;		On entry : 0/0
  8176 ;;		On exit  : 0/0
  8177 ;;		Unchanged: 0/0
  8178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8179 ;;      Params:         0       0       0       0
  8180 ;;      Locals:         1       0       0       0
  8181 ;;      Temps:          0       0       0       0
  8182 ;;      Totals:         1       0       0       0
  8183 ;;Total ram usage:        1 bytes
  8184 ;; Hardware stack levels used:    1
  8185 ;; This function calls:
  8186 ;;		Nothing
  8187 ;; This function is called by:
  8188 ;;		_ISR_alta
  8189 ;; This function uses a non-reentrant model
  8190 ;;
  8191                           
  8192                           	psect	text19
  8193  002446                     __ptext19:
  8194                           	opt stack 0
  8195  002446                     _CANisRxReady:
  8196                           	opt stack 26
  8197                           
  8198                           ;inc\CANlib.h: 1166: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8199                           
  8200                           ; BSR set to: 15
  8201                           ;incstack = 0
  8202  002446  0E01               	movlw	1
  8203  002448  6E01               	movwf	_CANisRxReady$3215,c
  8204  00244A  BE60               	btfsc	3936,7,c	;volatile
  8205  00244C  D005               	goto	i2l571
  8206  00244E  010F               	movlb	15	; () banked
  8207  002450  BF50               	btfsc	80,7,b	;volatile
  8208  002452  D002               	goto	i2l571
  8209                           
  8210                           ; BSR set to: 15
  8211  002454  0E00               	movlw	0
  8212  002456  6E01               	movwf	_CANisRxReady$3215,c
  8213  002458                     i2l571:
  8214  002458  5001               	movf	_CANisRxReady$3215,w,c
  8215  00245A  0012               	return	
  8216  00245C                     __end_of_CANisRxReady:
  8217                           	opt stack 0
  8218  0000                     pclatu	equ	0xFFB
  8219                           pclath	equ	0xFFA
  8220                           tblptru	equ	0xFF8
  8221                           tblptrh	equ	0xFF7
  8222                           tblptrl	equ	0xFF6
  8223                           tablat	equ	0xFF5
  8224                           prodh	equ	0xFF4
  8225                           prodl	equ	0xFF3
  8226                           intcon	equ	0xFF2
  8227                           postinc0	equ	0xFEE
  8228                           fsr0h	equ	0xFEA
  8229                           fsr0l	equ	0xFE9
  8230                           wreg	equ	0xFE8
  8231                           indf1	equ	0xFE7
  8232                           postinc1	equ	0xFE6
  8233                           postdec1	equ	0xFE5
  8234                           fsr1h	equ	0xFE2
  8235                           fsr1l	equ	0xFE1
  8236                           indf2	equ	0xFDF
  8237                           postinc2	equ	0xFDE
  8238                           postdec2	equ	0xFDD
  8239                           fsr2h	equ	0xFDA
  8240                           fsr2l	equ	0xFD9
  8241                           status	equ	0xFD8
  8242                           pclatu	equ	0xFFB
  8243                           pclath	equ	0xFFA
  8244                           tblptru	equ	0xFF8
  8245                           tblptrh	equ	0xFF7
  8246                           tblptrl	equ	0xFF6
  8247                           tablat	equ	0xFF5
  8248                           prodh	equ	0xFF4
  8249                           prodl	equ	0xFF3
  8250                           intcon	equ	0xFF2
  8251                           postinc0	equ	0xFEE
  8252                           fsr0h	equ	0xFEA
  8253                           fsr0l	equ	0xFE9
  8254                           wreg	equ	0xFE8
  8255                           indf1	equ	0xFE7
  8256                           postinc1	equ	0xFE6
  8257                           postdec1	equ	0xFE5
  8258                           fsr1h	equ	0xFE2
  8259                           fsr1l	equ	0xFE1
  8260                           indf2	equ	0xFDF
  8261                           postinc2	equ	0xFDE
  8262                           postdec2	equ	0xFDD
  8263                           fsr2h	equ	0xFDA
  8264                           fsr2l	equ	0xFD9
  8265                           status	equ	0xFD8
  8266                           
  8267                           	psect	rparam
  8268  0000                     pclatu	equ	0xFFB
  8269                           pclath	equ	0xFFA
  8270                           tblptru	equ	0xFF8
  8271                           tblptrh	equ	0xFF7
  8272                           tblptrl	equ	0xFF6
  8273                           tablat	equ	0xFF5
  8274                           prodh	equ	0xFF4
  8275                           prodl	equ	0xFF3
  8276                           intcon	equ	0xFF2
  8277                           postinc0	equ	0xFEE
  8278                           fsr0h	equ	0xFEA
  8279                           fsr0l	equ	0xFE9
  8280                           wreg	equ	0xFE8
  8281                           indf1	equ	0xFE7
  8282                           postinc1	equ	0xFE6
  8283                           postdec1	equ	0xFE5
  8284                           fsr1h	equ	0xFE2
  8285                           fsr1l	equ	0xFE1
  8286                           indf2	equ	0xFDF
  8287                           postinc2	equ	0xFDE
  8288                           postdec2	equ	0xFDD
  8289                           fsr2h	equ	0xFDA
  8290                           fsr2l	equ	0xFD9
  8291                           status	equ	0xFD8
  8292                           
  8293                           	psect	temp
  8294  000043                     btemp:
  8295                           	opt stack 0
  8296  000043                     	ds	1
  8297  0000                     int$flags	set	btemp
  8298                           pclatu	equ	0xFFB
  8299                           pclath	equ	0xFFA
  8300                           tblptru	equ	0xFF8
  8301                           tblptrh	equ	0xFF7
  8302                           tblptrl	equ	0xFF6
  8303                           tablat	equ	0xFF5
  8304                           prodh	equ	0xFF4
  8305                           prodl	equ	0xFF3
  8306                           intcon	equ	0xFF2
  8307                           postinc0	equ	0xFEE
  8308                           fsr0h	equ	0xFEA
  8309                           fsr0l	equ	0xFE9
  8310                           wreg	equ	0xFE8
  8311                           indf1	equ	0xFE7
  8312                           postinc1	equ	0xFE6
  8313                           postdec1	equ	0xFE5
  8314                           fsr1h	equ	0xFE2
  8315                           fsr1l	equ	0xFE1
  8316                           indf2	equ	0xFDF
  8317                           postinc2	equ	0xFDE
  8318                           postdec2	equ	0xFDD
  8319                           fsr2h	equ	0xFDA
  8320                           fsr2l	equ	0xFD9
  8321                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         85
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      66
    BANK0           160     22      92
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    putsUSART@data	PTR unsigned char  size(2) Largest target is 8
		 -> SerialOutput(COMRAM[8]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> analogic_brake(BANK0[8]), set_speed(BANK0[8]), set_steering(BANK0[8]), data(BANK0[8]), 


Critical Paths under _main in COMRAM

    _main->_usart_tx
    _usart_tx->_putsUSART
    _putsUSART->_WriteUSART
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _can_interpreter->_CANsendMessage

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->_CANreceiveMessage

Critical Paths under _main in BANK0

    _delay_ms->___wmul
    _configurazione_iniziale->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _can_interpreter->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   18253
                                             21 BANK0      1     1      0
                       _CANisTxReady
                     _CANsendMessage
                    _can_interpreter
            _configurazione_iniziale
                           _delay_ms
                  _usart_interpreter
                           _usart_tx
 ---------------------------------------------------------------------------------
 (1) _usart_tx                                             5     5      0     560
                                             31 COMRAM     2     2      0
                                              0 BANK0      3     3      0
                          _putsUSART
 ---------------------------------------------------------------------------------
 (2) _putsUSART                                            2     0      2     170
                                             29 COMRAM     2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (3) _WriteUSART                                           1     1      0      31
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _usart_interpreter                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     571
                                              2 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     386
                                             28 COMRAM     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    8496
                      _CANInitialize
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                             28 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                              9 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                             28 COMRAM     5     0      5
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                             28 COMRAM     5     0      5
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      8     8      0    4313
                                             12 BANK0      8     8      0
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4289
                                             28 COMRAM     4     4      0
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_alta                                            16    16      0    1319
                                             12 COMRAM    16    16      0
                       _CANisRxReady
                  _CANreceiveMessage
                           _usart_rx
 ---------------------------------------------------------------------------------
 (5) _usart_rx                                             2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisTxReady
   _CANsendMessage
   _can_interpreter
     _CANisTxReady
     _CANsendMessage
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _OpenUSART
   _delay_ms
     ___wmul
   _usart_interpreter
   _usart_tx
     _putsUSART
       _WriteUSART

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   _usart_rx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     16      5C       4       57.5%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     21      42       1       70.2%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9E       9        0.0%
DATA                 0      0      9E      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Mar 24 18:35:36 2016

            __end_of_CANSetFilter 0A60                                _id 0022  
             ___wmul@multiplicand 001F                       __CFG_BORV$3 000000  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                     __CFG_OSC$HS 000000                               l400 0EB4  
                             l403 0F6E                               l412 1120  
                             l404 0F72                               l500 06EA  
                             l413 1124                               l405 1066  
                             l501 06F4                               l414 1130  
                             l406 0FF8                               l510 07EC  
                             l502 06F8                               l407 1002  
                             l511 07F0                               l503 0702  
                             l408 100C                               l520 08E8  
                             l512 07FA                               l409 1016  
                             l521 08F2                               l513 07FE  
                             l530 09EA                               l522 08F6  
                             l514 0808                               l506 07D0  
                             l450 18F0                               l442 18B8  
                             l531 09EE                               l523 0900  
                             l507 07D4                               l443 18BC  
                             l380 0B1E                               l532 09F8  
                             l524 0904                               l508 07DE  
                             l460 19E8                               l444 18C6  
                             l373 0CDC                               l533 09FC  
                             l525 090E                               l517 08D6  
                             l509 07E2                               l461 19F2  
                             l453 19BA                               l445 18CA  
                             l390 0CF6                               l374 0A76  
                             l534 0A06                               l518 08DA  
                             l454 19BE                               l446 18D4  
                             l391 0DEA                               l383 0C28  
                             l375 0A7A                               l535 0A0A  
                             l519 08E4                               l455 19C8  
                             l447 18D8                               l392 0D7C  
                             l384 0C2C                               l376 0B6E  
                             l536 0A14                               l528 09DC  
                             l480 04EE                               l456 19CC  
                             l448 18E2                               l368 1CDA  
                             l393 0D86                               l385 0C38  
                             l377 0B00                               l529 09E0  
                             l481 04F8                               l473 04C0  
                             l457 19D6                               l449 18E6  
                             l369 1CE4                               l705 2114  
                             l394 0D90                               l378 0B0A  
                             l490 05EE                               l474 04C4  
                             l458 19DA                               l395 0D9A  
                             l379 0B14                               l491 05F2  
                             l475 04CE                               l459 19E4  
                             l707 2186                               l388 0F58  
                             l492 05FC                               l484 05C4  
                             l476 04D2                               l389 0CF2  
                             l485 05C8                               l477 04DC  
                             l741 232C                               l566 2442  
                             l398 0EA4                               l486 05D2  
                             l478 04E0                               l742 232E  
                             l399 0EA8                               l495 06CA  
                             l487 05D6                               l479 04EA  
                             l743 2338                               l496 06CE  
                             l488 05E0                               l744 233A  
                             l497 06D8                               l489 05E4  
                             l737 2318                               l498 06DC  
                             l754 2402                               l499 06E6  
                             l579 23CE                      __CFG_CPB$OFF 000000  
                    __CFG_CPD$OFF 000000                               _dir 0211  
                             _msg 006F                               prod 000FF3  
                             wreg 000FE8                      __CFG_LVP$OFF 000000  
                    __CFG_WDT$OFF 000000                              l4001 183A  
                            l4101 017C                              l4201 04FC  
                            l4033 193A                              l4027 18F4  
                            l4303 080C                              l4207 0542  
                            l4119 022C                              l4241 0646  
                            l4137 02DC                              l4235 0600  
                            l4155 038C                              l4083 00CE  
                            l4059 19F6                              l3427 231A  
                            l3419 230C                              l4309 0852  
                            l4173 043C                              l4343 0958  
                            l4431 1D34                              l4423 1CD2  
                            l4337 0912                              l4425 1CE8  
                            l4371 0A18                              l4275 074C  
                            l3811 239C                              l3803 2384  
                            l4621 1020                              l4269 0706  
                            l4429 1CF0                              l4383 2468  
                            l4641 1114                              l4545 0DA4  
                            l4801 20CE                              l4571 0EB8  
                            l4803 20D8                              l4565 0E98  
                            l4469 0B28                              l4901 1E8C  
                            l4647 1134                              l4495 0C3C  
                            l4751 1AA8                              l4823 214E  
                            l4807 20E2                              l4489 0C1C  
                            l4913 1EFE                              l4755 1AB4  
                            l4739 1A66                              l4827 2158  
                            l4923 1F68                              l4907 1EA4  
                            l4917 1F0E                              l4783 1C12  
                            l4759 1AC2                              l4767 1B74  
                            l3967 2474                              l4679 23C2  
                            l3799 2374                              l3985 178E  
                            l4793 209A                              l4873 1E06  
                            l4797 20C8                              l4789 2090  
                            l4895 1E32                              l4887 1E20  
                            _LATA 000F89                              _LATB 000F8A  
                            _LATC 000F8B                              _LATD 000F8C  
                            _LATE 000F8D                              u5110 1A16  
                            u5030 1914                              _PIE1 000F9D  
                            u5115 1A0A                              u5035 1908  
                            u5300 0310                              u5220 01B0  
                            u5140 0052                              u6005 0BF0  
                            u6110 0DC2                              u6120 0E0C  
                            u5305 0304                              u5225 01A4  
                            u5145 0046                              u6115 0DB8  
                            u5315 0368                              u5235 0208  
                            u5155 00AA                              u5340 03C0  
                            u5260 0260                              u5180 0100  
                            u6125 0E02                              u5510 0620  
                            u5430 051C                              u6135 0E6C  
                            u6240 103E                              u6400 1B4C  
                            u5345 03B4                              u5265 0254  
                            u5185 00F4                              u6250 1088  
                            u6410 1B5E                              u5515 0614  
                            u5435 0510                              u5355 0418  
                            u5275 02B8                              u5195 0158  
                            u6420 1B6C                              u4900 1712  
                            u6245 1034                              u6430 1B6E  
                            u6255 107E                              u6265 10E8  
                            u4905 1706                              u6418 1B62  
                            u6370 1B28                              u4915 176A  
                            u6380 1B3C                              u4940 17BE  
                            u6390 1B4A                              u5830 0A38  
                            u5750 0932                              u5670 082C  
                            u5590 0726                              u6710 1F4E  
                            u6560 212C                              u6640 1E72  
                            u4945 17B2                              u5835 0A2C  
                            u5755 0926                              u5675 0820  
                            u5595 071A                              u4955 1816  
                            u6388 1B40                              u6716 1F50  
                            u6566 212E                              u6646 1E74  
                            u6727 23C4                              u6680 1EE4  
                            u5980 0B46                              u5990 0B90  
                            u6686 1EE6                              u5985 0B3C  
                            u5995 0B86               __size_of_CANSetMask 035E  
                            _data 0086                              _main 1DD8  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            indf1 000FE7                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            btemp 0043                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 0016                     __CFG_IESO$OFF 000000  
                   __CFG_MCLRE$ON 000000                      ___param_bank 000010  
                _CANOperationMode 246E        __size_of_CANreceiveMessage 050C  
                           ?_main 0001                             _T3CON 000FB1  
                           i2l420 146C                             i2l640 2034  
                           i2l571 2458                             i2l643 2030  
                           i2l647 204E                             i2l694 22BA  
                           i2l697 22F0                             _RCREG 000FAE  
                           _RCSTA 000FAB                             _TMR3H 000FB3  
                           _TMR3L 000FB2                             _SPBRG 000FAF  
               _CANisRxReady$3215 0001                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
                           _TXREG 000FAD                             _TXSTA 000FAC  
                   __CFG_PWRT$OFF 000000                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
              CANInitialize@flags 00AB                  __end_of_ISR_alta 208A  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                    __CFG_EBTRB$OFF 000000  
                  __pbitbssCOMRAM 0210              __end_of_CANisRxReady 245C  
                           tablat 000FF5              __end_of_CANisTxReady 2446  
                           status 000FD8                    __CFG_PBADEN$ON 000000  
                  WriteUSART@data 001D                   __initialization 2226  
                    __end_of_main 1F6C                            ??_main 00B3  
                   __activetblptr 000002                 _CANisTxReady$3213 001D  
                          _CANCON 000F6F                   __CFG_BBSIZ$1024 000000  
                          i2l3521 13DA                            i2l3533 1434  
                          i2l3525 13F8                            i2l3517 13BC  
                          i2l3509 134C                            i2l3535 1466  
                          i2l3623 2298                            i2l3529 1416  
                          i2l3571 15CC                            i2l3627 22A0  
                          i2l3637 22D8                            i2l3591 168E  
                          i2l3583 1656                            i2l3595 16AA  
                          i2l3587 1672                            i2l3579 163A  
                          i2l3843 2000                            i2l3597 16DC  
                          i2l3837 1FEA                            i2l3829 1FAA  
                          i2l3847 2008                   _newMessageUsart 0213  
                          _RXB0D0 000F66                            _RXB0D1 000F67  
                          _RXB0D2 000F68                            _RXB0D3 000F69  
                          _RXB0D4 000F6A                            _RXB1D0 000F56  
                          _RXB0D5 000F6B                            _RXB1D1 000F57  
                          _RXB0D6 000F6C                            _RXB1D2 000F58  
                          _RXB0D7 000F6D                            _RXB1D3 000F59  
                          _RXB1D4 000F5A                            _RXB1D5 000F5B  
                          _RXB1D6 000F5C                            _RXB1D7 000F5D  
                  __CFG_WDTPS$128 000000                            _TXB0D0 000F46  
                          _TXB0D1 000F47                            _TXB0D2 000F48  
                          _TXB0D3 000F49                            _TXB1D0 000F36  
                          _TXB0D4 000F4A                            _TXB1D1 000F37  
                          _TXB0D5 000F4B                            _SPBRGH 000FB0  
                          _TXB1D2 000F38                            _TXB0D6 000F4C  
                          _TXB1D3 000F39                            _TXB0D7 000F4D  
                          _TXB2D0 000F26                            _TXB1D4 000F3A  
                          _TXB2D1 000F27                            _TXB1D5 000F3B  
                          _TXB2D2 000F28                            _TXB1D6 000F3C  
                          _TXB2D3 000F29                            _TXB1D7 000F3D  
                          _TXB2D4 000F2A                            _TXB2D5 000F2B  
                          _TXB2D6 000F2C                            _TXB2D7 000F2D  
              CANsendMessage@data 00A2                CANsendMessage@tamp 00A6  
                __end_of_delay_ms 23D8             __size_of_CANSetFilter 0A46  
                  __CFG_XINST$OFF 000000                __size_of_OpenUSART 0060  
                          ___wmul 23D8                    __CFG_STVREN$ON 000000  
                    ??_CANSetMask 009E                            _buffer 0036  
                          clear_0 222C                            clear_1 223A  
        ?_configurazione_iniziale 0001                   __CFG_BOREN$BOHW 000000  
                    __pdataCOMRAM 0039                            tblptrh 000FF7  
                  _analogic_brake 007E                            tblptrl 000FF6  
                          tblptru 000FF8                  __end_of_usart_rx 22F6  
                __end_of_usart_tx 218C                      _CANSetFilter 001A  
                      __accesstop 0060           __end_of__initialization 2280  
              __end_of_CANSetMask 1A3E                     ___rparam_used 000001  
                      _WriteUSART 245C                    __pcstackCOMRAM 0001  
                 _SerialOutputOld 00B4                      __pidataBANK0 2489  
                       ?_ISR_alta 0001             CANSetFilter@numBuffer 00A2  
                   _newMessageCan 0212             __size_of_CANisRxReady 0016  
           __size_of_CANisTxReady 001E                 __end_of_OpenUSART 2356  
        __end_of_CANOperationMode 2480                        __pbssBANK0 0060  
                _set_steering_old 0037                 _usart_interpreter 2356  
         __size_of_CANsendMessage 0774                ?_usart_interpreter 0001  
        __size_of_can_interpreter 01E8                           ?___wmul 001D  
                      ??_ISR_alta 000D               ??_usart_interpreter 001D  
                   putsUSART@data 001E                      _CANisRxReady 2446  
                         _CANSTAT 000F6E                      _CANisTxReady 2428  
                       ISR_alta@i 001C                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
          __size_of_CANInitialize 01B2                    usart_tx@i_3324 009F  
                  usart_tx@i_3341 00A0                         ?_delay_ms 00A0  
                         _RXB0DLC 000F65                           _RXB1DLC 000F55  
                         _RXB0CON 000F60                           _RXB1CON 000F50  
                         _TXB0DLC 000F45                           _TXB1DLC 000F35  
                         _TXB2DLC 000F25                __size_of_putsUSART 0026  
             CANsendMessage@flags 00A5         __end_of_usart_interpreter 23A6  
                         __Hparam 0000                        _left_speed 0030  
                         __Lparam 0000                  delay_ms@value_ms 00A0  
                     ?_WriteUSART 0001                   __size_of___wmul 002A  
            CANInitialize@propSeg 00B0                         ?_usart_rx 0001  
                       ?_usart_tx 0001                           __pcinit 2226  
                         __ramtop 0300                           __ptext0 1DD8  
                         __ptext1 208A                           __ptext2 2402  
                         __ptext3 245C                           __ptext4 2356  
                         __ptext5 23A6                           __ptext6 23D8  
                         __ptext7 218C                           __ptext8 22F6  
                         __ptext9 1C26                        ??_delay_ms 0021  
          CANreceiveMessage@error 000B                    __pintcode_body 1F6C  
            end_of_initialization 2280                     __Lmediumconst 0000  
                         int_func 1F6C                     _CANInitialize 1C26  
                       _RCSTAbits 000FAB                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
               __end_of_putsUSART 2428                 ??_can_interpreter 00AA  
                      ??_usart_rx 0001                        ??_usart_tx 0020  
                       _PORTAbits 000F80                    CANSetMask@mask 001D  
                       _PORTCbits 000F82                    CANSetMask@tamp 00A3  
                  CANSetMask@type 0021                         _TRISCbits 000F94  
             __size_of_WriteUSART 0012        __size_of_usart_interpreter 0050  
__size_of_configurazione_iniziale 009A               _previousTimeCounter 0026  
         _clock_counter_reference 002E                    _CANsendMessage 0A60  
                CANInitialize@BRP 00AA                  CANInitialize@SJW 00A9  
                       _TXSTAbits 000FAC                    ?_CANInitialize 00A7  
                  __end_of___wmul 2402                     __pidataCOMRAM 2480  
               __size_of_ISR_alta 2082               start_initialization 2226  
             CANSetMask@numBuffer 00A2            __end_of_CANsendMessage 11D4  
               ?_CANOperationMode 0001                         _OpenUSART 22F6  
              ??_CANOperationMode 001D        CANInitialize@FilterConfig1 00B1  
      CANInitialize@FilterConfig2 00B2                          ??___wmul 0021  
                     __pdataBANK0 00B4                  __CFG_LPT1OSC$OFF 000000  
          CANInitialize@phaseSeg1 00A7            CANInitialize@phaseSeg2 00A8  
                     __pbssCOMRAM 0022                     __pcstackBANK0 009E  
                     _BRGCON2bits 000F71                       _BRGCON3bits 000F72  
               __size_of_delay_ms 0032                   ?_CANsendMessage 009E  
                 ??_CANInitialize 00AC                        ?_OpenUSART 001D  
              CANSetFilter@filter 001D                      ??_WriteUSART 001D  
                       __pintcode 0008                 __size_of_usart_rx 0068  
               __size_of_usart_tx 0102                       _COMSTATbits 000F74  
         _configurazione_iniziale 218C                __end_of_WriteUSART 246E  
           CANreceiveMessage@tamp 000C                    ___wmul@product 009E  
                        _LATDbits 000F8C                   _can_interpreter 1A3E  
                        _IPR1bits 000F9F                _analogic_brake_old 0035  
                        _IPR2bits 000FA2      _delay_quartz_frequency_value 0039  
                        _PIE1bits 000F9D                          _IPR3bits 000FA5  
                        _PIE2bits 000FA0                          _PIE3bits 000FA3  
                        i2u404_40 128C                          i2u404_46 128E  
                        i2u405_40 12BA                          i2u413_45 1440  
                        i2u405_46 12BC                          i2u430_40 22A8  
                        i2u430_46 22AA                          i2u415_40 1514  
                        i2u407_45 12D0                          i2u415_46 1516  
                        i2u416_40 153E                          i2u424_45 16B6  
                        i2u416_46 1540                          _PIR1bits 000F9E  
                        i2u418_45 1552                          _PIR2bits 000FA1  
                        _PIR3bits 000FA4                          i2u470_40 1FE8  
                        i2u468_40 1FB2                          i2u468_46 1FB4  
                        _RXB0EIDH 000F63                          _RXB0EIDL 000F64  
                        _RXB1EIDH 000F53                          _RXB1EIDL 000F54  
                       _set_speed 008E                          _RCONbits 000FD0  
                        _RXB0SIDH 000F61                          _RXB0SIDL 000F62  
                        _RXF0EIDH 000F02                          _RXB1SIDH 000F51  
                        _RXF0EIDL 000F03                          _RXB1SIDL 000F52  
                        _RXF1EIDH 000F06                          _RXF1EIDL 000F07  
                        _RXF2EIDH 000F0A                          _RXF2EIDL 000F0B  
                        _RXF3EIDH 000F0E                          _RXF3EIDL 000F0F  
                        _RXF4EIDH 000F12                          _RXF4EIDL 000F13  
                        _RXF5EIDH 000F16                          _RXF5EIDL 000F17  
                        _RXF0SIDH 000F00                          _RXF0SIDL 000F01  
                        _TXB0EIDH 000F43                          _RXF1SIDH 000F04  
                        _TXB0EIDL 000F44                          _RXF1SIDL 000F05  
                        _TXB1EIDH 000F33                          _RXF2SIDH 000F08  
                        _TXB1EIDL 000F34                          _RXF2SIDL 000F09  
                        _ISR_alta 0008                          _TXB2EIDH 000F23  
                        _RXF3SIDH 000F0C                          _TXB2EIDL 000F24  
                        _RXF3SIDL 000F0D                          _RXF4SIDH 000F10  
                        _RXF4SIDL 000F11                          _RXF5SIDH 000F14  
                        _RXF5SIDL 000F15                          _RXM0EIDH 000F1A  
                        _RXM0EIDL 000F1B                          _TXB0SIDH 000F41  
                        _RXM1EIDH 000F1E                          _TXB0SIDL 000F42  
                        _RXM1EIDL 000F1F                          _TXB1SIDH 000F31  
                        _TXB1SIDL 000F32                          _TXB2SIDH 000F21  
                        _TXB2SIDL 000F22                          _RXM0SIDH 000F18  
                        _RXM0SIDL 000F19                          _RXM1SIDH 000F1C  
                        _RXM1SIDL 000F1D                          _RXERRCNT 000F75  
                        _USART_Rx 0068                          _TXERRCNT 000F76  
                       _putsUSART 2402                        _ADCON1bits 000FC1  
               ___wmul@multiplier 001D                          _RTR_Flag 0210  
                   ?_CANSetFilter 001D                         copy_data0 2254  
                       copy_data1 2274                     _set_speed_old 0060  
                      _CANCONbits 000F6F                       ??_OpenUSART 001F  
                    _SerialOutput 003A                   OpenUSART@config 001F  
                        __Hrparam 0000                      _RXB0SIDLbits 000F62  
                        __Lrparam 0000                      _RXB1SIDLbits 000F52  
                      _CANSetMask 16E0                        ?_putsUSART 001E  
       ??_configurazione_iniziale 0022                      _RXF0SIDLbits 000F01  
                        _delay_ms 23A6                      _RXF1SIDLbits 000F05  
                  ??_CANSetFilter 009E                          __ptext10 16E0  
                        __ptext11 001A                          __ptext12 246E  
                        __ptext13 1A3E                          __ptext14 0A60  
                        __ptext15 2428                          __ptext17 228E  
                        __ptext18 11D4                          __ptext19 2446  
                    _RXF2SIDLbits 000F09           __end_of_can_interpreter 1C26  
                    _RXF3SIDLbits 000F0D                      _RXF4SIDLbits 000F11  
                    _RXF5SIDLbits 000F15          CANsendMessage@dataLength 00A4  
                   __size_of_main 0194              CANreceiveMessage@msg 0001  
                    _TXB0SIDLbits 000F42                      _TXB1SIDLbits 000F32  
                    _TXB2SIDLbits 000F22                          int$flags 0043  
       __size_of_CANOperationMode 0012                     ?_CANisRxReady 0001  
                   ?_CANisTxReady 0001                          _usart_rx 228E  
                        _usart_tx 208A                       _RXB0DLCbits 000F65  
                     _sendMessage 0214                       _RXB1DLCbits 000F55  
                    _RXM0SIDLbits 000F19                       _RXB0CONbits 000F60  
                     _RXB1CONbits 000F50                 _CANreceiveMessage 11D4  
                    _RXM1SIDLbits 000F1D                        _INTCONbits 000FF2  
                    _set_steering 0096                  ??_CANsendMessage 001D  
                  OpenUSART@spbrg 001D                ?_CANreceiveMessage 0001  
        CANsendMessage@identifier 009E                          intlevel2 0000  
                CANSetFilter@tamp 00A3                  CANSetFilter@type 0021  
             ??_CANreceiveMessage 0003                         usart_rx@i 0002  
                       usart_tx@i 009E                       _TXB0DLCbits 000F45  
                     _right_speed 0032                       _TXB1DLCbits 000F35  
                     _TXB0CONbits 000F40                       _TXB2DLCbits 000F25  
 __end_of_configurazione_iniziale 2226                       _TXB1CONbits 000F30  
                    _spam_counter 0038                       _TXB2CONbits 000F20  
                     _timeCounter 002A              CANOperationMode@mode 001D  
                  ??_CANisRxReady 0001                       ?_CANSetMask 001D  
                  ??_CANisTxReady 001D         __end_of_CANreceiveMessage 16E0  
                     ??_putsUSART 0020                  ?_can_interpreter 0001  
           __end_of_CANInitialize 1DD8                      _USART_Status 0034  
