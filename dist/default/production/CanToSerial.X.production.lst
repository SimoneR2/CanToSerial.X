

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Mar 20 18:47:10 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38  0000                     
    39                           	psect	idataBANK0
    40  002D3A                     __pidataBANK0:
    41                           	opt stack 0
    42                           
    43                           ;initializer for _SerialOutputOld
    44  002D3A  AA                 	db	170
    45  002D3B  00                 	db	0
    46  002D3C  00                 	db	0
    47  002D3D  00                 	db	0
    48  002D3E  00                 	db	0
    49  002D3F  00                 	db	0
    50  002D40  AA                 	db	170
    51  002D41  00                 	db	0
    52                           
    53                           ;initializer for _delay_quartz_frequency_value
    54  002D42  10                 	db	16
    55                           
    56                           ;initializer for _SerialOutput
    57  002D43  AA                 	db	170
    58  002D44  00                 	db	0
    59  002D45  00                 	db	0
    60  002D46  00                 	db	0
    61  002D47  00                 	db	0
    62  002D48  00                 	db	0
    63  002D49  AA                 	db	170
    64  002D4A  00                 	db	0
    65  0000                     _RXB1CON	set	3920
    66  0000                     _RXB1CONbits	set	3920
    67  0000                     _RXB1D0	set	3926
    68  0000                     _RXB1D1	set	3927
    69  0000                     _RXB1D2	set	3928
    70  0000                     _RXB1D3	set	3929
    71  0000                     _RXB1D4	set	3930
    72  0000                     _RXB1D5	set	3931
    73  0000                     _RXB1D6	set	3932
    74  0000                     _RXB1D7	set	3933
    75  0000                     _RXB1DLC	set	3925
    76  0000                     _RXB1DLCbits	set	3925
    77  0000                     _RXB1EIDH	set	3923
    78  0000                     _RXB1EIDL	set	3924
    79  0000                     _RXB1SIDH	set	3921
    80  0000                     _RXB1SIDL	set	3922
    81  0000                     _RXB1SIDLbits	set	3922
    82  0000                     _RXF0EIDH	set	3842
    83  0000                     _RXF0EIDL	set	3843
    84  0000                     _RXF0SIDH	set	3840
    85  0000                     _RXF0SIDL	set	3841
    86  0000                     _RXF0SIDLbits	set	3841
    87  0000                     _RXF1EIDH	set	3846
    88  0000                     _RXF1EIDL	set	3847
    89  0000                     _RXF1SIDH	set	3844
    90  0000                     _RXF1SIDL	set	3845
    91  0000                     _RXF1SIDLbits	set	3845
    92  0000                     _RXF2EIDH	set	3850
    93  0000                     _RXF2EIDL	set	3851
    94  0000                     _RXF2SIDH	set	3848
    95  0000                     _RXF2SIDL	set	3849
    96  0000                     _RXF2SIDLbits	set	3849
    97  0000                     _RXF3EIDH	set	3854
    98  0000                     _RXF3EIDL	set	3855
    99  0000                     _RXF3SIDH	set	3852
   100  0000                     _RXF3SIDL	set	3853
   101  0000                     _RXF3SIDLbits	set	3853
   102  0000                     _RXF4EIDH	set	3858
   103  0000                     _RXF4EIDL	set	3859
   104  0000                     _RXF4SIDH	set	3856
   105  0000                     _RXF4SIDL	set	3857
   106  0000                     _RXF4SIDLbits	set	3857
   107  0000                     _RXF5EIDH	set	3862
   108  0000                     _RXF5EIDL	set	3863
   109  0000                     _RXF5SIDH	set	3860
   110  0000                     _RXF5SIDL	set	3861
   111  0000                     _RXF5SIDLbits	set	3861
   112  0000                     _RXM0EIDH	set	3866
   113  0000                     _RXM0EIDL	set	3867
   114  0000                     _RXM0SIDH	set	3864
   115  0000                     _RXM0SIDL	set	3865
   116  0000                     _RXM0SIDLbits	set	3865
   117  0000                     _RXM1EIDH	set	3870
   118  0000                     _RXM1EIDL	set	3871
   119  0000                     _RXM1SIDH	set	3868
   120  0000                     _RXM1SIDL	set	3869
   121  0000                     _RXM1SIDLbits	set	3869
   122  0000                     _TXB0CONbits	set	3904
   123  0000                     _TXB0D0	set	3910
   124  0000                     _TXB0D1	set	3911
   125  0000                     _TXB0D2	set	3912
   126  0000                     _TXB0D3	set	3913
   127  0000                     _TXB0D4	set	3914
   128  0000                     _TXB0D5	set	3915
   129  0000                     _TXB0D6	set	3916
   130  0000                     _TXB0D7	set	3917
   131  0000                     _TXB0DLC	set	3909
   132  0000                     _TXB0DLCbits	set	3909
   133  0000                     _TXB0EIDH	set	3907
   134  0000                     _TXB0EIDL	set	3908
   135  0000                     _TXB0SIDH	set	3905
   136  0000                     _TXB0SIDL	set	3906
   137  0000                     _TXB0SIDLbits	set	3906
   138  0000                     _TXB1CONbits	set	3888
   139  0000                     _TXB1D0	set	3894
   140  0000                     _TXB1D1	set	3895
   141  0000                     _TXB1D2	set	3896
   142  0000                     _TXB1D3	set	3897
   143  0000                     _TXB1D4	set	3898
   144  0000                     _TXB1D5	set	3899
   145  0000                     _TXB1D6	set	3900
   146  0000                     _TXB1D7	set	3901
   147  0000                     _TXB1DLC	set	3893
   148  0000                     _TXB1DLCbits	set	3893
   149  0000                     _TXB1EIDH	set	3891
   150  0000                     _TXB1EIDL	set	3892
   151  0000                     _TXB1SIDH	set	3889
   152  0000                     _TXB1SIDL	set	3890
   153  0000                     _TXB1SIDLbits	set	3890
   154  0000                     _TXB2CONbits	set	3872
   155  0000                     _TXB2D0	set	3878
   156  0000                     _TXB2D1	set	3879
   157  0000                     _TXB2D2	set	3880
   158  0000                     _TXB2D3	set	3881
   159  0000                     _TXB2D4	set	3882
   160  0000                     _TXB2D5	set	3883
   161  0000                     _TXB2D6	set	3884
   162  0000                     _TXB2D7	set	3885
   163  0000                     _TXB2DLC	set	3877
   164  0000                     _TXB2DLCbits	set	3877
   165  0000                     _TXB2EIDH	set	3875
   166  0000                     _TXB2EIDL	set	3876
   167  0000                     _TXB2SIDH	set	3873
   168  0000                     _TXB2SIDL	set	3874
   169  0000                     _TXB2SIDLbits	set	3874
   170  0000                     _ADCON1bits	set	4033
   171  0000                     _BRGCON1	set	3952
   172  0000                     _BRGCON2	set	3953
   173  0000                     _BRGCON2bits	set	3953
   174  0000                     _BRGCON3	set	3954
   175  0000                     _BRGCON3bits	set	3954
   176  0000                     _CANCON	set	3951
   177  0000                     _CANCONbits	set	3951
   178  0000                     _CANSTAT	set	3950
   179  0000                     _COMSTATbits	set	3956
   180  0000                     _INTCONbits	set	4082
   181  0000                     _IPR1bits	set	3999
   182  0000                     _IPR2bits	set	4002
   183  0000                     _IPR3bits	set	4005
   184  0000                     _LATA	set	3977
   185  0000                     _LATB	set	3978
   186  0000                     _LATC	set	3979
   187  0000                     _LATD	set	3980
   188  0000                     _LATDbits	set	3980
   189  0000                     _LATE	set	3981
   190  0000                     _PIE1	set	3997
   191  0000                     _PIE1bits	set	3997
   192  0000                     _PIE2bits	set	4000
   193  0000                     _PIE3bits	set	4003
   194  0000                     _PIR1bits	set	3998
   195  0000                     _PIR2bits	set	4001
   196  0000                     _PIR3bits	set	4004
   197  0000                     _PORTCbits	set	3970
   198  0000                     _RCONbits	set	4048
   199  0000                     _RCREG	set	4014
   200  0000                     _RCSTA	set	4011
   201  0000                     _RCSTAbits	set	4011
   202  0000                     _RXB0CON	set	3936
   203  0000                     _RXB0CONbits	set	3936
   204  0000                     _RXB0D0	set	3942
   205  0000                     _RXB0D1	set	3943
   206  0000                     _RXB0D2	set	3944
   207  0000                     _RXB0D3	set	3945
   208  0000                     _RXB0D4	set	3946
   209  0000                     _RXB0D5	set	3947
   210  0000                     _RXB0D6	set	3948
   211  0000                     _RXB0D7	set	3949
   212  0000                     _RXB0DLC	set	3941
   213  0000                     _RXB0DLCbits	set	3941
   214  0000                     _RXB0EIDH	set	3939
   215  0000                     _RXB0EIDL	set	3940
   216  0000                     _RXB0SIDH	set	3937
   217  0000                     _RXB0SIDL	set	3938
   218  0000                     _RXB0SIDLbits	set	3938
   219  0000                     _RXERRCNT	set	3957
   220  0000                     _SPBRG	set	4015
   221  0000                     _SPBRGH	set	4016
   222  0000                     _T3CON	set	4017
   223  0000                     _TMR3H	set	4019
   224  0000                     _TMR3L	set	4018
   225  0000                     _TRISA	set	3986
   226  0000                     _TRISB	set	3987
   227  0000                     _TRISC	set	3988
   228  0000                     _TRISCbits	set	3988
   229  0000                     _TRISD	set	3989
   230  0000                     _TRISE	set	3990
   231  0000                     _TXERRCNT	set	3958
   232  0000                     _TXREG	set	4013
   233  0000                     _TXSTA	set	4012
   234  0000                     _TXSTAbits	set	4012
   235                           
   236                           ; #config settings
   237  0000                     
   238                           	psect	cinit
   239  002BB2                     __pcinit:
   240                           	opt stack 0
   241  002BB2                     start_initialization:
   242                           	opt stack 0
   243  002BB2                     __initialization:
   244                           	opt stack 0
   245                           
   246                           ; Clear objects allocated to BANK0 (52 bytes)
   247  002BB2  EE00  F060         	lfsr	0,__pbssBANK0
   248  002BB6  0E34               	movlw	52
   249  002BB8                     clear_0:
   250  002BB8  6AEE               	clrf	postinc0,c
   251  002BBA  06E8               	decf	wreg,f,c
   252  002BBC  E1FD               	bnz	clear_0
   253                           
   254                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   255  002BBE  6A46               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   256                           
   257                           ; Clear objects allocated to COMRAM (33 bytes)
   258  002BC0  EE00  F025         	lfsr	0,__pbssCOMRAM
   259  002BC4  0E21               	movlw	33
   260  002BC6                     clear_1:
   261  002BC6  6AEE               	clrf	postinc0,c
   262  002BC8  06E8               	decf	wreg,f,c
   263  002BCA  E1FD               	bnz	clear_1
   264                           
   265                           ; Initialize objects allocated to BANK0 (17 bytes)
   266                           ; load TBLPTR registers with __pidataBANK0
   267  002BCC  0E3A               	movlw	low __pidataBANK0
   268  002BCE  6EF6               	movwf	tblptrl,c
   269  002BD0  0E2D               	movlw	high __pidataBANK0
   270  002BD2  6EF7               	movwf	tblptrh,c
   271  002BD4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   272  002BD6  6EF8               	movwf	tblptru,c
   273  002BD8  EE00  F0C6         	lfsr	0,__pdataBANK0
   274  002BDC  EE10 F011          	lfsr	1,17
   275  002BE0                     copy_data0:
   276  002BE0  0009               	tblrd		*+
   277  002BE2  CFF5 FFEE          	movff	tablat,postinc0
   278  002BE6  50E5               	movf	postdec1,w,c
   279  002BE8  50E1               	movf	fsr1l,w,c
   280  002BEA  E1FA               	bnz	copy_data0
   281  002BEC                     end_of_initialization:
   282                           	opt stack 0
   283  002BEC                     __end_of__initialization:
   284                           	opt stack 0
   285  002BEC  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   286  002BEE  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   287  002BF0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   288  002BF2  6EF8               	movwf	tblptru,c
   289  002BF4  0100               	movlb	0
   290  002BF6  EFB1  F011         	goto	_main	;jump to C main() function
   291                           tblptru	equ	0xFF8
   292                           tblptrh	equ	0xFF7
   293                           tblptrl	equ	0xFF6
   294                           tablat	equ	0xFF5
   295                           postinc0	equ	0xFEE
   296                           wreg	equ	0xFE8
   297                           postdec1	equ	0xFE5
   298                           fsr1l	equ	0xFE1
   299                           
   300                           	psect	bitbssCOMRAM
   301  000230                     __pbitbssCOMRAM:
   302                           	opt stack 0
   303  000230                     _RTR_Flag:
   304                           	opt stack 0
   305  000230                     	ds	1
   306  000231                     _dir:
   307                           	opt stack 0
   308  000231                     	ds	1
   309  000232                     _newMessageCan:
   310                           	opt stack 0
   311  000232                     	ds	1
   312  000233                     _newMessageUsart:
   313                           	opt stack 0
   314  000233                     	ds	1
   315  000234                     _sendMessage:
   316                           	opt stack 0
   317  000234                     	ds	1
   318                           tblptru	equ	0xFF8
   319                           tblptrh	equ	0xFF7
   320                           tblptrl	equ	0xFF6
   321                           tablat	equ	0xFF5
   322                           postinc0	equ	0xFEE
   323                           wreg	equ	0xFE8
   324                           postdec1	equ	0xFE5
   325                           fsr1l	equ	0xFE1
   326                           
   327                           	psect	bssCOMRAM
   328  000025                     __pbssCOMRAM:
   329                           	opt stack 0
   330  000025                     _id:
   331                           	opt stack 0
   332  000025                     	ds	4
   333  000029                     _previousTimeCounter:
   334                           	opt stack 0
   335  000029                     	ds	4
   336  00002D                     _timeCounter:
   337                           	opt stack 0
   338  00002D                     	ds	4
   339  000031                     _left_speed:
   340                           	opt stack 0
   341  000031                     	ds	2
   342  000033                     _right_speed:
   343                           	opt stack 0
   344  000033                     	ds	2
   345  000035                     _USART_Status:
   346                           	opt stack 0
   347  000035                     	ds	1
   348  000036                     _USART_Rx:
   349                           	opt stack 0
   350  000036                     	ds	8
   351  00003E                     _set_speed:
   352                           	opt stack 0
   353  00003E                     	ds	8
   354                           tblptru	equ	0xFF8
   355                           tblptrh	equ	0xFF7
   356                           tblptrl	equ	0xFF6
   357                           tablat	equ	0xFF5
   358                           postinc0	equ	0xFEE
   359                           wreg	equ	0xFE8
   360                           postdec1	equ	0xFE5
   361                           fsr1l	equ	0xFE1
   362                           
   363                           	psect	bssBANK0
   364  000060                     __pbssBANK0:
   365                           	opt stack 0
   366  000060                     _set_speed_old:
   367                           	opt stack 0
   368  000060                     	ds	8
   369  000068                     _clock_counter_reference:
   370                           	opt stack 0
   371  000068                     	ds	2
   372  00006A                     _analogic_brake_old:
   373                           	opt stack 0
   374  00006A                     	ds	1
   375  00006B                     _set_steering_old:
   376                           	opt stack 0
   377  00006B                     	ds	1
   378  00006C                     _spam_counter:
   379                           	opt stack 0
   380  00006C                     	ds	1
   381  00006D                     _msg:
   382                           	opt stack 0
   383  00006D                     	ds	15
   384  00007C                     _analogic_brake:
   385                           	opt stack 0
   386  00007C                     	ds	8
   387  000084                     _data:
   388                           	opt stack 0
   389  000084                     	ds	8
   390  00008C                     _set_steering:
   391                           	opt stack 0
   392  00008C                     	ds	8
   393                           tblptru	equ	0xFF8
   394                           tblptrh	equ	0xFF7
   395                           tblptrl	equ	0xFF6
   396                           tablat	equ	0xFF5
   397                           postinc0	equ	0xFEE
   398                           wreg	equ	0xFE8
   399                           postdec1	equ	0xFE5
   400                           fsr1l	equ	0xFE1
   401                           
   402                           	psect	dataBANK0
   403  0000C6                     __pdataBANK0:
   404                           	opt stack 0
   405  0000C6                     _SerialOutputOld:
   406                           	opt stack 0
   407  0000C6                     	ds	8
   408  0000CE                     _delay_quartz_frequency_value:
   409                           	opt stack 0
   410  0000CE                     	ds	1
   411  0000CF                     _SerialOutput:
   412                           	opt stack 0
   413  0000CF                     	ds	8
   414                           tblptru	equ	0xFF8
   415                           tblptrh	equ	0xFF7
   416                           tblptrl	equ	0xFF6
   417                           tablat	equ	0xFF5
   418                           postinc0	equ	0xFEE
   419                           wreg	equ	0xFE8
   420                           postdec1	equ	0xFE5
   421                           fsr1l	equ	0xFE1
   422                           
   423                           	psect	cstackBANK0
   424  000094                     __pcstackBANK0:
   425                           	opt stack 0
   426  000094                     i2CANsendMessage@tamp:
   427                           	opt stack 0
   428                           
   429                           ; 4 bytes @ 0x0
   430  000094                     	ds	4
   431  000098                     ??_ISR_alta:
   432                           
   433                           ; 0 bytes @ 0x4
   434  000098                     	ds	15
   435  0000A7                     ISR_alta@i:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0x13
   439  0000A7                     	ds	1
   440  0000A8                     ??_can_interpreter:
   441  0000A8                     ?___wmul:
   442                           	opt stack 0
   443  0000A8                     CANOperationMode@mode:
   444                           	opt stack 0
   445  0000A8                     WriteUSART@data:
   446                           	opt stack 0
   447  0000A8                     OpenUSART@spbrg:
   448                           	opt stack 0
   449  0000A8                     ___wmul@multiplier:
   450                           	opt stack 0
   451  0000A8                     CANsendMessage@identifier:
   452                           	opt stack 0
   453  0000A8                     CANSetMask@mask:
   454                           	opt stack 0
   455  0000A8                     CANSetFilter@filter:
   456                           	opt stack 0
   457                           
   458                           ; 4 bytes @ 0x14
   459  0000A8                     	ds	1
   460  0000A9                     putsUSART@data:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x15
   464  0000A9                     	ds	1
   465  0000AA                     OpenUSART@config:
   466                           	opt stack 0
   467  0000AA                     ___wmul@multiplicand:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x16
   471  0000AA                     	ds	1
   472  0000AB                     
   473                           ; 0 bytes @ 0x17
   474  0000AB                     	ds	1
   475  0000AC                     CANSetMask@type:
   476                           	opt stack 0
   477  0000AC                     CANSetFilter@type:
   478                           	opt stack 0
   479  0000AC                     CANsendMessage@data:
   480                           	opt stack 0
   481  0000AC                     ___wmul@product:
   482                           	opt stack 0
   483                           
   484                           ; 2 bytes @ 0x18
   485  0000AC                     	ds	1
   486  0000AD                     ??_CANSetMask:
   487  0000AD                     ??_CANSetFilter:
   488                           
   489                           ; 0 bytes @ 0x19
   490  0000AD                     	ds	1
   491  0000AE                     CANsendMessage@dataLength:
   492                           	opt stack 0
   493  0000AE                     delay_ms@value_ms:
   494                           	opt stack 0
   495                           
   496                           ; 2 bytes @ 0x1A
   497  0000AE                     	ds	1
   498  0000AF                     CANsendMessage@flags:
   499                           	opt stack 0
   500                           
   501                           ; 1 bytes @ 0x1B
   502  0000AF                     	ds	1
   503  0000B0                     ??_CANsendMessage:
   504  0000B0                     
   505                           ; 0 bytes @ 0x1C
   506  0000B0                     	ds	1
   507  0000B1                     CANSetMask@numBuffer:
   508                           	opt stack 0
   509  0000B1                     CANSetFilter@numBuffer:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0x1D
   513  0000B1                     	ds	1
   514  0000B2                     CANSetMask@tamp:
   515                           	opt stack 0
   516  0000B2                     CANSetFilter@tamp:
   517                           	opt stack 0
   518                           
   519                           ; 4 bytes @ 0x1E
   520  0000B2                     	ds	2
   521  0000B4                     CANsendMessage@tamp:
   522                           	opt stack 0
   523                           
   524                           ; 4 bytes @ 0x20
   525  0000B4                     	ds	2
   526  0000B6                     CANInitialize@phaseSeg1:
   527                           	opt stack 0
   528                           
   529                           ; 1 bytes @ 0x22
   530  0000B6                     	ds	1
   531  0000B7                     CANInitialize@phaseSeg2:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0x23
   535  0000B7                     	ds	1
   536  0000B8                     CANInitialize@SJW:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x24
   540  0000B8                     	ds	1
   541  0000B9                     CANInitialize@BRP:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x25
   545  0000B9                     	ds	1
   546  0000BA                     CANInitialize@flags:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x26
   550  0000BA                     	ds	1
   551  0000BB                     ??_CANInitialize:
   552                           
   553                           ; 0 bytes @ 0x27
   554  0000BB                     	ds	4
   555  0000BF                     CANInitialize@propSeg:
   556                           	opt stack 0
   557                           
   558                           ; 1 bytes @ 0x2B
   559  0000BF                     	ds	1
   560  0000C0                     CANInitialize@FilterConfig1:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0x2C
   564  0000C0                     	ds	1
   565  0000C1                     CANInitialize@FilterConfig2:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x2D
   569  0000C1                     	ds	1
   570  0000C2                     ??_main:
   571                           
   572                           ; 0 bytes @ 0x2E
   573  0000C2                     	ds	2
   574  0000C4                     main@i_3182:
   575                           	opt stack 0
   576                           
   577                           ; 1 bytes @ 0x30
   578  0000C4                     	ds	1
   579  0000C5                     main@i:
   580                           	opt stack 0
   581                           
   582                           ; 1 bytes @ 0x31
   583  0000C5                     	ds	1
   584                           tblptru	equ	0xFF8
   585                           tblptrh	equ	0xFF7
   586                           tblptrl	equ	0xFF6
   587                           tablat	equ	0xFF5
   588                           postinc0	equ	0xFEE
   589                           wreg	equ	0xFE8
   590                           postdec1	equ	0xFE5
   591                           fsr1l	equ	0xFE1
   592                           
   593                           	psect	cstackCOMRAM
   594  000001                     __pcstackCOMRAM:
   595                           	opt stack 0
   596  000001                     ReadUSART@data:
   597                           	opt stack 0
   598                           
   599                           ; 1 bytes @ 0x0
   600  000001                     	ds	1
   601  000002                     getsUSART@buffer:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x1
   605  000002                     	ds	2
   606  000004                     getsUSART@len:
   607                           	opt stack 0
   608                           
   609                           ; 1 bytes @ 0x3
   610  000004                     	ds	1
   611  000005                     getsUSART@data:
   612                           	opt stack 0
   613                           
   614                           ; 1 bytes @ 0x4
   615  000005                     	ds	1
   616  000006                     getsUSART@i:
   617                           	opt stack 0
   618                           
   619                           ; 1 bytes @ 0x5
   620  000006                     	ds	1
   621  000007                     ??_ISR_bassa:
   622                           
   623                           ; 0 bytes @ 0x6
   624  000007                     	ds	18
   625  000019                     _CANisTxReady$3105:
   626                           	opt stack 0
   627  000019                     _CANisRxReady$3107:
   628                           	opt stack 0
   629  000019                     CANreceiveMessage@msg:
   630                           	opt stack 0
   631  000019                     i2CANsendMessage@identifier:
   632                           	opt stack 0
   633                           
   634                           ; 4 bytes @ 0x18
   635  000019                     	ds	2
   636  00001B                     ??_CANreceiveMessage:
   637                           
   638                           ; 0 bytes @ 0x1A
   639  00001B                     	ds	2
   640  00001D                     i2CANsendMessage@data:
   641                           	opt stack 0
   642                           
   643                           ; 2 bytes @ 0x1C
   644  00001D                     	ds	2
   645  00001F                     i2CANsendMessage@dataLength:
   646                           	opt stack 0
   647                           
   648                           ; 1 bytes @ 0x1E
   649  00001F                     	ds	1
   650  000020                     i2CANsendMessage@flags:
   651                           	opt stack 0
   652                           
   653                           ; 1 bytes @ 0x1F
   654  000020                     	ds	1
   655  000021                     ??i2_CANsendMessage:
   656                           
   657                           ; 0 bytes @ 0x20
   658  000021                     	ds	2
   659  000023                     CANreceiveMessage@error:
   660                           	opt stack 0
   661                           
   662                           ; 1 bytes @ 0x22
   663  000023                     	ds	1
   664  000024                     CANreceiveMessage@tamp:
   665                           	opt stack 0
   666                           
   667                           ; 1 bytes @ 0x23
   668  000024                     	ds	1
   669                           tblptru	equ	0xFF8
   670                           tblptrh	equ	0xFF7
   671                           tblptrl	equ	0xFF6
   672                           tablat	equ	0xFF5
   673                           postinc0	equ	0xFEE
   674                           wreg	equ	0xFE8
   675                           postdec1	equ	0xFE5
   676                           fsr1l	equ	0xFE1
   677                           
   678 ;;
   679 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   680 ;;
   681 ;; *************** function _main *****************
   682 ;; Defined at:
   683 ;;		line 140 in file "CanToSerial.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;		None
   686 ;; Auto vars:     Size  Location     Type
   687 ;;  i               1   48[BANK0 ] unsigned char 
   688 ;;  i               1   49[BANK0 ] unsigned char 
   689 ;; Return value:  Size  Location     Type
   690 ;;		None               void
   691 ;; Registers used:
   692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   698 ;;      Params:         0       0       0       0
   699 ;;      Locals:         0       2       0       0
   700 ;;      Temps:          0       2       0       0
   701 ;;      Totals:         0       4       0       0
   702 ;;Total ram usage:        4 bytes
   703 ;; Hardware stack levels required when called:    8
   704 ;; This function calls:
   705 ;;		_CANsendMessage
   706 ;;		_can_interpreter
   707 ;;		_configurazione_iniziale
   708 ;;		_delay_ms
   709 ;;		_putsUSART
   710 ;; This function is called by:
   711 ;;		Startup code after reset
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text0
   716  002362                     __ptext0:
   717                           	opt stack 0
   718  002362                     _main:
   719                           	opt stack 23
   720                           
   721                           ;CanToSerial.c: 141: configurazione_iniziale();
   722                           
   723                           ;incstack = 0
   724  002362  EC51  F015         	call	_configurazione_iniziale	;wreg free
   725                           
   726                           ;CanToSerial.c: 142: LATDbits.LATD2 = 1;
   727  002366  848C               	bsf	3980,2,c	;volatile
   728                           
   729                           ;CanToSerial.c: 143: LATDbits.LATD3 = 1;
   730  002368  868C               	bsf	3980,3,c	;volatile
   731                           
   732                           ;CanToSerial.c: 144: LATDbits.LATD0 = 1;
   733  00236A  808C               	bsf	3980,0,c	;volatile
   734                           
   735                           ;CanToSerial.c: 145: LATDbits.LATD1 = 1;
   736  00236C  828C               	bsf	3980,1,c	;volatile
   737                           
   738                           ;CanToSerial.c: 146: LATDbits.LATD4 = 1;
   739  00236E  888C               	bsf	3980,4,c	;volatile
   740                           
   741                           ;CanToSerial.c: 147: LATDbits.LATD6 = 1;
   742  002370  8C8C               	bsf	3980,6,c	;volatile
   743                           
   744                           ;CanToSerial.c: 148: LATDbits.LATD5 = 1;
   745  002372  8A8C               	bsf	3980,5,c	;volatile
   746                           
   747                           ;CanToSerial.c: 149: delay_ms(500);
   748  002374  0E01               	movlw	1
   749  002376  0100               	movlb	0	; () banked
   750  002378  6FAF               	movwf	(delay_ms@value_ms+1)& (0+255),b
   751  00237A  0EF4               	movlw	244
   752  00237C  6FAE               	movwf	delay_ms@value_ms& (0+255),b
   753  00237E  ECFD  F015         	call	_delay_ms	;wreg free
   754                           
   755                           ;CanToSerial.c: 150: LATDbits.LATD2 = 0;
   756  002382  948C               	bcf	3980,2,c	;volatile
   757                           
   758                           ;CanToSerial.c: 151: LATDbits.LATD3 = 0;
   759  002384  968C               	bcf	3980,3,c	;volatile
   760                           
   761                           ;CanToSerial.c: 152: LATDbits.LATD0 = 0;
   762  002386  908C               	bcf	3980,0,c	;volatile
   763                           
   764                           ;CanToSerial.c: 153: LATDbits.LATD1 = 0;
   765  002388  928C               	bcf	3980,1,c	;volatile
   766                           
   767                           ;CanToSerial.c: 154: LATDbits.LATD4 = 0;
   768  00238A  988C               	bcf	3980,4,c	;volatile
   769                           
   770                           ;CanToSerial.c: 155: LATDbits.LATD6 = 0;
   771  00238C  9C8C               	bcf	3980,6,c	;volatile
   772                           
   773                           ;CanToSerial.c: 156: LATDbits.LATD5 = 0;
   774  00238E  9A8C               	bcf	3980,5,c	;volatile
   775  002390                     l4328:
   776                           
   777                           ;CanToSerial.c: 158: if (newMessageCan == 1) {
   778  002390  A446               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
   779  002392  D085               	goto	l4374
   780                           
   781                           ;CanToSerial.c: 159: can_interpreter();
   782  002394  ECA5  F013         	call	_can_interpreter	;wreg free
   783                           
   784                           ;CanToSerial.c: 160: SerialOutput[0] = 0xAA;
   785  002398  0EAA               	movlw	170
   786  00239A  0100               	movlb	0	; () banked
   787  00239C  6FCF               	movwf	_SerialOutput& (0+255),b
   788                           
   789                           ; BSR set to: 0
   790                           ;CanToSerial.c: 161: SerialOutput[6] = 0xAA;
   791  00239E  0EAA               	movlw	170
   792  0023A0  0100               	movlb	0	; () banked
   793  0023A2  6FD5               	movwf	(_SerialOutput+6)& (0+255),b
   794                           
   795                           ; BSR set to: 0
   796                           ;CanToSerial.c: 162: SerialOutput[7] = '\0';
   797  0023A4  0E00               	movlw	0
   798  0023A6  0100               	movlb	0	; () banked
   799  0023A8  6FD6               	movwf	(_SerialOutput+7)& (0+255),b
   800                           
   801                           ; BSR set to: 0
   802                           ;CanToSerial.c: 163: for (char i = 0; i < 6; i++) {
   803  0023AA  0E00               	movlw	0
   804  0023AC  0100               	movlb	0	; () banked
   805  0023AE  6FC5               	movwf	main@i& (0+255),b
   806  0023B0                     l4340:
   807                           
   808                           ; BSR set to: 0
   809  0023B0  0E05               	movlw	5
   810  0023B2  0100               	movlb	0	; () banked
   811  0023B4  65C5               	cpfsgt	main@i& (0+255),b
   812  0023B6  D001               	goto	l4344
   813  0023B8  D02E               	goto	l4354
   814  0023BA                     l4344:
   815                           
   816                           ; BSR set to: 0
   817                           ;CanToSerial.c: 164: if (SerialOutput[i] == 0) {
   818  0023BA  0100               	movlb	0	; () banked
   819  0023BC  51C5               	movf	main@i& (0+255),w,b
   820  0023BE  0D01               	mullw	1
   821  0023C0  0ECF               	movlw	low _SerialOutput
   822  0023C2  24F3               	addwf	prodl,w,c
   823  0023C4  6ED9               	movwf	fsr2l,c
   824  0023C6  0E00               	movlw	high _SerialOutput
   825  0023C8  20F4               	addwfc	prodh,w,c
   826  0023CA  6EDA               	movwf	fsr2h,c
   827  0023CC  50DF               	movf	indf2,w,c
   828  0023CE  A4D8               	btfss	status,2,c
   829  0023D0  D01F               	goto	l4350
   830                           
   831                           ; BSR set to: 0
   832                           ;CanToSerial.c: 165: SerialOutput[i] = 1;
   833  0023D2  0100               	movlb	0	; () banked
   834  0023D4  51C5               	movf	main@i& (0+255),w,b
   835  0023D6  0D01               	mullw	1
   836  0023D8  0ECF               	movlw	low _SerialOutput
   837  0023DA  24F3               	addwf	prodl,w,c
   838  0023DC  6ED9               	movwf	fsr2l,c
   839  0023DE  0E00               	movlw	high _SerialOutput
   840  0023E0  20F4               	addwfc	prodh,w,c
   841  0023E2  6EDA               	movwf	fsr2h,c
   842  0023E4  0E01               	movlw	1
   843  0023E6  6EDF               	movwf	indf2,c
   844                           
   845                           ; BSR set to: 0
   846                           ;CanToSerial.c: 166: SerialOutputOld[i] = SerialOutput[i];
   847  0023E8  0100               	movlb	0	; () banked
   848  0023EA  51C5               	movf	main@i& (0+255),w,b
   849  0023EC  0D01               	mullw	1
   850  0023EE  0ECF               	movlw	low _SerialOutput
   851  0023F0  24F3               	addwf	prodl,w,c
   852  0023F2  6ED9               	movwf	fsr2l,c
   853  0023F4  0E00               	movlw	high _SerialOutput
   854  0023F6  20F4               	addwfc	prodh,w,c
   855  0023F8  6EDA               	movwf	fsr2h,c
   856  0023FA  0100               	movlb	0	; () banked
   857  0023FC  51C5               	movf	main@i& (0+255),w,b
   858  0023FE  0D01               	mullw	1
   859  002400  0EC6               	movlw	low _SerialOutputOld
   860  002402  24F3               	addwf	prodl,w,c
   861  002404  6EE1               	movwf	fsr1l,c
   862  002406  0E00               	movlw	high _SerialOutputOld
   863  002408  20F4               	addwfc	prodh,w,c
   864  00240A  6EE2               	movwf	fsr1h,c
   865  00240C  CFDF FFE7          	movff	indf2,indf1
   866  002410                     l4350:
   867                           
   868                           ; BSR set to: 0
   869  002410  0100               	movlb	0	; () banked
   870  002412  2BC5               	incf	main@i& (0+255),f,b
   871  002414  D7CD               	goto	l4340
   872  002416                     l4354:
   873                           
   874                           ; BSR set to: 0
   875                           ;CanToSerial.c: 167: }
   876                           ;CanToSerial.c: 168: }
   877                           ;CanToSerial.c: 170: spam_counter = 0;
   878  002416  0E00               	movlw	0
   879  002418  0100               	movlb	0	; () banked
   880  00241A  6F6C               	movwf	_spam_counter& (0+255),b
   881                           
   882                           ;CanToSerial.c: 171: for (char i = 1; i < 6; i++) {
   883  00241C  0E01               	movlw	1
   884  00241E  0100               	movlb	0	; () banked
   885  002420  6FC4               	movwf	main@i_3182& (0+255),b
   886  002422                     l4356:
   887                           
   888                           ; BSR set to: 0
   889  002422  0E05               	movlw	5
   890  002424  0100               	movlb	0	; () banked
   891  002426  65C4               	cpfsgt	main@i_3182& (0+255),b
   892  002428  D001               	goto	l4360
   893  00242A  D01B               	goto	l658
   894  00242C                     l4360:
   895                           
   896                           ; BSR set to: 0
   897                           ;CanToSerial.c: 172: if (SerialOutput[i] == SerialOutputOld[i]) {
   898  00242C  0100               	movlb	0	; () banked
   899  00242E  51C4               	movf	main@i_3182& (0+255),w,b
   900  002430  0D01               	mullw	1
   901  002432  0EC6               	movlw	low _SerialOutputOld
   902  002434  24F3               	addwf	prodl,w,c
   903  002436  6ED9               	movwf	fsr2l,c
   904  002438  0E00               	movlw	high _SerialOutputOld
   905  00243A  20F4               	addwfc	prodh,w,c
   906  00243C  6EDA               	movwf	fsr2h,c
   907  00243E  0100               	movlb	0	; () banked
   908  002440  51C4               	movf	main@i_3182& (0+255),w,b
   909  002442  0D01               	mullw	1
   910  002444  0ECF               	movlw	low _SerialOutput
   911  002446  24F3               	addwf	prodl,w,c
   912  002448  6EE1               	movwf	fsr1l,c
   913  00244A  0E00               	movlw	high _SerialOutput
   914  00244C  20F4               	addwfc	prodh,w,c
   915  00244E  6EE2               	movwf	fsr1h,c
   916  002450  50DE               	movf	postinc2,w,c
   917  002452  18E6               	xorwf	postinc1,w,c
   918  002454  A4D8               	btfss	status,2,c
   919  002456  D002               	goto	l659
   920                           
   921                           ; BSR set to: 0
   922                           ;CanToSerial.c: 173: spam_counter++;
   923  002458  0100               	movlb	0	; () banked
   924  00245A  2B6C               	incf	_spam_counter& (0+255),f,b
   925  00245C                     l659:
   926                           
   927                           ; BSR set to: 0
   928  00245C  0100               	movlb	0	; () banked
   929  00245E  2BC4               	incf	main@i_3182& (0+255),f,b
   930  002460  D7E0               	goto	l4356
   931  002462                     l658:
   932                           
   933                           ; BSR set to: 0
   934                           ;CanToSerial.c: 174: }
   935                           ;CanToSerial.c: 175: }
   936                           ;CanToSerial.c: 176: if (((!TXSTAbits.TRMT) != 1)&&(spam_counter != 5)) {
   937  002462  A2AC               	btfss	4012,1,c	;volatile
   938  002464  D01B               	goto	l4372
   939                           
   940                           ; BSR set to: 0
   941  002466  0E05               	movlw	5
   942  002468  0100               	movlb	0	; () banked
   943  00246A  196C               	xorwf	_spam_counter& (0+255),w,b
   944  00246C  B4D8               	btfsc	status,2,c
   945  00246E  D016               	goto	l4372
   946                           
   947                           ; BSR set to: 0
   948                           ;CanToSerial.c: 177: LATDbits.LATD0 = ~LATDbits.LATD0;
   949  002470  A08C               	btfss	3980,0,c	;volatile
   950  002472  D002               	goto	u5560
   951  002474  0E01               	movlw	1
   952  002476  D001               	goto	u5566
   953  002478                     u5560:
   954  002478  0E00               	movlw	0
   955  00247A                     u5566:
   956  00247A  0AFF               	xorlw	255
   957  00247C  0100               	movlb	0	; () banked
   958  00247E  6FC2               	movwf	??_main& (0+255),b
   959  002480  508C               	movf	3980,w,c	;volatile
   960  002482  0100               	movlb	0	; () banked
   961  002484  19C2               	xorwf	??_main& (0+255),w,b
   962  002486  0BFE               	andlw	-2
   963  002488  19C2               	xorwf	??_main& (0+255),w,b
   964  00248A  6E8C               	movwf	3980,c	;volatile
   965                           
   966                           ; BSR set to: 0
   967                           ;CanToSerial.c: 178: putsUSART(SerialOutput);
   968  00248C  0ECF               	movlw	low _SerialOutput
   969  00248E  0100               	movlb	0	; () banked
   970  002490  6FA9               	movwf	putsUSART@data& (0+255),b
   971  002492  0E00               	movlw	high _SerialOutput
   972  002494  0100               	movlb	0	; () banked
   973  002496  6FAA               	movwf	(putsUSART@data+1)& (0+255),b
   974  002498  EC4B  F016         	call	_putsUSART	;wreg free
   975  00249C                     l4372:
   976                           
   977                           ;CanToSerial.c: 179: }
   978                           ;CanToSerial.c: 180: newMessageCan = 0;
   979  00249C  9446               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
   980  00249E                     l4374:
   981                           
   982                           ;CanToSerial.c: 181: }
   983                           ;CanToSerial.c: 182: if (newMessageUsart == 1) {
   984  00249E  A646               	btfss	_newMessageUsart/(0+8),_newMessageUsart& (0+7),c	;volatile
   985  0024A0  D777               	goto	l4328
   986                           
   987                           ;CanToSerial.c: 183: LATDbits.LATD2 = ~LATDbits.LATD2;
   988  0024A2  A48C               	btfss	3980,2,c	;volatile
   989  0024A4  D002               	goto	u5580
   990  0024A6  0E01               	movlw	1
   991  0024A8  D001               	goto	u5586
   992  0024AA                     u5580:
   993  0024AA  0E00               	movlw	0
   994  0024AC                     u5586:
   995  0024AC  0AFF               	xorlw	255
   996  0024AE  0100               	movlb	0	; () banked
   997  0024B0  6FC2               	movwf	??_main& (0+255),b
   998  0024B2  0100               	movlb	0	; () banked
   999  0024B4  47C2               	rlncf	??_main& (0+255),f,b
  1000  0024B6  47C2               	rlncf	??_main& (0+255),f,b
  1001  0024B8  508C               	movf	3980,w,c	;volatile
  1002  0024BA  0100               	movlb	0	; () banked
  1003  0024BC  19C2               	xorwf	??_main& (0+255),w,b
  1004  0024BE  0BFB               	andlw	-5
  1005  0024C0  19C2               	xorwf	??_main& (0+255),w,b
  1006  0024C2  6E8C               	movwf	3980,c	;volatile
  1007                           
  1008                           ;CanToSerial.c: 184: if (set_steering_old != set_steering[0]) {
  1009  0024C4  0100               	movlb	0	; () banked
  1010  0024C6  516B               	movf	_set_steering_old& (0+255),w,b	;volatile
  1011  0024C8  0100               	movlb	0	; () banked
  1012  0024CA  198C               	xorwf	_set_steering& (0+255),w,b
  1013  0024CC  B4D8               	btfsc	status,2,c
  1014  0024CE  D017               	goto	l4380
  1015                           
  1016                           ; BSR set to: 0
  1017                           ;CanToSerial.c: 185: CANsendMessage(0b00000000000000000000000000101, set_steering, 8, CA
      +                          N_CONFIG_STD_MSG & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1018  0024D0  0E05               	movlw	5
  1019  0024D2  0100               	movlb	0	; () banked
  1020  0024D4  6FA8               	movwf	CANsendMessage@identifier& (0+255),b
  1021  0024D6  0E00               	movlw	0
  1022  0024D8  6FA9               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1023  0024DA  0E00               	movlw	0
  1024  0024DC  6FAA               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1025  0024DE  0E00               	movlw	0
  1026  0024E0  6FAB               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1027  0024E2  0E8C               	movlw	low _set_steering
  1028  0024E4  0100               	movlb	0	; () banked
  1029  0024E6  6FAC               	movwf	CANsendMessage@data& (0+255),b
  1030  0024E8  0E00               	movlw	high _set_steering
  1031  0024EA  0100               	movlb	0	; () banked
  1032  0024EC  6FAD               	movwf	(CANsendMessage@data+1)& (0+255),b
  1033  0024EE  0E08               	movlw	8
  1034  0024F0  0100               	movlb	0	; () banked
  1035  0024F2  6FAE               	movwf	CANsendMessage@dataLength& (0+255),b
  1036  0024F4  0EBC               	movlw	188
  1037  0024F6  0100               	movlb	0	; () banked
  1038  0024F8  6FAF               	movwf	CANsendMessage@flags& (0+255),b
  1039  0024FA  EC27  F006         	call	_CANsendMessage	;wreg free
  1040  0024FE                     l4380:
  1041                           
  1042                           ;CanToSerial.c: 186: }
  1043                           ;CanToSerial.c: 187: if ((set_speed_old[0] != set_speed[0])&&(set_speed_old[1] != set_sp
      +                          eed[1])) {
  1044  0024FE  503E               	movf	_set_speed,w,c
  1045  002500  0100               	movlb	0	; () banked
  1046  002502  1960               	xorwf	_set_speed_old& (0+255),w,b	;volatile
  1047  002504  B4D8               	btfsc	status,2,c
  1048  002506  D01C               	goto	l4386
  1049                           
  1050                           ; BSR set to: 0
  1051  002508  503F               	movf	_set_speed+1,w,c
  1052  00250A  0100               	movlb	0	; () banked
  1053  00250C  1961               	xorwf	(_set_speed_old+1)& (0+255),w,b	;volatile
  1054  00250E  B4D8               	btfsc	status,2,c
  1055  002510  D017               	goto	l4386
  1056                           
  1057                           ; BSR set to: 0
  1058                           ;CanToSerial.c: 188: CANsendMessage(0b00000000000000000000000000011, set_speed, 8, CAN_C
      +                          ONFIG_STD_MSG & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1059  002512  0E03               	movlw	3
  1060  002514  0100               	movlb	0	; () banked
  1061  002516  6FA8               	movwf	CANsendMessage@identifier& (0+255),b
  1062  002518  0E00               	movlw	0
  1063  00251A  6FA9               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1064  00251C  0E00               	movlw	0
  1065  00251E  6FAA               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1066  002520  0E00               	movlw	0
  1067  002522  6FAB               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1068  002524  0E3E               	movlw	low _set_speed
  1069  002526  0100               	movlb	0	; () banked
  1070  002528  6FAC               	movwf	CANsendMessage@data& (0+255),b
  1071  00252A  0E00               	movlw	high _set_speed
  1072  00252C  0100               	movlb	0	; () banked
  1073  00252E  6FAD               	movwf	(CANsendMessage@data+1)& (0+255),b
  1074  002530  0E08               	movlw	8
  1075  002532  0100               	movlb	0	; () banked
  1076  002534  6FAE               	movwf	CANsendMessage@dataLength& (0+255),b
  1077  002536  0EBC               	movlw	188
  1078  002538  0100               	movlb	0	; () banked
  1079  00253A  6FAF               	movwf	CANsendMessage@flags& (0+255),b
  1080  00253C  EC27  F006         	call	_CANsendMessage	;wreg free
  1081  002540                     l4386:
  1082                           
  1083                           ;CanToSerial.c: 189: }
  1084                           ;CanToSerial.c: 190: if (analogic_brake_old != analogic_brake[0]) {
  1085  002540  0100               	movlb	0	; () banked
  1086  002542  516A               	movf	_analogic_brake_old& (0+255),w,b	;volatile
  1087  002544  0100               	movlb	0	; () banked
  1088  002546  197C               	xorwf	_analogic_brake& (0+255),w,b
  1089  002548  B4D8               	btfsc	status,2,c
  1090  00254A  D01A               	goto	l4392
  1091                           
  1092                           ; BSR set to: 0
  1093                           ;CanToSerial.c: 191: analogic_brake[1] = 0x01;
  1094  00254C  0E01               	movlw	1
  1095  00254E  0100               	movlb	0	; () banked
  1096  002550  6F7D               	movwf	(_analogic_brake+1)& (0+255),b
  1097                           
  1098                           ; BSR set to: 0
  1099                           ;CanToSerial.c: 192: CANsendMessage(0b00000000000000000000000000100, analogic_brake, 8, 
      +                          CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1100  002552  0E04               	movlw	4
  1101  002554  0100               	movlb	0	; () banked
  1102  002556  6FA8               	movwf	CANsendMessage@identifier& (0+255),b
  1103  002558  0E00               	movlw	0
  1104  00255A  6FA9               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1105  00255C  0E00               	movlw	0
  1106  00255E  6FAA               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1107  002560  0E00               	movlw	0
  1108  002562  6FAB               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1109  002564  0E7C               	movlw	low _analogic_brake
  1110  002566  0100               	movlb	0	; () banked
  1111  002568  6FAC               	movwf	CANsendMessage@data& (0+255),b
  1112  00256A  0E00               	movlw	high _analogic_brake
  1113  00256C  0100               	movlb	0	; () banked
  1114  00256E  6FAD               	movwf	(CANsendMessage@data+1)& (0+255),b
  1115  002570  0E08               	movlw	8
  1116  002572  0100               	movlb	0	; () banked
  1117  002574  6FAE               	movwf	CANsendMessage@dataLength& (0+255),b
  1118  002576  0EBC               	movlw	188
  1119  002578  0100               	movlb	0	; () banked
  1120  00257A  6FAF               	movwf	CANsendMessage@flags& (0+255),b
  1121  00257C  EC27  F006         	call	_CANsendMessage	;wreg free
  1122  002580                     l4392:
  1123                           
  1124                           ;CanToSerial.c: 193: }
  1125                           ;CanToSerial.c: 194: newMessageUsart = 0;
  1126  002580  9646               	bcf	_newMessageUsart/(0+8),_newMessageUsart& (0+7),c	;volatile
  1127  002582  D706               	goto	l4328
  1128  002584                     __end_of_main:
  1129                           	opt stack 0
  1130                           tblptru	equ	0xFF8
  1131                           tblptrh	equ	0xFF7
  1132                           tblptrl	equ	0xFF6
  1133                           tablat	equ	0xFF5
  1134                           prodh	equ	0xFF4
  1135                           prodl	equ	0xFF3
  1136                           postinc0	equ	0xFEE
  1137                           wreg	equ	0xFE8
  1138                           indf1	equ	0xFE7
  1139                           postinc1	equ	0xFE6
  1140                           postdec1	equ	0xFE5
  1141                           fsr1h	equ	0xFE2
  1142                           fsr1l	equ	0xFE1
  1143                           indf2	equ	0xFDF
  1144                           postinc2	equ	0xFDE
  1145                           fsr2h	equ	0xFDA
  1146                           fsr2l	equ	0xFD9
  1147                           status	equ	0xFD8
  1148                           
  1149 ;; *************** function _putsUSART *****************
  1150 ;; Defined at:
  1151 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uputs.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;  data            2   21[BANK0 ] PTR unsigned char 
  1154 ;;		 -> SerialOutput(8), 
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;		None
  1157 ;; Return value:  Size  Location     Type
  1158 ;;		None               void
  1159 ;; Registers used:
  1160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1166 ;;      Params:         0       2       0       0
  1167 ;;      Locals:         0       0       0       0
  1168 ;;      Temps:          0       0       0       0
  1169 ;;      Totals:         0       2       0       0
  1170 ;;Total ram usage:        2 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; Hardware stack levels required when called:    6
  1173 ;; This function calls:
  1174 ;;		_WriteUSART
  1175 ;; This function is called by:
  1176 ;;		_main
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text1
  1181  002C96                     __ptext1:
  1182                           	opt stack 0
  1183  002C96                     _putsUSART:
  1184                           	opt stack 24
  1185  002C96                     l736:
  1186  002C96  A2AC               	btfss	4012,1,c	;volatile
  1187  002C98  D7FE               	goto	l736
  1188  002C9A  C0A9  FFD9         	movff	putsUSART@data,fsr2l
  1189  002C9E  C0AA  FFDA         	movff	putsUSART@data+1,fsr2h
  1190  002CA2  50DF               	movf	indf2,w,c
  1191  002CA4  EC93  F016         	call	_WriteUSART
  1192  002CA8  C0A9  FFD9         	movff	putsUSART@data,fsr2l
  1193  002CAC  C0AA  FFDA         	movff	putsUSART@data+1,fsr2h
  1194  002CB0  0100               	movlb	0	; () banked
  1195  002CB2  4BA9               	infsnz	putsUSART@data& (0+255),f,b
  1196  002CB4  2BAA               	incf	(putsUSART@data+1)& (0+255),f,b
  1197  002CB6  50DF               	movf	indf2,w,c
  1198  002CB8  B4D8               	btfsc	status,2,c
  1199  002CBA  0012               	return	
  1200  002CBC  D7EC               	goto	l736
  1201  002CBE                     __end_of_putsUSART:
  1202                           	opt stack 0
  1203                           tblptru	equ	0xFF8
  1204                           tblptrh	equ	0xFF7
  1205                           tblptrl	equ	0xFF6
  1206                           tablat	equ	0xFF5
  1207                           prodh	equ	0xFF4
  1208                           prodl	equ	0xFF3
  1209                           postinc0	equ	0xFEE
  1210                           wreg	equ	0xFE8
  1211                           indf1	equ	0xFE7
  1212                           postinc1	equ	0xFE6
  1213                           postdec1	equ	0xFE5
  1214                           fsr1h	equ	0xFE2
  1215                           fsr1l	equ	0xFE1
  1216                           indf2	equ	0xFDF
  1217                           postinc2	equ	0xFDE
  1218                           fsr2h	equ	0xFDA
  1219                           fsr2l	equ	0xFD9
  1220                           status	equ	0xFD8
  1221                           
  1222 ;; *************** function _WriteUSART *****************
  1223 ;; Defined at:
  1224 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uwrite.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;  data            1    wreg     unsigned char 
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;  data            1   20[BANK0 ] unsigned char 
  1229 ;; Return value:  Size  Location     Type
  1230 ;;		None               void
  1231 ;; Registers used:
  1232 ;;		wreg
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1238 ;;      Params:         0       0       0       0
  1239 ;;      Locals:         0       1       0       0
  1240 ;;      Temps:          0       0       0       0
  1241 ;;      Totals:         0       1       0       0
  1242 ;;Total ram usage:        1 bytes
  1243 ;; Hardware stack levels used:    1
  1244 ;; Hardware stack levels required when called:    5
  1245 ;; This function calls:
  1246 ;;		Nothing
  1247 ;; This function is called by:
  1248 ;;		_putsUSART
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           	psect	text2
  1253  002D26                     __ptext2:
  1254                           	opt stack 0
  1255  002D26                     _WriteUSART:
  1256                           	opt stack 24
  1257                           
  1258                           ; BSR set to: 0
  1259                           ;incstack = 0
  1260                           ;WriteUSART@data stored from wreg
  1261  002D26  0100               	movlb	0	; () banked
  1262  002D28  6FA8               	movwf	WriteUSART@data& (0+255),b
  1263  002D2A  ACAC               	btfss	4012,6,c	;volatile
  1264  002D2C  D003               	goto	l3448
  1265  002D2E  90AC               	bcf	4012,0,c	;volatile
  1266  002D30  B235               	btfsc	_USART_Status,1,c
  1267  002D32  80AC               	bsf	4012,0,c	;volatile
  1268  002D34                     l3448:
  1269  002D34  C0A8  FFAD         	movff	WriteUSART@data,4013	;volatile
  1270  002D38  0012               	return		;funcret
  1271  002D3A                     __end_of_WriteUSART:
  1272                           	opt stack 0
  1273                           tblptru	equ	0xFF8
  1274                           tblptrh	equ	0xFF7
  1275                           tblptrl	equ	0xFF6
  1276                           tablat	equ	0xFF5
  1277                           prodh	equ	0xFF4
  1278                           prodl	equ	0xFF3
  1279                           postinc0	equ	0xFEE
  1280                           wreg	equ	0xFE8
  1281                           indf1	equ	0xFE7
  1282                           postinc1	equ	0xFE6
  1283                           postdec1	equ	0xFE5
  1284                           fsr1h	equ	0xFE2
  1285                           fsr1l	equ	0xFE1
  1286                           indf2	equ	0xFDF
  1287                           postinc2	equ	0xFDE
  1288                           fsr2h	equ	0xFDA
  1289                           fsr2l	equ	0xFD9
  1290                           status	equ	0xFD8
  1291                           
  1292 ;; *************** function _delay_ms *****************
  1293 ;; Defined at:
  1294 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;  value_ms        2   26[BANK0 ] unsigned int 
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;		None
  1299 ;; Return value:  Size  Location     Type
  1300 ;;		None               void
  1301 ;; Registers used:
  1302 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1308 ;;      Params:         0       2       0       0
  1309 ;;      Locals:         0       0       0       0
  1310 ;;      Temps:          0       0       0       0
  1311 ;;      Totals:         0       2       0       0
  1312 ;;Total ram usage:        2 bytes
  1313 ;; Hardware stack levels used:    1
  1314 ;; Hardware stack levels required when called:    6
  1315 ;; This function calls:
  1316 ;;		___wmul
  1317 ;; This function is called by:
  1318 ;;		_main
  1319 ;;		_delay_s
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323                           	psect	text3
  1324  002BFA                     __ptext3:
  1325                           	opt stack 0
  1326  002BFA                     _delay_ms:
  1327                           	opt stack 24
  1328                           
  1329                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  1330                           
  1331                           ;incstack = 0
  1332  002BFA  C0CE  F0A8         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  1333  002BFE  0100               	movlb	0	; () banked
  1334  002C00  6BA9               	clrf	(___wmul@multiplier+1)& (0+255),b
  1335  002C02  C0AE  F0AA         	movff	delay_ms@value_ms,___wmul@multiplicand
  1336  002C06  C0AF  F0AB         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  1337  002C0A  EC1A  F016         	call	___wmul	;wreg free
  1338  002C0E  C0A8  F068         	movff	?___wmul,_clock_counter_reference	;volatile
  1339  002C12  C0A9  F069         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  1340                           
  1341                           ;src\delay.c: 75: while (clock_counter_reference) {
  1342  002C16  D007               	goto	l571
  1343  002C18                     l3846:
  1344                           
  1345                           ;src\delay.c: 85: _delay(240);
  1346  002C18  0E50               	movlw	80
  1347  002C1A                     u6437:
  1348  002C1A  2EE8               	decfsz	wreg,f,c
  1349  002C1C  D7FE               	goto	u6437
  1350                           
  1351                           ;src\delay.c: 88: clock_counter_reference--;
  1352  002C1E  0100               	movlb	0	; () banked
  1353  002C20  0768               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  1354  002C22  A0D8               	btfss	status,0,c
  1355  002C24  0769               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  1356  002C26                     l571:
  1357  002C26  0100               	movlb	0	; () banked
  1358  002C28  5168               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  1359  002C2A  0100               	movlb	0	; () banked
  1360  002C2C  1169               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  1361  002C2E  B4D8               	btfsc	status,2,c
  1362  002C30  0012               	return	
  1363  002C32  D7F2               	goto	l3846
  1364  002C34                     __end_of_delay_ms:
  1365                           	opt stack 0
  1366                           tblptru	equ	0xFF8
  1367                           tblptrh	equ	0xFF7
  1368                           tblptrl	equ	0xFF6
  1369                           tablat	equ	0xFF5
  1370                           prodh	equ	0xFF4
  1371                           prodl	equ	0xFF3
  1372                           postinc0	equ	0xFEE
  1373                           wreg	equ	0xFE8
  1374                           indf1	equ	0xFE7
  1375                           postinc1	equ	0xFE6
  1376                           postdec1	equ	0xFE5
  1377                           fsr1h	equ	0xFE2
  1378                           fsr1l	equ	0xFE1
  1379                           indf2	equ	0xFDF
  1380                           postinc2	equ	0xFDE
  1381                           fsr2h	equ	0xFDA
  1382                           fsr2l	equ	0xFD9
  1383                           status	equ	0xFD8
  1384                           
  1385 ;; *************** function ___wmul *****************
  1386 ;; Defined at:
  1387 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;  multiplier      2   20[BANK0 ] unsigned int 
  1390 ;;  multiplicand    2   22[BANK0 ] unsigned int 
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;  product         2   24[BANK0 ] unsigned int 
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  2   20[BANK0 ] unsigned int 
  1395 ;; Registers used:
  1396 ;;		wreg, status,2, status,0, prodl, prodh
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1402 ;;      Params:         0       4       0       0
  1403 ;;      Locals:         0       2       0       0
  1404 ;;      Temps:          0       0       0       0
  1405 ;;      Totals:         0       6       0       0
  1406 ;;Total ram usage:        6 bytes
  1407 ;; Hardware stack levels used:    1
  1408 ;; Hardware stack levels required when called:    5
  1409 ;; This function calls:
  1410 ;;		Nothing
  1411 ;; This function is called by:
  1412 ;;		_delay_ms
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           	psect	text4
  1417  002C34                     __ptext4:
  1418                           	opt stack 0
  1419  002C34                     ___wmul:
  1420                           	opt stack 24
  1421                           
  1422                           ; BSR set to: 0
  1423                           ;incstack = 0
  1424  002C34  0100               	movlb	0	; () banked
  1425  002C36  51A8               	movf	___wmul@multiplier& (0+255),w,b
  1426  002C38  0100               	movlb	0	; () banked
  1427  002C3A  03AA               	mulwf	___wmul@multiplicand& (0+255),b
  1428  002C3C  CFF3 F0AC          	movff	prodl,___wmul@product
  1429  002C40  CFF4 F0AD          	movff	prodh,___wmul@product+1
  1430  002C44  0100               	movlb	0	; () banked
  1431  002C46  51A8               	movf	___wmul@multiplier& (0+255),w,b
  1432  002C48  0100               	movlb	0	; () banked
  1433  002C4A  03AB               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1434  002C4C  50F3               	movf	prodl,w,c
  1435  002C4E  0100               	movlb	0	; () banked
  1436  002C50  27AD               	addwf	(___wmul@product+1)& (0+255),f,b
  1437  002C52  0100               	movlb	0	; () banked
  1438  002C54  51A9               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1439  002C56  0100               	movlb	0	; () banked
  1440  002C58  03AA               	mulwf	___wmul@multiplicand& (0+255),b
  1441  002C5A  50F3               	movf	prodl,w,c
  1442  002C5C  0100               	movlb	0	; () banked
  1443  002C5E  27AD               	addwf	(___wmul@product+1)& (0+255),f,b
  1444                           
  1445                           ; BSR set to: 0
  1446  002C60  C0AC  F0A8         	movff	___wmul@product,?___wmul
  1447  002C64  C0AD  F0A9         	movff	___wmul@product+1,?___wmul+1
  1448  002C68  0012               	return	
  1449  002C6A                     __end_of___wmul:
  1450                           	opt stack 0
  1451                           tblptru	equ	0xFF8
  1452                           tblptrh	equ	0xFF7
  1453                           tblptrl	equ	0xFF6
  1454                           tablat	equ	0xFF5
  1455                           prodh	equ	0xFF4
  1456                           prodl	equ	0xFF3
  1457                           postinc0	equ	0xFEE
  1458                           wreg	equ	0xFE8
  1459                           indf1	equ	0xFE7
  1460                           postinc1	equ	0xFE6
  1461                           postdec1	equ	0xFE5
  1462                           fsr1h	equ	0xFE2
  1463                           fsr1l	equ	0xFE1
  1464                           indf2	equ	0xFDF
  1465                           postinc2	equ	0xFDE
  1466                           fsr2h	equ	0xFDA
  1467                           fsr2l	equ	0xFD9
  1468                           status	equ	0xFD8
  1469                           
  1470 ;; *************** function _configurazione_iniziale *****************
  1471 ;; Defined at:
  1472 ;;		line 244 in file "CanToSerial.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;		None
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;		None               void
  1479 ;; Registers used:
  1480 ;;		wreg, status,2, status,0, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1486 ;;      Params:         0       0       0       0
  1487 ;;      Locals:         0       0       0       0
  1488 ;;      Temps:          0       0       0       0
  1489 ;;      Totals:         0       0       0       0
  1490 ;;Total ram usage:        0 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; Hardware stack levels required when called:    7
  1493 ;; This function calls:
  1494 ;;		_CANInitialize
  1495 ;;		_OpenUSART
  1496 ;; This function is called by:
  1497 ;;		_main
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           	psect	text5
  1502  002AA2                     __ptext5:
  1503                           	opt stack 0
  1504  002AA2                     _configurazione_iniziale:
  1505                           	opt stack 23
  1506                           
  1507                           ;CanToSerial.c: 245: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1508                           
  1509                           ; BSR set to: 0
  1510                           ;incstack = 0
  1511  002AA2  0E4F               	movlw	79
  1512  002AA4  16AB               	andwf	4011,f,c	;volatile
  1513  002AA6  9AAC               	bcf	4012,5,c	;volatile
  1514  002AA8  0ECF               	movlw	207
  1515  002AAA  169D               	andwf	3997,f,c	;volatile
  1516                           
  1517                           ;CanToSerial.c: 246: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFI
      +                          G_SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  1518  002AAC  0E06               	movlw	6
  1519  002AAE  0100               	movlb	0	; () banked
  1520  002AB0  6FB6               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1521  002AB2  0E05               	movlw	5
  1522  002AB4  0100               	movlb	0	; () banked
  1523  002AB6  6FB7               	movwf	CANInitialize@phaseSeg2& (0+255),b
  1524  002AB8  0E01               	movlw	1
  1525  002ABA  0100               	movlb	0	; () banked
  1526  002ABC  6FB8               	movwf	CANInitialize@SJW& (0+255),b
  1527  002ABE  0E03               	movlw	3
  1528  002AC0  0100               	movlb	0	; () banked
  1529  002AC2  6FB9               	movwf	CANInitialize@BRP& (0+255),b
  1530  002AC4  0E9D               	movlw	157
  1531  002AC6  0100               	movlb	0	; () banked
  1532  002AC8  6FBA               	movwf	CANInitialize@flags& (0+255),b
  1533  002ACA  0E04               	movlw	4
  1534  002ACC  ECC2  F012         	call	_CANInitialize
  1535                           
  1536                           ;CanToSerial.c: 248: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b111
      +                          11111 & 0b11111111, 103);
  1537  002AD0  0E00               	movlw	0
  1538  002AD2  0100               	movlb	0	; () banked
  1539  002AD4  6FA9               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1540  002AD6  0E67               	movlw	103
  1541  002AD8  6FA8               	movwf	OpenUSART@spbrg& (0+255),b
  1542  002ADA  0E7C               	movlw	124
  1543  002ADC  EC9F  F015         	call	_OpenUSART
  1544                           
  1545                           ;CanToSerial.c: 250: RCSTAbits.SPEN = 1;
  1546  002AE0  8EAB               	bsf	4011,7,c	;volatile
  1547                           
  1548                           ;CanToSerial.c: 253: RCONbits.IPEN = 1;
  1549  002AE2  8ED0               	bsf	4048,7,c	;volatile
  1550                           
  1551                           ;CanToSerial.c: 254: PIR3bits.RXB1IF = 0;
  1552  002AE4  92A4               	bcf	4004,1,c	;volatile
  1553                           
  1554                           ;CanToSerial.c: 255: PIR3bits.RXB0IF = 0;
  1555  002AE6  90A4               	bcf	4004,0,c	;volatile
  1556                           
  1557                           ;CanToSerial.c: 256: PIR1bits.RC1IF = 0;
  1558  002AE8  9A9E               	bcf	3998,5,c	;volatile
  1559                           
  1560                           ;CanToSerial.c: 258: IPR3bits.RXB1IP = 1;
  1561  002AEA  82A5               	bsf	4005,1,c	;volatile
  1562                           
  1563                           ;CanToSerial.c: 259: IPR3bits.RXB0IP = 1;
  1564  002AEC  80A5               	bsf	4005,0,c	;volatile
  1565                           
  1566                           ;CanToSerial.c: 260: IPR1bits.RC1IP = 0;
  1567  002AEE  9A9F               	bcf	3999,5,c	;volatile
  1568                           
  1569                           ;CanToSerial.c: 262: PIE3bits.RXB1IE = 1;
  1570  002AF0  82A3               	bsf	4003,1,c	;volatile
  1571                           
  1572                           ;CanToSerial.c: 263: PIE3bits.RXB0IE = 1;
  1573  002AF2  80A3               	bsf	4003,0,c	;volatile
  1574                           
  1575                           ;CanToSerial.c: 264: PIE1bits.RC1IE = 1;
  1576  002AF4  8A9D               	bsf	3997,5,c	;volatile
  1577                           
  1578                           ;CanToSerial.c: 266: LATA = 0x00;
  1579  002AF6  0E00               	movlw	0
  1580  002AF8  6E89               	movwf	3977,c	;volatile
  1581                           
  1582                           ;CanToSerial.c: 267: TRISA = 0b01111101;
  1583  002AFA  0E7D               	movlw	125
  1584  002AFC  6E92               	movwf	3986,c	;volatile
  1585                           
  1586                           ;CanToSerial.c: 269: LATB = 0x00;
  1587  002AFE  0E00               	movlw	0
  1588  002B00  6E8A               	movwf	3978,c	;volatile
  1589                           
  1590                           ;CanToSerial.c: 270: TRISB = 0b11111011;
  1591  002B02  0EFB               	movlw	251
  1592  002B04  6E93               	movwf	3987,c	;volatile
  1593                           
  1594                           ;CanToSerial.c: 272: LATC = 0x00;
  1595  002B06  0E00               	movlw	0
  1596  002B08  6E8B               	movwf	3979,c	;volatile
  1597                           
  1598                           ;CanToSerial.c: 273: TRISC = 0b10111111;
  1599  002B0A  0EBF               	movlw	191
  1600  002B0C  6E94               	movwf	3988,c	;volatile
  1601                           
  1602                           ;CanToSerial.c: 275: LATD = 0x00;
  1603  002B0E  0E00               	movlw	0
  1604  002B10  6E8C               	movwf	3980,c	;volatile
  1605                           
  1606                           ;CanToSerial.c: 276: TRISD = 0x00;
  1607  002B12  0E00               	movlw	0
  1608  002B14  6E95               	movwf	3989,c	;volatile
  1609                           
  1610                           ;CanToSerial.c: 278: LATE = 0x00;
  1611  002B16  0E00               	movlw	0
  1612  002B18  6E8D               	movwf	3981,c	;volatile
  1613                           
  1614                           ;CanToSerial.c: 279: TRISE = 0b00000100;
  1615  002B1A  0E04               	movlw	4
  1616  002B1C  6E96               	movwf	3990,c	;volatile
  1617                           
  1618                           ;CanToSerial.c: 281: ADCON1bits.PCFG0 = 1;
  1619  002B1E  80C1               	bsf	4033,0,c	;volatile
  1620                           
  1621                           ;CanToSerial.c: 282: ADCON1bits.PCFG1 = 1;
  1622  002B20  82C1               	bsf	4033,1,c	;volatile
  1623                           
  1624                           ;CanToSerial.c: 283: ADCON1bits.PCFG2 = 1;
  1625  002B22  84C1               	bsf	4033,2,c	;volatile
  1626                           
  1627                           ;CanToSerial.c: 284: ADCON1bits.PCFG3 = 1;
  1628  002B24  86C1               	bsf	4033,3,c	;volatile
  1629                           
  1630                           ;CanToSerial.c: 287: T3CON = 0x01;
  1631  002B26  0E01               	movlw	1
  1632  002B28  6EB1               	movwf	4017,c	;volatile
  1633                           
  1634                           ;CanToSerial.c: 288: PIR2bits.TMR3IF = 0;
  1635  002B2A  92A1               	bcf	4001,1,c	;volatile
  1636                           
  1637                           ;CanToSerial.c: 289: IPR2bits.TMR3IP = 0;
  1638  002B2C  92A2               	bcf	4002,1,c	;volatile
  1639                           
  1640                           ;CanToSerial.c: 291: TMR3H = 0x63;
  1641  002B2E  0E63               	movlw	99
  1642  002B30  6EB3               	movwf	4019,c	;volatile
  1643                           
  1644                           ;CanToSerial.c: 292: TMR3L = 0xC0;
  1645  002B32  0EC0               	movlw	192
  1646  002B34  6EB2               	movwf	4018,c	;volatile
  1647                           
  1648                           ;CanToSerial.c: 294: PIE2bits.TMR3IE = 1;
  1649  002B36  82A0               	bsf	4000,1,c	;volatile
  1650                           
  1651                           ;CanToSerial.c: 296: INTCONbits.GIEH = 1;
  1652  002B38  8EF2               	bsf	intcon,7,c	;volatile
  1653                           
  1654                           ;CanToSerial.c: 297: INTCONbits.GIEL = 1;
  1655  002B3A  8CF2               	bsf	intcon,6,c	;volatile
  1656  002B3C  0012               	return		;funcret
  1657  002B3E                     __end_of_configurazione_iniziale:
  1658                           	opt stack 0
  1659                           tblptru	equ	0xFF8
  1660                           tblptrh	equ	0xFF7
  1661                           tblptrl	equ	0xFF6
  1662                           tablat	equ	0xFF5
  1663                           prodh	equ	0xFF4
  1664                           prodl	equ	0xFF3
  1665                           intcon	equ	0xFF2
  1666                           postinc0	equ	0xFEE
  1667                           wreg	equ	0xFE8
  1668                           indf1	equ	0xFE7
  1669                           postinc1	equ	0xFE6
  1670                           postdec1	equ	0xFE5
  1671                           fsr1h	equ	0xFE2
  1672                           fsr1l	equ	0xFE1
  1673                           indf2	equ	0xFDF
  1674                           postinc2	equ	0xFDE
  1675                           fsr2h	equ	0xFDA
  1676                           fsr2l	equ	0xFD9
  1677                           status	equ	0xFD8
  1678                           
  1679 ;; *************** function _OpenUSART *****************
  1680 ;; Defined at:
  1681 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uopen.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;  config          1    wreg     unsigned char 
  1684 ;;  spbrg           2   20[BANK0 ] unsigned int 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  config          1   22[BANK0 ] unsigned char 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;		None               void
  1689 ;; Registers used:
  1690 ;;		wreg, status,2
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1696 ;;      Params:         0       2       0       0
  1697 ;;      Locals:         0       1       0       0
  1698 ;;      Temps:          0       0       0       0
  1699 ;;      Totals:         0       3       0       0
  1700 ;;Total ram usage:        3 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; Hardware stack levels required when called:    5
  1703 ;; This function calls:
  1704 ;;		Nothing
  1705 ;; This function is called by:
  1706 ;;		_configurazione_iniziale
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           	psect	text6
  1711  002B3E                     __ptext6:
  1712                           	opt stack 0
  1713  002B3E                     _OpenUSART:
  1714                           	opt stack 24
  1715                           
  1716                           ;incstack = 0
  1717                           ;OpenUSART@config stored from wreg
  1718  002B3E  0100               	movlb	0	; () banked
  1719  002B40  6FAA               	movwf	OpenUSART@config& (0+255),b
  1720  002B42  0E00               	movlw	0
  1721  002B44  6EAC               	movwf	4012,c	;volatile
  1722  002B46  0E00               	movlw	0
  1723  002B48  6EAB               	movwf	4011,c	;volatile
  1724  002B4A  0100               	movlb	0	; () banked
  1725  002B4C  B1AA               	btfsc	OpenUSART@config& (0+255),0,b
  1726                           
  1727                           ; BSR set to: 0
  1728  002B4E  88AC               	bsf	4012,4,c	;volatile
  1729                           
  1730                           ; BSR set to: 0
  1731                           
  1732                           ; BSR set to: 0
  1733  002B50  0100               	movlb	0	; () banked
  1734  002B52  A3AA               	btfss	OpenUSART@config& (0+255),1,b
  1735  002B54  D002               	goto	l3386
  1736                           
  1737                           ; BSR set to: 0
  1738  002B56  8CAC               	bsf	4012,6,c	;volatile
  1739  002B58  8CAB               	bsf	4011,6,c	;volatile
  1740  002B5A                     l3386:
  1741                           
  1742                           ; BSR set to: 0
  1743  002B5A  0100               	movlb	0	; () banked
  1744  002B5C  B5AA               	btfsc	OpenUSART@config& (0+255),2,b
  1745                           
  1746                           ; BSR set to: 0
  1747  002B5E  8EAC               	bsf	4012,7,c	;volatile
  1748                           
  1749                           ; BSR set to: 0
  1750                           
  1751                           ; BSR set to: 0
  1752  002B60  0100               	movlb	0	; () banked
  1753  002B62  A7AA               	btfss	OpenUSART@config& (0+255),3,b
  1754  002B64  D002               	goto	l719
  1755                           
  1756                           ; BSR set to: 0
  1757  002B66  88AB               	bsf	4011,4,c	;volatile
  1758  002B68  D001               	goto	l3394
  1759  002B6A                     l719:
  1760                           
  1761                           ; BSR set to: 0
  1762  002B6A  8AAB               	bsf	4011,5,c	;volatile
  1763  002B6C                     l3394:
  1764                           
  1765                           ; BSR set to: 0
  1766  002B6C  0100               	movlb	0	; () banked
  1767  002B6E  B9AA               	btfsc	OpenUSART@config& (0+255),4,b
  1768                           
  1769                           ; BSR set to: 0
  1770  002B70  84AC               	bsf	4012,2,c	;volatile
  1771                           
  1772                           ; BSR set to: 0
  1773  002B72  989E               	bcf	3998,4,c	;volatile
  1774                           
  1775                           ; BSR set to: 0
  1776  002B74  0100               	movlb	0	; () banked
  1777  002B76  BBAA               	btfsc	OpenUSART@config& (0+255),5,b
  1778                           
  1779                           ; BSR set to: 0
  1780  002B78  86AB               	bsf	4011,3,c	;volatile
  1781                           
  1782                           ; BSR set to: 0
  1783                           
  1784                           ; BSR set to: 0
  1785  002B7A  0100               	movlb	0	; () banked
  1786  002B7C  ADAA               	btfss	OpenUSART@config& (0+255),6,b
  1787  002B7E  D002               	goto	l723
  1788                           
  1789                           ; BSR set to: 0
  1790  002B80  8A9D               	bsf	3997,5,c	;volatile
  1791  002B82  D001               	goto	l724
  1792  002B84                     l723:
  1793                           
  1794                           ; BSR set to: 0
  1795  002B84  9A9D               	bcf	3997,5,c	;volatile
  1796  002B86                     l724:
  1797                           
  1798                           ; BSR set to: 0
  1799  002B86  9A9E               	bcf	3998,5,c	;volatile
  1800                           
  1801                           ; BSR set to: 0
  1802  002B88  0100               	movlb	0	; () banked
  1803  002B8A  AFAA               	btfss	OpenUSART@config& (0+255),7,b
  1804  002B8C  D002               	goto	l725
  1805                           
  1806                           ; BSR set to: 0
  1807  002B8E  889D               	bsf	3997,4,c	;volatile
  1808  002B90  D001               	goto	l726
  1809  002B92                     l725:
  1810                           
  1811                           ; BSR set to: 0
  1812  002B92  989D               	bcf	3997,4,c	;volatile
  1813  002B94                     l726:
  1814                           
  1815                           ; BSR set to: 0
  1816  002B94  C0A8  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  1817                           
  1818                           ; BSR set to: 0
  1819  002B98  0100               	movlb	0	; () banked
  1820  002B9A  51A9               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
  1821  002B9C  6EB0               	movwf	4016,c	;volatile
  1822                           
  1823                           ; BSR set to: 0
  1824  002B9E  8AAC               	bsf	4012,5,c	;volatile
  1825                           
  1826                           ; BSR set to: 0
  1827  002BA0  8EAB               	bsf	4011,7,c	;volatile
  1828                           
  1829                           ; BSR set to: 0
  1830  002BA2  9C94               	bcf	3988,6,c	;volatile
  1831                           
  1832                           ; BSR set to: 0
  1833  002BA4  8E94               	bsf	3988,7,c	;volatile
  1834                           
  1835                           ; BSR set to: 0
  1836  002BA6  A8AC               	btfss	4012,4,c	;volatile
  1837  002BA8  0012               	return	
  1838                           
  1839                           ; BSR set to: 0
  1840  002BAA  BEAC               	btfsc	4012,7,c	;volatile
  1841  002BAC  0012               	return	
  1842                           
  1843                           ; BSR set to: 0
  1844  002BAE  8C94               	bsf	3988,6,c	;volatile
  1845  002BB0  0012               	return	
  1846  002BB2                     __end_of_OpenUSART:
  1847                           	opt stack 0
  1848                           tblptru	equ	0xFF8
  1849                           tblptrh	equ	0xFF7
  1850                           tblptrl	equ	0xFF6
  1851                           tablat	equ	0xFF5
  1852                           prodh	equ	0xFF4
  1853                           prodl	equ	0xFF3
  1854                           intcon	equ	0xFF2
  1855                           postinc0	equ	0xFEE
  1856                           wreg	equ	0xFE8
  1857                           indf1	equ	0xFE7
  1858                           postinc1	equ	0xFE6
  1859                           postdec1	equ	0xFE5
  1860                           fsr1h	equ	0xFE2
  1861                           fsr1l	equ	0xFE1
  1862                           indf2	equ	0xFDF
  1863                           postinc2	equ	0xFDE
  1864                           fsr2h	equ	0xFDA
  1865                           fsr2l	equ	0xFD9
  1866                           status	equ	0xFD8
  1867                           
  1868 ;; *************** function _CANInitialize *****************
  1869 ;; Defined at:
  1870 ;;		line 219 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  propSeg         1    wreg     unsigned char 
  1873 ;;  phaseSeg1       1   34[BANK0 ] unsigned char 
  1874 ;;  phaseSeg2       1   35[BANK0 ] unsigned char 
  1875 ;;  SJW             1   36[BANK0 ] unsigned char 
  1876 ;;  BRP             1   37[BANK0 ] unsigned char 
  1877 ;;  flags           1   38[BANK0 ] enum E16844
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;  propSeg         1   43[BANK0 ] unsigned char 
  1880 ;;  FilterConfig    1   45[BANK0 ] unsigned char 
  1881 ;;  FilterConfig    1   44[BANK0 ] unsigned char 
  1882 ;; Return value:  Size  Location     Type
  1883 ;;		None               void
  1884 ;; Registers used:
  1885 ;;		wreg, status,2, status,0, cstack
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1891 ;;      Params:         0       5       0       0
  1892 ;;      Locals:         0       3       0       0
  1893 ;;      Temps:          0       4       0       0
  1894 ;;      Totals:         0      12       0       0
  1895 ;;Total ram usage:       12 bytes
  1896 ;; Hardware stack levels used:    1
  1897 ;; Hardware stack levels required when called:    6
  1898 ;; This function calls:
  1899 ;;		_CANOperationMode
  1900 ;;		_CANSetFilter
  1901 ;;		_CANSetMask
  1902 ;; This function is called by:
  1903 ;;		_configurazione_iniziale
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           	psect	text7
  1908  002584                     __ptext7:
  1909                           	opt stack 0
  1910  002584                     _CANInitialize:
  1911                           	opt stack 23
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;incstack = 0
  1915                           ;CANInitialize@propSeg stored from wreg
  1916  002584  0100               	movlb	0	; () banked
  1917  002586  6FBF               	movwf	CANInitialize@propSeg& (0+255),b
  1918                           
  1919                           ;inc\CANlib.h: 221: BYTE FilterConfig1;
  1920                           ;inc\CANlib.h: 222: BYTE FilterConfig2;
  1921                           ;inc\CANlib.h: 224: CANOperationMode(CAN_OP_MODE_CONFIG);
  1922  002588  0E80               	movlw	128
  1923  00258A  EC7D  F016         	call	_CANOperationMode
  1924                           
  1925                           ;inc\CANlib.h: 226: BRGCON1 = 0x00;
  1926  00258E  0E00               	movlw	0
  1927  002590  6E70               	movwf	3952,c	;volatile
  1928                           
  1929                           ;inc\CANlib.h: 227: BRGCON2 = 0x00;
  1930  002592  0E00               	movlw	0
  1931  002594  6E71               	movwf	3953,c	;volatile
  1932                           
  1933                           ;inc\CANlib.h: 228: BRGCON3 = 0x00;
  1934  002596  0E00               	movlw	0
  1935  002598  6E72               	movwf	3954,c	;volatile
  1936                           
  1937                           ;inc\CANlib.h: 230: SJW= SJW << 6;
  1938  00259A  0100               	movlb	0	; () banked
  1939  00259C  41B8               	rrncf	CANInitialize@SJW& (0+255),w,b
  1940  00259E  42E8               	rrncf	wreg,f,c
  1941  0025A0  0BC0               	andlw	192
  1942  0025A2  0100               	movlb	0	; () banked
  1943  0025A4  6FB8               	movwf	CANInitialize@SJW& (0+255),b
  1944                           
  1945                           ; BSR set to: 0
  1946                           ;inc\CANlib.h: 231: BRGCON1 |= SJW;
  1947  0025A6  0100               	movlb	0	; () banked
  1948  0025A8  51B8               	movf	CANInitialize@SJW& (0+255),w,b
  1949  0025AA  1270               	iorwf	3952,f,c	;volatile
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;inc\CANlib.h: 232: BRGCON1 |= BRP;
  1953  0025AC  0100               	movlb	0	; () banked
  1954  0025AE  51B9               	movf	CANInitialize@BRP& (0+255),w,b
  1955  0025B0  1270               	iorwf	3952,f,c	;volatile
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;inc\CANlib.h: 234: BRGCON2 |= propSeg;
  1959  0025B2  0100               	movlb	0	; () banked
  1960  0025B4  51BF               	movf	CANInitialize@propSeg& (0+255),w,b
  1961  0025B6  1271               	iorwf	3953,f,c	;volatile
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;inc\CANlib.h: 235: phaseSeg1 = phaseSeg1 <<3;
  1965  0025B8  0100               	movlb	0	; () banked
  1966  0025BA  39B6               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  1967  0025BC  42E8               	rrncf	wreg,f,c
  1968  0025BE  0BF8               	andlw	248
  1969  0025C0  0100               	movlb	0	; () banked
  1970  0025C2  6FB6               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;inc\CANlib.h: 236: BRGCON2 |= phaseSeg1;
  1974  0025C4  0100               	movlb	0	; () banked
  1975  0025C6  51B6               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  1976  0025C8  1271               	iorwf	3953,f,c	;volatile
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;inc\CANlib.h: 238: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  1980  0025CA  0100               	movlb	0	; () banked
  1981  0025CC  A5BA               	btfss	CANInitialize@flags& (0+255),2,b
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;inc\CANlib.h: 239: BRGCON2bits.SAM= 1;
  1985  0025CE  8C71               	bsf	3953,6,c	;volatile
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;inc\CANlib.h: 241: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  1989  0025D0  0100               	movlb	0	; () banked
  1990  0025D2  B1BA               	btfsc	CANInitialize@flags& (0+255),0,b
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;inc\CANlib.h: 242: BRGCON2bits.SEG2PHTS = 1;
  1994  0025D4  8E71               	bsf	3953,7,c	;volatile
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;inc\CANlib.h: 244: BRGCON3 |= phaseSeg2;
  1998                           
  1999                           ; BSR set to: 0
  2000  0025D6  0100               	movlb	0	; () banked
  2001  0025D8  51B7               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2002  0025DA  1272               	iorwf	3954,f,c	;volatile
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;inc\CANlib.h: 246: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2006  0025DC  0100               	movlb	0	; () banked
  2007  0025DE  B3BA               	btfsc	CANInitialize@flags& (0+255),1,b
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;inc\CANlib.h: 247: BRGCON3bits.WAKFIL = 1;
  2011  0025E0  8C72               	bsf	3954,6,c	;volatile
  2012                           
  2013                           ; BSR set to: 0
  2014                           ;inc\CANlib.h: 252: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2015                           
  2016                           ; BSR set to: 0
  2017  0025E2  0100               	movlb	0	; () banked
  2018  0025E4  51BA               	movf	CANInitialize@flags& (0+255),w,b
  2019  0025E6  0B60               	andlw	96
  2020  0025E8  6E60               	movwf	3936,c	;volatile
  2021                           
  2022                           ;inc\CANlib.h: 253: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  2023  0025EA  0100               	movlb	0	; () banked
  2024  0025EC  51BA               	movf	CANInitialize@flags& (0+255),w,b
  2025  0025EE  0B10               	andlw	16
  2026  0025F0  0AFF               	xorlw	255
  2027  0025F2  B4D8               	btfsc	status,2,c
  2028                           
  2029                           ; BSR set to: 0
  2030                           ;inc\CANlib.h: 254: RXB0CONbits.RXB0DBEN = 1;
  2031  0025F4  8460               	bsf	3936,2,c	;volatile
  2032                           
  2033                           ; BSR set to: 0
  2034                           ;inc\CANlib.h: 256: RXB1CON = RXB0CON;
  2035  0025F6  CF60 FF50          	movff	3936,3920	;volatile
  2036                           
  2037                           ; BSR set to: 0
  2038                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2039  0025FA  0E00               	movlw	0
  2040  0025FC  0100               	movlb	0	; () banked
  2041  0025FE  6FA8               	movwf	CANSetMask@mask& (0+255),b
  2042  002600  0E00               	movlw	0
  2043  002602  6FA9               	movwf	(CANSetMask@mask+1)& (0+255),b
  2044  002604  0E00               	movlw	0
  2045  002606  6FAA               	movwf	(CANSetMask@mask+2)& (0+255),b
  2046  002608  0E00               	movlw	0
  2047  00260A  6FAB               	movwf	(CANSetMask@mask+3)& (0+255),b
  2048  00260C  0EF7               	movlw	247
  2049  00260E  0100               	movlb	0	; () banked
  2050  002610  6FAC               	movwf	CANSetMask@type& (0+255),b
  2051  002612  0E01               	movlw	1
  2052  002614  ECE2  F00F         	call	_CANSetMask
  2053                           
  2054                           ;inc\CANlib.h: 261: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2055  002618  0E00               	movlw	0
  2056  00261A  0100               	movlb	0	; () banked
  2057  00261C  6FA8               	movwf	CANSetMask@mask& (0+255),b
  2058  00261E  0E00               	movlw	0
  2059  002620  6FA9               	movwf	(CANSetMask@mask+1)& (0+255),b
  2060  002622  0E00               	movlw	0
  2061  002624  6FAA               	movwf	(CANSetMask@mask+2)& (0+255),b
  2062  002626  0E00               	movlw	0
  2063  002628  6FAB               	movwf	(CANSetMask@mask+3)& (0+255),b
  2064  00262A  0EF7               	movlw	247
  2065  00262C  0100               	movlb	0	; () banked
  2066  00262E  6FAC               	movwf	CANSetMask@type& (0+255),b
  2067  002630  0E02               	movlw	2
  2068  002632  ECE2  F00F         	call	_CANSetMask
  2069                           
  2070                           ;inc\CANlib.h: 264: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2071  002636  D00F               	goto	l3368
  2072  002638                     l3362:
  2073                           
  2074                           ;inc\CANlib.h: 267: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2075  002638  0EF7               	movlw	247
  2076  00263A  0100               	movlb	0	; () banked
  2077  00263C  6FC0               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2078  00263E  D007               	goto	l3364
  2079  002640                     l360:
  2080                           
  2081                           ; BSR set to: 0
  2082                           ;inc\CANlib.h: 272: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2083  002640  0100               	movlb	0	; () banked
  2084  002642  69C0               	setf	CANInitialize@FilterConfig1& (0+255),b
  2085                           
  2086                           ;inc\CANlib.h: 273: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2087  002644  0100               	movlb	0	; () banked
  2088  002646  69C1               	setf	CANInitialize@FilterConfig2& (0+255),b
  2089                           
  2090                           ;inc\CANlib.h: 274: break;
  2091  002648  D028               	goto	l3370
  2092  00264A                     l361:
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;inc\CANlib.h: 276: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2096  00264A  0100               	movlb	0	; () banked
  2097  00264C  69C0               	setf	CANInitialize@FilterConfig1& (0+255),b
  2098  00264E                     l3364:
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;inc\CANlib.h: 277: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2102  00264E  0EF7               	movlw	247
  2103  002650  0100               	movlb	0	; () banked
  2104  002652  6FC1               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2105                           
  2106                           ; BSR set to: 0
  2107                           ;inc\CANlib.h: 279: }
  2108                           
  2109                           ;inc\CANlib.h: 278: break;
  2110  002654  D022               	goto	l3370
  2111  002656                     l3368:
  2112  002656  0E9F               	movlw	159
  2113  002658  0100               	movlb	0	; () banked
  2114  00265A  6FBB               	movwf	??_CANInitialize& (0+255),b
  2115  00265C  0EFF               	movlw	255
  2116  00265E  0100               	movlb	0	; () banked
  2117  002660  6FBC               	movwf	(??_CANInitialize+1)& (0+255),b
  2118  002662  0100               	movlb	0	; () banked
  2119  002664  51BA               	movf	CANInitialize@flags& (0+255),w,b
  2120  002666  0B60               	andlw	96
  2121  002668  0100               	movlb	0	; () banked
  2122  00266A  6FBD               	movwf	(??_CANInitialize+2)& (0+255),b
  2123  00266C  6BBE               	clrf	(??_CANInitialize+3)& (0+255),b
  2124  00266E  0100               	movlb	0	; () banked
  2125  002670  51BB               	movf	??_CANInitialize& (0+255),w,b
  2126  002672  0100               	movlb	0	; () banked
  2127  002674  13BD               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2128  002676  0100               	movlb	0	; () banked
  2129  002678  51BC               	movf	(??_CANInitialize+1)& (0+255),w,b
  2130  00267A  0100               	movlb	0	; () banked
  2131  00267C  13BE               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2132                           
  2133                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2134                           ; Switch size 1, requested type "space"
  2135                           ; Number of cases is 1, Range of values is 0 to 0
  2136                           ; switch strategies available:
  2137                           ; Name         Instructions Cycles
  2138                           ; simple_byte            4     3 (average)
  2139                           ;	Chosen strategy is simple_byte
  2140  00267E  0100               	movlb	0	; () banked
  2141  002680  51BE               	movf	(??_CANInitialize+3)& (0+255),w,b
  2142  002682  0A00               	xorlw	0	; case 0
  2143  002684  A4D8               	btfss	status,2,c
  2144  002686  D7E1               	goto	l361
  2145                           
  2146                           ; BSR set to: 0
  2147                           ; Switch size 1, requested type "space"
  2148                           ; Number of cases is 2, Range of values is 191 to 223
  2149                           ; switch strategies available:
  2150                           ; Name         Instructions Cycles
  2151                           ; simple_byte            7     4 (average)
  2152                           ;	Chosen strategy is simple_byte
  2153  002688  0100               	movlb	0	; () banked
  2154  00268A  51BD               	movf	(??_CANInitialize+2)& (0+255),w,b
  2155  00268C  0ABF               	xorlw	191	; case 191
  2156  00268E  B4D8               	btfsc	status,2,c
  2157  002690  D7D7               	goto	l360
  2158  002692  0A60               	xorlw	96	; case 223
  2159  002694  B4D8               	btfsc	status,2,c
  2160  002696  D7D0               	goto	l3362
  2161  002698  D7D8               	goto	l361
  2162  00269A                     l3370:
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2166  00269A  0E00               	movlw	0
  2167  00269C  0100               	movlb	0	; () banked
  2168  00269E  6FA8               	movwf	CANSetFilter@filter& (0+255),b
  2169  0026A0  0E00               	movlw	0
  2170  0026A2  6FA9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2171  0026A4  0E00               	movlw	0
  2172  0026A6  6FAA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2173  0026A8  0E00               	movlw	0
  2174  0026AA  6FAB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2175  0026AC  C0C0  F0AC         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2176  0026B0  0E00               	movlw	0
  2177  0026B2  ECA4  F000         	call	_CANSetFilter
  2178                           
  2179                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2180  0026B6  0E00               	movlw	0
  2181  0026B8  0100               	movlb	0	; () banked
  2182  0026BA  6FA8               	movwf	CANSetFilter@filter& (0+255),b
  2183  0026BC  0E00               	movlw	0
  2184  0026BE  6FA9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2185  0026C0  0E00               	movlw	0
  2186  0026C2  6FAA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2187  0026C4  0E00               	movlw	0
  2188  0026C6  6FAB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2189  0026C8  C0C0  F0AC         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2190  0026CC  0E01               	movlw	1
  2191  0026CE  ECA4  F000         	call	_CANSetFilter
  2192                           
  2193                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2194  0026D2  0E00               	movlw	0
  2195  0026D4  0100               	movlb	0	; () banked
  2196  0026D6  6FA8               	movwf	CANSetFilter@filter& (0+255),b
  2197  0026D8  0E00               	movlw	0
  2198  0026DA  6FA9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2199  0026DC  0E00               	movlw	0
  2200  0026DE  6FAA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2201  0026E0  0E00               	movlw	0
  2202  0026E2  6FAB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2203  0026E4  C0C1  F0AC         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2204  0026E8  0E02               	movlw	2
  2205  0026EA  ECA4  F000         	call	_CANSetFilter
  2206                           
  2207                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2208  0026EE  0E00               	movlw	0
  2209  0026F0  0100               	movlb	0	; () banked
  2210  0026F2  6FA8               	movwf	CANSetFilter@filter& (0+255),b
  2211  0026F4  0E00               	movlw	0
  2212  0026F6  6FA9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2213  0026F8  0E00               	movlw	0
  2214  0026FA  6FAA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2215  0026FC  0E00               	movlw	0
  2216  0026FE  6FAB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2217  002700  C0C1  F0AC         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2218  002704  0E03               	movlw	3
  2219  002706  ECA4  F000         	call	_CANSetFilter
  2220                           
  2221                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  2222  00270A  0E00               	movlw	0
  2223  00270C  0100               	movlb	0	; () banked
  2224  00270E  6FA8               	movwf	CANSetFilter@filter& (0+255),b
  2225  002710  0E00               	movlw	0
  2226  002712  6FA9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2227  002714  0E00               	movlw	0
  2228  002716  6FAA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2229  002718  0E00               	movlw	0
  2230  00271A  6FAB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2231  00271C  C0C1  F0AC         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2232  002720  0E04               	movlw	4
  2233  002722  ECA4  F000         	call	_CANSetFilter
  2234                           
  2235                           ;inc\CANlib.h: 286: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  2236  002726  0E00               	movlw	0
  2237  002728  0100               	movlb	0	; () banked
  2238  00272A  6FA8               	movwf	CANSetFilter@filter& (0+255),b
  2239  00272C  0E00               	movlw	0
  2240  00272E  6FA9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2241  002730  0E00               	movlw	0
  2242  002732  6FAA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2243  002734  0E00               	movlw	0
  2244  002736  6FAB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2245  002738  C0C1  F0AC         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2246  00273C  0E05               	movlw	5
  2247  00273E  ECA4  F000         	call	_CANSetFilter
  2248                           
  2249                           ;inc\CANlib.h: 288: CANOperationMode(CAN_OP_MODE_NORMAL);
  2250  002742  0E00               	movlw	0
  2251  002744  EC7D  F016         	call	_CANOperationMode
  2252  002748  0012               	return		;funcret
  2253  00274A                     __end_of_CANInitialize:
  2254                           	opt stack 0
  2255                           tblptru	equ	0xFF8
  2256                           tblptrh	equ	0xFF7
  2257                           tblptrl	equ	0xFF6
  2258                           tablat	equ	0xFF5
  2259                           prodh	equ	0xFF4
  2260                           prodl	equ	0xFF3
  2261                           intcon	equ	0xFF2
  2262                           postinc0	equ	0xFEE
  2263                           wreg	equ	0xFE8
  2264                           indf1	equ	0xFE7
  2265                           postinc1	equ	0xFE6
  2266                           postdec1	equ	0xFE5
  2267                           fsr1h	equ	0xFE2
  2268                           fsr1l	equ	0xFE1
  2269                           indf2	equ	0xFDF
  2270                           postinc2	equ	0xFDE
  2271                           fsr2h	equ	0xFDA
  2272                           fsr2l	equ	0xFD9
  2273                           status	equ	0xFD8
  2274                           
  2275 ;; *************** function _CANSetMask *****************
  2276 ;; Defined at:
  2277 ;;		line 641 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  numBuffer       1    wreg     enum E16878
  2280 ;;  mask            4   20[BANK0 ] unsigned long 
  2281 ;;  type            1   24[BANK0 ] enum E16844
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;  numBuffer       1   29[BANK0 ] enum E16878
  2284 ;;  tamp            4   30[BANK0 ] unsigned long 
  2285 ;; Return value:  Size  Location     Type
  2286 ;;		None               void
  2287 ;; Registers used:
  2288 ;;		wreg, status,2, status,0
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2294 ;;      Params:         0       5       0       0
  2295 ;;      Locals:         0       5       0       0
  2296 ;;      Temps:          0       4       0       0
  2297 ;;      Totals:         0      14       0       0
  2298 ;;Total ram usage:       14 bytes
  2299 ;; Hardware stack levels used:    1
  2300 ;; Hardware stack levels required when called:    5
  2301 ;; This function calls:
  2302 ;;		Nothing
  2303 ;; This function is called by:
  2304 ;;		_CANInitialize
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           	psect	text8
  2309  001FC4                     __ptext8:
  2310                           	opt stack 0
  2311  001FC4                     _CANSetMask:
  2312                           	opt stack 23
  2313                           
  2314                           ;incstack = 0
  2315                           ;CANSetMask@numBuffer stored from wreg
  2316  001FC4  0100               	movlb	0	; () banked
  2317  001FC6  6FB1               	movwf	CANSetMask@numBuffer& (0+255),b
  2318                           
  2319                           ;inc\CANlib.h: 644: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  2320  001FC8  0100               	movlb	0	; () banked
  2321  001FCA  05B1               	decf	CANSetMask@numBuffer& (0+255),w,b
  2322  001FCC  A4D8               	btfss	status,2,c
  2323  001FCE  D056               	goto	l2932
  2324                           
  2325                           ; BSR set to: 0
  2326  001FD0  0100               	movlb	0	; () banked
  2327  001FD2  29AC               	incf	CANSetMask@type& (0+255),w,b
  2328  001FD4  A4D8               	btfss	status,2,c
  2329  001FD6  D052               	goto	l2932
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;inc\CANlib.h: 645: {
  2333                           ;inc\CANlib.h: 646: tamp = (mask >> 3);
  2334  001FD8  C0A8  F0AD         	movff	CANSetMask@mask,??_CANSetMask
  2335  001FDC  C0A9  F0AE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2336  001FE0  C0AA  F0AF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2337  001FE4  C0AB  F0B0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2338  001FE8  0E04               	movlw	4
  2339  001FEA  D006               	goto	u2850
  2340  001FEC                     u2855:
  2341  001FEC  0100               	movlb	0	; () banked
  2342  001FEE  90D8               	bcf	status,0,c
  2343  001FF0  33B0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2344  001FF2  33AF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2345  001FF4  33AE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2346  001FF6  33AD               	rrcf	??_CANSetMask& (0+255),f,b
  2347  001FF8                     u2850:
  2348  001FF8  2EE8               	decfsz	wreg,f,c
  2349  001FFA  D7F8               	goto	u2855
  2350  001FFC  C0AD  F0B2         	movff	??_CANSetMask,CANSetMask@tamp
  2351  002000  C0AE  F0B3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2352  002004  C0AF  F0B4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2353  002008  C0B0  F0B5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2354                           
  2355                           ; BSR set to: 0
  2356                           ;inc\CANlib.h: 647: tamp = tamp & 0x000000FF;
  2357  00200C  0100               	movlb	0	; () banked
  2358  00200E  51B2               	movf	CANSetMask@tamp& (0+255),w,b
  2359  002010  0100               	movlb	0	; () banked
  2360  002012  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2361  002014  6BB3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2362  002016  6BB4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2363  002018  6BB5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2364                           
  2365                           ; BSR set to: 0
  2366                           ;inc\CANlib.h: 648: RXM0SIDH = (unsigned char) tamp;
  2367  00201A  C0B2  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;inc\CANlib.h: 650: tamp = mask & 0x00000007;
  2371  00201E  0E07               	movlw	7
  2372  002020  0100               	movlb	0	; () banked
  2373  002022  15A8               	andwf	CANSetMask@mask& (0+255),w,b
  2374  002024  0100               	movlb	0	; () banked
  2375  002026  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2376  002028  0E00               	movlw	0
  2377  00202A  0100               	movlb	0	; () banked
  2378  00202C  15A9               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2379  00202E  0100               	movlb	0	; () banked
  2380  002030  6FB3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2381  002032  0E00               	movlw	0
  2382  002034  0100               	movlb	0	; () banked
  2383  002036  15AA               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2384  002038  0100               	movlb	0	; () banked
  2385  00203A  6FB4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2386  00203C  0E00               	movlw	0
  2387  00203E  0100               	movlb	0	; () banked
  2388  002040  15AB               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2389  002042  0100               	movlb	0	; () banked
  2390  002044  6FB5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2391                           
  2392                           ; BSR set to: 0
  2393                           ;inc\CANlib.h: 651: tamp = tamp << 5;
  2394  002046  C0B2  F0AD         	movff	CANSetMask@tamp,??_CANSetMask
  2395  00204A  C0B3  F0AE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2396  00204E  C0B4  F0AF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2397  002052  C0B5  F0B0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2398  002056  0E05               	movlw	5
  2399  002058                     u2865:
  2400  002058  90D8               	bcf	status,0,c
  2401  00205A  0100               	movlb	0	; () banked
  2402  00205C  37AD               	rlcf	??_CANSetMask& (0+255),f,b
  2403  00205E  37AE               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2404  002060  37AF               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2405  002062  37B0               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2406  002064  2EE8               	decfsz	wreg,f,c
  2407  002066  D7F8               	goto	u2865
  2408  002068  C0AD  F0B2         	movff	??_CANSetMask,CANSetMask@tamp
  2409  00206C  C0AE  F0B3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2410  002070  C0AF  F0B4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2411  002074  C0B0  F0B5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;inc\CANlib.h: 652: RXM0SIDL = (unsigned char) tamp;
  2415  002078  C0B2  FF19         	movff	CANSetMask@tamp,3865	;volatile
  2416  00207C                     l2932:
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;inc\CANlib.h: 653: }
  2420                           ;inc\CANlib.h: 655: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  2421  00207C  0E02               	movlw	2
  2422  00207E  0100               	movlb	0	; () banked
  2423  002080  19B1               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2424  002082  A4D8               	btfss	status,2,c
  2425  002084  D056               	goto	l2948
  2426                           
  2427                           ; BSR set to: 0
  2428  002086  0100               	movlb	0	; () banked
  2429  002088  29AC               	incf	CANSetMask@type& (0+255),w,b
  2430  00208A  A4D8               	btfss	status,2,c
  2431  00208C  D052               	goto	l2948
  2432                           
  2433                           ; BSR set to: 0
  2434                           ;inc\CANlib.h: 656: {
  2435                           ;inc\CANlib.h: 657: tamp = (mask >> 3);
  2436  00208E  C0A8  F0AD         	movff	CANSetMask@mask,??_CANSetMask
  2437  002092  C0A9  F0AE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2438  002096  C0AA  F0AF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2439  00209A  C0AB  F0B0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2440  00209E  0E04               	movlw	4
  2441  0020A0  D006               	goto	u2890
  2442  0020A2                     u2895:
  2443  0020A2  0100               	movlb	0	; () banked
  2444  0020A4  90D8               	bcf	status,0,c
  2445  0020A6  33B0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2446  0020A8  33AF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2447  0020AA  33AE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2448  0020AC  33AD               	rrcf	??_CANSetMask& (0+255),f,b
  2449  0020AE                     u2890:
  2450  0020AE  2EE8               	decfsz	wreg,f,c
  2451  0020B0  D7F8               	goto	u2895
  2452  0020B2  C0AD  F0B2         	movff	??_CANSetMask,CANSetMask@tamp
  2453  0020B6  C0AE  F0B3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2454  0020BA  C0AF  F0B4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2455  0020BE  C0B0  F0B5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2456                           
  2457                           ; BSR set to: 0
  2458                           ;inc\CANlib.h: 658: tamp = tamp & 0x000000FF;
  2459  0020C2  0100               	movlb	0	; () banked
  2460  0020C4  51B2               	movf	CANSetMask@tamp& (0+255),w,b
  2461  0020C6  0100               	movlb	0	; () banked
  2462  0020C8  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2463  0020CA  6BB3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2464  0020CC  6BB4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2465  0020CE  6BB5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;inc\CANlib.h: 659: RXM1SIDH = (unsigned char) tamp;
  2469  0020D0  C0B2  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2470                           
  2471                           ; BSR set to: 0
  2472                           ;inc\CANlib.h: 661: tamp = mask & 0x00000007;
  2473  0020D4  0E07               	movlw	7
  2474  0020D6  0100               	movlb	0	; () banked
  2475  0020D8  15A8               	andwf	CANSetMask@mask& (0+255),w,b
  2476  0020DA  0100               	movlb	0	; () banked
  2477  0020DC  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2478  0020DE  0E00               	movlw	0
  2479  0020E0  0100               	movlb	0	; () banked
  2480  0020E2  15A9               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2481  0020E4  0100               	movlb	0	; () banked
  2482  0020E6  6FB3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2483  0020E8  0E00               	movlw	0
  2484  0020EA  0100               	movlb	0	; () banked
  2485  0020EC  15AA               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2486  0020EE  0100               	movlb	0	; () banked
  2487  0020F0  6FB4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2488  0020F2  0E00               	movlw	0
  2489  0020F4  0100               	movlb	0	; () banked
  2490  0020F6  15AB               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2491  0020F8  0100               	movlb	0	; () banked
  2492  0020FA  6FB5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2493                           
  2494                           ; BSR set to: 0
  2495                           ;inc\CANlib.h: 662: tamp = tamp << 5;
  2496  0020FC  C0B2  F0AD         	movff	CANSetMask@tamp,??_CANSetMask
  2497  002100  C0B3  F0AE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2498  002104  C0B4  F0AF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2499  002108  C0B5  F0B0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2500  00210C  0E05               	movlw	5
  2501  00210E                     u2905:
  2502  00210E  90D8               	bcf	status,0,c
  2503  002110  0100               	movlb	0	; () banked
  2504  002112  37AD               	rlcf	??_CANSetMask& (0+255),f,b
  2505  002114  37AE               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2506  002116  37AF               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2507  002118  37B0               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2508  00211A  2EE8               	decfsz	wreg,f,c
  2509  00211C  D7F8               	goto	u2905
  2510  00211E  C0AD  F0B2         	movff	??_CANSetMask,CANSetMask@tamp
  2511  002122  C0AE  F0B3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2512  002126  C0AF  F0B4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2513  00212A  C0B0  F0B5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2514                           
  2515                           ; BSR set to: 0
  2516                           ;inc\CANlib.h: 663: RXM1SIDL = (unsigned char) tamp;
  2517  00212E  C0B2  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  2518  002132                     l2948:
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;inc\CANlib.h: 664: }
  2522                           ;inc\CANlib.h: 666: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  2523  002132  0100               	movlb	0	; () banked
  2524  002134  05B1               	decf	CANSetMask@numBuffer& (0+255),w,b
  2525  002136  A4D8               	btfss	status,2,c
  2526  002138  D087               	goto	l2980
  2527                           
  2528                           ; BSR set to: 0
  2529  00213A  0EF7               	movlw	247
  2530  00213C  0100               	movlb	0	; () banked
  2531  00213E  19AC               	xorwf	CANSetMask@type& (0+255),w,b
  2532  002140  A4D8               	btfss	status,2,c
  2533  002142  D082               	goto	l2980
  2534                           
  2535                           ; BSR set to: 0
  2536                           ;inc\CANlib.h: 667: {
  2537                           ;inc\CANlib.h: 668: tamp = mask & 0x000000FF;
  2538  002144  0100               	movlb	0	; () banked
  2539  002146  51A8               	movf	CANSetMask@mask& (0+255),w,b
  2540  002148  0100               	movlb	0	; () banked
  2541  00214A  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2542  00214C  6BB3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2543  00214E  6BB4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2544  002150  6BB5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2545                           
  2546                           ; BSR set to: 0
  2547                           ;inc\CANlib.h: 669: RXM0EIDL = (unsigned char) tamp;
  2548  002152  C0B2  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  2549                           
  2550                           ; BSR set to: 0
  2551                           ;inc\CANlib.h: 671: tamp = mask & 0x0000FF00;
  2552  002156  0E00               	movlw	0
  2553  002158  0100               	movlb	0	; () banked
  2554  00215A  15A8               	andwf	CANSetMask@mask& (0+255),w,b
  2555  00215C  0100               	movlb	0	; () banked
  2556  00215E  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2557  002160  0EFF               	movlw	255
  2558  002162  0100               	movlb	0	; () banked
  2559  002164  15A9               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2560  002166  0100               	movlb	0	; () banked
  2561  002168  6FB3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2562  00216A  0E00               	movlw	0
  2563  00216C  0100               	movlb	0	; () banked
  2564  00216E  15AA               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2565  002170  0100               	movlb	0	; () banked
  2566  002172  6FB4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2567  002174  0E00               	movlw	0
  2568  002176  0100               	movlb	0	; () banked
  2569  002178  15AB               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2570  00217A  0100               	movlb	0	; () banked
  2571  00217C  6FB5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;inc\CANlib.h: 672: tamp = tamp >> 8;
  2575  00217E  C0B2  F0AD         	movff	CANSetMask@tamp,??_CANSetMask
  2576  002182  C0B3  F0AE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2577  002186  C0B4  F0AF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2578  00218A  C0B5  F0B0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2579  00218E  C0AE  F0AD         	movff	??_CANSetMask+1,??_CANSetMask
  2580  002192  C0AF  F0AE         	movff	??_CANSetMask+2,??_CANSetMask+1
  2581  002196  C0B0  F0AF         	movff	??_CANSetMask+3,??_CANSetMask+2
  2582  00219A  0100               	movlb	0	; () banked
  2583  00219C  6BB0               	clrf	(??_CANSetMask+3)& (0+255),b
  2584  00219E  C0AD  F0B2         	movff	??_CANSetMask,CANSetMask@tamp
  2585  0021A2  C0AE  F0B3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2586  0021A6  C0AF  F0B4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2587  0021AA  C0B0  F0B5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;inc\CANlib.h: 673: RXM0EIDH = (unsigned char) tamp;
  2591  0021AE  C0B2  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;inc\CANlib.h: 675: if (mask & 0x00010000)
  2595  0021B2  0100               	movlb	0	; () banked
  2596  0021B4  A1AA               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  2597  0021B6  D003               	goto	l434
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;inc\CANlib.h: 676: RXM0SIDLbits.EID16 = 0x01;
  2601  0021B8  010F               	movlb	15	; () banked
  2602  0021BA  8119               	bsf	25,0,b	;volatile
  2603  0021BC  D002               	goto	l435
  2604  0021BE                     l434:
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;inc\CANlib.h: 677: else
  2608                           ;inc\CANlib.h: 678: RXM0SIDLbits.EID16 = 0x00;
  2609  0021BE  010F               	movlb	15	; () banked
  2610  0021C0  9119               	bcf	25,0,b	;volatile
  2611  0021C2                     l435:
  2612                           
  2613                           ; BSR set to: 15
  2614                           ;inc\CANlib.h: 680: if (mask & 0x00020000)
  2615  0021C2  0100               	movlb	0	; () banked
  2616  0021C4  A3AA               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  2617  0021C6  D003               	goto	l436
  2618                           
  2619                           ; BSR set to: 0
  2620                           ;inc\CANlib.h: 681: RXM0SIDLbits.EID17 = 0x01;
  2621  0021C8  010F               	movlb	15	; () banked
  2622  0021CA  8319               	bsf	25,1,b	;volatile
  2623  0021CC  D002               	goto	l437
  2624  0021CE                     l436:
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;inc\CANlib.h: 682: else
  2628                           ;inc\CANlib.h: 683: RXM0SIDLbits.EID17 = 0x00;
  2629  0021CE  010F               	movlb	15	; () banked
  2630  0021D0  9319               	bcf	25,1,b	;volatile
  2631  0021D2                     l437:
  2632                           
  2633                           ; BSR set to: 15
  2634                           ;inc\CANlib.h: 685: if (mask & 0x00040000)
  2635  0021D2  0100               	movlb	0	; () banked
  2636  0021D4  A5AA               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  2637  0021D6  D003               	goto	l438
  2638                           
  2639                           ; BSR set to: 0
  2640                           ;inc\CANlib.h: 686: RXM0SIDLbits.SID0 = 0x01;
  2641  0021D8  010F               	movlb	15	; () banked
  2642  0021DA  8B19               	bsf	25,5,b	;volatile
  2643  0021DC  D002               	goto	l439
  2644  0021DE                     l438:
  2645                           
  2646                           ; BSR set to: 0
  2647                           ;inc\CANlib.h: 687: else
  2648                           ;inc\CANlib.h: 688: RXM0SIDLbits.SID0 = 0x00;
  2649  0021DE  010F               	movlb	15	; () banked
  2650  0021E0  9B19               	bcf	25,5,b	;volatile
  2651  0021E2                     l439:
  2652                           
  2653                           ; BSR set to: 15
  2654                           ;inc\CANlib.h: 690: if (mask & 0x00080000)
  2655  0021E2  0100               	movlb	0	; () banked
  2656  0021E4  A7AA               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  2657  0021E6  D003               	goto	l440
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;inc\CANlib.h: 691: RXM0SIDLbits.SID1 = 0x01;
  2661  0021E8  010F               	movlb	15	; () banked
  2662  0021EA  8D19               	bsf	25,6,b	;volatile
  2663  0021EC  D002               	goto	l441
  2664  0021EE                     l440:
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;inc\CANlib.h: 692: else
  2668                           ;inc\CANlib.h: 693: RXM0SIDLbits.SID1 = 0x00;
  2669  0021EE  010F               	movlb	15	; () banked
  2670  0021F0  9D19               	bcf	25,6,b	;volatile
  2671  0021F2                     l441:
  2672                           
  2673                           ; BSR set to: 15
  2674                           ;inc\CANlib.h: 695: if (mask & 0x00100000)
  2675  0021F2  0100               	movlb	0	; () banked
  2676  0021F4  A9AA               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  2677  0021F6  D003               	goto	l442
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;inc\CANlib.h: 696: RXM0SIDLbits.SID2 = 0x01 ;
  2681  0021F8  010F               	movlb	15	; () banked
  2682  0021FA  8F19               	bsf	25,7,b	;volatile
  2683  0021FC  D002               	goto	l2974
  2684  0021FE                     l442:
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;inc\CANlib.h: 697: else
  2688                           ;inc\CANlib.h: 698: RXM0SIDLbits.SID2 = 0x00 ;
  2689  0021FE  010F               	movlb	15	; () banked
  2690  002200  9F19               	bcf	25,7,b	;volatile
  2691  002202                     l2974:
  2692                           
  2693                           ; BSR set to: 15
  2694                           ;inc\CANlib.h: 700: tamp = (mask >> 21);
  2695  002202  C0A8  F0AD         	movff	CANSetMask@mask,??_CANSetMask
  2696  002206  C0A9  F0AE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2697  00220A  C0AA  F0AF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2698  00220E  C0AB  F0B0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2699  002212  0E16               	movlw	22
  2700  002214  D006               	goto	u2980
  2701  002216                     u2985:
  2702  002216  0100               	movlb	0	; () banked
  2703  002218  90D8               	bcf	status,0,c
  2704  00221A  33B0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2705  00221C  33AF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2706  00221E  33AE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2707  002220  33AD               	rrcf	??_CANSetMask& (0+255),f,b
  2708  002222                     u2980:
  2709  002222  2EE8               	decfsz	wreg,f,c
  2710  002224  D7F8               	goto	u2985
  2711  002226  C0AD  F0B2         	movff	??_CANSetMask,CANSetMask@tamp
  2712  00222A  C0AE  F0B3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2713  00222E  C0AF  F0B4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2714  002232  C0B0  F0B5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;inc\CANlib.h: 701: tamp = tamp & 0x000000FF;
  2718  002236  0100               	movlb	0	; () banked
  2719  002238  51B2               	movf	CANSetMask@tamp& (0+255),w,b
  2720  00223A  0100               	movlb	0	; () banked
  2721  00223C  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2722  00223E  6BB3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2723  002240  6BB4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2724  002242  6BB5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2725                           
  2726                           ; BSR set to: 0
  2727                           ;inc\CANlib.h: 702: RXM0SIDH = (unsigned char) tamp;
  2728  002244  C0B2  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2729  002248                     l2980:
  2730                           
  2731                           ; BSR set to: 0
  2732                           ;inc\CANlib.h: 703: }
  2733                           ;inc\CANlib.h: 705: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  2734  002248  0E02               	movlw	2
  2735  00224A  0100               	movlb	0	; () banked
  2736  00224C  19B1               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2737  00224E  A4D8               	btfss	status,2,c
  2738  002250  0012               	return	
  2739                           
  2740                           ; BSR set to: 0
  2741  002252  0EF7               	movlw	247
  2742  002254  0100               	movlb	0	; () banked
  2743  002256  19AC               	xorwf	CANSetMask@type& (0+255),w,b
  2744  002258  A4D8               	btfss	status,2,c
  2745  00225A  0012               	return	
  2746                           
  2747                           ; BSR set to: 0
  2748                           ;inc\CANlib.h: 706: {
  2749                           ;inc\CANlib.h: 707: tamp = mask & 0x000000FF;
  2750  00225C  0100               	movlb	0	; () banked
  2751  00225E  51A8               	movf	CANSetMask@mask& (0+255),w,b
  2752  002260  0100               	movlb	0	; () banked
  2753  002262  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2754  002264  6BB3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2755  002266  6BB4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2756  002268  6BB5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;inc\CANlib.h: 708: RXM1EIDL = (unsigned char) tamp;
  2760  00226A  C0B2  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;inc\CANlib.h: 710: tamp = mask & 0x0000FF00;
  2764  00226E  0E00               	movlw	0
  2765  002270  0100               	movlb	0	; () banked
  2766  002272  15A8               	andwf	CANSetMask@mask& (0+255),w,b
  2767  002274  0100               	movlb	0	; () banked
  2768  002276  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2769  002278  0EFF               	movlw	255
  2770  00227A  0100               	movlb	0	; () banked
  2771  00227C  15A9               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2772  00227E  0100               	movlb	0	; () banked
  2773  002280  6FB3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2774  002282  0E00               	movlw	0
  2775  002284  0100               	movlb	0	; () banked
  2776  002286  15AA               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2777  002288  0100               	movlb	0	; () banked
  2778  00228A  6FB4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2779  00228C  0E00               	movlw	0
  2780  00228E  0100               	movlb	0	; () banked
  2781  002290  15AB               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2782  002292  0100               	movlb	0	; () banked
  2783  002294  6FB5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;inc\CANlib.h: 711: tamp = tamp >> 8;
  2787  002296  C0B2  F0AD         	movff	CANSetMask@tamp,??_CANSetMask
  2788  00229A  C0B3  F0AE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2789  00229E  C0B4  F0AF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2790  0022A2  C0B5  F0B0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2791  0022A6  C0AE  F0AD         	movff	??_CANSetMask+1,??_CANSetMask
  2792  0022AA  C0AF  F0AE         	movff	??_CANSetMask+2,??_CANSetMask+1
  2793  0022AE  C0B0  F0AF         	movff	??_CANSetMask+3,??_CANSetMask+2
  2794  0022B2  0100               	movlb	0	; () banked
  2795  0022B4  6BB0               	clrf	(??_CANSetMask+3)& (0+255),b
  2796  0022B6  C0AD  F0B2         	movff	??_CANSetMask,CANSetMask@tamp
  2797  0022BA  C0AE  F0B3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2798  0022BE  C0AF  F0B4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2799  0022C2  C0B0  F0B5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2800                           
  2801                           ; BSR set to: 0
  2802                           ;inc\CANlib.h: 712: RXM1EIDH = (unsigned char) tamp;
  2803  0022C6  C0B2  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;inc\CANlib.h: 714: if (mask & 0x00010000)
  2807  0022CA  0100               	movlb	0	; () banked
  2808  0022CC  A1AA               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  2809  0022CE  D003               	goto	l445
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;inc\CANlib.h: 715: RXM1SIDLbits.EID16 = 0x01;
  2813  0022D0  010F               	movlb	15	; () banked
  2814  0022D2  811D               	bsf	29,0,b	;volatile
  2815  0022D4  D002               	goto	l446
  2816  0022D6                     l445:
  2817                           
  2818                           ; BSR set to: 0
  2819                           ;inc\CANlib.h: 716: else
  2820                           ;inc\CANlib.h: 717: RXM1SIDLbits.EID16 = 0x00;
  2821  0022D6  010F               	movlb	15	; () banked
  2822  0022D8  911D               	bcf	29,0,b	;volatile
  2823  0022DA                     l446:
  2824                           
  2825                           ; BSR set to: 15
  2826                           ;inc\CANlib.h: 719: if (mask & 0x00020000)
  2827  0022DA  0100               	movlb	0	; () banked
  2828  0022DC  A3AA               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  2829  0022DE  D003               	goto	l447
  2830                           
  2831                           ; BSR set to: 0
  2832                           ;inc\CANlib.h: 720: RXM1SIDLbits.EID17 = 0x01;
  2833  0022E0  010F               	movlb	15	; () banked
  2834  0022E2  831D               	bsf	29,1,b	;volatile
  2835  0022E4  D002               	goto	l448
  2836  0022E6                     l447:
  2837                           
  2838                           ; BSR set to: 0
  2839                           ;inc\CANlib.h: 721: else
  2840                           ;inc\CANlib.h: 722: RXM1SIDLbits.EID17 = 0x00;
  2841  0022E6  010F               	movlb	15	; () banked
  2842  0022E8  931D               	bcf	29,1,b	;volatile
  2843  0022EA                     l448:
  2844                           
  2845                           ; BSR set to: 15
  2846                           ;inc\CANlib.h: 724: if (mask & 0x00040000)
  2847  0022EA  0100               	movlb	0	; () banked
  2848  0022EC  A5AA               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  2849  0022EE  D003               	goto	l449
  2850                           
  2851                           ; BSR set to: 0
  2852                           ;inc\CANlib.h: 725: RXM1SIDLbits.SID0 = 0x01;
  2853  0022F0  010F               	movlb	15	; () banked
  2854  0022F2  8B1D               	bsf	29,5,b	;volatile
  2855  0022F4  D002               	goto	l450
  2856  0022F6                     l449:
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;inc\CANlib.h: 726: else
  2860                           ;inc\CANlib.h: 727: RXM1SIDLbits.SID0 = 0x00;
  2861  0022F6  010F               	movlb	15	; () banked
  2862  0022F8  9B1D               	bcf	29,5,b	;volatile
  2863  0022FA                     l450:
  2864                           
  2865                           ; BSR set to: 15
  2866                           ;inc\CANlib.h: 729: if (mask & 0x00080000)
  2867  0022FA  0100               	movlb	0	; () banked
  2868  0022FC  A7AA               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  2869  0022FE  D003               	goto	l451
  2870                           
  2871                           ; BSR set to: 0
  2872                           ;inc\CANlib.h: 730: RXM1SIDLbits.SID1 = 0x01;
  2873  002300  010F               	movlb	15	; () banked
  2874  002302  8D1D               	bsf	29,6,b	;volatile
  2875  002304  D002               	goto	l452
  2876  002306                     l451:
  2877                           
  2878                           ; BSR set to: 0
  2879                           ;inc\CANlib.h: 731: else
  2880                           ;inc\CANlib.h: 732: RXM1SIDLbits.SID1 = 0x00;
  2881  002306  010F               	movlb	15	; () banked
  2882  002308  9D1D               	bcf	29,6,b	;volatile
  2883  00230A                     l452:
  2884                           
  2885                           ; BSR set to: 15
  2886                           ;inc\CANlib.h: 734: if (mask & 0x00100000)
  2887  00230A  0100               	movlb	0	; () banked
  2888  00230C  A9AA               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  2889  00230E  D003               	goto	l453
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;inc\CANlib.h: 735: RXM1SIDLbits.SID2 = 0x01 ;
  2893  002310  010F               	movlb	15	; () banked
  2894  002312  8F1D               	bsf	29,7,b	;volatile
  2895  002314  D002               	goto	l3006
  2896  002316                     l453:
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;inc\CANlib.h: 736: else
  2900                           ;inc\CANlib.h: 737: RXM1SIDLbits.SID2 = 0x00 ;
  2901  002316  010F               	movlb	15	; () banked
  2902  002318  9F1D               	bcf	29,7,b	;volatile
  2903  00231A                     l3006:
  2904                           
  2905                           ; BSR set to: 15
  2906                           ;inc\CANlib.h: 739: tamp = (mask >> 21);
  2907  00231A  C0A8  F0AD         	movff	CANSetMask@mask,??_CANSetMask
  2908  00231E  C0A9  F0AE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2909  002322  C0AA  F0AF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2910  002326  C0AB  F0B0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2911  00232A  0E16               	movlw	22
  2912  00232C  D006               	goto	u3060
  2913  00232E                     u3065:
  2914  00232E  0100               	movlb	0	; () banked
  2915  002330  90D8               	bcf	status,0,c
  2916  002332  33B0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2917  002334  33AF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2918  002336  33AE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2919  002338  33AD               	rrcf	??_CANSetMask& (0+255),f,b
  2920  00233A                     u3060:
  2921  00233A  2EE8               	decfsz	wreg,f,c
  2922  00233C  D7F8               	goto	u3065
  2923  00233E  C0AD  F0B2         	movff	??_CANSetMask,CANSetMask@tamp
  2924  002342  C0AE  F0B3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2925  002346  C0AF  F0B4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2926  00234A  C0B0  F0B5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;inc\CANlib.h: 740: tamp = tamp & 0x000000FF;
  2930  00234E  0100               	movlb	0	; () banked
  2931  002350  51B2               	movf	CANSetMask@tamp& (0+255),w,b
  2932  002352  0100               	movlb	0	; () banked
  2933  002354  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2934  002356  6BB3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2935  002358  6BB4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2936  00235A  6BB5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2937                           
  2938                           ; BSR set to: 0
  2939                           ;inc\CANlib.h: 741: RXM1SIDH = (unsigned char) tamp;
  2940  00235C  C0B2  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2941  002360  0012               	return	
  2942  002362                     __end_of_CANSetMask:
  2943                           	opt stack 0
  2944                           tblptru	equ	0xFF8
  2945                           tblptrh	equ	0xFF7
  2946                           tblptrl	equ	0xFF6
  2947                           tablat	equ	0xFF5
  2948                           prodh	equ	0xFF4
  2949                           prodl	equ	0xFF3
  2950                           intcon	equ	0xFF2
  2951                           postinc0	equ	0xFEE
  2952                           wreg	equ	0xFE8
  2953                           indf1	equ	0xFE7
  2954                           postinc1	equ	0xFE6
  2955                           postdec1	equ	0xFE5
  2956                           fsr1h	equ	0xFE2
  2957                           fsr1l	equ	0xFE1
  2958                           indf2	equ	0xFDF
  2959                           postinc2	equ	0xFDE
  2960                           fsr2h	equ	0xFDA
  2961                           fsr2l	equ	0xFD9
  2962                           status	equ	0xFD8
  2963                           
  2964 ;; *************** function _CANSetFilter *****************
  2965 ;; Defined at:
  2966 ;;		line 749 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  numBuffer       1    wreg     enum E16881
  2969 ;;  filter          4   20[BANK0 ] unsigned long 
  2970 ;;  type            1   24[BANK0 ] enum E16844
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;  numBuffer       1   29[BANK0 ] enum E16881
  2973 ;;  tamp            4   30[BANK0 ] unsigned long 
  2974 ;; Return value:  Size  Location     Type
  2975 ;;		None               void
  2976 ;; Registers used:
  2977 ;;		wreg, status,2, status,0
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2983 ;;      Params:         0       5       0       0
  2984 ;;      Locals:         0       5       0       0
  2985 ;;      Temps:          0       4       0       0
  2986 ;;      Totals:         0      14       0       0
  2987 ;;Total ram usage:       14 bytes
  2988 ;; Hardware stack levels used:    1
  2989 ;; Hardware stack levels required when called:    5
  2990 ;; This function calls:
  2991 ;;		Nothing
  2992 ;; This function is called by:
  2993 ;;		_CANInitialize
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           	psect	text9
  2998  000148                     __ptext9:
  2999                           	opt stack 0
  3000  000148                     _CANSetFilter:
  3001                           	opt stack 23
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;incstack = 0
  3005                           ;CANSetFilter@numBuffer stored from wreg
  3006  000148  0100               	movlb	0	; () banked
  3007  00014A  6FB1               	movwf	CANSetFilter@numBuffer& (0+255),b
  3008                           
  3009                           ;inc\CANlib.h: 751: unsigned long tamp;
  3010                           ;inc\CANlib.h: 753: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3011  00014C  0100               	movlb	0	; () banked
  3012  00014E  51B1               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3013  000150  0100               	movlb	0	; () banked
  3014  000152  A4D8               	btfss	status,2,c
  3015  000154  D058               	goto	l3030
  3016                           
  3017                           ; BSR set to: 0
  3018  000156  0100               	movlb	0	; () banked
  3019  000158  29AC               	incf	CANSetFilter@type& (0+255),w,b
  3020  00015A  A4D8               	btfss	status,2,c
  3021  00015C  D054               	goto	l3030
  3022                           
  3023                           ; BSR set to: 0
  3024                           ;inc\CANlib.h: 754: {
  3025                           ;inc\CANlib.h: 755: RXF0SIDLbits.EXIDEN = 0x00;
  3026  00015E  010F               	movlb	15	; () banked
  3027  000160  9701               	bcf	1,3,b	;volatile
  3028                           
  3029                           ; BSR set to: 15
  3030                           ;inc\CANlib.h: 757: tamp = (filter >> 3);
  3031  000162  C0A8  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  3032  000166  C0A9  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3033  00016A  C0AA  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3034  00016E  C0AB  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3035  000172  0E04               	movlw	4
  3036  000174  D006               	goto	u3090
  3037  000176                     u3095:
  3038  000176  0100               	movlb	0	; () banked
  3039  000178  90D8               	bcf	status,0,c
  3040  00017A  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3041  00017C  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3042  00017E  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3043  000180  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  3044  000182                     u3090:
  3045  000182  2EE8               	decfsz	wreg,f,c
  3046  000184  D7F8               	goto	u3095
  3047  000186  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3048  00018A  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3049  00018E  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3050  000192  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;inc\CANlib.h: 758: tamp = tamp & 0x000000FF;
  3054  000196  0100               	movlb	0	; () banked
  3055  000198  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  3056  00019A  0100               	movlb	0	; () banked
  3057  00019C  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3058  00019E  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3059  0001A0  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3060  0001A2  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3061                           
  3062                           ; BSR set to: 0
  3063                           ;inc\CANlib.h: 759: RXF0SIDH = (unsigned char) tamp;
  3064  0001A4  C0B2  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3065                           
  3066                           ; BSR set to: 0
  3067                           ;inc\CANlib.h: 761: tamp = filter & 0x00000007;
  3068  0001A8  0E07               	movlw	7
  3069  0001AA  0100               	movlb	0	; () banked
  3070  0001AC  15A8               	andwf	CANSetFilter@filter& (0+255),w,b
  3071  0001AE  0100               	movlb	0	; () banked
  3072  0001B0  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3073  0001B2  0E00               	movlw	0
  3074  0001B4  0100               	movlb	0	; () banked
  3075  0001B6  15A9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3076  0001B8  0100               	movlb	0	; () banked
  3077  0001BA  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3078  0001BC  0E00               	movlw	0
  3079  0001BE  0100               	movlb	0	; () banked
  3080  0001C0  15AA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3081  0001C2  0100               	movlb	0	; () banked
  3082  0001C4  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3083  0001C6  0E00               	movlw	0
  3084  0001C8  0100               	movlb	0	; () banked
  3085  0001CA  15AB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3086  0001CC  0100               	movlb	0	; () banked
  3087  0001CE  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;inc\CANlib.h: 762: tamp = tamp << 5;
  3091  0001D0  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  3092  0001D4  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3093  0001D8  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3094  0001DC  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3095  0001E0  0E05               	movlw	5
  3096  0001E2                     u3105:
  3097  0001E2  90D8               	bcf	status,0,c
  3098  0001E4  0100               	movlb	0	; () banked
  3099  0001E6  37AD               	rlcf	??_CANSetFilter& (0+255),f,b
  3100  0001E8  37AE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3101  0001EA  37AF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3102  0001EC  37B0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3103  0001EE  2EE8               	decfsz	wreg,f,c
  3104  0001F0  D7F8               	goto	u3105
  3105  0001F2  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3106  0001F6  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3107  0001FA  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3108  0001FE  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;inc\CANlib.h: 763: RXF0SIDL = (unsigned char) tamp;
  3112  000202  C0B2  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3113  000206                     l3030:
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;inc\CANlib.h: 764: }
  3117                           ;inc\CANlib.h: 766: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3118  000206  0100               	movlb	0	; () banked
  3119  000208  05B1               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3120  00020A  A4D8               	btfss	status,2,c
  3121  00020C  D058               	goto	l3048
  3122                           
  3123                           ; BSR set to: 0
  3124  00020E  0100               	movlb	0	; () banked
  3125  000210  29AC               	incf	CANSetFilter@type& (0+255),w,b
  3126  000212  A4D8               	btfss	status,2,c
  3127  000214  D054               	goto	l3048
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;inc\CANlib.h: 767: {
  3131                           ;inc\CANlib.h: 768: RXF1SIDLbits.EXIDEN = 0x00;
  3132  000216  010F               	movlb	15	; () banked
  3133  000218  9705               	bcf	5,3,b	;volatile
  3134                           
  3135                           ; BSR set to: 15
  3136                           ;inc\CANlib.h: 770: tamp = (filter >> 3);
  3137  00021A  C0A8  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  3138  00021E  C0A9  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3139  000222  C0AA  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3140  000226  C0AB  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3141  00022A  0E04               	movlw	4
  3142  00022C  D006               	goto	u3130
  3143  00022E                     u3135:
  3144  00022E  0100               	movlb	0	; () banked
  3145  000230  90D8               	bcf	status,0,c
  3146  000232  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3147  000234  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3148  000236  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3149  000238  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  3150  00023A                     u3130:
  3151  00023A  2EE8               	decfsz	wreg,f,c
  3152  00023C  D7F8               	goto	u3135
  3153  00023E  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3154  000242  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3155  000246  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3156  00024A  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;inc\CANlib.h: 771: tamp = tamp & 0x000000FF;
  3160  00024E  0100               	movlb	0	; () banked
  3161  000250  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  3162  000252  0100               	movlb	0	; () banked
  3163  000254  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3164  000256  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3165  000258  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3166  00025A  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3167                           
  3168                           ; BSR set to: 0
  3169                           ;inc\CANlib.h: 772: RXF1SIDH = (unsigned char) tamp;
  3170  00025C  C0B2  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3171                           
  3172                           ; BSR set to: 0
  3173                           ;inc\CANlib.h: 774: tamp = filter & 0x00000007;
  3174  000260  0E07               	movlw	7
  3175  000262  0100               	movlb	0	; () banked
  3176  000264  15A8               	andwf	CANSetFilter@filter& (0+255),w,b
  3177  000266  0100               	movlb	0	; () banked
  3178  000268  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3179  00026A  0E00               	movlw	0
  3180  00026C  0100               	movlb	0	; () banked
  3181  00026E  15A9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3182  000270  0100               	movlb	0	; () banked
  3183  000272  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3184  000274  0E00               	movlw	0
  3185  000276  0100               	movlb	0	; () banked
  3186  000278  15AA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3187  00027A  0100               	movlb	0	; () banked
  3188  00027C  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3189  00027E  0E00               	movlw	0
  3190  000280  0100               	movlb	0	; () banked
  3191  000282  15AB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3192  000284  0100               	movlb	0	; () banked
  3193  000286  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;inc\CANlib.h: 775: tamp = tamp << 5;
  3197  000288  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  3198  00028C  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3199  000290  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3200  000294  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3201  000298  0E05               	movlw	5
  3202  00029A                     u3145:
  3203  00029A  90D8               	bcf	status,0,c
  3204  00029C  0100               	movlb	0	; () banked
  3205  00029E  37AD               	rlcf	??_CANSetFilter& (0+255),f,b
  3206  0002A0  37AE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3207  0002A2  37AF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3208  0002A4  37B0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3209  0002A6  2EE8               	decfsz	wreg,f,c
  3210  0002A8  D7F8               	goto	u3145
  3211  0002AA  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3212  0002AE  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3213  0002B2  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3214  0002B6  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;inc\CANlib.h: 776: RXF1SIDL = (unsigned char) tamp;
  3218  0002BA  C0B2  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3219  0002BE                     l3048:
  3220                           
  3221                           ; BSR set to: 0
  3222                           ;inc\CANlib.h: 777: }
  3223                           ;inc\CANlib.h: 779: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3224  0002BE  0E02               	movlw	2
  3225  0002C0  0100               	movlb	0	; () banked
  3226  0002C2  19B1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3227  0002C4  A4D8               	btfss	status,2,c
  3228  0002C6  D058               	goto	l3066
  3229                           
  3230                           ; BSR set to: 0
  3231  0002C8  0100               	movlb	0	; () banked
  3232  0002CA  29AC               	incf	CANSetFilter@type& (0+255),w,b
  3233  0002CC  A4D8               	btfss	status,2,c
  3234  0002CE  D054               	goto	l3066
  3235                           
  3236                           ; BSR set to: 0
  3237                           ;inc\CANlib.h: 780: {
  3238                           ;inc\CANlib.h: 781: RXF2SIDLbits.EXIDEN = 0x00;
  3239  0002D0  010F               	movlb	15	; () banked
  3240  0002D2  9709               	bcf	9,3,b	;volatile
  3241                           
  3242                           ; BSR set to: 15
  3243                           ;inc\CANlib.h: 783: tamp = (filter >> 3);
  3244  0002D4  C0A8  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  3245  0002D8  C0A9  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3246  0002DC  C0AA  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3247  0002E0  C0AB  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3248  0002E4  0E04               	movlw	4
  3249  0002E6  D006               	goto	u3170
  3250  0002E8                     u3175:
  3251  0002E8  0100               	movlb	0	; () banked
  3252  0002EA  90D8               	bcf	status,0,c
  3253  0002EC  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3254  0002EE  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3255  0002F0  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3256  0002F2  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  3257  0002F4                     u3170:
  3258  0002F4  2EE8               	decfsz	wreg,f,c
  3259  0002F6  D7F8               	goto	u3175
  3260  0002F8  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3261  0002FC  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3262  000300  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3263  000304  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;inc\CANlib.h: 784: tamp = tamp & 0x000000FF;
  3267  000308  0100               	movlb	0	; () banked
  3268  00030A  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  3269  00030C  0100               	movlb	0	; () banked
  3270  00030E  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3271  000310  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3272  000312  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3273  000314  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;inc\CANlib.h: 785: RXF2SIDH = (unsigned char) tamp;
  3277  000316  C0B2  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;inc\CANlib.h: 787: tamp = filter & 0x00000007;
  3281  00031A  0E07               	movlw	7
  3282  00031C  0100               	movlb	0	; () banked
  3283  00031E  15A8               	andwf	CANSetFilter@filter& (0+255),w,b
  3284  000320  0100               	movlb	0	; () banked
  3285  000322  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3286  000324  0E00               	movlw	0
  3287  000326  0100               	movlb	0	; () banked
  3288  000328  15A9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3289  00032A  0100               	movlb	0	; () banked
  3290  00032C  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3291  00032E  0E00               	movlw	0
  3292  000330  0100               	movlb	0	; () banked
  3293  000332  15AA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3294  000334  0100               	movlb	0	; () banked
  3295  000336  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3296  000338  0E00               	movlw	0
  3297  00033A  0100               	movlb	0	; () banked
  3298  00033C  15AB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3299  00033E  0100               	movlb	0	; () banked
  3300  000340  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;inc\CANlib.h: 788: tamp = tamp << 5;
  3304  000342  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  3305  000346  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3306  00034A  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3307  00034E  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3308  000352  0E05               	movlw	5
  3309  000354                     u3185:
  3310  000354  90D8               	bcf	status,0,c
  3311  000356  0100               	movlb	0	; () banked
  3312  000358  37AD               	rlcf	??_CANSetFilter& (0+255),f,b
  3313  00035A  37AE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3314  00035C  37AF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3315  00035E  37B0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3316  000360  2EE8               	decfsz	wreg,f,c
  3317  000362  D7F8               	goto	u3185
  3318  000364  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3319  000368  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3320  00036C  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3321  000370  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;inc\CANlib.h: 789: RXF2SIDL = (unsigned char) tamp;
  3325  000374  C0B2  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  3326  000378                     l3066:
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;inc\CANlib.h: 790: }
  3330                           ;inc\CANlib.h: 792: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  3331  000378  0E03               	movlw	3
  3332  00037A  0100               	movlb	0	; () banked
  3333  00037C  19B1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3334  00037E  A4D8               	btfss	status,2,c
  3335  000380  D058               	goto	l3084
  3336                           
  3337                           ; BSR set to: 0
  3338  000382  0100               	movlb	0	; () banked
  3339  000384  29AC               	incf	CANSetFilter@type& (0+255),w,b
  3340  000386  A4D8               	btfss	status,2,c
  3341  000388  D054               	goto	l3084
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;inc\CANlib.h: 793: {
  3345                           ;inc\CANlib.h: 794: RXF3SIDLbits.EXIDEN = 0x00;
  3346  00038A  010F               	movlb	15	; () banked
  3347  00038C  970D               	bcf	13,3,b	;volatile
  3348                           
  3349                           ; BSR set to: 15
  3350                           ;inc\CANlib.h: 796: tamp = (filter >> 3);
  3351  00038E  C0A8  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  3352  000392  C0A9  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3353  000396  C0AA  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3354  00039A  C0AB  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3355  00039E  0E04               	movlw	4
  3356  0003A0  D006               	goto	u3210
  3357  0003A2                     u3215:
  3358  0003A2  0100               	movlb	0	; () banked
  3359  0003A4  90D8               	bcf	status,0,c
  3360  0003A6  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3361  0003A8  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3362  0003AA  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3363  0003AC  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  3364  0003AE                     u3210:
  3365  0003AE  2EE8               	decfsz	wreg,f,c
  3366  0003B0  D7F8               	goto	u3215
  3367  0003B2  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3368  0003B6  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3369  0003BA  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3370  0003BE  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;inc\CANlib.h: 797: tamp = tamp & 0x000000FF;
  3374  0003C2  0100               	movlb	0	; () banked
  3375  0003C4  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  3376  0003C6  0100               	movlb	0	; () banked
  3377  0003C8  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3378  0003CA  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3379  0003CC  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3380  0003CE  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3381                           
  3382                           ; BSR set to: 0
  3383                           ;inc\CANlib.h: 798: RXF3SIDH = (unsigned char) tamp;
  3384  0003D0  C0B2  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  3385                           
  3386                           ; BSR set to: 0
  3387                           ;inc\CANlib.h: 800: tamp = filter & 0x00000007;
  3388  0003D4  0E07               	movlw	7
  3389  0003D6  0100               	movlb	0	; () banked
  3390  0003D8  15A8               	andwf	CANSetFilter@filter& (0+255),w,b
  3391  0003DA  0100               	movlb	0	; () banked
  3392  0003DC  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3393  0003DE  0E00               	movlw	0
  3394  0003E0  0100               	movlb	0	; () banked
  3395  0003E2  15A9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3396  0003E4  0100               	movlb	0	; () banked
  3397  0003E6  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3398  0003E8  0E00               	movlw	0
  3399  0003EA  0100               	movlb	0	; () banked
  3400  0003EC  15AA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3401  0003EE  0100               	movlb	0	; () banked
  3402  0003F0  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3403  0003F2  0E00               	movlw	0
  3404  0003F4  0100               	movlb	0	; () banked
  3405  0003F6  15AB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3406  0003F8  0100               	movlb	0	; () banked
  3407  0003FA  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;inc\CANlib.h: 801: tamp = tamp << 5;
  3411  0003FC  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  3412  000400  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3413  000404  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3414  000408  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3415  00040C  0E05               	movlw	5
  3416  00040E                     u3225:
  3417  00040E  90D8               	bcf	status,0,c
  3418  000410  0100               	movlb	0	; () banked
  3419  000412  37AD               	rlcf	??_CANSetFilter& (0+255),f,b
  3420  000414  37AE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3421  000416  37AF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3422  000418  37B0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3423  00041A  2EE8               	decfsz	wreg,f,c
  3424  00041C  D7F8               	goto	u3225
  3425  00041E  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3426  000422  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3427  000426  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3428  00042A  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;inc\CANlib.h: 802: RXF3SIDL = (unsigned char) tamp;
  3432  00042E  C0B2  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  3433  000432                     l3084:
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;inc\CANlib.h: 803: }
  3437                           ;inc\CANlib.h: 805: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  3438  000432  0E04               	movlw	4
  3439  000434  0100               	movlb	0	; () banked
  3440  000436  19B1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3441  000438  A4D8               	btfss	status,2,c
  3442  00043A  D058               	goto	l3102
  3443                           
  3444                           ; BSR set to: 0
  3445  00043C  0100               	movlb	0	; () banked
  3446  00043E  29AC               	incf	CANSetFilter@type& (0+255),w,b
  3447  000440  A4D8               	btfss	status,2,c
  3448  000442  D054               	goto	l3102
  3449                           
  3450                           ; BSR set to: 0
  3451                           ;inc\CANlib.h: 806: {
  3452                           ;inc\CANlib.h: 807: RXF4SIDLbits.EXIDEN = 0x00;
  3453  000444  010F               	movlb	15	; () banked
  3454  000446  9711               	bcf	17,3,b	;volatile
  3455                           
  3456                           ; BSR set to: 15
  3457                           ;inc\CANlib.h: 809: tamp = (filter >> 3);
  3458  000448  C0A8  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  3459  00044C  C0A9  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3460  000450  C0AA  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3461  000454  C0AB  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3462  000458  0E04               	movlw	4
  3463  00045A  D006               	goto	u3250
  3464  00045C                     u3255:
  3465  00045C  0100               	movlb	0	; () banked
  3466  00045E  90D8               	bcf	status,0,c
  3467  000460  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3468  000462  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3469  000464  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3470  000466  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  3471  000468                     u3250:
  3472  000468  2EE8               	decfsz	wreg,f,c
  3473  00046A  D7F8               	goto	u3255
  3474  00046C  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3475  000470  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3476  000474  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3477  000478  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;inc\CANlib.h: 810: tamp = tamp & 0x000000FF;
  3481  00047C  0100               	movlb	0	; () banked
  3482  00047E  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  3483  000480  0100               	movlb	0	; () banked
  3484  000482  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3485  000484  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3486  000486  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3487  000488  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;inc\CANlib.h: 811: RXF4SIDH = (unsigned char) tamp;
  3491  00048A  C0B2  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;inc\CANlib.h: 813: tamp = filter & 0x00000007;
  3495  00048E  0E07               	movlw	7
  3496  000490  0100               	movlb	0	; () banked
  3497  000492  15A8               	andwf	CANSetFilter@filter& (0+255),w,b
  3498  000494  0100               	movlb	0	; () banked
  3499  000496  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3500  000498  0E00               	movlw	0
  3501  00049A  0100               	movlb	0	; () banked
  3502  00049C  15A9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3503  00049E  0100               	movlb	0	; () banked
  3504  0004A0  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3505  0004A2  0E00               	movlw	0
  3506  0004A4  0100               	movlb	0	; () banked
  3507  0004A6  15AA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3508  0004A8  0100               	movlb	0	; () banked
  3509  0004AA  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3510  0004AC  0E00               	movlw	0
  3511  0004AE  0100               	movlb	0	; () banked
  3512  0004B0  15AB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3513  0004B2  0100               	movlb	0	; () banked
  3514  0004B4  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3515                           
  3516                           ; BSR set to: 0
  3517                           ;inc\CANlib.h: 814: tamp = tamp << 5;
  3518  0004B6  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  3519  0004BA  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3520  0004BE  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3521  0004C2  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3522  0004C6  0E05               	movlw	5
  3523  0004C8                     u3265:
  3524  0004C8  90D8               	bcf	status,0,c
  3525  0004CA  0100               	movlb	0	; () banked
  3526  0004CC  37AD               	rlcf	??_CANSetFilter& (0+255),f,b
  3527  0004CE  37AE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3528  0004D0  37AF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3529  0004D2  37B0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3530  0004D4  2EE8               	decfsz	wreg,f,c
  3531  0004D6  D7F8               	goto	u3265
  3532  0004D8  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3533  0004DC  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3534  0004E0  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3535  0004E4  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;inc\CANlib.h: 815: RXF4SIDL = (unsigned char) tamp;
  3539  0004E8  C0B2  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  3540  0004EC                     l3102:
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;inc\CANlib.h: 816: }
  3544                           ;inc\CANlib.h: 818: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  3545  0004EC  0E05               	movlw	5
  3546  0004EE  0100               	movlb	0	; () banked
  3547  0004F0  19B1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3548  0004F2  A4D8               	btfss	status,2,c
  3549  0004F4  D058               	goto	l3120
  3550                           
  3551                           ; BSR set to: 0
  3552  0004F6  0100               	movlb	0	; () banked
  3553  0004F8  29AC               	incf	CANSetFilter@type& (0+255),w,b
  3554  0004FA  A4D8               	btfss	status,2,c
  3555  0004FC  D054               	goto	l3120
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;inc\CANlib.h: 819: {
  3559                           ;inc\CANlib.h: 820: RXF5SIDLbits.EXIDEN = 0x00;
  3560  0004FE  010F               	movlb	15	; () banked
  3561  000500  9715               	bcf	21,3,b	;volatile
  3562                           
  3563                           ; BSR set to: 15
  3564                           ;inc\CANlib.h: 822: tamp = (filter >> 3);
  3565  000502  C0A8  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  3566  000506  C0A9  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3567  00050A  C0AA  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3568  00050E  C0AB  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3569  000512  0E04               	movlw	4
  3570  000514  D006               	goto	u3290
  3571  000516                     u3295:
  3572  000516  0100               	movlb	0	; () banked
  3573  000518  90D8               	bcf	status,0,c
  3574  00051A  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3575  00051C  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3576  00051E  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3577  000520  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  3578  000522                     u3290:
  3579  000522  2EE8               	decfsz	wreg,f,c
  3580  000524  D7F8               	goto	u3295
  3581  000526  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3582  00052A  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3583  00052E  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3584  000532  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;inc\CANlib.h: 823: tamp = tamp & 0x000000FF;
  3588  000536  0100               	movlb	0	; () banked
  3589  000538  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  3590  00053A  0100               	movlb	0	; () banked
  3591  00053C  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3592  00053E  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3593  000540  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3594  000542  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;inc\CANlib.h: 824: RXF5SIDH = (unsigned char) tamp;
  3598  000544  C0B2  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;inc\CANlib.h: 826: tamp = filter & 0x00000007;
  3602  000548  0E07               	movlw	7
  3603  00054A  0100               	movlb	0	; () banked
  3604  00054C  15A8               	andwf	CANSetFilter@filter& (0+255),w,b
  3605  00054E  0100               	movlb	0	; () banked
  3606  000550  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3607  000552  0E00               	movlw	0
  3608  000554  0100               	movlb	0	; () banked
  3609  000556  15A9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3610  000558  0100               	movlb	0	; () banked
  3611  00055A  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3612  00055C  0E00               	movlw	0
  3613  00055E  0100               	movlb	0	; () banked
  3614  000560  15AA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3615  000562  0100               	movlb	0	; () banked
  3616  000564  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3617  000566  0E00               	movlw	0
  3618  000568  0100               	movlb	0	; () banked
  3619  00056A  15AB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3620  00056C  0100               	movlb	0	; () banked
  3621  00056E  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3622                           
  3623                           ; BSR set to: 0
  3624                           ;inc\CANlib.h: 827: tamp = tamp << 5;
  3625  000570  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  3626  000574  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3627  000578  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3628  00057C  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3629  000580  0E05               	movlw	5
  3630  000582                     u3305:
  3631  000582  90D8               	bcf	status,0,c
  3632  000584  0100               	movlb	0	; () banked
  3633  000586  37AD               	rlcf	??_CANSetFilter& (0+255),f,b
  3634  000588  37AE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3635  00058A  37AF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3636  00058C  37B0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3637  00058E  2EE8               	decfsz	wreg,f,c
  3638  000590  D7F8               	goto	u3305
  3639  000592  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3640  000596  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3641  00059A  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3642  00059E  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3643                           
  3644                           ; BSR set to: 0
  3645                           ;inc\CANlib.h: 828: RXF5SIDL = (unsigned char) tamp;
  3646  0005A2  C0B2  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  3647  0005A6                     l3120:
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;inc\CANlib.h: 829: }
  3651                           ;inc\CANlib.h: 832: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  3652  0005A6  0100               	movlb	0	; () banked
  3653  0005A8  51B1               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3654  0005AA  0100               	movlb	0	; () banked
  3655  0005AC  A4D8               	btfss	status,2,c
  3656  0005AE  D089               	goto	l3154
  3657                           
  3658                           ; BSR set to: 0
  3659  0005B0  0EF7               	movlw	247
  3660  0005B2  0100               	movlb	0	; () banked
  3661  0005B4  19AC               	xorwf	CANSetFilter@type& (0+255),w,b
  3662  0005B6  A4D8               	btfss	status,2,c
  3663  0005B8  D084               	goto	l3154
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;inc\CANlib.h: 833: {
  3667                           ;inc\CANlib.h: 834: RXF0SIDLbits.EXIDEN = 0x01;
  3668  0005BA  010F               	movlb	15	; () banked
  3669  0005BC  8701               	bsf	1,3,b	;volatile
  3670                           
  3671                           ; BSR set to: 15
  3672                           ;inc\CANlib.h: 836: tamp = filter & 0x000000FF;
  3673  0005BE  0100               	movlb	0	; () banked
  3674  0005C0  51A8               	movf	CANSetFilter@filter& (0+255),w,b
  3675  0005C2  0100               	movlb	0	; () banked
  3676  0005C4  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3677  0005C6  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3678  0005C8  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3679  0005CA  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;inc\CANlib.h: 837: RXF0EIDL = (unsigned char) tamp;
  3683  0005CC  C0B2  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;inc\CANlib.h: 839: tamp = filter & 0x0000FF00;
  3687  0005D0  0E00               	movlw	0
  3688  0005D2  0100               	movlb	0	; () banked
  3689  0005D4  15A8               	andwf	CANSetFilter@filter& (0+255),w,b
  3690  0005D6  0100               	movlb	0	; () banked
  3691  0005D8  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3692  0005DA  0EFF               	movlw	255
  3693  0005DC  0100               	movlb	0	; () banked
  3694  0005DE  15A9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3695  0005E0  0100               	movlb	0	; () banked
  3696  0005E2  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3697  0005E4  0E00               	movlw	0
  3698  0005E6  0100               	movlb	0	; () banked
  3699  0005E8  15AA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3700  0005EA  0100               	movlb	0	; () banked
  3701  0005EC  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3702  0005EE  0E00               	movlw	0
  3703  0005F0  0100               	movlb	0	; () banked
  3704  0005F2  15AB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3705  0005F4  0100               	movlb	0	; () banked
  3706  0005F6  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;inc\CANlib.h: 840: tamp = tamp >> 8;
  3710  0005F8  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  3711  0005FC  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3712  000600  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3713  000604  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3714  000608  C0AE  F0AD         	movff	??_CANSetFilter+1,??_CANSetFilter
  3715  00060C  C0AF  F0AE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3716  000610  C0B0  F0AF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3717  000614  0100               	movlb	0	; () banked
  3718  000616  6BB0               	clrf	(??_CANSetFilter+3)& (0+255),b
  3719  000618  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3720  00061C  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3721  000620  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3722  000624  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;inc\CANlib.h: 841: RXF0EIDH = (unsigned char) tamp;
  3726  000628  C0B2  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;inc\CANlib.h: 843: if (filter & 0x00010000)
  3730  00062C  0100               	movlb	0	; () banked
  3731  00062E  A1AA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3732  000630  D003               	goto	l465
  3733                           
  3734                           ; BSR set to: 0
  3735                           ;inc\CANlib.h: 844: RXF0SIDLbits.EID16 = 0x01;
  3736  000632  010F               	movlb	15	; () banked
  3737  000634  8101               	bsf	1,0,b	;volatile
  3738  000636  D002               	goto	l466
  3739  000638                     l465:
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;inc\CANlib.h: 845: else
  3743                           ;inc\CANlib.h: 846: RXF0SIDLbits.EID16 = 0x00;
  3744  000638  010F               	movlb	15	; () banked
  3745  00063A  9101               	bcf	1,0,b	;volatile
  3746  00063C                     l466:
  3747                           
  3748                           ; BSR set to: 15
  3749                           ;inc\CANlib.h: 848: if (filter & 0x00020000)
  3750  00063C  0100               	movlb	0	; () banked
  3751  00063E  A3AA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3752  000640  D003               	goto	l467
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;inc\CANlib.h: 849: RXF0SIDLbits.EID17 = 0x01;
  3756  000642  010F               	movlb	15	; () banked
  3757  000644  8301               	bsf	1,1,b	;volatile
  3758  000646  D002               	goto	l468
  3759  000648                     l467:
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;inc\CANlib.h: 850: else
  3763                           ;inc\CANlib.h: 851: RXF0SIDLbits.EID17 = 0x00;
  3764  000648  010F               	movlb	15	; () banked
  3765  00064A  9301               	bcf	1,1,b	;volatile
  3766  00064C                     l468:
  3767                           
  3768                           ; BSR set to: 15
  3769                           ;inc\CANlib.h: 853: if (filter & 0x00040000)
  3770  00064C  0100               	movlb	0	; () banked
  3771  00064E  A5AA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3772  000650  D003               	goto	l469
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;inc\CANlib.h: 854: RXF0SIDLbits.SID0 = 0x01;
  3776  000652  010F               	movlb	15	; () banked
  3777  000654  8B01               	bsf	1,5,b	;volatile
  3778  000656  D002               	goto	l470
  3779  000658                     l469:
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;inc\CANlib.h: 855: else
  3783                           ;inc\CANlib.h: 856: RXF0SIDLbits.SID0 = 0x00;
  3784  000658  010F               	movlb	15	; () banked
  3785  00065A  9B01               	bcf	1,5,b	;volatile
  3786  00065C                     l470:
  3787                           
  3788                           ; BSR set to: 15
  3789                           ;inc\CANlib.h: 858: if (filter & 0x00080000)
  3790  00065C  0100               	movlb	0	; () banked
  3791  00065E  A7AA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  3792  000660  D003               	goto	l471
  3793                           
  3794                           ; BSR set to: 0
  3795                           ;inc\CANlib.h: 859: RXF0SIDLbits.SID1 = 0x01;
  3796  000662  010F               	movlb	15	; () banked
  3797  000664  8D01               	bsf	1,6,b	;volatile
  3798  000666  D002               	goto	l472
  3799  000668                     l471:
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;inc\CANlib.h: 860: else
  3803                           ;inc\CANlib.h: 861: RXF0SIDLbits.SID1 = 0x00;
  3804  000668  010F               	movlb	15	; () banked
  3805  00066A  9D01               	bcf	1,6,b	;volatile
  3806  00066C                     l472:
  3807                           
  3808                           ; BSR set to: 15
  3809                           ;inc\CANlib.h: 863: if (filter & 0x00100000)
  3810  00066C  0100               	movlb	0	; () banked
  3811  00066E  A9AA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  3812  000670  D003               	goto	l473
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;inc\CANlib.h: 864: RXF0SIDLbits.SID2 = 0x01 ;
  3816  000672  010F               	movlb	15	; () banked
  3817  000674  8F01               	bsf	1,7,b	;volatile
  3818  000676  D002               	goto	l3148
  3819  000678                     l473:
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;inc\CANlib.h: 865: else
  3823                           ;inc\CANlib.h: 866: RXF0SIDLbits.SID2 = 0x00 ;
  3824  000678  010F               	movlb	15	; () banked
  3825  00067A  9F01               	bcf	1,7,b	;volatile
  3826  00067C                     l3148:
  3827                           
  3828                           ; BSR set to: 15
  3829                           ;inc\CANlib.h: 868: tamp = (filter >> 21);
  3830  00067C  C0A8  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  3831  000680  C0A9  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3832  000684  C0AA  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3833  000688  C0AB  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3834  00068C  0E16               	movlw	22
  3835  00068E  D006               	goto	u3380
  3836  000690                     u3385:
  3837  000690  0100               	movlb	0	; () banked
  3838  000692  90D8               	bcf	status,0,c
  3839  000694  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3840  000696  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3841  000698  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3842  00069A  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  3843  00069C                     u3380:
  3844  00069C  2EE8               	decfsz	wreg,f,c
  3845  00069E  D7F8               	goto	u3385
  3846  0006A0  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3847  0006A4  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3848  0006A8  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3849  0006AC  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;inc\CANlib.h: 869: tamp = tamp & 0x000000FF;
  3853  0006B0  0100               	movlb	0	; () banked
  3854  0006B2  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  3855  0006B4  0100               	movlb	0	; () banked
  3856  0006B6  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3857  0006B8  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3858  0006BA  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3859  0006BC  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;inc\CANlib.h: 870: RXF0SIDH = (unsigned char) tamp;
  3863  0006BE  C0B2  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3864  0006C2                     l3154:
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;inc\CANlib.h: 871: }
  3868                           ;inc\CANlib.h: 873: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  3869  0006C2  0100               	movlb	0	; () banked
  3870  0006C4  05B1               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3871  0006C6  A4D8               	btfss	status,2,c
  3872  0006C8  D089               	goto	l3188
  3873                           
  3874                           ; BSR set to: 0
  3875  0006CA  0EF7               	movlw	247
  3876  0006CC  0100               	movlb	0	; () banked
  3877  0006CE  19AC               	xorwf	CANSetFilter@type& (0+255),w,b
  3878  0006D0  A4D8               	btfss	status,2,c
  3879  0006D2  D084               	goto	l3188
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;inc\CANlib.h: 874: {
  3883                           ;inc\CANlib.h: 875: RXF1SIDLbits.EXIDEN = 0x01;
  3884  0006D4  010F               	movlb	15	; () banked
  3885  0006D6  8705               	bsf	5,3,b	;volatile
  3886                           
  3887                           ; BSR set to: 15
  3888                           ;inc\CANlib.h: 877: tamp = filter & 0x000000FF;
  3889  0006D8  0100               	movlb	0	; () banked
  3890  0006DA  51A8               	movf	CANSetFilter@filter& (0+255),w,b
  3891  0006DC  0100               	movlb	0	; () banked
  3892  0006DE  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3893  0006E0  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3894  0006E2  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3895  0006E4  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;inc\CANlib.h: 878: RXF1EIDL = (unsigned char) tamp;
  3899  0006E6  C0B2  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;inc\CANlib.h: 880: tamp = filter & 0x0000FF00;
  3903  0006EA  0E00               	movlw	0
  3904  0006EC  0100               	movlb	0	; () banked
  3905  0006EE  15A8               	andwf	CANSetFilter@filter& (0+255),w,b
  3906  0006F0  0100               	movlb	0	; () banked
  3907  0006F2  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3908  0006F4  0EFF               	movlw	255
  3909  0006F6  0100               	movlb	0	; () banked
  3910  0006F8  15A9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3911  0006FA  0100               	movlb	0	; () banked
  3912  0006FC  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3913  0006FE  0E00               	movlw	0
  3914  000700  0100               	movlb	0	; () banked
  3915  000702  15AA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3916  000704  0100               	movlb	0	; () banked
  3917  000706  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3918  000708  0E00               	movlw	0
  3919  00070A  0100               	movlb	0	; () banked
  3920  00070C  15AB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3921  00070E  0100               	movlb	0	; () banked
  3922  000710  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;inc\CANlib.h: 881: tamp = tamp >> 8;
  3926  000712  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  3927  000716  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3928  00071A  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3929  00071E  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3930  000722  C0AE  F0AD         	movff	??_CANSetFilter+1,??_CANSetFilter
  3931  000726  C0AF  F0AE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3932  00072A  C0B0  F0AF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3933  00072E  0100               	movlb	0	; () banked
  3934  000730  6BB0               	clrf	(??_CANSetFilter+3)& (0+255),b
  3935  000732  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3936  000736  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3937  00073A  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3938  00073E  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;inc\CANlib.h: 882: RXF1EIDH = (unsigned char) tamp;
  3942  000742  C0B2  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;inc\CANlib.h: 884: if (filter & 0x00010000)
  3946  000746  0100               	movlb	0	; () banked
  3947  000748  A1AA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3948  00074A  D003               	goto	l476
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;inc\CANlib.h: 885: RXF1SIDLbits.EID16 = 0x01;
  3952  00074C  010F               	movlb	15	; () banked
  3953  00074E  8105               	bsf	5,0,b	;volatile
  3954  000750  D002               	goto	l477
  3955  000752                     l476:
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;inc\CANlib.h: 886: else
  3959                           ;inc\CANlib.h: 887: RXF1SIDLbits.EID16 = 0x00;
  3960  000752  010F               	movlb	15	; () banked
  3961  000754  9105               	bcf	5,0,b	;volatile
  3962  000756                     l477:
  3963                           
  3964                           ; BSR set to: 15
  3965                           ;inc\CANlib.h: 889: if (filter & 0x00020000)
  3966  000756  0100               	movlb	0	; () banked
  3967  000758  A3AA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3968  00075A  D003               	goto	l478
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;inc\CANlib.h: 890: RXF1SIDLbits.EID17 = 0x01;
  3972  00075C  010F               	movlb	15	; () banked
  3973  00075E  8305               	bsf	5,1,b	;volatile
  3974  000760  D002               	goto	l479
  3975  000762                     l478:
  3976                           
  3977                           ; BSR set to: 0
  3978                           ;inc\CANlib.h: 891: else
  3979                           ;inc\CANlib.h: 892: RXF1SIDLbits.EID17 = 0x00;
  3980  000762  010F               	movlb	15	; () banked
  3981  000764  9305               	bcf	5,1,b	;volatile
  3982  000766                     l479:
  3983                           
  3984                           ; BSR set to: 15
  3985                           ;inc\CANlib.h: 894: if (filter & 0x00040000)
  3986  000766  0100               	movlb	0	; () banked
  3987  000768  A5AA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3988  00076A  D003               	goto	l480
  3989                           
  3990                           ; BSR set to: 0
  3991                           ;inc\CANlib.h: 895: RXF1SIDLbits.SID0 = 0x01;
  3992  00076C  010F               	movlb	15	; () banked
  3993  00076E  8B05               	bsf	5,5,b	;volatile
  3994  000770  D002               	goto	l481
  3995  000772                     l480:
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;inc\CANlib.h: 896: else
  3999                           ;inc\CANlib.h: 897: RXF1SIDLbits.SID0 = 0x00;
  4000  000772  010F               	movlb	15	; () banked
  4001  000774  9B05               	bcf	5,5,b	;volatile
  4002  000776                     l481:
  4003                           
  4004                           ; BSR set to: 15
  4005                           ;inc\CANlib.h: 899: if (filter & 0x00080000)
  4006  000776  0100               	movlb	0	; () banked
  4007  000778  A7AA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4008  00077A  D003               	goto	l482
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;inc\CANlib.h: 900: RXF1SIDLbits.SID1 = 0x01;
  4012  00077C  010F               	movlb	15	; () banked
  4013  00077E  8D05               	bsf	5,6,b	;volatile
  4014  000780  D002               	goto	l483
  4015  000782                     l482:
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;inc\CANlib.h: 901: else
  4019                           ;inc\CANlib.h: 902: RXF1SIDLbits.SID1 = 0x00;
  4020  000782  010F               	movlb	15	; () banked
  4021  000784  9D05               	bcf	5,6,b	;volatile
  4022  000786                     l483:
  4023                           
  4024                           ; BSR set to: 15
  4025                           ;inc\CANlib.h: 904: if (filter & 0x00100000)
  4026  000786  0100               	movlb	0	; () banked
  4027  000788  A9AA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4028  00078A  D003               	goto	l484
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;inc\CANlib.h: 905: RXF1SIDLbits.SID2 = 0x01 ;
  4032  00078C  010F               	movlb	15	; () banked
  4033  00078E  8F05               	bsf	5,7,b	;volatile
  4034  000790  D002               	goto	l3182
  4035  000792                     l484:
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;inc\CANlib.h: 906: else
  4039                           ;inc\CANlib.h: 907: RXF1SIDLbits.SID2 = 0x00 ;
  4040  000792  010F               	movlb	15	; () banked
  4041  000794  9F05               	bcf	5,7,b	;volatile
  4042  000796                     l3182:
  4043                           
  4044                           ; BSR set to: 15
  4045                           ;inc\CANlib.h: 909: tamp = (filter >> 21);
  4046  000796  C0A8  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  4047  00079A  C0A9  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4048  00079E  C0AA  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4049  0007A2  C0AB  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4050  0007A6  0E16               	movlw	22
  4051  0007A8  D006               	goto	u3460
  4052  0007AA                     u3465:
  4053  0007AA  0100               	movlb	0	; () banked
  4054  0007AC  90D8               	bcf	status,0,c
  4055  0007AE  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4056  0007B0  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4057  0007B2  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4058  0007B4  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  4059  0007B6                     u3460:
  4060  0007B6  2EE8               	decfsz	wreg,f,c
  4061  0007B8  D7F8               	goto	u3465
  4062  0007BA  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4063  0007BE  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4064  0007C2  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4065  0007C6  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4066                           
  4067                           ; BSR set to: 0
  4068                           ;inc\CANlib.h: 910: tamp = tamp & 0x000000FF;
  4069  0007CA  0100               	movlb	0	; () banked
  4070  0007CC  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  4071  0007CE  0100               	movlb	0	; () banked
  4072  0007D0  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4073  0007D2  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4074  0007D4  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4075  0007D6  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;inc\CANlib.h: 911: RXF1SIDH = (unsigned char) tamp;
  4079  0007D8  C0B2  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4080  0007DC                     l3188:
  4081                           
  4082                           ; BSR set to: 0
  4083                           ;inc\CANlib.h: 912: }
  4084                           ;inc\CANlib.h: 915: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4085  0007DC  0E02               	movlw	2
  4086  0007DE  0100               	movlb	0	; () banked
  4087  0007E0  19B1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4088  0007E2  A4D8               	btfss	status,2,c
  4089  0007E4  D089               	goto	l3222
  4090                           
  4091                           ; BSR set to: 0
  4092  0007E6  0EF7               	movlw	247
  4093  0007E8  0100               	movlb	0	; () banked
  4094  0007EA  19AC               	xorwf	CANSetFilter@type& (0+255),w,b
  4095  0007EC  A4D8               	btfss	status,2,c
  4096  0007EE  D084               	goto	l3222
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;inc\CANlib.h: 916: {
  4100                           ;inc\CANlib.h: 917: RXF2SIDLbits.EXIDEN = 0x01;
  4101  0007F0  010F               	movlb	15	; () banked
  4102  0007F2  8709               	bsf	9,3,b	;volatile
  4103                           
  4104                           ; BSR set to: 15
  4105                           ;inc\CANlib.h: 919: tamp = filter & 0x000000FF;
  4106  0007F4  0100               	movlb	0	; () banked
  4107  0007F6  51A8               	movf	CANSetFilter@filter& (0+255),w,b
  4108  0007F8  0100               	movlb	0	; () banked
  4109  0007FA  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4110  0007FC  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4111  0007FE  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4112  000800  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;inc\CANlib.h: 920: RXF2EIDL = (unsigned char) tamp;
  4116  000802  C0B2  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;inc\CANlib.h: 922: tamp = filter & 0x0000FF00;
  4120  000806  0E00               	movlw	0
  4121  000808  0100               	movlb	0	; () banked
  4122  00080A  15A8               	andwf	CANSetFilter@filter& (0+255),w,b
  4123  00080C  0100               	movlb	0	; () banked
  4124  00080E  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4125  000810  0EFF               	movlw	255
  4126  000812  0100               	movlb	0	; () banked
  4127  000814  15A9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4128  000816  0100               	movlb	0	; () banked
  4129  000818  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4130  00081A  0E00               	movlw	0
  4131  00081C  0100               	movlb	0	; () banked
  4132  00081E  15AA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4133  000820  0100               	movlb	0	; () banked
  4134  000822  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4135  000824  0E00               	movlw	0
  4136  000826  0100               	movlb	0	; () banked
  4137  000828  15AB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4138  00082A  0100               	movlb	0	; () banked
  4139  00082C  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;inc\CANlib.h: 923: tamp = tamp >> 8;
  4143  00082E  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4144  000832  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4145  000836  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4146  00083A  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4147  00083E  C0AE  F0AD         	movff	??_CANSetFilter+1,??_CANSetFilter
  4148  000842  C0AF  F0AE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4149  000846  C0B0  F0AF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4150  00084A  0100               	movlb	0	; () banked
  4151  00084C  6BB0               	clrf	(??_CANSetFilter+3)& (0+255),b
  4152  00084E  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4153  000852  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4154  000856  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4155  00085A  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;inc\CANlib.h: 924: RXF2EIDH = (unsigned char) tamp;
  4159  00085E  C0B2  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;inc\CANlib.h: 926: if (filter & 0x00010000)
  4163  000862  0100               	movlb	0	; () banked
  4164  000864  A1AA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4165  000866  D003               	goto	l487
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;inc\CANlib.h: 927: RXF2SIDLbits.EID16 = 0x01;
  4169  000868  010F               	movlb	15	; () banked
  4170  00086A  8109               	bsf	9,0,b	;volatile
  4171  00086C  D002               	goto	l488
  4172  00086E                     l487:
  4173                           
  4174                           ; BSR set to: 0
  4175                           ;inc\CANlib.h: 928: else
  4176                           ;inc\CANlib.h: 929: RXF2SIDLbits.EID16 = 0x00;
  4177  00086E  010F               	movlb	15	; () banked
  4178  000870  9109               	bcf	9,0,b	;volatile
  4179  000872                     l488:
  4180                           
  4181                           ; BSR set to: 15
  4182                           ;inc\CANlib.h: 931: if (filter & 0x00020000)
  4183  000872  0100               	movlb	0	; () banked
  4184  000874  A3AA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4185  000876  D003               	goto	l489
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;inc\CANlib.h: 932: RXF2SIDLbits.EID17 = 0x01;
  4189  000878  010F               	movlb	15	; () banked
  4190  00087A  8309               	bsf	9,1,b	;volatile
  4191  00087C  D002               	goto	l490
  4192  00087E                     l489:
  4193                           
  4194                           ; BSR set to: 0
  4195                           ;inc\CANlib.h: 933: else
  4196                           ;inc\CANlib.h: 934: RXF2SIDLbits.EID17 = 0x00;
  4197  00087E  010F               	movlb	15	; () banked
  4198  000880  9309               	bcf	9,1,b	;volatile
  4199  000882                     l490:
  4200                           
  4201                           ; BSR set to: 15
  4202                           ;inc\CANlib.h: 936: if (filter & 0x00040000)
  4203  000882  0100               	movlb	0	; () banked
  4204  000884  A5AA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4205  000886  D003               	goto	l491
  4206                           
  4207                           ; BSR set to: 0
  4208                           ;inc\CANlib.h: 937: RXF2SIDLbits.SID0 = 0x01;
  4209  000888  010F               	movlb	15	; () banked
  4210  00088A  8B09               	bsf	9,5,b	;volatile
  4211  00088C  D002               	goto	l492
  4212  00088E                     l491:
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;inc\CANlib.h: 938: else
  4216                           ;inc\CANlib.h: 939: RXF2SIDLbits.SID0 = 0x00;
  4217  00088E  010F               	movlb	15	; () banked
  4218  000890  9B09               	bcf	9,5,b	;volatile
  4219  000892                     l492:
  4220                           
  4221                           ; BSR set to: 15
  4222                           ;inc\CANlib.h: 941: if (filter & 0x00080000)
  4223  000892  0100               	movlb	0	; () banked
  4224  000894  A7AA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4225  000896  D003               	goto	l493
  4226                           
  4227                           ; BSR set to: 0
  4228                           ;inc\CANlib.h: 942: RXF2SIDLbits.SID1 = 0x01;
  4229  000898  010F               	movlb	15	; () banked
  4230  00089A  8D09               	bsf	9,6,b	;volatile
  4231  00089C  D002               	goto	l494
  4232  00089E                     l493:
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;inc\CANlib.h: 943: else
  4236                           ;inc\CANlib.h: 944: RXF2SIDLbits.SID1 = 0x00;
  4237  00089E  010F               	movlb	15	; () banked
  4238  0008A0  9D09               	bcf	9,6,b	;volatile
  4239  0008A2                     l494:
  4240                           
  4241                           ; BSR set to: 15
  4242                           ;inc\CANlib.h: 946: if (filter & 0x00100000)
  4243  0008A2  0100               	movlb	0	; () banked
  4244  0008A4  A9AA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4245  0008A6  D003               	goto	l495
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;inc\CANlib.h: 947: RXF2SIDLbits.SID2 = 0x01 ;
  4249  0008A8  010F               	movlb	15	; () banked
  4250  0008AA  8F09               	bsf	9,7,b	;volatile
  4251  0008AC  D002               	goto	l3216
  4252  0008AE                     l495:
  4253                           
  4254                           ; BSR set to: 0
  4255                           ;inc\CANlib.h: 948: else
  4256                           ;inc\CANlib.h: 949: RXF2SIDLbits.SID2 = 0x00 ;
  4257  0008AE  010F               	movlb	15	; () banked
  4258  0008B0  9F09               	bcf	9,7,b	;volatile
  4259  0008B2                     l3216:
  4260                           
  4261                           ; BSR set to: 15
  4262                           ;inc\CANlib.h: 951: tamp = (filter >> 21);
  4263  0008B2  C0A8  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  4264  0008B6  C0A9  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4265  0008BA  C0AA  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4266  0008BE  C0AB  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4267  0008C2  0E16               	movlw	22
  4268  0008C4  D006               	goto	u3540
  4269  0008C6                     u3545:
  4270  0008C6  0100               	movlb	0	; () banked
  4271  0008C8  90D8               	bcf	status,0,c
  4272  0008CA  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4273  0008CC  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4274  0008CE  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4275  0008D0  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  4276  0008D2                     u3540:
  4277  0008D2  2EE8               	decfsz	wreg,f,c
  4278  0008D4  D7F8               	goto	u3545
  4279  0008D6  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4280  0008DA  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4281  0008DE  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4282  0008E2  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4283                           
  4284                           ; BSR set to: 0
  4285                           ;inc\CANlib.h: 952: tamp = tamp & 0x000000FF;
  4286  0008E6  0100               	movlb	0	; () banked
  4287  0008E8  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  4288  0008EA  0100               	movlb	0	; () banked
  4289  0008EC  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4290  0008EE  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4291  0008F0  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4292  0008F2  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4293                           
  4294                           ; BSR set to: 0
  4295                           ;inc\CANlib.h: 953: RXF2SIDH = (unsigned char) tamp;
  4296  0008F4  C0B2  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4297  0008F8                     l3222:
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;inc\CANlib.h: 954: }
  4301                           ;inc\CANlib.h: 956: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  4302  0008F8  0E03               	movlw	3
  4303  0008FA  0100               	movlb	0	; () banked
  4304  0008FC  19B1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4305  0008FE  A4D8               	btfss	status,2,c
  4306  000900  D089               	goto	l3256
  4307                           
  4308                           ; BSR set to: 0
  4309  000902  0EF7               	movlw	247
  4310  000904  0100               	movlb	0	; () banked
  4311  000906  19AC               	xorwf	CANSetFilter@type& (0+255),w,b
  4312  000908  A4D8               	btfss	status,2,c
  4313  00090A  D084               	goto	l3256
  4314                           
  4315                           ; BSR set to: 0
  4316                           ;inc\CANlib.h: 957: {
  4317                           ;inc\CANlib.h: 958: RXF3SIDLbits.EXIDEN = 0x01;
  4318  00090C  010F               	movlb	15	; () banked
  4319  00090E  870D               	bsf	13,3,b	;volatile
  4320                           
  4321                           ; BSR set to: 15
  4322                           ;inc\CANlib.h: 960: tamp = filter & 0x000000FF;
  4323  000910  0100               	movlb	0	; () banked
  4324  000912  51A8               	movf	CANSetFilter@filter& (0+255),w,b
  4325  000914  0100               	movlb	0	; () banked
  4326  000916  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4327  000918  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4328  00091A  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4329  00091C  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;inc\CANlib.h: 961: RXF3EIDL = (unsigned char) tamp;
  4333  00091E  C0B2  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;inc\CANlib.h: 963: tamp = filter & 0x0000FF00;
  4337  000922  0E00               	movlw	0
  4338  000924  0100               	movlb	0	; () banked
  4339  000926  15A8               	andwf	CANSetFilter@filter& (0+255),w,b
  4340  000928  0100               	movlb	0	; () banked
  4341  00092A  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4342  00092C  0EFF               	movlw	255
  4343  00092E  0100               	movlb	0	; () banked
  4344  000930  15A9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4345  000932  0100               	movlb	0	; () banked
  4346  000934  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4347  000936  0E00               	movlw	0
  4348  000938  0100               	movlb	0	; () banked
  4349  00093A  15AA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4350  00093C  0100               	movlb	0	; () banked
  4351  00093E  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4352  000940  0E00               	movlw	0
  4353  000942  0100               	movlb	0	; () banked
  4354  000944  15AB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4355  000946  0100               	movlb	0	; () banked
  4356  000948  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4357                           
  4358                           ; BSR set to: 0
  4359                           ;inc\CANlib.h: 964: tamp = tamp >> 8;
  4360  00094A  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4361  00094E  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4362  000952  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4363  000956  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4364  00095A  C0AE  F0AD         	movff	??_CANSetFilter+1,??_CANSetFilter
  4365  00095E  C0AF  F0AE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4366  000962  C0B0  F0AF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4367  000966  0100               	movlb	0	; () banked
  4368  000968  6BB0               	clrf	(??_CANSetFilter+3)& (0+255),b
  4369  00096A  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4370  00096E  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4371  000972  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4372  000976  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;inc\CANlib.h: 965: RXF3EIDH = (unsigned char) tamp;
  4376  00097A  C0B2  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;inc\CANlib.h: 967: if (filter & 0x00010000)
  4380  00097E  0100               	movlb	0	; () banked
  4381  000980  A1AA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4382  000982  D003               	goto	l498
  4383                           
  4384                           ; BSR set to: 0
  4385                           ;inc\CANlib.h: 968: RXF3SIDLbits.EID16 = 0x01;
  4386  000984  010F               	movlb	15	; () banked
  4387  000986  810D               	bsf	13,0,b	;volatile
  4388  000988  D002               	goto	l499
  4389  00098A                     l498:
  4390                           
  4391                           ; BSR set to: 0
  4392                           ;inc\CANlib.h: 969: else
  4393                           ;inc\CANlib.h: 970: RXF3SIDLbits.EID16 = 0x00;
  4394  00098A  010F               	movlb	15	; () banked
  4395  00098C  910D               	bcf	13,0,b	;volatile
  4396  00098E                     l499:
  4397                           
  4398                           ; BSR set to: 15
  4399                           ;inc\CANlib.h: 972: if (filter & 0x00020000)
  4400  00098E  0100               	movlb	0	; () banked
  4401  000990  A3AA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4402  000992  D003               	goto	l500
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;inc\CANlib.h: 973: RXF3SIDLbits.EID17 = 0x01;
  4406  000994  010F               	movlb	15	; () banked
  4407  000996  830D               	bsf	13,1,b	;volatile
  4408  000998  D002               	goto	l501
  4409  00099A                     l500:
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;inc\CANlib.h: 974: else
  4413                           ;inc\CANlib.h: 975: RXF3SIDLbits.EID17 = 0x00;
  4414  00099A  010F               	movlb	15	; () banked
  4415  00099C  930D               	bcf	13,1,b	;volatile
  4416  00099E                     l501:
  4417                           
  4418                           ; BSR set to: 15
  4419                           ;inc\CANlib.h: 977: if (filter & 0x00040000)
  4420  00099E  0100               	movlb	0	; () banked
  4421  0009A0  A5AA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4422  0009A2  D003               	goto	l502
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;inc\CANlib.h: 978: RXF3SIDLbits.SID0 = 0x01;
  4426  0009A4  010F               	movlb	15	; () banked
  4427  0009A6  8B0D               	bsf	13,5,b	;volatile
  4428  0009A8  D002               	goto	l503
  4429  0009AA                     l502:
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;inc\CANlib.h: 979: else
  4433                           ;inc\CANlib.h: 980: RXF3SIDLbits.SID0 = 0x00;
  4434  0009AA  010F               	movlb	15	; () banked
  4435  0009AC  9B0D               	bcf	13,5,b	;volatile
  4436  0009AE                     l503:
  4437                           
  4438                           ; BSR set to: 15
  4439                           ;inc\CANlib.h: 982: if (filter & 0x00080000)
  4440  0009AE  0100               	movlb	0	; () banked
  4441  0009B0  A7AA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4442  0009B2  D003               	goto	l504
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;inc\CANlib.h: 983: RXF3SIDLbits.SID1 = 0x01;
  4446  0009B4  010F               	movlb	15	; () banked
  4447  0009B6  8D0D               	bsf	13,6,b	;volatile
  4448  0009B8  D002               	goto	l505
  4449  0009BA                     l504:
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;inc\CANlib.h: 984: else
  4453                           ;inc\CANlib.h: 985: RXF3SIDLbits.SID1 = 0x00;
  4454  0009BA  010F               	movlb	15	; () banked
  4455  0009BC  9D0D               	bcf	13,6,b	;volatile
  4456  0009BE                     l505:
  4457                           
  4458                           ; BSR set to: 15
  4459                           ;inc\CANlib.h: 987: if (filter & 0x00100000)
  4460  0009BE  0100               	movlb	0	; () banked
  4461  0009C0  A9AA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4462  0009C2  D003               	goto	l506
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;inc\CANlib.h: 988: RXF3SIDLbits.SID2 = 0x01 ;
  4466  0009C4  010F               	movlb	15	; () banked
  4467  0009C6  8F0D               	bsf	13,7,b	;volatile
  4468  0009C8  D002               	goto	l3250
  4469  0009CA                     l506:
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;inc\CANlib.h: 989: else
  4473                           ;inc\CANlib.h: 990: RXF3SIDLbits.SID2 = 0x00 ;
  4474  0009CA  010F               	movlb	15	; () banked
  4475  0009CC  9F0D               	bcf	13,7,b	;volatile
  4476  0009CE                     l3250:
  4477                           
  4478                           ; BSR set to: 15
  4479                           ;inc\CANlib.h: 992: tamp = (filter >> 21);
  4480  0009CE  C0A8  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  4481  0009D2  C0A9  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4482  0009D6  C0AA  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4483  0009DA  C0AB  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4484  0009DE  0E16               	movlw	22
  4485  0009E0  D006               	goto	u3620
  4486  0009E2                     u3625:
  4487  0009E2  0100               	movlb	0	; () banked
  4488  0009E4  90D8               	bcf	status,0,c
  4489  0009E6  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4490  0009E8  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4491  0009EA  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4492  0009EC  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  4493  0009EE                     u3620:
  4494  0009EE  2EE8               	decfsz	wreg,f,c
  4495  0009F0  D7F8               	goto	u3625
  4496  0009F2  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4497  0009F6  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4498  0009FA  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4499  0009FE  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4500                           
  4501                           ; BSR set to: 0
  4502                           ;inc\CANlib.h: 993: tamp = tamp & 0x000000FF;
  4503  000A02  0100               	movlb	0	; () banked
  4504  000A04  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  4505  000A06  0100               	movlb	0	; () banked
  4506  000A08  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4507  000A0A  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4508  000A0C  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4509  000A0E  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4510                           
  4511                           ; BSR set to: 0
  4512                           ;inc\CANlib.h: 994: RXF3SIDH = (unsigned char) tamp;
  4513  000A10  C0B2  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4514  000A14                     l3256:
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;inc\CANlib.h: 995: }
  4518                           ;inc\CANlib.h: 997: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  4519  000A14  0E04               	movlw	4
  4520  000A16  0100               	movlb	0	; () banked
  4521  000A18  19B1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4522  000A1A  A4D8               	btfss	status,2,c
  4523  000A1C  D089               	goto	l3290
  4524                           
  4525                           ; BSR set to: 0
  4526  000A1E  0EF7               	movlw	247
  4527  000A20  0100               	movlb	0	; () banked
  4528  000A22  19AC               	xorwf	CANSetFilter@type& (0+255),w,b
  4529  000A24  A4D8               	btfss	status,2,c
  4530  000A26  D084               	goto	l3290
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;inc\CANlib.h: 998: {
  4534                           ;inc\CANlib.h: 999: RXF4SIDLbits.EXIDEN = 0x01;
  4535  000A28  010F               	movlb	15	; () banked
  4536  000A2A  8711               	bsf	17,3,b	;volatile
  4537                           
  4538                           ; BSR set to: 15
  4539                           ;inc\CANlib.h: 1001: tamp = filter & 0x000000FF;
  4540  000A2C  0100               	movlb	0	; () banked
  4541  000A2E  51A8               	movf	CANSetFilter@filter& (0+255),w,b
  4542  000A30  0100               	movlb	0	; () banked
  4543  000A32  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4544  000A34  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4545  000A36  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4546  000A38  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4547                           
  4548                           ; BSR set to: 0
  4549                           ;inc\CANlib.h: 1002: RXF4EIDL = (unsigned char) tamp;
  4550  000A3A  C0B2  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;inc\CANlib.h: 1004: tamp = filter & 0x0000FF00;
  4554  000A3E  0E00               	movlw	0
  4555  000A40  0100               	movlb	0	; () banked
  4556  000A42  15A8               	andwf	CANSetFilter@filter& (0+255),w,b
  4557  000A44  0100               	movlb	0	; () banked
  4558  000A46  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4559  000A48  0EFF               	movlw	255
  4560  000A4A  0100               	movlb	0	; () banked
  4561  000A4C  15A9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4562  000A4E  0100               	movlb	0	; () banked
  4563  000A50  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4564  000A52  0E00               	movlw	0
  4565  000A54  0100               	movlb	0	; () banked
  4566  000A56  15AA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4567  000A58  0100               	movlb	0	; () banked
  4568  000A5A  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4569  000A5C  0E00               	movlw	0
  4570  000A5E  0100               	movlb	0	; () banked
  4571  000A60  15AB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4572  000A62  0100               	movlb	0	; () banked
  4573  000A64  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4574                           
  4575                           ; BSR set to: 0
  4576                           ;inc\CANlib.h: 1005: tamp = tamp >> 8;
  4577  000A66  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4578  000A6A  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4579  000A6E  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4580  000A72  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4581  000A76  C0AE  F0AD         	movff	??_CANSetFilter+1,??_CANSetFilter
  4582  000A7A  C0AF  F0AE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4583  000A7E  C0B0  F0AF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4584  000A82  0100               	movlb	0	; () banked
  4585  000A84  6BB0               	clrf	(??_CANSetFilter+3)& (0+255),b
  4586  000A86  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4587  000A8A  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4588  000A8E  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4589  000A92  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;inc\CANlib.h: 1006: RXF4EIDH = (unsigned char) tamp;
  4593  000A96  C0B2  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  4594                           
  4595                           ; BSR set to: 0
  4596                           ;inc\CANlib.h: 1008: if (filter & 0x00010000)
  4597  000A9A  0100               	movlb	0	; () banked
  4598  000A9C  A1AA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4599  000A9E  D003               	goto	l509
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;inc\CANlib.h: 1009: RXF4SIDLbits.EID16 = 0x01;
  4603  000AA0  010F               	movlb	15	; () banked
  4604  000AA2  8111               	bsf	17,0,b	;volatile
  4605  000AA4  D002               	goto	l510
  4606  000AA6                     l509:
  4607                           
  4608                           ; BSR set to: 0
  4609                           ;inc\CANlib.h: 1010: else
  4610                           ;inc\CANlib.h: 1011: RXF4SIDLbits.EID16 = 0x00;
  4611  000AA6  010F               	movlb	15	; () banked
  4612  000AA8  9111               	bcf	17,0,b	;volatile
  4613  000AAA                     l510:
  4614                           
  4615                           ; BSR set to: 15
  4616                           ;inc\CANlib.h: 1013: if (filter & 0x00020000)
  4617  000AAA  0100               	movlb	0	; () banked
  4618  000AAC  A3AA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4619  000AAE  D003               	goto	l511
  4620                           
  4621                           ; BSR set to: 0
  4622                           ;inc\CANlib.h: 1014: RXF4SIDLbits.EID17 = 0x01;
  4623  000AB0  010F               	movlb	15	; () banked
  4624  000AB2  8311               	bsf	17,1,b	;volatile
  4625  000AB4  D002               	goto	l512
  4626  000AB6                     l511:
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;inc\CANlib.h: 1015: else
  4630                           ;inc\CANlib.h: 1016: RXF4SIDLbits.EID17 = 0x00;
  4631  000AB6  010F               	movlb	15	; () banked
  4632  000AB8  9311               	bcf	17,1,b	;volatile
  4633  000ABA                     l512:
  4634                           
  4635                           ; BSR set to: 15
  4636                           ;inc\CANlib.h: 1018: if (filter & 0x00040000)
  4637  000ABA  0100               	movlb	0	; () banked
  4638  000ABC  A5AA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4639  000ABE  D003               	goto	l513
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;inc\CANlib.h: 1019: RXF4SIDLbits.SID0 = 0x01;
  4643  000AC0  010F               	movlb	15	; () banked
  4644  000AC2  8B11               	bsf	17,5,b	;volatile
  4645  000AC4  D002               	goto	l514
  4646  000AC6                     l513:
  4647                           
  4648                           ; BSR set to: 0
  4649                           ;inc\CANlib.h: 1020: else
  4650                           ;inc\CANlib.h: 1021: RXF4SIDLbits.SID0 = 0x00;
  4651  000AC6  010F               	movlb	15	; () banked
  4652  000AC8  9B11               	bcf	17,5,b	;volatile
  4653  000ACA                     l514:
  4654                           
  4655                           ; BSR set to: 15
  4656                           ;inc\CANlib.h: 1023: if (filter & 0x00080000)
  4657  000ACA  0100               	movlb	0	; () banked
  4658  000ACC  A7AA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4659  000ACE  D003               	goto	l515
  4660                           
  4661                           ; BSR set to: 0
  4662                           ;inc\CANlib.h: 1024: RXF4SIDLbits.SID1 = 0x01;
  4663  000AD0  010F               	movlb	15	; () banked
  4664  000AD2  8D11               	bsf	17,6,b	;volatile
  4665  000AD4  D002               	goto	l516
  4666  000AD6                     l515:
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;inc\CANlib.h: 1025: else
  4670                           ;inc\CANlib.h: 1026: RXF4SIDLbits.SID1 = 0x00;
  4671  000AD6  010F               	movlb	15	; () banked
  4672  000AD8  9D11               	bcf	17,6,b	;volatile
  4673  000ADA                     l516:
  4674                           
  4675                           ; BSR set to: 15
  4676                           ;inc\CANlib.h: 1028: if (filter & 0x00100000)
  4677  000ADA  0100               	movlb	0	; () banked
  4678  000ADC  A9AA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4679  000ADE  D003               	goto	l517
  4680                           
  4681                           ; BSR set to: 0
  4682                           ;inc\CANlib.h: 1029: RXF4SIDLbits.SID2 = 0x01 ;
  4683  000AE0  010F               	movlb	15	; () banked
  4684  000AE2  8F11               	bsf	17,7,b	;volatile
  4685  000AE4  D002               	goto	l3284
  4686  000AE6                     l517:
  4687                           
  4688                           ; BSR set to: 0
  4689                           ;inc\CANlib.h: 1030: else
  4690                           ;inc\CANlib.h: 1031: RXF4SIDLbits.SID2 = 0x00 ;
  4691  000AE6  010F               	movlb	15	; () banked
  4692  000AE8  9F11               	bcf	17,7,b	;volatile
  4693  000AEA                     l3284:
  4694                           
  4695                           ; BSR set to: 15
  4696                           ;inc\CANlib.h: 1033: tamp = (filter >> 21);
  4697  000AEA  C0A8  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  4698  000AEE  C0A9  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4699  000AF2  C0AA  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4700  000AF6  C0AB  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4701  000AFA  0E16               	movlw	22
  4702  000AFC  D006               	goto	u3700
  4703  000AFE                     u3705:
  4704  000AFE  0100               	movlb	0	; () banked
  4705  000B00  90D8               	bcf	status,0,c
  4706  000B02  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4707  000B04  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4708  000B06  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4709  000B08  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  4710  000B0A                     u3700:
  4711  000B0A  2EE8               	decfsz	wreg,f,c
  4712  000B0C  D7F8               	goto	u3705
  4713  000B0E  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4714  000B12  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4715  000B16  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4716  000B1A  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4717                           
  4718                           ; BSR set to: 0
  4719                           ;inc\CANlib.h: 1034: tamp = tamp & 0x000000FF;
  4720  000B1E  0100               	movlb	0	; () banked
  4721  000B20  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  4722  000B22  0100               	movlb	0	; () banked
  4723  000B24  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4724  000B26  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4725  000B28  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4726  000B2A  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4727                           
  4728                           ; BSR set to: 0
  4729                           ;inc\CANlib.h: 1035: RXF4SIDH = (unsigned char) tamp;
  4730  000B2C  C0B2  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4731  000B30                     l3290:
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;inc\CANlib.h: 1036: }
  4735                           ;inc\CANlib.h: 1038: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  4736  000B30  0E05               	movlw	5
  4737  000B32  0100               	movlb	0	; () banked
  4738  000B34  19B1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4739  000B36  A4D8               	btfss	status,2,c
  4740  000B38  0012               	return	
  4741                           
  4742                           ; BSR set to: 0
  4743  000B3A  0EF7               	movlw	247
  4744  000B3C  0100               	movlb	0	; () banked
  4745  000B3E  19AC               	xorwf	CANSetFilter@type& (0+255),w,b
  4746  000B40  A4D8               	btfss	status,2,c
  4747  000B42  0012               	return	
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;inc\CANlib.h: 1039: {
  4751                           ;inc\CANlib.h: 1040: RXF5SIDLbits.EXIDEN = 0x01;
  4752  000B44  010F               	movlb	15	; () banked
  4753  000B46  8715               	bsf	21,3,b	;volatile
  4754                           
  4755                           ; BSR set to: 15
  4756                           ;inc\CANlib.h: 1042: tamp = filter & 0x000000FF;
  4757  000B48  0100               	movlb	0	; () banked
  4758  000B4A  51A8               	movf	CANSetFilter@filter& (0+255),w,b
  4759  000B4C  0100               	movlb	0	; () banked
  4760  000B4E  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4761  000B50  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4762  000B52  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4763  000B54  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;inc\CANlib.h: 1043: RXF5EIDL = (unsigned char) tamp;
  4767  000B56  C0B2  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;inc\CANlib.h: 1045: tamp = filter & 0x0000FF00;
  4771  000B5A  0E00               	movlw	0
  4772  000B5C  0100               	movlb	0	; () banked
  4773  000B5E  15A8               	andwf	CANSetFilter@filter& (0+255),w,b
  4774  000B60  0100               	movlb	0	; () banked
  4775  000B62  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4776  000B64  0EFF               	movlw	255
  4777  000B66  0100               	movlb	0	; () banked
  4778  000B68  15A9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4779  000B6A  0100               	movlb	0	; () banked
  4780  000B6C  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4781  000B6E  0E00               	movlw	0
  4782  000B70  0100               	movlb	0	; () banked
  4783  000B72  15AA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4784  000B74  0100               	movlb	0	; () banked
  4785  000B76  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4786  000B78  0E00               	movlw	0
  4787  000B7A  0100               	movlb	0	; () banked
  4788  000B7C  15AB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4789  000B7E  0100               	movlb	0	; () banked
  4790  000B80  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;inc\CANlib.h: 1046: tamp = tamp >> 8;
  4794  000B82  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4795  000B86  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4796  000B8A  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4797  000B8E  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4798  000B92  C0AE  F0AD         	movff	??_CANSetFilter+1,??_CANSetFilter
  4799  000B96  C0AF  F0AE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4800  000B9A  C0B0  F0AF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4801  000B9E  0100               	movlb	0	; () banked
  4802  000BA0  6BB0               	clrf	(??_CANSetFilter+3)& (0+255),b
  4803  000BA2  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4804  000BA6  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4805  000BAA  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4806  000BAE  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4807                           
  4808                           ; BSR set to: 0
  4809                           ;inc\CANlib.h: 1047: RXF5EIDH = (unsigned char) tamp;
  4810  000BB2  C0B2  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  4811                           
  4812                           ; BSR set to: 0
  4813                           ;inc\CANlib.h: 1049: if (filter & 0x00010000)
  4814  000BB6  0100               	movlb	0	; () banked
  4815  000BB8  A1AA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4816  000BBA  D003               	goto	l520
  4817                           
  4818                           ; BSR set to: 0
  4819                           ;inc\CANlib.h: 1050: RXF5SIDLbits.EID16 = 0x01;
  4820  000BBC  010F               	movlb	15	; () banked
  4821  000BBE  8115               	bsf	21,0,b	;volatile
  4822  000BC0  D002               	goto	l521
  4823  000BC2                     l520:
  4824                           
  4825                           ; BSR set to: 0
  4826                           ;inc\CANlib.h: 1051: else
  4827                           ;inc\CANlib.h: 1052: RXF5SIDLbits.EID16 = 0x00;
  4828  000BC2  010F               	movlb	15	; () banked
  4829  000BC4  9115               	bcf	21,0,b	;volatile
  4830  000BC6                     l521:
  4831                           
  4832                           ; BSR set to: 15
  4833                           ;inc\CANlib.h: 1054: if (filter & 0x00020000)
  4834  000BC6  0100               	movlb	0	; () banked
  4835  000BC8  A3AA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4836  000BCA  D003               	goto	l522
  4837                           
  4838                           ; BSR set to: 0
  4839                           ;inc\CANlib.h: 1055: RXF5SIDLbits.EID17 = 0x01;
  4840  000BCC  010F               	movlb	15	; () banked
  4841  000BCE  8315               	bsf	21,1,b	;volatile
  4842  000BD0  D002               	goto	l523
  4843  000BD2                     l522:
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;inc\CANlib.h: 1056: else
  4847                           ;inc\CANlib.h: 1057: RXF5SIDLbits.EID17 = 0x00;
  4848  000BD2  010F               	movlb	15	; () banked
  4849  000BD4  9315               	bcf	21,1,b	;volatile
  4850  000BD6                     l523:
  4851                           
  4852                           ; BSR set to: 15
  4853                           ;inc\CANlib.h: 1059: if (filter & 0x00040000)
  4854  000BD6  0100               	movlb	0	; () banked
  4855  000BD8  A5AA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4856  000BDA  D003               	goto	l524
  4857                           
  4858                           ; BSR set to: 0
  4859                           ;inc\CANlib.h: 1060: RXF5SIDLbits.SID0 = 0x01;
  4860  000BDC  010F               	movlb	15	; () banked
  4861  000BDE  8B15               	bsf	21,5,b	;volatile
  4862  000BE0  D002               	goto	l525
  4863  000BE2                     l524:
  4864                           
  4865                           ; BSR set to: 0
  4866                           ;inc\CANlib.h: 1061: else
  4867                           ;inc\CANlib.h: 1062: RXF5SIDLbits.SID0 = 0x00;
  4868  000BE2  010F               	movlb	15	; () banked
  4869  000BE4  9B15               	bcf	21,5,b	;volatile
  4870  000BE6                     l525:
  4871                           
  4872                           ; BSR set to: 15
  4873                           ;inc\CANlib.h: 1064: if (filter & 0x00080000)
  4874  000BE6  0100               	movlb	0	; () banked
  4875  000BE8  A7AA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4876  000BEA  D003               	goto	l526
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;inc\CANlib.h: 1065: RXF5SIDLbits.SID1 = 0x01;
  4880  000BEC  010F               	movlb	15	; () banked
  4881  000BEE  8D15               	bsf	21,6,b	;volatile
  4882  000BF0  D002               	goto	l527
  4883  000BF2                     l526:
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;inc\CANlib.h: 1066: else
  4887                           ;inc\CANlib.h: 1067: RXF5SIDLbits.SID1 = 0x00;
  4888  000BF2  010F               	movlb	15	; () banked
  4889  000BF4  9D15               	bcf	21,6,b	;volatile
  4890  000BF6                     l527:
  4891                           
  4892                           ; BSR set to: 15
  4893                           ;inc\CANlib.h: 1069: if (filter & 0x00100000)
  4894  000BF6  0100               	movlb	0	; () banked
  4895  000BF8  A9AA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4896  000BFA  D003               	goto	l528
  4897                           
  4898                           ; BSR set to: 0
  4899                           ;inc\CANlib.h: 1070: RXF5SIDLbits.SID2 = 0x01 ;
  4900  000BFC  010F               	movlb	15	; () banked
  4901  000BFE  8F15               	bsf	21,7,b	;volatile
  4902  000C00  D002               	goto	l3318
  4903  000C02                     l528:
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;inc\CANlib.h: 1071: else
  4907                           ;inc\CANlib.h: 1072: RXF5SIDLbits.SID2 = 0x00 ;
  4908  000C02  010F               	movlb	15	; () banked
  4909  000C04  9F15               	bcf	21,7,b	;volatile
  4910  000C06                     l3318:
  4911                           
  4912                           ; BSR set to: 15
  4913                           ;inc\CANlib.h: 1074: tamp = (filter >> 21);
  4914  000C06  C0A8  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  4915  000C0A  C0A9  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4916  000C0E  C0AA  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4917  000C12  C0AB  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4918  000C16  0E16               	movlw	22
  4919  000C18  D006               	goto	u3780
  4920  000C1A                     u3785:
  4921  000C1A  0100               	movlb	0	; () banked
  4922  000C1C  90D8               	bcf	status,0,c
  4923  000C1E  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4924  000C20  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4925  000C22  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4926  000C24  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  4927  000C26                     u3780:
  4928  000C26  2EE8               	decfsz	wreg,f,c
  4929  000C28  D7F8               	goto	u3785
  4930  000C2A  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4931  000C2E  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4932  000C32  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4933  000C36  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4934                           
  4935                           ; BSR set to: 0
  4936                           ;inc\CANlib.h: 1075: tamp = tamp & 0x000000FF;
  4937  000C3A  0100               	movlb	0	; () banked
  4938  000C3C  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  4939  000C3E  0100               	movlb	0	; () banked
  4940  000C40  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4941  000C42  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4942  000C44  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4943  000C46  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4944                           
  4945                           ; BSR set to: 0
  4946                           ;inc\CANlib.h: 1076: RXF5SIDH = (unsigned char) tamp;
  4947  000C48  C0B2  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4948  000C4C  0012               	return	
  4949  000C4E                     __end_of_CANSetFilter:
  4950                           	opt stack 0
  4951                           tblptru	equ	0xFF8
  4952                           tblptrh	equ	0xFF7
  4953                           tblptrl	equ	0xFF6
  4954                           tablat	equ	0xFF5
  4955                           prodh	equ	0xFF4
  4956                           prodl	equ	0xFF3
  4957                           intcon	equ	0xFF2
  4958                           postinc0	equ	0xFEE
  4959                           wreg	equ	0xFE8
  4960                           indf1	equ	0xFE7
  4961                           postinc1	equ	0xFE6
  4962                           postdec1	equ	0xFE5
  4963                           fsr1h	equ	0xFE2
  4964                           fsr1l	equ	0xFE1
  4965                           indf2	equ	0xFDF
  4966                           postinc2	equ	0xFDE
  4967                           fsr2h	equ	0xFDA
  4968                           fsr2l	equ	0xFD9
  4969                           status	equ	0xFD8
  4970                           
  4971 ;; *************** function _CANOperationMode *****************
  4972 ;; Defined at:
  4973 ;;		line 207 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;  mode            1    wreg     enum E16838
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;  mode            1   20[BANK0 ] enum E16838
  4978 ;; Return value:  Size  Location     Type
  4979 ;;		None               void
  4980 ;; Registers used:
  4981 ;;		wreg, status,2, status,0
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 0/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4987 ;;      Params:         0       0       0       0
  4988 ;;      Locals:         0       1       0       0
  4989 ;;      Temps:          0       0       0       0
  4990 ;;      Totals:         0       1       0       0
  4991 ;;Total ram usage:        1 bytes
  4992 ;; Hardware stack levels used:    1
  4993 ;; Hardware stack levels required when called:    5
  4994 ;; This function calls:
  4995 ;;		Nothing
  4996 ;; This function is called by:
  4997 ;;		_CANInitialize
  4998 ;; This function uses a non-reentrant model
  4999 ;;
  5000                           
  5001                           	psect	text10
  5002  002CFA                     __ptext10:
  5003                           	opt stack 0
  5004  002CFA                     _CANOperationMode:
  5005                           	opt stack 23
  5006                           
  5007                           ; BSR set to: 0
  5008                           ;incstack = 0
  5009                           ;CANOperationMode@mode stored from wreg
  5010  002CFA  0100               	movlb	0	; () banked
  5011  002CFC  6FA8               	movwf	CANOperationMode@mode& (0+255),b
  5012                           
  5013                           ;inc\CANlib.h: 209: CANCON = mode;
  5014  002CFE  C0A8  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5015  002D02                     l2914:
  5016  002D02  506E               	movf	3950,w,c	;volatile
  5017  002D04  0BE0               	andlw	224
  5018  002D06  0100               	movlb	0	; () banked
  5019  002D08  19A8               	xorwf	CANOperationMode@mode& (0+255),w,b
  5020  002D0A  B4D8               	btfsc	status,2,c
  5021  002D0C  0012               	return	
  5022  002D0E  D7F9               	goto	l2914
  5023  002D10                     __end_of_CANOperationMode:
  5024                           	opt stack 0
  5025                           tblptru	equ	0xFF8
  5026                           tblptrh	equ	0xFF7
  5027                           tblptrl	equ	0xFF6
  5028                           tablat	equ	0xFF5
  5029                           prodh	equ	0xFF4
  5030                           prodl	equ	0xFF3
  5031                           intcon	equ	0xFF2
  5032                           postinc0	equ	0xFEE
  5033                           wreg	equ	0xFE8
  5034                           indf1	equ	0xFE7
  5035                           postinc1	equ	0xFE6
  5036                           postdec1	equ	0xFE5
  5037                           fsr1h	equ	0xFE2
  5038                           fsr1l	equ	0xFE1
  5039                           indf2	equ	0xFDF
  5040                           postinc2	equ	0xFDE
  5041                           fsr2h	equ	0xFDA
  5042                           fsr2l	equ	0xFD9
  5043                           status	equ	0xFD8
  5044                           
  5045 ;; *************** function _can_interpreter *****************
  5046 ;; Defined at:
  5047 ;;		line 200 in file "CanToSerial.c"
  5048 ;; Parameters:    Size  Location     Type
  5049 ;;		None
  5050 ;; Auto vars:     Size  Location     Type
  5051 ;;		None
  5052 ;; Return value:  Size  Location     Type
  5053 ;;		None               void
  5054 ;; Registers used:
  5055 ;;		wreg, status,2, status,0
  5056 ;; Tracked objects:
  5057 ;;		On entry : 0/0
  5058 ;;		On exit  : 0/0
  5059 ;;		Unchanged: 0/0
  5060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5061 ;;      Params:         0       0       0       0
  5062 ;;      Locals:         0       0       0       0
  5063 ;;      Temps:          0       8       0       0
  5064 ;;      Totals:         0       8       0       0
  5065 ;;Total ram usage:        8 bytes
  5066 ;; Hardware stack levels used:    1
  5067 ;; Hardware stack levels required when called:    5
  5068 ;; This function calls:
  5069 ;;		Nothing
  5070 ;; This function is called by:
  5071 ;;		_main
  5072 ;; This function uses a non-reentrant model
  5073 ;;
  5074                           
  5075                           	psect	text11
  5076  00274A                     __ptext11:
  5077                           	opt stack 0
  5078  00274A                     _can_interpreter:
  5079                           	opt stack 25
  5080                           
  5081                           ;CanToSerial.c: 202: if (id == 0b00000000000000000000000000010) {
  5082                           
  5083                           ; BSR set to: 0
  5084                           ;incstack = 0
  5085  00274A  0E02               	movlw	2
  5086  00274C  1825               	xorwf	_id,w,c	;volatile
  5087  00274E  1026               	iorwf	_id+1,w,c	;volatile
  5088  002750  1027               	iorwf	_id+2,w,c	;volatile
  5089  002752  1028               	iorwf	_id+3,w,c	;volatile
  5090  002754  A4D8               	btfss	status,2,c
  5091  002756  D07A               	goto	l3932
  5092                           
  5093                           ;CanToSerial.c: 203: if (RTR_Flag == 1) {
  5094  002758  A046               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
  5095  00275A  D00D               	goto	l3916
  5096                           
  5097                           ;CanToSerial.c: 204: previousTimeCounter = timeCounter;
  5098  00275C  C02D  F029         	movff	_timeCounter,_previousTimeCounter	;volatile
  5099  002760  C02E  F02A         	movff	_timeCounter+1,_previousTimeCounter+1	;volatile
  5100  002764  C02F  F02B         	movff	_timeCounter+2,_previousTimeCounter+2	;volatile
  5101  002768  C030  F02C         	movff	_timeCounter+3,_previousTimeCounter+3	;volatile
  5102                           
  5103                           ;CanToSerial.c: 208: LATDbits.LATD4 = 1;
  5104  00276C  888C               	bsf	3980,4,c	;volatile
  5105                           
  5106                           ;CanToSerial.c: 209: LATDbits.LATD5 = 0;
  5107  00276E  9A8C               	bcf	3980,5,c	;volatile
  5108                           
  5109                           ;CanToSerial.c: 210: LATDbits.LATD6 = 0;
  5110  002770  9C8C               	bcf	3980,6,c	;volatile
  5111                           
  5112                           ;CanToSerial.c: 211: LATDbits.LATD2 = 1;
  5113  002772  848C               	bsf	3980,2,c	;volatile
  5114                           
  5115                           ;CanToSerial.c: 212: } else {
  5116  002774  D00D               	goto	l3924
  5117  002776                     l3916:
  5118                           
  5119                           ;CanToSerial.c: 213: if (data[0] == 0x01) {
  5120  002776  0100               	movlb	0	; () banked
  5121  002778  0584               	decf	_data& (0+255),w,b
  5122  00277A  A4D8               	btfss	status,2,c
  5123  00277C  D002               	goto	l3920
  5124                           
  5125                           ; BSR set to: 0
  5126                           ;CanToSerial.c: 214: LATDbits.LATD5 = 1;
  5127  00277E  8A8C               	bsf	3980,5,c	;volatile
  5128                           
  5129                           ;CanToSerial.c: 215: PORTCbits.RC5 = 0;
  5130  002780  9A82               	bcf	3970,5,c	;volatile
  5131  002782                     l3920:
  5132                           
  5133                           ; BSR set to: 0
  5134                           ;CanToSerial.c: 216: }
  5135                           ;CanToSerial.c: 217: if (data[0] == 0x02) {
  5136  002782  0E02               	movlw	2
  5137  002784  0100               	movlb	0	; () banked
  5138  002786  1984               	xorwf	_data& (0+255),w,b
  5139  002788  A4D8               	btfss	status,2,c
  5140  00278A  D002               	goto	l3924
  5141                           
  5142                           ; BSR set to: 0
  5143                           ;CanToSerial.c: 218: LATDbits.LATD6 = 1;
  5144  00278C  8C8C               	bsf	3980,6,c	;volatile
  5145                           
  5146                           ;CanToSerial.c: 219: PORTCbits.RC4 = 0;
  5147  00278E  9882               	bcf	3970,4,c	;volatile
  5148  002790                     l3924:
  5149                           
  5150                           ;CanToSerial.c: 220: }
  5151                           ;CanToSerial.c: 221: }
  5152                           ;CanToSerial.c: 222: if (previousTimeCounter - timeCounter > 450) {
  5153  002790  C02D  F0A8         	movff	_timeCounter,??_can_interpreter	;volatile
  5154  002794  C02E  F0A9         	movff	_timeCounter+1,??_can_interpreter+1	;volatile
  5155  002798  C02F  F0AA         	movff	_timeCounter+2,??_can_interpreter+2	;volatile
  5156  00279C  C030  F0AB         	movff	_timeCounter+3,??_can_interpreter+3	;volatile
  5157  0027A0  0100               	movlb	0	; () banked
  5158  0027A2  1FA8               	comf	??_can_interpreter& (0+255),f,b
  5159  0027A4  1FA9               	comf	(??_can_interpreter+1)& (0+255),f,b
  5160  0027A6  1FAA               	comf	(??_can_interpreter+2)& (0+255),f,b
  5161  0027A8  1FAB               	comf	(??_can_interpreter+3)& (0+255),f,b
  5162  0027AA  2BA8               	incf	??_can_interpreter& (0+255),f,b
  5163  0027AC  0E00               	movlw	0
  5164  0027AE  23A9               	addwfc	(??_can_interpreter+1)& (0+255),f,b
  5165  0027B0  23AA               	addwfc	(??_can_interpreter+2)& (0+255),f,b
  5166  0027B2  23AB               	addwfc	(??_can_interpreter+3)& (0+255),f,b
  5167  0027B4  5029               	movf	_previousTimeCounter,w,c
  5168  0027B6  0100               	movlb	0	; () banked
  5169  0027B8  25A8               	addwf	??_can_interpreter& (0+255),w,b
  5170  0027BA  0100               	movlb	0	; () banked
  5171  0027BC  6FAC               	movwf	(??_can_interpreter+4)& (0+255),b
  5172  0027BE  502A               	movf	_previousTimeCounter+1,w,c
  5173  0027C0  0100               	movlb	0	; () banked
  5174  0027C2  21A9               	addwfc	(??_can_interpreter+1)& (0+255),w,b
  5175  0027C4  0100               	movlb	0	; () banked
  5176  0027C6  6FAD               	movwf	(??_can_interpreter+5)& (0+255),b
  5177  0027C8  502B               	movf	_previousTimeCounter+2,w,c
  5178  0027CA  0100               	movlb	0	; () banked
  5179  0027CC  21AA               	addwfc	(??_can_interpreter+2)& (0+255),w,b
  5180  0027CE  0100               	movlb	0	; () banked
  5181  0027D0  6FAE               	movwf	(??_can_interpreter+6)& (0+255),b
  5182  0027D2  502C               	movf	_previousTimeCounter+3,w,c
  5183  0027D4  0100               	movlb	0	; () banked
  5184  0027D6  21AB               	addwfc	(??_can_interpreter+3)& (0+255),w,b
  5185  0027D8  0100               	movlb	0	; () banked
  5186  0027DA  6FAF               	movwf	(??_can_interpreter+7)& (0+255),b
  5187  0027DC  0100               	movlb	0	; () banked
  5188  0027DE  51AF               	movf	(??_can_interpreter+7)& (0+255),w,b
  5189  0027E0  0100               	movlb	0	; () banked
  5190  0027E2  11AE               	iorwf	(??_can_interpreter+6)& (0+255),w,b
  5191  0027E4  E108               	bnz	u4740
  5192  0027E6  0EC3               	movlw	195
  5193  0027E8  0100               	movlb	0	; () banked
  5194  0027EA  5DAC               	subwf	(??_can_interpreter+4)& (0+255),w,b
  5195  0027EC  0E01               	movlw	1
  5196  0027EE  0100               	movlb	0	; () banked
  5197  0027F0  59AD               	subwfb	(??_can_interpreter+5)& (0+255),w,b
  5198  0027F2  A0D8               	btfss	status,0,c
  5199  0027F4  D02B               	goto	l3932
  5200  0027F6                     u4740:
  5201                           
  5202                           ; BSR set to: 0
  5203                           ;CanToSerial.c: 223: SerialOutput[4] = LATDbits.LATD6;
  5204  0027F6  0E00               	movlw	0
  5205  0027F8  BC8C               	btfsc	3980,6,c	;volatile
  5206  0027FA  0E01               	movlw	1
  5207  0027FC  0100               	movlb	0	; () banked
  5208  0027FE  6FD3               	movwf	(_SerialOutput+4)& (0+255),b
  5209                           
  5210                           ; BSR set to: 0
  5211                           ;CanToSerial.c: 224: SerialOutput[4] = ((SerialOutput[5] < 1) | LATDbits.LATD5);
  5212  002800  AA8C               	btfss	3980,5,c	;volatile
  5213  002802  D004               	goto	u4750
  5214  002804  0100               	movlb	0	; () banked
  5215  002806  6BA8               	clrf	??_can_interpreter& (0+255),b
  5216  002808  2BA8               	incf	??_can_interpreter& (0+255),f,b
  5217  00280A  D002               	goto	u4758
  5218  00280C                     u4750:
  5219  00280C  0100               	movlb	0	; () banked
  5220  00280E  6BA8               	clrf	??_can_interpreter& (0+255),b
  5221  002810                     u4758:
  5222  002810  0100               	movlb	0	; () banked
  5223  002812  51D4               	movf	(_SerialOutput+5)& (0+255),w,b
  5224  002814  A4D8               	btfss	status,2,c
  5225  002816  D002               	goto	u4760
  5226  002818  0E01               	movlw	1
  5227  00281A  D001               	goto	u4770
  5228  00281C                     u4760:
  5229  00281C  0E00               	movlw	0
  5230  00281E                     u4770:
  5231  00281E  0100               	movlb	0	; () banked
  5232  002820  11A8               	iorwf	??_can_interpreter& (0+255),w,b
  5233  002822  0100               	movlb	0	; () banked
  5234  002824  6FD3               	movwf	(_SerialOutput+4)& (0+255),b
  5235                           
  5236                           ; BSR set to: 0
  5237                           ;CanToSerial.c: 225: SerialOutput[4] = ((SerialOutput[5] < 1) | LATDbits.LATD4);
  5238  002826  A88C               	btfss	3980,4,c	;volatile
  5239  002828  D004               	goto	u4780
  5240  00282A  0100               	movlb	0	; () banked
  5241  00282C  6BA8               	clrf	??_can_interpreter& (0+255),b
  5242  00282E  2BA8               	incf	??_can_interpreter& (0+255),f,b
  5243  002830  D002               	goto	u4788
  5244  002832                     u4780:
  5245  002832  0100               	movlb	0	; () banked
  5246  002834  6BA8               	clrf	??_can_interpreter& (0+255),b
  5247  002836                     u4788:
  5248  002836  0100               	movlb	0	; () banked
  5249  002838  51D4               	movf	(_SerialOutput+5)& (0+255),w,b
  5250  00283A  A4D8               	btfss	status,2,c
  5251  00283C  D002               	goto	u4790
  5252  00283E  0E01               	movlw	1
  5253  002840  D001               	goto	u4800
  5254  002842                     u4790:
  5255  002842  0E00               	movlw	0
  5256  002844                     u4800:
  5257  002844  0100               	movlb	0	; () banked
  5258  002846  11A8               	iorwf	??_can_interpreter& (0+255),w,b
  5259  002848  0100               	movlb	0	; () banked
  5260  00284A  6FD3               	movwf	(_SerialOutput+4)& (0+255),b
  5261  00284C                     l3932:
  5262                           
  5263                           ;CanToSerial.c: 226: }
  5264                           ;CanToSerial.c: 227: }
  5265                           ;CanToSerial.c: 228: if ((id == 0b00000000000000000000000000110)&&(RTR_Flag == 0)) {
  5266  00284C  0E06               	movlw	6
  5267  00284E  1825               	xorwf	_id,w,c	;volatile
  5268  002850  1026               	iorwf	_id+1,w,c	;volatile
  5269  002852  1027               	iorwf	_id+2,w,c	;volatile
  5270  002854  1028               	iorwf	_id+3,w,c	;volatile
  5271  002856  B4D8               	btfsc	status,2,c
  5272  002858  B046               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
  5273  00285A  D04B               	goto	l3948
  5274                           
  5275                           ;CanToSerial.c: 229: left_speed = data[1];
  5276  00285C  C085  F031         	movff	_data+1,_left_speed
  5277  002860  6A32               	clrf	_left_speed+1,c
  5278                           
  5279                           ;CanToSerial.c: 230: left_speed = ((left_speed << 8) | (data[0]));
  5280  002862  5031               	movf	_left_speed,w,c
  5281  002864  0100               	movlb	0	; () banked
  5282  002866  6FA8               	movwf	??_can_interpreter& (0+255),b
  5283  002868  0100               	movlb	0	; () banked
  5284  00286A  5184               	movf	_data& (0+255),w,b
  5285  00286C  6E31               	movwf	_left_speed,c
  5286  00286E  C0A8  F032         	movff	??_can_interpreter,_left_speed+1
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;CanToSerial.c: 231: right_speed = data[3];
  5290  002872  C087  F033         	movff	_data+3,_right_speed
  5291  002876  6A34               	clrf	_right_speed+1,c
  5292                           
  5293                           ;CanToSerial.c: 232: right_speed = ((right_speed << 8) | (data[2]));
  5294  002878  5033               	movf	_right_speed,w,c
  5295  00287A  0100               	movlb	0	; () banked
  5296  00287C  6FA8               	movwf	??_can_interpreter& (0+255),b
  5297  00287E  0100               	movlb	0	; () banked
  5298  002880  5186               	movf	(_data+2)& (0+255),w,b
  5299  002882  6E33               	movwf	_right_speed,c
  5300  002884  C0A8  F034         	movff	??_can_interpreter,_right_speed+1
  5301                           
  5302                           ; BSR set to: 0
  5303                           ;CanToSerial.c: 233: SerialOutput[3] = ((left_speed + right_speed) / 2);
  5304  002888  5033               	movf	_right_speed,w,c
  5305  00288A  2431               	addwf	_left_speed,w,c
  5306  00288C  0100               	movlb	0	; () banked
  5307  00288E  6FA8               	movwf	??_can_interpreter& (0+255),b
  5308  002890  5034               	movf	_right_speed+1,w,c
  5309  002892  2032               	addwfc	_left_speed+1,w,c
  5310  002894  0100               	movlb	0	; () banked
  5311  002896  6FA9               	movwf	(??_can_interpreter+1)& (0+255),b
  5312  002898  90D8               	bcf	status,0,c
  5313  00289A  0100               	movlb	0	; () banked
  5314  00289C  31A9               	rrcf	(??_can_interpreter+1)& (0+255),w,b
  5315  00289E  0100               	movlb	0	; () banked
  5316  0028A0  6FAB               	movwf	(??_can_interpreter+3)& (0+255),b
  5317  0028A2  0100               	movlb	0	; () banked
  5318  0028A4  31A8               	rrcf	??_can_interpreter& (0+255),w,b
  5319  0028A6  0100               	movlb	0	; () banked
  5320  0028A8  6FAA               	movwf	(??_can_interpreter+2)& (0+255),b
  5321  0028AA  0100               	movlb	0	; () banked
  5322  0028AC  51AA               	movf	(??_can_interpreter+2)& (0+255),w,b
  5323  0028AE  0100               	movlb	0	; () banked
  5324  0028B0  6FD2               	movwf	(_SerialOutput+3)& (0+255),b
  5325                           
  5326                           ; BSR set to: 0
  5327                           ;CanToSerial.c: 234: SerialOutput[2] = (((left_speed + right_speed) / 2) >> 8);
  5328  0028B2  5033               	movf	_right_speed,w,c
  5329  0028B4  2431               	addwf	_left_speed,w,c
  5330  0028B6  0100               	movlb	0	; () banked
  5331  0028B8  6FA8               	movwf	??_can_interpreter& (0+255),b
  5332  0028BA  5034               	movf	_right_speed+1,w,c
  5333  0028BC  2032               	addwfc	_left_speed+1,w,c
  5334  0028BE  0100               	movlb	0	; () banked
  5335  0028C0  6FA9               	movwf	(??_can_interpreter+1)& (0+255),b
  5336  0028C2  90D8               	bcf	status,0,c
  5337  0028C4  0100               	movlb	0	; () banked
  5338  0028C6  31A9               	rrcf	(??_can_interpreter+1)& (0+255),w,b
  5339  0028C8  0100               	movlb	0	; () banked
  5340  0028CA  6FAB               	movwf	(??_can_interpreter+3)& (0+255),b
  5341  0028CC  0100               	movlb	0	; () banked
  5342  0028CE  31A8               	rrcf	??_can_interpreter& (0+255),w,b
  5343  0028D0  0100               	movlb	0	; () banked
  5344  0028D2  6FAA               	movwf	(??_can_interpreter+2)& (0+255),b
  5345  0028D4  C0AB  F0AA         	movff	??_can_interpreter+3,??_can_interpreter+2
  5346  0028D8  0100               	movlb	0	; () banked
  5347  0028DA  6BAB               	clrf	(??_can_interpreter+3)& (0+255),b
  5348  0028DC  0100               	movlb	0	; () banked
  5349  0028DE  51AA               	movf	(??_can_interpreter+2)& (0+255),w,b
  5350  0028E0  0100               	movlb	0	; () banked
  5351  0028E2  6FD1               	movwf	(_SerialOutput+2)& (0+255),b
  5352                           
  5353                           ;CanToSerial.c: 235: if (SerialOutput[2] == 0){
  5354  0028E4  0100               	movlb	0	; () banked
  5355  0028E6  51D1               	movf	(_SerialOutput+2)& (0+255),w,b
  5356  0028E8  A4D8               	btfss	status,2,c
  5357  0028EA  D003               	goto	l3948
  5358                           
  5359                           ; BSR set to: 0
  5360                           ;CanToSerial.c: 236: SerialOutput[2] = 0b10000000;
  5361  0028EC  0E80               	movlw	128
  5362  0028EE  0100               	movlb	0	; () banked
  5363  0028F0  6FD1               	movwf	(_SerialOutput+2)& (0+255),b
  5364  0028F2                     l3948:
  5365                           
  5366                           ;CanToSerial.c: 237: }
  5367                           ;CanToSerial.c: 238: }
  5368                           ;CanToSerial.c: 239: if (id == 0b00000000000000000000000001001) {
  5369  0028F2  0E09               	movlw	9
  5370  0028F4  1825               	xorwf	_id,w,c	;volatile
  5371  0028F6  1026               	iorwf	_id+1,w,c	;volatile
  5372  0028F8  1027               	iorwf	_id+2,w,c	;volatile
  5373  0028FA  1028               	iorwf	_id+3,w,c	;volatile
  5374  0028FC  A4D8               	btfss	status,2,c
  5375  0028FE  0012               	return	
  5376                           
  5377                           ;CanToSerial.c: 240: SerialOutput[5] = data[0];
  5378  002900  C084  F0D4         	movff	_data,_SerialOutput+5
  5379  002904  0012               	return	
  5380  002906                     __end_of_can_interpreter:
  5381                           	opt stack 0
  5382                           tblptru	equ	0xFF8
  5383                           tblptrh	equ	0xFF7
  5384                           tblptrl	equ	0xFF6
  5385                           tablat	equ	0xFF5
  5386                           prodh	equ	0xFF4
  5387                           prodl	equ	0xFF3
  5388                           intcon	equ	0xFF2
  5389                           postinc0	equ	0xFEE
  5390                           wreg	equ	0xFE8
  5391                           indf1	equ	0xFE7
  5392                           postinc1	equ	0xFE6
  5393                           postdec1	equ	0xFE5
  5394                           fsr1h	equ	0xFE2
  5395                           fsr1l	equ	0xFE1
  5396                           indf2	equ	0xFDF
  5397                           postinc2	equ	0xFDE
  5398                           fsr2h	equ	0xFDA
  5399                           fsr2l	equ	0xFD9
  5400                           status	equ	0xFD8
  5401                           
  5402 ;; *************** function _CANsendMessage *****************
  5403 ;; Defined at:
  5404 ;;		line 295 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;  identifier      4   20[BANK0 ] unsigned long 
  5407 ;;  data            2   24[BANK0 ] PTR unsigned char 
  5408 ;;		 -> analogic_brake(8), set_speed(8), set_steering(8), data(8), 
  5409 ;;  dataLength      1   26[BANK0 ] unsigned char 
  5410 ;;  flags           1   27[BANK0 ] enum E16866
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;  tamp            4   32[BANK0 ] unsigned long 
  5413 ;; Return value:  Size  Location     Type
  5414 ;;		None               void
  5415 ;; Registers used:
  5416 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5422 ;;      Params:         0       8       0       0
  5423 ;;      Locals:         0       4       0       0
  5424 ;;      Temps:          0       4       0       0
  5425 ;;      Totals:         0      16       0       0
  5426 ;;Total ram usage:       16 bytes
  5427 ;; Hardware stack levels used:    1
  5428 ;; Hardware stack levels required when called:    5
  5429 ;; This function calls:
  5430 ;;		Nothing
  5431 ;; This function is called by:
  5432 ;;		_main
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436                           	psect	text12
  5437  000C4E                     __ptext12:
  5438                           	opt stack 0
  5439  000C4E                     _CANsendMessage:
  5440                           	opt stack 25
  5441                           
  5442                           ;inc\CANlib.h: 297: unsigned long tamp;
  5443                           ;inc\CANlib.h: 299: if (TXB0CONbits.TXREQ == 0)
  5444                           
  5445                           ;incstack = 0
  5446  000C4E  010F               	movlb	15	; () banked
  5447  000C50  B740               	btfsc	64,3,b	;volatile
  5448  000C52  D13F               	goto	l365
  5449                           
  5450                           ; BSR set to: 15
  5451                           ;inc\CANlib.h: 300: { TXB0DLC = dataLength;
  5452  000C54  C0AE  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  5453                           
  5454                           ;inc\CANlib.h: 301: if (0b01000000 & flags)
  5455  000C58  0100               	movlb	0	; () banked
  5456  000C5A  ADAF               	btfss	CANsendMessage@flags& (0+255),6,b
  5457  000C5C  D003               	goto	l366
  5458                           
  5459                           ; BSR set to: 0
  5460                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x01;
  5461  000C5E  010F               	movlb	15	; () banked
  5462  000C60  8D45               	bsf	69,6,b	;volatile
  5463  000C62  D002               	goto	l367
  5464  000C64                     l366:
  5465                           
  5466                           ; BSR set to: 0
  5467                           ;inc\CANlib.h: 303: else
  5468                           ;inc\CANlib.h: 304: TXB0DLCbits.TXRTR = 0x00;
  5469  000C64  010F               	movlb	15	; () banked
  5470  000C66  9D45               	bcf	69,6,b	;volatile
  5471  000C68                     l367:
  5472                           
  5473                           ; BSR set to: 15
  5474                           ;inc\CANlib.h: 306: if (CAN_TX_FRAME_MASK & flags)
  5475  000C68  0100               	movlb	0	; () banked
  5476  000C6A  A7AF               	btfss	CANsendMessage@flags& (0+255),3,b
  5477  000C6C  D079               	goto	l368
  5478                           
  5479                           ; BSR set to: 0
  5480                           ;inc\CANlib.h: 307: {
  5481                           ;inc\CANlib.h: 309: tamp = identifier & 0x000000FF;
  5482  000C6E  0100               	movlb	0	; () banked
  5483  000C70  51A8               	movf	CANsendMessage@identifier& (0+255),w,b
  5484  000C72  0100               	movlb	0	; () banked
  5485  000C74  6FB4               	movwf	CANsendMessage@tamp& (0+255),b
  5486  000C76  6BB5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5487  000C78  6BB6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5488  000C7A  6BB7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5489                           
  5490                           ; BSR set to: 0
  5491                           ;inc\CANlib.h: 310: TXB0EIDL = (unsigned char) tamp;
  5492  000C7C  C0B4  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  5493                           
  5494                           ; BSR set to: 0
  5495                           ;inc\CANlib.h: 312: tamp = identifier & 0x0000FF00;
  5496  000C80  0E00               	movlw	0
  5497  000C82  0100               	movlb	0	; () banked
  5498  000C84  15A8               	andwf	CANsendMessage@identifier& (0+255),w,b
  5499  000C86  0100               	movlb	0	; () banked
  5500  000C88  6FB4               	movwf	CANsendMessage@tamp& (0+255),b
  5501  000C8A  0EFF               	movlw	255
  5502  000C8C  0100               	movlb	0	; () banked
  5503  000C8E  15A9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5504  000C90  0100               	movlb	0	; () banked
  5505  000C92  6FB5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5506  000C94  0E00               	movlw	0
  5507  000C96  0100               	movlb	0	; () banked
  5508  000C98  15AA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5509  000C9A  0100               	movlb	0	; () banked
  5510  000C9C  6FB6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5511  000C9E  0E00               	movlw	0
  5512  000CA0  0100               	movlb	0	; () banked
  5513  000CA2  15AB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5514  000CA4  0100               	movlb	0	; () banked
  5515  000CA6  6FB7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;inc\CANlib.h: 313: tamp = tamp >> 8;
  5519  000CA8  C0B4  F0B0         	movff	CANsendMessage@tamp,??_CANsendMessage
  5520  000CAC  C0B5  F0B1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5521  000CB0  C0B6  F0B2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5522  000CB4  C0B7  F0B3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5523  000CB8  C0B1  F0B0         	movff	??_CANsendMessage+1,??_CANsendMessage
  5524  000CBC  C0B2  F0B1         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  5525  000CC0  C0B3  F0B2         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  5526  000CC4  0100               	movlb	0	; () banked
  5527  000CC6  6BB3               	clrf	(??_CANsendMessage+3)& (0+255),b
  5528  000CC8  C0B0  F0B4         	movff	??_CANsendMessage,CANsendMessage@tamp
  5529  000CCC  C0B1  F0B5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5530  000CD0  C0B2  F0B6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5531  000CD4  C0B3  F0B7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5532                           
  5533                           ; BSR set to: 0
  5534                           ;inc\CANlib.h: 314: TXB0EIDH = (unsigned char) tamp;
  5535  000CD8  C0B4  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  5536                           
  5537                           ; BSR set to: 0
  5538                           ;inc\CANlib.h: 316: TXB0SIDL = 0x00;
  5539  000CDC  0E00               	movlw	0
  5540  000CDE  010F               	movlb	15	; () banked
  5541  000CE0  6F42               	movwf	66,b	;volatile
  5542                           
  5543                           ; BSR set to: 15
  5544                           ;inc\CANlib.h: 317: TXB0SIDLbits.EXIDE = 0x01;
  5545  000CE2  010F               	movlb	15	; () banked
  5546  000CE4  8742               	bsf	66,3,b	;volatile
  5547                           
  5548                           ; BSR set to: 15
  5549                           ;inc\CANlib.h: 319: if (identifier & 0x00010000)
  5550  000CE6  0100               	movlb	0	; () banked
  5551  000CE8  A1AA               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  5552  000CEA  D002               	goto	l369
  5553                           
  5554                           ; BSR set to: 0
  5555                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID16 = 0x01;
  5556  000CEC  010F               	movlb	15	; () banked
  5557  000CEE  8142               	bsf	66,0,b	;volatile
  5558  000CF0                     l369:
  5559                           
  5560                           ;inc\CANlib.h: 321: if (identifier & 0x00020000)
  5561  000CF0  0100               	movlb	0	; () banked
  5562  000CF2  A3AA               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  5563  000CF4  D002               	goto	l370
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;inc\CANlib.h: 322: TXB0SIDLbits.EID17 = 0x01;
  5567  000CF6  010F               	movlb	15	; () banked
  5568  000CF8  8342               	bsf	66,1,b	;volatile
  5569  000CFA                     l370:
  5570                           
  5571                           ;inc\CANlib.h: 323: if (identifier & 0x00040000)
  5572  000CFA  0100               	movlb	0	; () banked
  5573  000CFC  A5AA               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  5574  000CFE  D002               	goto	l371
  5575                           
  5576                           ; BSR set to: 0
  5577                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID0 = 0x01;
  5578  000D00  010F               	movlb	15	; () banked
  5579  000D02  8B42               	bsf	66,5,b	;volatile
  5580  000D04                     l371:
  5581                           
  5582                           ;inc\CANlib.h: 325: if (identifier & 0x00080000)
  5583  000D04  0100               	movlb	0	; () banked
  5584  000D06  A7AA               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  5585  000D08  D002               	goto	l372
  5586                           
  5587                           ; BSR set to: 0
  5588                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID1 = 0x01;
  5589  000D0A  010F               	movlb	15	; () banked
  5590  000D0C  8D42               	bsf	66,6,b	;volatile
  5591  000D0E                     l372:
  5592                           
  5593                           ;inc\CANlib.h: 327: if (identifier & 0x00100000)
  5594  000D0E  0100               	movlb	0	; () banked
  5595  000D10  A9AA               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  5596  000D12  D002               	goto	l3488
  5597                           
  5598                           ; BSR set to: 0
  5599                           ;inc\CANlib.h: 328: TXB0SIDLbits.SID2 = 0x01;
  5600  000D14  010F               	movlb	15	; () banked
  5601  000D16  8F42               	bsf	66,7,b	;volatile
  5602  000D18                     l3488:
  5603                           
  5604                           ;inc\CANlib.h: 330: tamp = (identifier >> 21);
  5605  000D18  C0A8  F0B0         	movff	CANsendMessage@identifier,??_CANsendMessage
  5606  000D1C  C0A9  F0B1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5607  000D20  C0AA  F0B2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5608  000D24  C0AB  F0B3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5609  000D28  0E16               	movlw	22
  5610  000D2A  D006               	goto	u4070
  5611  000D2C                     u4075:
  5612  000D2C  0100               	movlb	0	; () banked
  5613  000D2E  90D8               	bcf	status,0,c
  5614  000D30  33B3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5615  000D32  33B2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5616  000D34  33B1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5617  000D36  33B0               	rrcf	??_CANsendMessage& (0+255),f,b
  5618  000D38                     u4070:
  5619  000D38  2EE8               	decfsz	wreg,f,c
  5620  000D3A  D7F8               	goto	u4075
  5621  000D3C  C0B0  F0B4         	movff	??_CANsendMessage,CANsendMessage@tamp
  5622  000D40  C0B1  F0B5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5623  000D44  C0B2  F0B6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5624  000D48  C0B3  F0B7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;inc\CANlib.h: 331: tamp = tamp & 0x000000FF;
  5628  000D4C  0100               	movlb	0	; () banked
  5629  000D4E  51B4               	movf	CANsendMessage@tamp& (0+255),w,b
  5630  000D50  0100               	movlb	0	; () banked
  5631  000D52  6FB4               	movwf	CANsendMessage@tamp& (0+255),b
  5632  000D54  6BB5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5633  000D56  6BB6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5634  000D58  6BB7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5635                           
  5636                           ; BSR set to: 0
  5637                           ;inc\CANlib.h: 332: TXB0SIDH = (unsigned char) tamp;
  5638  000D5A  C0B4  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5639                           
  5640                           ;inc\CANlib.h: 333: }
  5641  000D5E  D059               	goto	l3508
  5642  000D60                     l368:
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;inc\CANlib.h: 335: else
  5646                           ;inc\CANlib.h: 337: {
  5647                           ;inc\CANlib.h: 338: TXB0SIDLbits.EXIDE = 0x00;
  5648  000D60  010F               	movlb	15	; () banked
  5649  000D62  9742               	bcf	66,3,b	;volatile
  5650                           
  5651                           ; BSR set to: 15
  5652                           ;inc\CANlib.h: 340: tamp = (identifier >> 3);
  5653  000D64  C0A8  F0B0         	movff	CANsendMessage@identifier,??_CANsendMessage
  5654  000D68  C0A9  F0B1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5655  000D6C  C0AA  F0B2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5656  000D70  C0AB  F0B3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5657  000D74  0E04               	movlw	4
  5658  000D76  D006               	goto	u4080
  5659  000D78                     u4085:
  5660  000D78  0100               	movlb	0	; () banked
  5661  000D7A  90D8               	bcf	status,0,c
  5662  000D7C  33B3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5663  000D7E  33B2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5664  000D80  33B1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5665  000D82  33B0               	rrcf	??_CANsendMessage& (0+255),f,b
  5666  000D84                     u4080:
  5667  000D84  2EE8               	decfsz	wreg,f,c
  5668  000D86  D7F8               	goto	u4085
  5669  000D88  C0B0  F0B4         	movff	??_CANsendMessage,CANsendMessage@tamp
  5670  000D8C  C0B1  F0B5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5671  000D90  C0B2  F0B6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5672  000D94  C0B3  F0B7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5673                           
  5674                           ; BSR set to: 0
  5675                           ;inc\CANlib.h: 341: tamp = tamp & 0x000000FF;
  5676  000D98  0100               	movlb	0	; () banked
  5677  000D9A  51B4               	movf	CANsendMessage@tamp& (0+255),w,b
  5678  000D9C  0100               	movlb	0	; () banked
  5679  000D9E  6FB4               	movwf	CANsendMessage@tamp& (0+255),b
  5680  000DA0  6BB5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5681  000DA2  6BB6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5682  000DA4  6BB7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5683                           
  5684                           ; BSR set to: 0
  5685                           ;inc\CANlib.h: 342: TXB0SIDH = (unsigned char) tamp;
  5686  000DA6  C0B4  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;inc\CANlib.h: 344: tamp = identifier & 0x00000007;
  5690  000DAA  0E07               	movlw	7
  5691  000DAC  0100               	movlb	0	; () banked
  5692  000DAE  15A8               	andwf	CANsendMessage@identifier& (0+255),w,b
  5693  000DB0  0100               	movlb	0	; () banked
  5694  000DB2  6FB4               	movwf	CANsendMessage@tamp& (0+255),b
  5695  000DB4  0E00               	movlw	0
  5696  000DB6  0100               	movlb	0	; () banked
  5697  000DB8  15A9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5698  000DBA  0100               	movlb	0	; () banked
  5699  000DBC  6FB5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5700  000DBE  0E00               	movlw	0
  5701  000DC0  0100               	movlb	0	; () banked
  5702  000DC2  15AA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5703  000DC4  0100               	movlb	0	; () banked
  5704  000DC6  6FB6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5705  000DC8  0E00               	movlw	0
  5706  000DCA  0100               	movlb	0	; () banked
  5707  000DCC  15AB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5708  000DCE  0100               	movlb	0	; () banked
  5709  000DD0  6FB7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5710                           
  5711                           ; BSR set to: 0
  5712                           ;inc\CANlib.h: 345: tamp = tamp << 5;
  5713  000DD2  C0B4  F0B0         	movff	CANsendMessage@tamp,??_CANsendMessage
  5714  000DD6  C0B5  F0B1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5715  000DDA  C0B6  F0B2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5716  000DDE  C0B7  F0B3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5717  000DE2  0E05               	movlw	5
  5718  000DE4                     u4095:
  5719  000DE4  90D8               	bcf	status,0,c
  5720  000DE6  0100               	movlb	0	; () banked
  5721  000DE8  37B0               	rlcf	??_CANsendMessage& (0+255),f,b
  5722  000DEA  37B1               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  5723  000DEC  37B2               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  5724  000DEE  37B3               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  5725  000DF0  2EE8               	decfsz	wreg,f,c
  5726  000DF2  D7F8               	goto	u4095
  5727  000DF4  C0B0  F0B4         	movff	??_CANsendMessage,CANsendMessage@tamp
  5728  000DF8  C0B1  F0B5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5729  000DFC  C0B2  F0B6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5730  000E00  C0B3  F0B7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5731                           
  5732                           ; BSR set to: 0
  5733                           ;inc\CANlib.h: 346: TXB0SIDL = TXB0SIDL & 0b00011111;
  5734  000E04  010F               	movlb	15	; () banked
  5735  000E06  5142               	movf	66,w,b	;volatile
  5736  000E08  0B1F               	andlw	31
  5737  000E0A  010F               	movlb	15	; () banked
  5738  000E0C  6F42               	movwf	66,b	;volatile
  5739                           
  5740                           ; BSR set to: 15
  5741                           ;inc\CANlib.h: 347: TXB0SIDL = (unsigned char) tamp;
  5742  000E0E  C0B4  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  5743  000E12                     l3508:
  5744                           
  5745                           ;inc\CANlib.h: 348: }
  5746                           ;inc\CANlib.h: 350: if (0b00000001 & flags)
  5747  000E12  0100               	movlb	0	; () banked
  5748  000E14  A1AF               	btfss	CANsendMessage@flags& (0+255),0,b
  5749  000E16  D003               	goto	l375
  5750                           
  5751                           ; BSR set to: 0
  5752                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x01;
  5753  000E18  010F               	movlb	15	; () banked
  5754  000E1A  8140               	bsf	64,0,b	;volatile
  5755  000E1C  D002               	goto	l376
  5756  000E1E                     l375:
  5757                           
  5758                           ; BSR set to: 0
  5759                           ;inc\CANlib.h: 352: else
  5760                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI0 = 0x00;
  5761  000E1E  010F               	movlb	15	; () banked
  5762  000E20  9140               	bcf	64,0,b	;volatile
  5763  000E22                     l376:
  5764                           
  5765                           ; BSR set to: 15
  5766                           ;inc\CANlib.h: 354: if (0b00000010 & flags)
  5767  000E22  0100               	movlb	0	; () banked
  5768  000E24  A3AF               	btfss	CANsendMessage@flags& (0+255),1,b
  5769  000E26  D003               	goto	l377
  5770                           
  5771                           ; BSR set to: 0
  5772                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x01;
  5773  000E28  010F               	movlb	15	; () banked
  5774  000E2A  8340               	bsf	64,1,b	;volatile
  5775  000E2C  D002               	goto	l3514
  5776  000E2E                     l377:
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;inc\CANlib.h: 356: else
  5780                           ;inc\CANlib.h: 357: TXB0CONbits.TXPRI1 = 0x00;
  5781  000E2E  010F               	movlb	15	; () banked
  5782  000E30  9340               	bcf	64,1,b	;volatile
  5783  000E32                     l3514:
  5784                           
  5785                           ; BSR set to: 15
  5786                           ;inc\CANlib.h: 359: TXB0D0 = data[0];
  5787  000E32  C0AC  FFD9         	movff	CANsendMessage@data,fsr2l
  5788  000E36  C0AD  FFDA         	movff	CANsendMessage@data+1,fsr2h
  5789  000E3A  50DF               	movf	indf2,w,c
  5790  000E3C  010F               	movlb	15	; () banked
  5791  000E3E  6F46               	movwf	70,b	;volatile
  5792                           
  5793                           ; BSR set to: 15
  5794                           ;inc\CANlib.h: 360: TXB0D1 = data[1];
  5795  000E40  0100               	movlb	0	; () banked
  5796  000E42  EE20 F001          	lfsr	2,1
  5797  000E46  51AC               	movf	CANsendMessage@data& (0+255),w,b
  5798  000E48  26D9               	addwf	fsr2l,f,c
  5799  000E4A  51AD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5800  000E4C  22DA               	addwfc	fsr2h,f,c
  5801  000E4E  50DF               	movf	indf2,w,c
  5802  000E50  010F               	movlb	15	; () banked
  5803  000E52  6F47               	movwf	71,b	;volatile
  5804                           
  5805                           ; BSR set to: 15
  5806                           ;inc\CANlib.h: 361: TXB0D2 = data[2];
  5807  000E54  0100               	movlb	0	; () banked
  5808  000E56  EE20 F002          	lfsr	2,2
  5809  000E5A  51AC               	movf	CANsendMessage@data& (0+255),w,b
  5810  000E5C  26D9               	addwf	fsr2l,f,c
  5811  000E5E  51AD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5812  000E60  22DA               	addwfc	fsr2h,f,c
  5813  000E62  50DF               	movf	indf2,w,c
  5814  000E64  010F               	movlb	15	; () banked
  5815  000E66  6F48               	movwf	72,b	;volatile
  5816                           
  5817                           ; BSR set to: 15
  5818                           ;inc\CANlib.h: 362: TXB0D3 = data[3];
  5819  000E68  0100               	movlb	0	; () banked
  5820  000E6A  EE20 F003          	lfsr	2,3
  5821  000E6E  51AC               	movf	CANsendMessage@data& (0+255),w,b
  5822  000E70  26D9               	addwf	fsr2l,f,c
  5823  000E72  51AD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5824  000E74  22DA               	addwfc	fsr2h,f,c
  5825  000E76  50DF               	movf	indf2,w,c
  5826  000E78  010F               	movlb	15	; () banked
  5827  000E7A  6F49               	movwf	73,b	;volatile
  5828                           
  5829                           ; BSR set to: 15
  5830                           ;inc\CANlib.h: 363: TXB0D4 = data[4];
  5831  000E7C  0100               	movlb	0	; () banked
  5832  000E7E  EE20 F004          	lfsr	2,4
  5833  000E82  51AC               	movf	CANsendMessage@data& (0+255),w,b
  5834  000E84  26D9               	addwf	fsr2l,f,c
  5835  000E86  51AD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5836  000E88  22DA               	addwfc	fsr2h,f,c
  5837  000E8A  50DF               	movf	indf2,w,c
  5838  000E8C  010F               	movlb	15	; () banked
  5839  000E8E  6F4A               	movwf	74,b	;volatile
  5840                           
  5841                           ; BSR set to: 15
  5842                           ;inc\CANlib.h: 364: TXB0D5 = data[5];
  5843  000E90  0100               	movlb	0	; () banked
  5844  000E92  EE20 F005          	lfsr	2,5
  5845  000E96  51AC               	movf	CANsendMessage@data& (0+255),w,b
  5846  000E98  26D9               	addwf	fsr2l,f,c
  5847  000E9A  51AD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5848  000E9C  22DA               	addwfc	fsr2h,f,c
  5849  000E9E  50DF               	movf	indf2,w,c
  5850  000EA0  010F               	movlb	15	; () banked
  5851  000EA2  6F4B               	movwf	75,b	;volatile
  5852                           
  5853                           ; BSR set to: 15
  5854                           ;inc\CANlib.h: 365: TXB0D6 = data[6];
  5855  000EA4  0100               	movlb	0	; () banked
  5856  000EA6  EE20 F006          	lfsr	2,6
  5857  000EAA  51AC               	movf	CANsendMessage@data& (0+255),w,b
  5858  000EAC  26D9               	addwf	fsr2l,f,c
  5859  000EAE  51AD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5860  000EB0  22DA               	addwfc	fsr2h,f,c
  5861  000EB2  50DF               	movf	indf2,w,c
  5862  000EB4  010F               	movlb	15	; () banked
  5863  000EB6  6F4C               	movwf	76,b	;volatile
  5864                           
  5865                           ; BSR set to: 15
  5866                           ;inc\CANlib.h: 366: TXB0D7 = data[7];
  5867  000EB8  0100               	movlb	0	; () banked
  5868  000EBA  EE20 F007          	lfsr	2,7
  5869  000EBE  51AC               	movf	CANsendMessage@data& (0+255),w,b
  5870  000EC0  26D9               	addwf	fsr2l,f,c
  5871  000EC2  51AD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5872  000EC4  22DA               	addwfc	fsr2h,f,c
  5873  000EC6  50DF               	movf	indf2,w,c
  5874  000EC8  010F               	movlb	15	; () banked
  5875  000ECA  6F4D               	movwf	77,b	;volatile
  5876                           
  5877                           ; BSR set to: 15
  5878                           ;inc\CANlib.h: 368: TXB0CONbits.TXREQ = 0x01;
  5879  000ECC  010F               	movlb	15	; () banked
  5880  000ECE  8740               	bsf	64,3,b	;volatile
  5881                           
  5882                           ; BSR set to: 15
  5883                           ;inc\CANlib.h: 369: return;
  5884  000ED0  0012               	return	
  5885  000ED2                     l365:
  5886                           
  5887                           ; BSR set to: 15
  5888                           ;inc\CANlib.h: 370: }
  5889                           ;inc\CANlib.h: 374: if (TXB1CONbits.TXREQ == 0)
  5890  000ED2  010F               	movlb	15	; () banked
  5891  000ED4  B730               	btfsc	48,3,b	;volatile
  5892  000ED6  D13F               	goto	l380
  5893                           
  5894                           ; BSR set to: 15
  5895                           ;inc\CANlib.h: 375: { TXB1DLC = dataLength;
  5896  000ED8  C0AE  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  5897                           
  5898                           ;inc\CANlib.h: 377: if (0b01000000 & flags)
  5899  000EDC  0100               	movlb	0	; () banked
  5900  000EDE  ADAF               	btfss	CANsendMessage@flags& (0+255),6,b
  5901  000EE0  D003               	goto	l381
  5902                           
  5903                           ; BSR set to: 0
  5904                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x01;
  5905  000EE2  010F               	movlb	15	; () banked
  5906  000EE4  8D35               	bsf	53,6,b	;volatile
  5907  000EE6  D002               	goto	l382
  5908  000EE8                     l381:
  5909                           
  5910                           ; BSR set to: 0
  5911                           ;inc\CANlib.h: 379: else
  5912                           ;inc\CANlib.h: 380: TXB1DLCbits.TXRTR = 0x00;
  5913  000EE8  010F               	movlb	15	; () banked
  5914  000EEA  9D35               	bcf	53,6,b	;volatile
  5915  000EEC                     l382:
  5916                           
  5917                           ; BSR set to: 15
  5918                           ;inc\CANlib.h: 382: if (CAN_TX_FRAME_MASK & flags)
  5919  000EEC  0100               	movlb	0	; () banked
  5920  000EEE  A7AF               	btfss	CANsendMessage@flags& (0+255),3,b
  5921  000EF0  D079               	goto	l383
  5922                           
  5923                           ; BSR set to: 0
  5924                           ;inc\CANlib.h: 383: {
  5925                           ;inc\CANlib.h: 384: tamp = identifier & 0x000000FF;
  5926  000EF2  0100               	movlb	0	; () banked
  5927  000EF4  51A8               	movf	CANsendMessage@identifier& (0+255),w,b
  5928  000EF6  0100               	movlb	0	; () banked
  5929  000EF8  6FB4               	movwf	CANsendMessage@tamp& (0+255),b
  5930  000EFA  6BB5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5931  000EFC  6BB6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5932  000EFE  6BB7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5933                           
  5934                           ; BSR set to: 0
  5935                           ;inc\CANlib.h: 385: TXB1EIDL = (unsigned char) tamp;
  5936  000F00  C0B4  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  5937                           
  5938                           ; BSR set to: 0
  5939                           ;inc\CANlib.h: 387: tamp = identifier & 0x0000FF00;
  5940  000F04  0E00               	movlw	0
  5941  000F06  0100               	movlb	0	; () banked
  5942  000F08  15A8               	andwf	CANsendMessage@identifier& (0+255),w,b
  5943  000F0A  0100               	movlb	0	; () banked
  5944  000F0C  6FB4               	movwf	CANsendMessage@tamp& (0+255),b
  5945  000F0E  0EFF               	movlw	255
  5946  000F10  0100               	movlb	0	; () banked
  5947  000F12  15A9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5948  000F14  0100               	movlb	0	; () banked
  5949  000F16  6FB5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5950  000F18  0E00               	movlw	0
  5951  000F1A  0100               	movlb	0	; () banked
  5952  000F1C  15AA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5953  000F1E  0100               	movlb	0	; () banked
  5954  000F20  6FB6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5955  000F22  0E00               	movlw	0
  5956  000F24  0100               	movlb	0	; () banked
  5957  000F26  15AB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5958  000F28  0100               	movlb	0	; () banked
  5959  000F2A  6FB7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5960                           
  5961                           ; BSR set to: 0
  5962                           ;inc\CANlib.h: 388: tamp = tamp >> 8;
  5963  000F2C  C0B4  F0B0         	movff	CANsendMessage@tamp,??_CANsendMessage
  5964  000F30  C0B5  F0B1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5965  000F34  C0B6  F0B2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5966  000F38  C0B7  F0B3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5967  000F3C  C0B1  F0B0         	movff	??_CANsendMessage+1,??_CANsendMessage
  5968  000F40  C0B2  F0B1         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  5969  000F44  C0B3  F0B2         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  5970  000F48  0100               	movlb	0	; () banked
  5971  000F4A  6BB3               	clrf	(??_CANsendMessage+3)& (0+255),b
  5972  000F4C  C0B0  F0B4         	movff	??_CANsendMessage,CANsendMessage@tamp
  5973  000F50  C0B1  F0B5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5974  000F54  C0B2  F0B6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5975  000F58  C0B3  F0B7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;inc\CANlib.h: 389: TXB1EIDH = (unsigned char) tamp;
  5979  000F5C  C0B4  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;inc\CANlib.h: 391: TXB1SIDL = 0x00;
  5983  000F60  0E00               	movlw	0
  5984  000F62  010F               	movlb	15	; () banked
  5985  000F64  6F32               	movwf	50,b	;volatile
  5986                           
  5987                           ; BSR set to: 15
  5988                           ;inc\CANlib.h: 392: TXB1SIDLbits.EXIDE = 0x01;
  5989  000F66  010F               	movlb	15	; () banked
  5990  000F68  8732               	bsf	50,3,b	;volatile
  5991                           
  5992                           ; BSR set to: 15
  5993                           ;inc\CANlib.h: 394: if (identifier & 0x00010000)
  5994  000F6A  0100               	movlb	0	; () banked
  5995  000F6C  A1AA               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  5996  000F6E  D002               	goto	l384
  5997                           
  5998                           ; BSR set to: 0
  5999                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID16 = 0x01;
  6000  000F70  010F               	movlb	15	; () banked
  6001  000F72  8132               	bsf	50,0,b	;volatile
  6002  000F74                     l384:
  6003                           
  6004                           ;inc\CANlib.h: 396: if (identifier & 0x00020000)
  6005  000F74  0100               	movlb	0	; () banked
  6006  000F76  A3AA               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6007  000F78  D002               	goto	l385
  6008                           
  6009                           ; BSR set to: 0
  6010                           ;inc\CANlib.h: 397: TXB1SIDLbits.EID17 = 0x01;
  6011  000F7A  010F               	movlb	15	; () banked
  6012  000F7C  8332               	bsf	50,1,b	;volatile
  6013  000F7E                     l385:
  6014                           
  6015                           ;inc\CANlib.h: 398: if (identifier & 0x00040000)
  6016  000F7E  0100               	movlb	0	; () banked
  6017  000F80  A5AA               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6018  000F82  D002               	goto	l386
  6019                           
  6020                           ; BSR set to: 0
  6021                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID0 = 0x01;
  6022  000F84  010F               	movlb	15	; () banked
  6023  000F86  8B32               	bsf	50,5,b	;volatile
  6024  000F88                     l386:
  6025                           
  6026                           ;inc\CANlib.h: 400: if (identifier & 0x00080000)
  6027  000F88  0100               	movlb	0	; () banked
  6028  000F8A  A7AA               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6029  000F8C  D002               	goto	l387
  6030                           
  6031                           ; BSR set to: 0
  6032                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID1 = 0x01;
  6033  000F8E  010F               	movlb	15	; () banked
  6034  000F90  8D32               	bsf	50,6,b	;volatile
  6035  000F92                     l387:
  6036                           
  6037                           ;inc\CANlib.h: 402: if (identifier & 0x00100000)
  6038  000F92  0100               	movlb	0	; () banked
  6039  000F94  A9AA               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6040  000F96  D002               	goto	l3564
  6041                           
  6042                           ; BSR set to: 0
  6043                           ;inc\CANlib.h: 403: TXB1SIDLbits.SID2 = 0x01;
  6044  000F98  010F               	movlb	15	; () banked
  6045  000F9A  8F32               	bsf	50,7,b	;volatile
  6046  000F9C                     l3564:
  6047                           
  6048                           ;inc\CANlib.h: 405: tamp = (identifier >> 21);
  6049  000F9C  C0A8  F0B0         	movff	CANsendMessage@identifier,??_CANsendMessage
  6050  000FA0  C0A9  F0B1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6051  000FA4  C0AA  F0B2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6052  000FA8  C0AB  F0B3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6053  000FAC  0E16               	movlw	22
  6054  000FAE  D006               	goto	u4200
  6055  000FB0                     u4205:
  6056  000FB0  0100               	movlb	0	; () banked
  6057  000FB2  90D8               	bcf	status,0,c
  6058  000FB4  33B3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6059  000FB6  33B2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6060  000FB8  33B1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6061  000FBA  33B0               	rrcf	??_CANsendMessage& (0+255),f,b
  6062  000FBC                     u4200:
  6063  000FBC  2EE8               	decfsz	wreg,f,c
  6064  000FBE  D7F8               	goto	u4205
  6065  000FC0  C0B0  F0B4         	movff	??_CANsendMessage,CANsendMessage@tamp
  6066  000FC4  C0B1  F0B5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6067  000FC8  C0B2  F0B6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6068  000FCC  C0B3  F0B7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6069                           
  6070                           ; BSR set to: 0
  6071                           ;inc\CANlib.h: 406: tamp = tamp & 0x000000FF;
  6072  000FD0  0100               	movlb	0	; () banked
  6073  000FD2  51B4               	movf	CANsendMessage@tamp& (0+255),w,b
  6074  000FD4  0100               	movlb	0	; () banked
  6075  000FD6  6FB4               	movwf	CANsendMessage@tamp& (0+255),b
  6076  000FD8  6BB5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6077  000FDA  6BB6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6078  000FDC  6BB7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6079                           
  6080                           ; BSR set to: 0
  6081                           ;inc\CANlib.h: 407: TXB1SIDH = (unsigned char) tamp;
  6082  000FDE  C0B4  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6083                           
  6084                           ;inc\CANlib.h: 408: }
  6085  000FE2  D059               	goto	l3584
  6086  000FE4                     l383:
  6087                           
  6088                           ; BSR set to: 0
  6089                           ;inc\CANlib.h: 410: else
  6090                           ;inc\CANlib.h: 412: {
  6091                           ;inc\CANlib.h: 413: TXB1SIDLbits.EXIDE = 0x00;
  6092  000FE4  010F               	movlb	15	; () banked
  6093  000FE6  9732               	bcf	50,3,b	;volatile
  6094                           
  6095                           ; BSR set to: 15
  6096                           ;inc\CANlib.h: 415: tamp = (identifier >> 3);
  6097  000FE8  C0A8  F0B0         	movff	CANsendMessage@identifier,??_CANsendMessage
  6098  000FEC  C0A9  F0B1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6099  000FF0  C0AA  F0B2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6100  000FF4  C0AB  F0B3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6101  000FF8  0E04               	movlw	4
  6102  000FFA  D006               	goto	u4210
  6103  000FFC                     u4215:
  6104  000FFC  0100               	movlb	0	; () banked
  6105  000FFE  90D8               	bcf	status,0,c
  6106  001000  33B3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6107  001002  33B2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6108  001004  33B1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6109  001006  33B0               	rrcf	??_CANsendMessage& (0+255),f,b
  6110  001008                     u4210:
  6111  001008  2EE8               	decfsz	wreg,f,c
  6112  00100A  D7F8               	goto	u4215
  6113  00100C  C0B0  F0B4         	movff	??_CANsendMessage,CANsendMessage@tamp
  6114  001010  C0B1  F0B5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6115  001014  C0B2  F0B6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6116  001018  C0B3  F0B7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6117                           
  6118                           ; BSR set to: 0
  6119                           ;inc\CANlib.h: 416: tamp = tamp & 0x000000FF;
  6120  00101C  0100               	movlb	0	; () banked
  6121  00101E  51B4               	movf	CANsendMessage@tamp& (0+255),w,b
  6122  001020  0100               	movlb	0	; () banked
  6123  001022  6FB4               	movwf	CANsendMessage@tamp& (0+255),b
  6124  001024  6BB5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6125  001026  6BB6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6126  001028  6BB7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6127                           
  6128                           ; BSR set to: 0
  6129                           ;inc\CANlib.h: 417: TXB1SIDH = (unsigned char) tamp;
  6130  00102A  C0B4  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6131                           
  6132                           ; BSR set to: 0
  6133                           ;inc\CANlib.h: 419: tamp = identifier & 0x00000007;
  6134  00102E  0E07               	movlw	7
  6135  001030  0100               	movlb	0	; () banked
  6136  001032  15A8               	andwf	CANsendMessage@identifier& (0+255),w,b
  6137  001034  0100               	movlb	0	; () banked
  6138  001036  6FB4               	movwf	CANsendMessage@tamp& (0+255),b
  6139  001038  0E00               	movlw	0
  6140  00103A  0100               	movlb	0	; () banked
  6141  00103C  15A9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6142  00103E  0100               	movlb	0	; () banked
  6143  001040  6FB5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6144  001042  0E00               	movlw	0
  6145  001044  0100               	movlb	0	; () banked
  6146  001046  15AA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6147  001048  0100               	movlb	0	; () banked
  6148  00104A  6FB6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6149  00104C  0E00               	movlw	0
  6150  00104E  0100               	movlb	0	; () banked
  6151  001050  15AB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6152  001052  0100               	movlb	0	; () banked
  6153  001054  6FB7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;inc\CANlib.h: 420: tamp = tamp << 5;
  6157  001056  C0B4  F0B0         	movff	CANsendMessage@tamp,??_CANsendMessage
  6158  00105A  C0B5  F0B1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6159  00105E  C0B6  F0B2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6160  001062  C0B7  F0B3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6161  001066  0E05               	movlw	5
  6162  001068                     u4225:
  6163  001068  90D8               	bcf	status,0,c
  6164  00106A  0100               	movlb	0	; () banked
  6165  00106C  37B0               	rlcf	??_CANsendMessage& (0+255),f,b
  6166  00106E  37B1               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  6167  001070  37B2               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  6168  001072  37B3               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  6169  001074  2EE8               	decfsz	wreg,f,c
  6170  001076  D7F8               	goto	u4225
  6171  001078  C0B0  F0B4         	movff	??_CANsendMessage,CANsendMessage@tamp
  6172  00107C  C0B1  F0B5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6173  001080  C0B2  F0B6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6174  001084  C0B3  F0B7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6175                           
  6176                           ; BSR set to: 0
  6177                           ;inc\CANlib.h: 421: TXB1SIDL = TXB1SIDL & 0b00011111;
  6178  001088  010F               	movlb	15	; () banked
  6179  00108A  5132               	movf	50,w,b	;volatile
  6180  00108C  0B1F               	andlw	31
  6181  00108E  010F               	movlb	15	; () banked
  6182  001090  6F32               	movwf	50,b	;volatile
  6183                           
  6184                           ; BSR set to: 15
  6185                           ;inc\CANlib.h: 422: TXB1SIDL = (unsigned char) tamp;
  6186  001092  C0B4  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  6187  001096                     l3584:
  6188                           
  6189                           ;inc\CANlib.h: 423: }
  6190                           ;inc\CANlib.h: 425: if (0b00000001 & flags)
  6191  001096  0100               	movlb	0	; () banked
  6192  001098  A1AF               	btfss	CANsendMessage@flags& (0+255),0,b
  6193  00109A  D003               	goto	l390
  6194                           
  6195                           ; BSR set to: 0
  6196                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x01;
  6197  00109C  010F               	movlb	15	; () banked
  6198  00109E  8130               	bsf	48,0,b	;volatile
  6199  0010A0  D002               	goto	l391
  6200  0010A2                     l390:
  6201                           
  6202                           ; BSR set to: 0
  6203                           ;inc\CANlib.h: 427: else
  6204                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI0 = 0x00;
  6205  0010A2  010F               	movlb	15	; () banked
  6206  0010A4  9130               	bcf	48,0,b	;volatile
  6207  0010A6                     l391:
  6208                           
  6209                           ; BSR set to: 15
  6210                           ;inc\CANlib.h: 429: if (0b00000010 & flags)
  6211  0010A6  0100               	movlb	0	; () banked
  6212  0010A8  A3AF               	btfss	CANsendMessage@flags& (0+255),1,b
  6213  0010AA  D003               	goto	l392
  6214                           
  6215                           ; BSR set to: 0
  6216                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x01;
  6217  0010AC  010F               	movlb	15	; () banked
  6218  0010AE  8330               	bsf	48,1,b	;volatile
  6219  0010B0  D002               	goto	l3590
  6220  0010B2                     l392:
  6221                           
  6222                           ; BSR set to: 0
  6223                           ;inc\CANlib.h: 431: else
  6224                           ;inc\CANlib.h: 432: TXB1CONbits.TXPRI1 = 0x00;
  6225  0010B2  010F               	movlb	15	; () banked
  6226  0010B4  9330               	bcf	48,1,b	;volatile
  6227  0010B6                     l3590:
  6228                           
  6229                           ; BSR set to: 15
  6230                           ;inc\CANlib.h: 434: TXB1D0 = data[0];
  6231  0010B6  C0AC  FFD9         	movff	CANsendMessage@data,fsr2l
  6232  0010BA  C0AD  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6233  0010BE  50DF               	movf	indf2,w,c
  6234  0010C0  010F               	movlb	15	; () banked
  6235  0010C2  6F36               	movwf	54,b	;volatile
  6236                           
  6237                           ; BSR set to: 15
  6238                           ;inc\CANlib.h: 435: TXB1D1 = data[1];
  6239  0010C4  0100               	movlb	0	; () banked
  6240  0010C6  EE20 F001          	lfsr	2,1
  6241  0010CA  51AC               	movf	CANsendMessage@data& (0+255),w,b
  6242  0010CC  26D9               	addwf	fsr2l,f,c
  6243  0010CE  51AD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6244  0010D0  22DA               	addwfc	fsr2h,f,c
  6245  0010D2  50DF               	movf	indf2,w,c
  6246  0010D4  010F               	movlb	15	; () banked
  6247  0010D6  6F37               	movwf	55,b	;volatile
  6248                           
  6249                           ; BSR set to: 15
  6250                           ;inc\CANlib.h: 436: TXB1D2 = data[2];
  6251  0010D8  0100               	movlb	0	; () banked
  6252  0010DA  EE20 F002          	lfsr	2,2
  6253  0010DE  51AC               	movf	CANsendMessage@data& (0+255),w,b
  6254  0010E0  26D9               	addwf	fsr2l,f,c
  6255  0010E2  51AD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6256  0010E4  22DA               	addwfc	fsr2h,f,c
  6257  0010E6  50DF               	movf	indf2,w,c
  6258  0010E8  010F               	movlb	15	; () banked
  6259  0010EA  6F38               	movwf	56,b	;volatile
  6260                           
  6261                           ; BSR set to: 15
  6262                           ;inc\CANlib.h: 437: TXB1D3 = data[3];
  6263  0010EC  0100               	movlb	0	; () banked
  6264  0010EE  EE20 F003          	lfsr	2,3
  6265  0010F2  51AC               	movf	CANsendMessage@data& (0+255),w,b
  6266  0010F4  26D9               	addwf	fsr2l,f,c
  6267  0010F6  51AD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6268  0010F8  22DA               	addwfc	fsr2h,f,c
  6269  0010FA  50DF               	movf	indf2,w,c
  6270  0010FC  010F               	movlb	15	; () banked
  6271  0010FE  6F39               	movwf	57,b	;volatile
  6272                           
  6273                           ; BSR set to: 15
  6274                           ;inc\CANlib.h: 438: TXB1D4 = data[4];
  6275  001100  0100               	movlb	0	; () banked
  6276  001102  EE20 F004          	lfsr	2,4
  6277  001106  51AC               	movf	CANsendMessage@data& (0+255),w,b
  6278  001108  26D9               	addwf	fsr2l,f,c
  6279  00110A  51AD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6280  00110C  22DA               	addwfc	fsr2h,f,c
  6281  00110E  50DF               	movf	indf2,w,c
  6282  001110  010F               	movlb	15	; () banked
  6283  001112  6F3A               	movwf	58,b	;volatile
  6284                           
  6285                           ; BSR set to: 15
  6286                           ;inc\CANlib.h: 439: TXB1D5 = data[5];
  6287  001114  0100               	movlb	0	; () banked
  6288  001116  EE20 F005          	lfsr	2,5
  6289  00111A  51AC               	movf	CANsendMessage@data& (0+255),w,b
  6290  00111C  26D9               	addwf	fsr2l,f,c
  6291  00111E  51AD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6292  001120  22DA               	addwfc	fsr2h,f,c
  6293  001122  50DF               	movf	indf2,w,c
  6294  001124  010F               	movlb	15	; () banked
  6295  001126  6F3B               	movwf	59,b	;volatile
  6296                           
  6297                           ; BSR set to: 15
  6298                           ;inc\CANlib.h: 440: TXB1D6 = data[6];
  6299  001128  0100               	movlb	0	; () banked
  6300  00112A  EE20 F006          	lfsr	2,6
  6301  00112E  51AC               	movf	CANsendMessage@data& (0+255),w,b
  6302  001130  26D9               	addwf	fsr2l,f,c
  6303  001132  51AD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6304  001134  22DA               	addwfc	fsr2h,f,c
  6305  001136  50DF               	movf	indf2,w,c
  6306  001138  010F               	movlb	15	; () banked
  6307  00113A  6F3C               	movwf	60,b	;volatile
  6308                           
  6309                           ; BSR set to: 15
  6310                           ;inc\CANlib.h: 441: TXB1D7 = data[7];
  6311  00113C  0100               	movlb	0	; () banked
  6312  00113E  EE20 F007          	lfsr	2,7
  6313  001142  51AC               	movf	CANsendMessage@data& (0+255),w,b
  6314  001144  26D9               	addwf	fsr2l,f,c
  6315  001146  51AD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6316  001148  22DA               	addwfc	fsr2h,f,c
  6317  00114A  50DF               	movf	indf2,w,c
  6318  00114C  010F               	movlb	15	; () banked
  6319  00114E  6F3D               	movwf	61,b	;volatile
  6320                           
  6321                           ; BSR set to: 15
  6322                           ;inc\CANlib.h: 443: TXB1CONbits.TXREQ = 0x01;
  6323  001150  010F               	movlb	15	; () banked
  6324  001152  8730               	bsf	48,3,b	;volatile
  6325                           
  6326                           ; BSR set to: 15
  6327                           ;inc\CANlib.h: 445: return;
  6328  001154  0012               	return	
  6329  001156                     l380:
  6330                           
  6331                           ; BSR set to: 15
  6332                           ;inc\CANlib.h: 446: }
  6333                           ;inc\CANlib.h: 450: if (TXB2CONbits.TXREQ == 0)
  6334  001156  010F               	movlb	15	; () banked
  6335  001158  B720               	btfsc	32,3,b	;volatile
  6336  00115A  0012               	return	
  6337                           
  6338                           ; BSR set to: 15
  6339                           ;inc\CANlib.h: 451: { TXB2DLC = dataLength;
  6340  00115C  C0AE  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  6341                           
  6342                           ;inc\CANlib.h: 453: if (0b01000000 & flags)
  6343  001160  0100               	movlb	0	; () banked
  6344  001162  ADAF               	btfss	CANsendMessage@flags& (0+255),6,b
  6345  001164  D003               	goto	l395
  6346                           
  6347                           ; BSR set to: 0
  6348                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x01;
  6349  001166  010F               	movlb	15	; () banked
  6350  001168  8D25               	bsf	37,6,b	;volatile
  6351  00116A  D002               	goto	l396
  6352  00116C                     l395:
  6353                           
  6354                           ; BSR set to: 0
  6355                           ;inc\CANlib.h: 455: else
  6356                           ;inc\CANlib.h: 456: TXB2DLCbits.TXRTR = 0x00;
  6357  00116C  010F               	movlb	15	; () banked
  6358  00116E  9D25               	bcf	37,6,b	;volatile
  6359  001170                     l396:
  6360                           
  6361                           ; BSR set to: 15
  6362                           ;inc\CANlib.h: 458: if (CAN_TX_FRAME_MASK & flags)
  6363  001170  0100               	movlb	0	; () banked
  6364  001172  A7AF               	btfss	CANsendMessage@flags& (0+255),3,b
  6365  001174  D079               	goto	l397
  6366                           
  6367                           ; BSR set to: 0
  6368                           ;inc\CANlib.h: 459: {
  6369                           ;inc\CANlib.h: 460: tamp = identifier & 0x000000FF;
  6370  001176  0100               	movlb	0	; () banked
  6371  001178  51A8               	movf	CANsendMessage@identifier& (0+255),w,b
  6372  00117A  0100               	movlb	0	; () banked
  6373  00117C  6FB4               	movwf	CANsendMessage@tamp& (0+255),b
  6374  00117E  6BB5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6375  001180  6BB6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6376  001182  6BB7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6377                           
  6378                           ; BSR set to: 0
  6379                           ;inc\CANlib.h: 461: TXB2EIDL = (unsigned char) tamp;
  6380  001184  C0B4  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  6381                           
  6382                           ; BSR set to: 0
  6383                           ;inc\CANlib.h: 463: tamp = identifier & 0x0000FF00;
  6384  001188  0E00               	movlw	0
  6385  00118A  0100               	movlb	0	; () banked
  6386  00118C  15A8               	andwf	CANsendMessage@identifier& (0+255),w,b
  6387  00118E  0100               	movlb	0	; () banked
  6388  001190  6FB4               	movwf	CANsendMessage@tamp& (0+255),b
  6389  001192  0EFF               	movlw	255
  6390  001194  0100               	movlb	0	; () banked
  6391  001196  15A9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6392  001198  0100               	movlb	0	; () banked
  6393  00119A  6FB5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6394  00119C  0E00               	movlw	0
  6395  00119E  0100               	movlb	0	; () banked
  6396  0011A0  15AA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6397  0011A2  0100               	movlb	0	; () banked
  6398  0011A4  6FB6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6399  0011A6  0E00               	movlw	0
  6400  0011A8  0100               	movlb	0	; () banked
  6401  0011AA  15AB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6402  0011AC  0100               	movlb	0	; () banked
  6403  0011AE  6FB7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6404                           
  6405                           ; BSR set to: 0
  6406                           ;inc\CANlib.h: 464: tamp = tamp >> 8;
  6407  0011B0  C0B4  F0B0         	movff	CANsendMessage@tamp,??_CANsendMessage
  6408  0011B4  C0B5  F0B1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6409  0011B8  C0B6  F0B2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6410  0011BC  C0B7  F0B3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6411  0011C0  C0B1  F0B0         	movff	??_CANsendMessage+1,??_CANsendMessage
  6412  0011C4  C0B2  F0B1         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6413  0011C8  C0B3  F0B2         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6414  0011CC  0100               	movlb	0	; () banked
  6415  0011CE  6BB3               	clrf	(??_CANsendMessage+3)& (0+255),b
  6416  0011D0  C0B0  F0B4         	movff	??_CANsendMessage,CANsendMessage@tamp
  6417  0011D4  C0B1  F0B5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6418  0011D8  C0B2  F0B6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6419  0011DC  C0B3  F0B7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6420                           
  6421                           ; BSR set to: 0
  6422                           ;inc\CANlib.h: 465: TXB2EIDH = (unsigned char) tamp;
  6423  0011E0  C0B4  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;inc\CANlib.h: 467: TXB2SIDL = 0x00;
  6427  0011E4  0E00               	movlw	0
  6428  0011E6  010F               	movlb	15	; () banked
  6429  0011E8  6F22               	movwf	34,b	;volatile
  6430                           
  6431                           ; BSR set to: 15
  6432                           ;inc\CANlib.h: 468: TXB2SIDLbits.EXIDE = 0x01;
  6433  0011EA  010F               	movlb	15	; () banked
  6434  0011EC  8722               	bsf	34,3,b	;volatile
  6435                           
  6436                           ; BSR set to: 15
  6437                           ;inc\CANlib.h: 470: if (identifier & 0x00010000)
  6438  0011EE  0100               	movlb	0	; () banked
  6439  0011F0  A1AA               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6440  0011F2  D002               	goto	l398
  6441                           
  6442                           ; BSR set to: 0
  6443                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID16 = 0x01;
  6444  0011F4  010F               	movlb	15	; () banked
  6445  0011F6  8122               	bsf	34,0,b	;volatile
  6446  0011F8                     l398:
  6447                           
  6448                           ;inc\CANlib.h: 472: if (identifier & 0x00020000)
  6449  0011F8  0100               	movlb	0	; () banked
  6450  0011FA  A3AA               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6451  0011FC  D002               	goto	l399
  6452                           
  6453                           ; BSR set to: 0
  6454                           ;inc\CANlib.h: 473: TXB2SIDLbits.EID17 = 0x01;
  6455  0011FE  010F               	movlb	15	; () banked
  6456  001200  8322               	bsf	34,1,b	;volatile
  6457  001202                     l399:
  6458                           
  6459                           ;inc\CANlib.h: 474: if (identifier & 0x00040000)
  6460  001202  0100               	movlb	0	; () banked
  6461  001204  A5AA               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6462  001206  D002               	goto	l400
  6463                           
  6464                           ; BSR set to: 0
  6465                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID0 = 0x01;
  6466  001208  010F               	movlb	15	; () banked
  6467  00120A  8B22               	bsf	34,5,b	;volatile
  6468  00120C                     l400:
  6469                           
  6470                           ;inc\CANlib.h: 476: if (identifier & 0x00080000)
  6471  00120C  0100               	movlb	0	; () banked
  6472  00120E  A7AA               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6473  001210  D002               	goto	l401
  6474                           
  6475                           ; BSR set to: 0
  6476                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID1 = 0x01;
  6477  001212  010F               	movlb	15	; () banked
  6478  001214  8D22               	bsf	34,6,b	;volatile
  6479  001216                     l401:
  6480                           
  6481                           ;inc\CANlib.h: 478: if (identifier & 0x00100000)
  6482  001216  0100               	movlb	0	; () banked
  6483  001218  A9AA               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6484  00121A  D002               	goto	l3640
  6485                           
  6486                           ; BSR set to: 0
  6487                           ;inc\CANlib.h: 479: TXB2SIDLbits.SID2 = 0x01;
  6488  00121C  010F               	movlb	15	; () banked
  6489  00121E  8F22               	bsf	34,7,b	;volatile
  6490  001220                     l3640:
  6491                           
  6492                           ;inc\CANlib.h: 481: tamp = (identifier >> 21);
  6493  001220  C0A8  F0B0         	movff	CANsendMessage@identifier,??_CANsendMessage
  6494  001224  C0A9  F0B1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6495  001228  C0AA  F0B2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6496  00122C  C0AB  F0B3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6497  001230  0E16               	movlw	22
  6498  001232  D006               	goto	u4330
  6499  001234                     u4335:
  6500  001234  0100               	movlb	0	; () banked
  6501  001236  90D8               	bcf	status,0,c
  6502  001238  33B3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6503  00123A  33B2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6504  00123C  33B1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6505  00123E  33B0               	rrcf	??_CANsendMessage& (0+255),f,b
  6506  001240                     u4330:
  6507  001240  2EE8               	decfsz	wreg,f,c
  6508  001242  D7F8               	goto	u4335
  6509  001244  C0B0  F0B4         	movff	??_CANsendMessage,CANsendMessage@tamp
  6510  001248  C0B1  F0B5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6511  00124C  C0B2  F0B6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6512  001250  C0B3  F0B7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6513                           
  6514                           ; BSR set to: 0
  6515                           ;inc\CANlib.h: 482: tamp = tamp & 0x000000FF;
  6516  001254  0100               	movlb	0	; () banked
  6517  001256  51B4               	movf	CANsendMessage@tamp& (0+255),w,b
  6518  001258  0100               	movlb	0	; () banked
  6519  00125A  6FB4               	movwf	CANsendMessage@tamp& (0+255),b
  6520  00125C  6BB5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6521  00125E  6BB6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6522  001260  6BB7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6523                           
  6524                           ; BSR set to: 0
  6525                           ;inc\CANlib.h: 483: TXB2SIDH = (unsigned char) tamp;
  6526  001262  C0B4  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6527                           
  6528                           ;inc\CANlib.h: 484: }
  6529  001266  D059               	goto	l3660
  6530  001268                     l397:
  6531                           
  6532                           ; BSR set to: 0
  6533                           ;inc\CANlib.h: 486: else
  6534                           ;inc\CANlib.h: 488: {
  6535                           ;inc\CANlib.h: 489: TXB2SIDLbits.EXIDE = 0x00;
  6536  001268  010F               	movlb	15	; () banked
  6537  00126A  9722               	bcf	34,3,b	;volatile
  6538                           
  6539                           ; BSR set to: 15
  6540                           ;inc\CANlib.h: 491: tamp = (identifier >> 3);
  6541  00126C  C0A8  F0B0         	movff	CANsendMessage@identifier,??_CANsendMessage
  6542  001270  C0A9  F0B1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6543  001274  C0AA  F0B2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6544  001278  C0AB  F0B3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6545  00127C  0E04               	movlw	4
  6546  00127E  D006               	goto	u4340
  6547  001280                     u4345:
  6548  001280  0100               	movlb	0	; () banked
  6549  001282  90D8               	bcf	status,0,c
  6550  001284  33B3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6551  001286  33B2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6552  001288  33B1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6553  00128A  33B0               	rrcf	??_CANsendMessage& (0+255),f,b
  6554  00128C                     u4340:
  6555  00128C  2EE8               	decfsz	wreg,f,c
  6556  00128E  D7F8               	goto	u4345
  6557  001290  C0B0  F0B4         	movff	??_CANsendMessage,CANsendMessage@tamp
  6558  001294  C0B1  F0B5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6559  001298  C0B2  F0B6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6560  00129C  C0B3  F0B7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6561                           
  6562                           ; BSR set to: 0
  6563                           ;inc\CANlib.h: 492: tamp = tamp & 0x000000FF;
  6564  0012A0  0100               	movlb	0	; () banked
  6565  0012A2  51B4               	movf	CANsendMessage@tamp& (0+255),w,b
  6566  0012A4  0100               	movlb	0	; () banked
  6567  0012A6  6FB4               	movwf	CANsendMessage@tamp& (0+255),b
  6568  0012A8  6BB5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6569  0012AA  6BB6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6570  0012AC  6BB7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6571                           
  6572                           ; BSR set to: 0
  6573                           ;inc\CANlib.h: 493: TXB2SIDH = (unsigned char) tamp;
  6574  0012AE  C0B4  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6575                           
  6576                           ; BSR set to: 0
  6577                           ;inc\CANlib.h: 495: tamp = identifier & 0x00000007;
  6578  0012B2  0E07               	movlw	7
  6579  0012B4  0100               	movlb	0	; () banked
  6580  0012B6  15A8               	andwf	CANsendMessage@identifier& (0+255),w,b
  6581  0012B8  0100               	movlb	0	; () banked
  6582  0012BA  6FB4               	movwf	CANsendMessage@tamp& (0+255),b
  6583  0012BC  0E00               	movlw	0
  6584  0012BE  0100               	movlb	0	; () banked
  6585  0012C0  15A9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6586  0012C2  0100               	movlb	0	; () banked
  6587  0012C4  6FB5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6588  0012C6  0E00               	movlw	0
  6589  0012C8  0100               	movlb	0	; () banked
  6590  0012CA  15AA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6591  0012CC  0100               	movlb	0	; () banked
  6592  0012CE  6FB6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6593  0012D0  0E00               	movlw	0
  6594  0012D2  0100               	movlb	0	; () banked
  6595  0012D4  15AB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6596  0012D6  0100               	movlb	0	; () banked
  6597  0012D8  6FB7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6598                           
  6599                           ; BSR set to: 0
  6600                           ;inc\CANlib.h: 496: tamp = tamp << 5;
  6601  0012DA  C0B4  F0B0         	movff	CANsendMessage@tamp,??_CANsendMessage
  6602  0012DE  C0B5  F0B1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6603  0012E2  C0B6  F0B2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6604  0012E6  C0B7  F0B3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6605  0012EA  0E05               	movlw	5
  6606  0012EC                     u4355:
  6607  0012EC  90D8               	bcf	status,0,c
  6608  0012EE  0100               	movlb	0	; () banked
  6609  0012F0  37B0               	rlcf	??_CANsendMessage& (0+255),f,b
  6610  0012F2  37B1               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  6611  0012F4  37B2               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  6612  0012F6  37B3               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  6613  0012F8  2EE8               	decfsz	wreg,f,c
  6614  0012FA  D7F8               	goto	u4355
  6615  0012FC  C0B0  F0B4         	movff	??_CANsendMessage,CANsendMessage@tamp
  6616  001300  C0B1  F0B5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6617  001304  C0B2  F0B6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6618  001308  C0B3  F0B7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6619                           
  6620                           ; BSR set to: 0
  6621                           ;inc\CANlib.h: 497: TXB2SIDL = TXB2SIDL & 0b00011111;
  6622  00130C  010F               	movlb	15	; () banked
  6623  00130E  5122               	movf	34,w,b	;volatile
  6624  001310  0B1F               	andlw	31
  6625  001312  010F               	movlb	15	; () banked
  6626  001314  6F22               	movwf	34,b	;volatile
  6627                           
  6628                           ; BSR set to: 15
  6629                           ;inc\CANlib.h: 498: TXB2SIDL = (unsigned char) tamp;
  6630  001316  C0B4  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  6631  00131A                     l3660:
  6632                           
  6633                           ;inc\CANlib.h: 499: }
  6634                           ;inc\CANlib.h: 501: if (0b00000001 & flags)
  6635  00131A  0100               	movlb	0	; () banked
  6636  00131C  A1AF               	btfss	CANsendMessage@flags& (0+255),0,b
  6637  00131E  D003               	goto	l404
  6638                           
  6639                           ; BSR set to: 0
  6640                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x01;
  6641  001320  010F               	movlb	15	; () banked
  6642  001322  8120               	bsf	32,0,b	;volatile
  6643  001324  D002               	goto	l405
  6644  001326                     l404:
  6645                           
  6646                           ; BSR set to: 0
  6647                           ;inc\CANlib.h: 503: else
  6648                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI0 = 0x00;
  6649  001326  010F               	movlb	15	; () banked
  6650  001328  9120               	bcf	32,0,b	;volatile
  6651  00132A                     l405:
  6652                           
  6653                           ; BSR set to: 15
  6654                           ;inc\CANlib.h: 505: if (0b00000010 & flags)
  6655  00132A  0100               	movlb	0	; () banked
  6656  00132C  A3AF               	btfss	CANsendMessage@flags& (0+255),1,b
  6657  00132E  D003               	goto	l406
  6658                           
  6659                           ; BSR set to: 0
  6660                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x01;
  6661  001330  010F               	movlb	15	; () banked
  6662  001332  8320               	bsf	32,1,b	;volatile
  6663  001334  D002               	goto	l3666
  6664  001336                     l406:
  6665                           
  6666                           ; BSR set to: 0
  6667                           ;inc\CANlib.h: 507: else
  6668                           ;inc\CANlib.h: 508: TXB2CONbits.TXPRI1 = 0x00;
  6669  001336  010F               	movlb	15	; () banked
  6670  001338  9320               	bcf	32,1,b	;volatile
  6671  00133A                     l3666:
  6672                           
  6673                           ; BSR set to: 15
  6674                           ;inc\CANlib.h: 510: TXB2D0 = data[0];
  6675  00133A  C0AC  FFD9         	movff	CANsendMessage@data,fsr2l
  6676  00133E  C0AD  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6677  001342  50DF               	movf	indf2,w,c
  6678  001344  010F               	movlb	15	; () banked
  6679  001346  6F26               	movwf	38,b	;volatile
  6680                           
  6681                           ; BSR set to: 15
  6682                           ;inc\CANlib.h: 511: TXB2D1 = data[1];
  6683  001348  0100               	movlb	0	; () banked
  6684  00134A  EE20 F001          	lfsr	2,1
  6685  00134E  51AC               	movf	CANsendMessage@data& (0+255),w,b
  6686  001350  26D9               	addwf	fsr2l,f,c
  6687  001352  51AD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6688  001354  22DA               	addwfc	fsr2h,f,c
  6689  001356  50DF               	movf	indf2,w,c
  6690  001358  010F               	movlb	15	; () banked
  6691  00135A  6F27               	movwf	39,b	;volatile
  6692                           
  6693                           ; BSR set to: 15
  6694                           ;inc\CANlib.h: 512: TXB2D2 = data[2];
  6695  00135C  0100               	movlb	0	; () banked
  6696  00135E  EE20 F002          	lfsr	2,2
  6697  001362  51AC               	movf	CANsendMessage@data& (0+255),w,b
  6698  001364  26D9               	addwf	fsr2l,f,c
  6699  001366  51AD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6700  001368  22DA               	addwfc	fsr2h,f,c
  6701  00136A  50DF               	movf	indf2,w,c
  6702  00136C  010F               	movlb	15	; () banked
  6703  00136E  6F28               	movwf	40,b	;volatile
  6704                           
  6705                           ; BSR set to: 15
  6706                           ;inc\CANlib.h: 513: TXB2D3 = data[3];
  6707  001370  0100               	movlb	0	; () banked
  6708  001372  EE20 F003          	lfsr	2,3
  6709  001376  51AC               	movf	CANsendMessage@data& (0+255),w,b
  6710  001378  26D9               	addwf	fsr2l,f,c
  6711  00137A  51AD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6712  00137C  22DA               	addwfc	fsr2h,f,c
  6713  00137E  50DF               	movf	indf2,w,c
  6714  001380  010F               	movlb	15	; () banked
  6715  001382  6F29               	movwf	41,b	;volatile
  6716                           
  6717                           ; BSR set to: 15
  6718                           ;inc\CANlib.h: 514: TXB2D4 = data[4];
  6719  001384  0100               	movlb	0	; () banked
  6720  001386  EE20 F004          	lfsr	2,4
  6721  00138A  51AC               	movf	CANsendMessage@data& (0+255),w,b
  6722  00138C  26D9               	addwf	fsr2l,f,c
  6723  00138E  51AD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6724  001390  22DA               	addwfc	fsr2h,f,c
  6725  001392  50DF               	movf	indf2,w,c
  6726  001394  010F               	movlb	15	; () banked
  6727  001396  6F2A               	movwf	42,b	;volatile
  6728                           
  6729                           ; BSR set to: 15
  6730                           ;inc\CANlib.h: 515: TXB2D5 = data[5];
  6731  001398  0100               	movlb	0	; () banked
  6732  00139A  EE20 F005          	lfsr	2,5
  6733  00139E  51AC               	movf	CANsendMessage@data& (0+255),w,b
  6734  0013A0  26D9               	addwf	fsr2l,f,c
  6735  0013A2  51AD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6736  0013A4  22DA               	addwfc	fsr2h,f,c
  6737  0013A6  50DF               	movf	indf2,w,c
  6738  0013A8  010F               	movlb	15	; () banked
  6739  0013AA  6F2B               	movwf	43,b	;volatile
  6740                           
  6741                           ; BSR set to: 15
  6742                           ;inc\CANlib.h: 516: TXB2D6 = data[6];
  6743  0013AC  0100               	movlb	0	; () banked
  6744  0013AE  EE20 F006          	lfsr	2,6
  6745  0013B2  51AC               	movf	CANsendMessage@data& (0+255),w,b
  6746  0013B4  26D9               	addwf	fsr2l,f,c
  6747  0013B6  51AD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6748  0013B8  22DA               	addwfc	fsr2h,f,c
  6749  0013BA  50DF               	movf	indf2,w,c
  6750  0013BC  010F               	movlb	15	; () banked
  6751  0013BE  6F2C               	movwf	44,b	;volatile
  6752                           
  6753                           ; BSR set to: 15
  6754                           ;inc\CANlib.h: 517: TXB2D7 = data[7];
  6755  0013C0  0100               	movlb	0	; () banked
  6756  0013C2  EE20 F007          	lfsr	2,7
  6757  0013C6  51AC               	movf	CANsendMessage@data& (0+255),w,b
  6758  0013C8  26D9               	addwf	fsr2l,f,c
  6759  0013CA  51AD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6760  0013CC  22DA               	addwfc	fsr2h,f,c
  6761  0013CE  50DF               	movf	indf2,w,c
  6762  0013D0  010F               	movlb	15	; () banked
  6763  0013D2  6F2D               	movwf	45,b	;volatile
  6764                           
  6765                           ; BSR set to: 15
  6766                           ;inc\CANlib.h: 519: TXB2CONbits.TXREQ = 0x01;
  6767  0013D4  010F               	movlb	15	; () banked
  6768  0013D6  8720               	bsf	32,3,b	;volatile
  6769                           
  6770                           ; BSR set to: 15
  6771                           ;inc\CANlib.h: 521: return;
  6772  0013D8  0012               	return	
  6773  0013DA                     __end_of_CANsendMessage:
  6774                           	opt stack 0
  6775                           tblptru	equ	0xFF8
  6776                           tblptrh	equ	0xFF7
  6777                           tblptrl	equ	0xFF6
  6778                           tablat	equ	0xFF5
  6779                           prodh	equ	0xFF4
  6780                           prodl	equ	0xFF3
  6781                           intcon	equ	0xFF2
  6782                           postinc0	equ	0xFEE
  6783                           wreg	equ	0xFE8
  6784                           indf1	equ	0xFE7
  6785                           postinc1	equ	0xFE6
  6786                           postdec1	equ	0xFE5
  6787                           fsr1h	equ	0xFE2
  6788                           fsr1l	equ	0xFE1
  6789                           indf2	equ	0xFDF
  6790                           postinc2	equ	0xFDE
  6791                           fsr2h	equ	0xFDA
  6792                           fsr2l	equ	0xFD9
  6793                           status	equ	0xFD8
  6794                           
  6795 ;; *************** function _ISR_bassa *****************
  6796 ;; Defined at:
  6797 ;;		line 100 in file "CanToSerial.c"
  6798 ;; Parameters:    Size  Location     Type
  6799 ;;		None
  6800 ;; Auto vars:     Size  Location     Type
  6801 ;;		None
  6802 ;; Return value:  Size  Location     Type
  6803 ;;		None               void
  6804 ;; Registers used:
  6805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6806 ;; Tracked objects:
  6807 ;;		On entry : 0/0
  6808 ;;		On exit  : 0/0
  6809 ;;		Unchanged: 0/0
  6810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6811 ;;      Params:         0       0       0       0
  6812 ;;      Locals:         0       0       0       0
  6813 ;;      Temps:         18       0       0       0
  6814 ;;      Totals:        18       0       0       0
  6815 ;;Total ram usage:       18 bytes
  6816 ;; Hardware stack levels used:    1
  6817 ;; Hardware stack levels required when called:    4
  6818 ;; This function calls:
  6819 ;;		_getsUSART
  6820 ;; This function is called by:
  6821 ;;		Interrupt level 1
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           	psect	intcodelo
  6826  000018                     __pintcodelo:
  6827                           	opt stack 0
  6828  000018                     _ISR_bassa:
  6829                           	opt stack 23
  6830                           
  6831                           ; BSR set to: 15
  6832                           ;incstack = 0
  6833  000018  8047               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  6834  00001A  CFD8 F008          	movff	status,??_ISR_bassa+1
  6835  00001E  CFE8 F009          	movff	wreg,??_ISR_bassa+2
  6836  000022  CFE0 F00A          	movff	bsr,??_ISR_bassa+3
  6837  000026  CFFA F00B          	movff	pclath,??_ISR_bassa+4
  6838  00002A  CFFB F00C          	movff	pclatu,??_ISR_bassa+5
  6839  00002E  CFE9 F00D          	movff	fsr0l,??_ISR_bassa+6
  6840  000032  CFEA F00E          	movff	fsr0h,??_ISR_bassa+7
  6841  000036  CFE1 F00F          	movff	fsr1l,??_ISR_bassa+8
  6842  00003A  CFE2 F010          	movff	fsr1h,??_ISR_bassa+9
  6843  00003E  CFD9 F011          	movff	fsr2l,??_ISR_bassa+10
  6844  000042  CFDA F012          	movff	fsr2h,??_ISR_bassa+11
  6845  000046  CFF3 F013          	movff	prodl,??_ISR_bassa+12
  6846  00004A  CFF4 F014          	movff	prodh,??_ISR_bassa+13
  6847  00004E  CFF6 F015          	movff	tblptrl,??_ISR_bassa+14
  6848  000052  CFF7 F016          	movff	tblptrh,??_ISR_bassa+15
  6849  000056  CFF8 F017          	movff	tblptru,??_ISR_bassa+16
  6850  00005A  CFF5 F018          	movff	tablat,??_ISR_bassa+17
  6851                           
  6852                           ;CanToSerial.c: 101: if (PIR1bits.RC1IF == 1) {
  6853  00005E  AA9E               	btfss	3998,5,c	;volatile
  6854  000060  D040               	goto	i1l4286
  6855                           
  6856                           ;CanToSerial.c: 103: getsUSART(USART_Rx, 8);
  6857  000062  0E36               	movlw	low _USART_Rx
  6858  000064  6E02               	movwf	getsUSART@buffer,c
  6859  000066  0E00               	movlw	high _USART_Rx
  6860  000068  6E03               	movwf	getsUSART@buffer+1,c
  6861  00006A  0E08               	movlw	8
  6862  00006C  6E04               	movwf	getsUSART@len,c
  6863  00006E  EC35  F016         	call	_getsUSART	;wreg free
  6864                           
  6865                           ;CanToSerial.c: 104: if ((USART_Rx[0] == 0xAA)&&(USART_Rx[6] == 0xAA)) {
  6866  000072  0EAA               	movlw	170
  6867  000074  1836               	xorwf	_USART_Rx,w,c
  6868  000076  A4D8               	btfss	status,2,c
  6869  000078  D033               	goto	i1l4284
  6870  00007A  0EAA               	movlw	170
  6871  00007C  183C               	xorwf	_USART_Rx+6,w,c
  6872  00007E  A4D8               	btfss	status,2,c
  6873  000080  D02F               	goto	i1l4284
  6874                           
  6875                           ;CanToSerial.c: 105: LATDbits.LATD1 = ~LATDbits.LATD1;
  6876  000082  A28C               	btfss	3980,1,c	;volatile
  6877  000084  D002               	goto	i1u542_20
  6878  000086  0E01               	movlw	1
  6879  000088  D001               	goto	i1u542_26
  6880  00008A                     i1u542_20:
  6881  00008A  0E00               	movlw	0
  6882  00008C                     i1u542_26:
  6883  00008C  0AFF               	xorlw	255
  6884  00008E  6E07               	movwf	??_ISR_bassa& (0+255),c
  6885  000090  4607               	rlncf	??_ISR_bassa,f,c
  6886  000092  508C               	movf	3980,w,c	;volatile
  6887  000094  1807               	xorwf	??_ISR_bassa,w,c
  6888  000096  0BFD               	andlw	-3
  6889  000098  1807               	xorwf	??_ISR_bassa,w,c
  6890  00009A  6E8C               	movwf	3980,c	;volatile
  6891                           
  6892                           ;CanToSerial.c: 106: set_steering_old = set_steering[0];
  6893  00009C  C08C  F06B         	movff	_set_steering,_set_steering_old	;volatile
  6894                           
  6895                           ;CanToSerial.c: 107: set_speed_old[0] = set_speed[0];
  6896  0000A0  C03E  F060         	movff	_set_speed,_set_speed_old	;volatile
  6897                           
  6898                           ;CanToSerial.c: 108: set_speed_old[1] = set_speed[1];
  6899  0000A4  C03F  F061         	movff	_set_speed+1,_set_speed_old+1	;volatile
  6900                           
  6901                           ;CanToSerial.c: 109: analogic_brake_old = analogic_brake[0];
  6902  0000A8  C07C  F06A         	movff	_analogic_brake,_analogic_brake_old	;volatile
  6903                           
  6904                           ;CanToSerial.c: 111: if (USART_Rx[1] == 1) {
  6905  0000AC  0437               	decf	_USART_Rx+1,w,c
  6906  0000AE  A4D8               	btfss	status,2,c
  6907  0000B0  D002               	goto	i1l4266
  6908                           
  6909                           ;CanToSerial.c: 112: set_speed[2] = 0;
  6910  0000B2  0E00               	movlw	0
  6911  0000B4  6E40               	movwf	_set_speed+2,c
  6912  0000B6                     i1l4266:
  6913                           
  6914                           ;CanToSerial.c: 113: }
  6915                           ;CanToSerial.c: 114: if (USART_Rx[1] == 2) {
  6916  0000B6  0E02               	movlw	2
  6917  0000B8  1837               	xorwf	_USART_Rx+1,w,c
  6918  0000BA  A4D8               	btfss	status,2,c
  6919  0000BC  D002               	goto	i1l4270
  6920                           
  6921                           ;CanToSerial.c: 115: set_speed[2] = 1;
  6922  0000BE  0E01               	movlw	1
  6923  0000C0  6E40               	movwf	_set_speed+2,c
  6924  0000C2                     i1l4270:
  6925                           
  6926                           ;CanToSerial.c: 116: }
  6927                           ;CanToSerial.c: 118: set_speed[0] = USART_Rx[3];
  6928  0000C2  C039  F03E         	movff	_USART_Rx+3,_set_speed
  6929                           
  6930                           ;CanToSerial.c: 119: set_speed[1] = USART_Rx[2];
  6931  0000C6  C038  F03F         	movff	_USART_Rx+2,_set_speed+1
  6932                           
  6933                           ;CanToSerial.c: 120: if (set_speed [1] == 0b10000000) {
  6934  0000CA  0E80               	movlw	128
  6935  0000CC  183F               	xorwf	_set_speed+1,w,c
  6936  0000CE  A4D8               	btfss	status,2,c
  6937  0000D0  D002               	goto	i1l4278
  6938                           
  6939                           ;CanToSerial.c: 121: set_speed[1] = 0;
  6940  0000D2  0E00               	movlw	0
  6941  0000D4  6E3F               	movwf	_set_speed+1,c
  6942  0000D6                     i1l4278:
  6943                           
  6944                           ;CanToSerial.c: 122: }
  6945                           ;CanToSerial.c: 123: set_steering[0] = USART_Rx[4];
  6946  0000D6  C03A  F08C         	movff	_USART_Rx+4,_set_steering
  6947                           
  6948                           ;CanToSerial.c: 124: analogic_brake[0] = USART_Rx[5];
  6949  0000DA  C03B  F07C         	movff	_USART_Rx+5,_analogic_brake
  6950                           
  6951                           ;CanToSerial.c: 125: newMessageUsart = 1;
  6952  0000DE  8646               	bsf	_newMessageUsart/(0+8),_newMessageUsart& (0+7),c	;volatile
  6953  0000E0                     i1l4284:
  6954                           
  6955                           ;CanToSerial.c: 126: }
  6956                           ;CanToSerial.c: 127: PIR1bits.RC1IF = 0;
  6957  0000E0  9A9E               	bcf	3998,5,c	;volatile
  6958  0000E2                     i1l4286:
  6959                           
  6960                           ;CanToSerial.c: 128: }
  6961                           ;CanToSerial.c: 132: if (PIR2bits.TMR3IF == 1) {
  6962  0000E2  A2A1               	btfss	4001,1,c	;volatile
  6963  0000E4  D00B               	goto	i1l649
  6964                           
  6965                           ;CanToSerial.c: 133: timeCounter++;
  6966  0000E6  0E01               	movlw	1
  6967  0000E8  262D               	addwf	_timeCounter,f,c	;volatile
  6968  0000EA  0E00               	movlw	0
  6969  0000EC  222E               	addwfc	_timeCounter+1,f,c	;volatile
  6970  0000EE  222F               	addwfc	_timeCounter+2,f,c	;volatile
  6971  0000F0  2230               	addwfc	_timeCounter+3,f,c	;volatile
  6972                           
  6973                           ;CanToSerial.c: 134: TMR3H = 0x63;
  6974  0000F2  0E63               	movlw	99
  6975  0000F4  6EB3               	movwf	4019,c	;volatile
  6976                           
  6977                           ;CanToSerial.c: 135: TMR3L = 0xC0;
  6978  0000F6  0EC0               	movlw	192
  6979  0000F8  6EB2               	movwf	4018,c	;volatile
  6980                           
  6981                           ;CanToSerial.c: 136: PIR2bits.TMR3IF = 0;
  6982  0000FA  92A1               	bcf	4001,1,c	;volatile
  6983  0000FC                     i1l649:
  6984  0000FC  C018  FFF5         	movff	??_ISR_bassa+17,tablat
  6985  000100  C017  FFF8         	movff	??_ISR_bassa+16,tblptru
  6986  000104  C016  FFF7         	movff	??_ISR_bassa+15,tblptrh
  6987  000108  C015  FFF6         	movff	??_ISR_bassa+14,tblptrl
  6988  00010C  C014  FFF4         	movff	??_ISR_bassa+13,prodh
  6989  000110  C013  FFF3         	movff	??_ISR_bassa+12,prodl
  6990  000114  C012  FFDA         	movff	??_ISR_bassa+11,fsr2h
  6991  000118  C011  FFD9         	movff	??_ISR_bassa+10,fsr2l
  6992  00011C  C010  FFE2         	movff	??_ISR_bassa+9,fsr1h
  6993  000120  C00F  FFE1         	movff	??_ISR_bassa+8,fsr1l
  6994  000124  C00E  FFEA         	movff	??_ISR_bassa+7,fsr0h
  6995  000128  C00D  FFE9         	movff	??_ISR_bassa+6,fsr0l
  6996  00012C  C00C  FFFB         	movff	??_ISR_bassa+5,pclatu
  6997  000130  C00B  FFFA         	movff	??_ISR_bassa+4,pclath
  6998  000134  C00A  FFE0         	movff	??_ISR_bassa+3,bsr
  6999  000138  C009  FFE8         	movff	??_ISR_bassa+2,wreg
  7000  00013C  C008  FFD8         	movff	??_ISR_bassa+1,status
  7001  000140  9047               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7002  000142  0010               	retfie	
  7003  000144                     __end_of_ISR_bassa:
  7004                           	opt stack 0
  7005                           pclatu	equ	0xFFB
  7006                           pclath	equ	0xFFA
  7007                           tblptru	equ	0xFF8
  7008                           tblptrh	equ	0xFF7
  7009                           tblptrl	equ	0xFF6
  7010                           tablat	equ	0xFF5
  7011                           prodh	equ	0xFF4
  7012                           prodl	equ	0xFF3
  7013                           intcon	equ	0xFF2
  7014                           postinc0	equ	0xFEE
  7015                           fsr0h	equ	0xFEA
  7016                           fsr0l	equ	0xFE9
  7017                           wreg	equ	0xFE8
  7018                           indf1	equ	0xFE7
  7019                           postinc1	equ	0xFE6
  7020                           postdec1	equ	0xFE5
  7021                           fsr1h	equ	0xFE2
  7022                           fsr1l	equ	0xFE1
  7023                           bsr	equ	0xFE0
  7024                           indf2	equ	0xFDF
  7025                           postinc2	equ	0xFDE
  7026                           fsr2h	equ	0xFDA
  7027                           fsr2l	equ	0xFD9
  7028                           status	equ	0xFD8
  7029                           
  7030 ;; *************** function _getsUSART *****************
  7031 ;; Defined at:
  7032 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\ugets.c"
  7033 ;; Parameters:    Size  Location     Type
  7034 ;;  buffer          2    1[COMRAM] PTR unsigned char 
  7035 ;;		 -> USART_Rx(8), 
  7036 ;;  len             1    3[COMRAM] unsigned char 
  7037 ;; Auto vars:     Size  Location     Type
  7038 ;;  i               1    5[COMRAM] unsigned char 
  7039 ;;  data            1    4[COMRAM] unsigned char 
  7040 ;; Return value:  Size  Location     Type
  7041 ;;		None               void
  7042 ;; Registers used:
  7043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7044 ;; Tracked objects:
  7045 ;;		On entry : 0/0
  7046 ;;		On exit  : 0/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7049 ;;      Params:         3       0       0       0
  7050 ;;      Locals:         2       0       0       0
  7051 ;;      Temps:          0       0       0       0
  7052 ;;      Totals:         5       0       0       0
  7053 ;;Total ram usage:        5 bytes
  7054 ;; Hardware stack levels used:    1
  7055 ;; Hardware stack levels required when called:    3
  7056 ;; This function calls:
  7057 ;;		_ReadUSART
  7058 ;; This function is called by:
  7059 ;;		_ISR_bassa
  7060 ;; This function uses a non-reentrant model
  7061 ;;
  7062                           
  7063                           	psect	text14
  7064  002C6A                     __ptext14:
  7065                           	opt stack 0
  7066  002C6A                     _getsUSART:
  7067                           	opt stack 23
  7068                           
  7069                           ;incstack = 0
  7070  002C6A  0E00               	movlw	0
  7071  002C6C  6E06               	movwf	getsUSART@i,c
  7072  002C6E  D00E               	goto	i1l3860
  7073  002C70                     i1l691:
  7074  002C70  AA9E               	btfss	3998,5,c	;volatile
  7075  002C72  D7FE               	goto	i1l691
  7076  002C74  EC5F  F016         	call	_ReadUSART	;wreg free
  7077  002C78  6E05               	movwf	getsUSART@data,c
  7078  002C7A  C002  FFD9         	movff	getsUSART@buffer,fsr2l
  7079  002C7E  C003  FFDA         	movff	getsUSART@buffer+1,fsr2h
  7080  002C82  C005  FFDF         	movff	getsUSART@data,indf2
  7081  002C86  4A02               	infsnz	getsUSART@buffer,f,c
  7082  002C88  2A03               	incf	getsUSART@buffer+1,f,c
  7083  002C8A  2A06               	incf	getsUSART@i,f,c
  7084  002C8C                     i1l3860:
  7085  002C8C  5004               	movf	getsUSART@len,w,c
  7086  002C8E  5C06               	subwf	getsUSART@i,w,c
  7087  002C90  B0D8               	btfsc	status,0,c
  7088  002C92  0012               	return	
  7089  002C94  D7ED               	goto	i1l691
  7090  002C96                     __end_of_getsUSART:
  7091                           	opt stack 0
  7092                           pclatu	equ	0xFFB
  7093                           pclath	equ	0xFFA
  7094                           tblptru	equ	0xFF8
  7095                           tblptrh	equ	0xFF7
  7096                           tblptrl	equ	0xFF6
  7097                           tablat	equ	0xFF5
  7098                           prodh	equ	0xFF4
  7099                           prodl	equ	0xFF3
  7100                           intcon	equ	0xFF2
  7101                           postinc0	equ	0xFEE
  7102                           fsr0h	equ	0xFEA
  7103                           fsr0l	equ	0xFE9
  7104                           wreg	equ	0xFE8
  7105                           indf1	equ	0xFE7
  7106                           postinc1	equ	0xFE6
  7107                           postdec1	equ	0xFE5
  7108                           fsr1h	equ	0xFE2
  7109                           fsr1l	equ	0xFE1
  7110                           bsr	equ	0xFE0
  7111                           indf2	equ	0xFDF
  7112                           postinc2	equ	0xFDE
  7113                           fsr2h	equ	0xFDA
  7114                           fsr2l	equ	0xFD9
  7115                           status	equ	0xFD8
  7116                           
  7117 ;; *************** function _ReadUSART *****************
  7118 ;; Defined at:
  7119 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uread.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;		None
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;  data            1    0[COMRAM] unsigned char 
  7124 ;; Return value:  Size  Location     Type
  7125 ;;                  1    wreg      unsigned char 
  7126 ;; Registers used:
  7127 ;;		wreg, status,2, status,0
  7128 ;; Tracked objects:
  7129 ;;		On entry : 0/0
  7130 ;;		On exit  : 0/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7133 ;;      Params:         0       0       0       0
  7134 ;;      Locals:         1       0       0       0
  7135 ;;      Temps:          0       0       0       0
  7136 ;;      Totals:         1       0       0       0
  7137 ;;Total ram usage:        1 bytes
  7138 ;; Hardware stack levels used:    1
  7139 ;; Hardware stack levels required when called:    2
  7140 ;; This function calls:
  7141 ;;		Nothing
  7142 ;; This function is called by:
  7143 ;;		_getsUSART
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147                           	psect	text15
  7148  002CBE                     __ptext15:
  7149                           	opt stack 0
  7150  002CBE                     _ReadUSART:
  7151                           	opt stack 23
  7152                           
  7153                           ;incstack = 0
  7154  002CBE  0EF2               	movlw	242
  7155  002CC0  1635               	andwf	_USART_Status,f,c
  7156  002CC2  ACAB               	btfss	4011,6,c	;volatile
  7157  002CC4  D003               	goto	i1l749
  7158  002CC6  9035               	bcf	_USART_Status,0,c
  7159  002CC8  B0AB               	btfsc	4011,0,c	;volatile
  7160  002CCA  8035               	bsf	_USART_Status,0,c
  7161  002CCC                     i1l749:
  7162  002CCC  B4AB               	btfsc	4011,2,c	;volatile
  7163  002CCE  8435               	bsf	_USART_Status,2,c
  7164  002CD0  B2AB               	btfsc	4011,1,c	;volatile
  7165  002CD2  8635               	bsf	_USART_Status,3,c
  7166  002CD4  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  7167  002CD8  5001               	movf	ReadUSART@data,w,c
  7168  002CDA  0012               	return	
  7169  002CDC                     __end_of_ReadUSART:
  7170                           	opt stack 0
  7171                           pclatu	equ	0xFFB
  7172                           pclath	equ	0xFFA
  7173                           tblptru	equ	0xFF8
  7174                           tblptrh	equ	0xFF7
  7175                           tblptrl	equ	0xFF6
  7176                           tablat	equ	0xFF5
  7177                           prodh	equ	0xFF4
  7178                           prodl	equ	0xFF3
  7179                           intcon	equ	0xFF2
  7180                           postinc0	equ	0xFEE
  7181                           fsr0h	equ	0xFEA
  7182                           fsr0l	equ	0xFE9
  7183                           wreg	equ	0xFE8
  7184                           indf1	equ	0xFE7
  7185                           postinc1	equ	0xFE6
  7186                           postdec1	equ	0xFE5
  7187                           fsr1h	equ	0xFE2
  7188                           fsr1l	equ	0xFE1
  7189                           bsr	equ	0xFE0
  7190                           indf2	equ	0xFDF
  7191                           postinc2	equ	0xFDE
  7192                           fsr2h	equ	0xFDA
  7193                           fsr2l	equ	0xFD9
  7194                           status	equ	0xFD8
  7195                           
  7196 ;; *************** function _ISR_alta *****************
  7197 ;; Defined at:
  7198 ;;		line 69 in file "CanToSerial.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;		None
  7201 ;; Auto vars:     Size  Location     Type
  7202 ;;  i               1   19[BANK0 ] unsigned char 
  7203 ;; Return value:  Size  Location     Type
  7204 ;;		None               void
  7205 ;; Registers used:
  7206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7207 ;; Tracked objects:
  7208 ;;		On entry : 0/0
  7209 ;;		On exit  : 0/0
  7210 ;;		Unchanged: 0/0
  7211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7212 ;;      Params:         0       0       0       0
  7213 ;;      Locals:         0       1       0       0
  7214 ;;      Temps:          0      15       0       0
  7215 ;;      Totals:         0      16       0       0
  7216 ;;Total ram usage:       16 bytes
  7217 ;; Hardware stack levels used:    1
  7218 ;; Hardware stack levels required when called:    1
  7219 ;; This function calls:
  7220 ;;		_CANisRxReady
  7221 ;;		_CANisTxReady
  7222 ;;		_CANreceiveMessage
  7223 ;;		i2_CANsendMessage
  7224 ;; This function is called by:
  7225 ;;		Interrupt level 2
  7226 ;; This function uses a non-reentrant model
  7227 ;;
  7228                           
  7229                           	psect	intcode
  7230  000008                     __pintcode:
  7231                           	opt stack 0
  7232  000008                     _ISR_alta:
  7233                           	opt stack 23
  7234                           
  7235                           ;incstack = 0
  7236  000008  8247               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7237  00000A  CFFA F099          	movff	pclath,??_ISR_alta+1
  7238  00000E  CFFB F09A          	movff	pclatu,??_ISR_alta+2
  7239  000012  ED83  F014         	call	int_func,f	;refresh shadow registers
  7240                           pclatu	equ	0xFFB
  7241                           pclath	equ	0xFFA
  7242                           tblptru	equ	0xFF8
  7243                           tblptrh	equ	0xFF7
  7244                           tblptrl	equ	0xFF6
  7245                           tablat	equ	0xFF5
  7246                           prodh	equ	0xFF4
  7247                           prodl	equ	0xFF3
  7248                           intcon	equ	0xFF2
  7249                           postinc0	equ	0xFEE
  7250                           fsr0h	equ	0xFEA
  7251                           fsr0l	equ	0xFE9
  7252                           wreg	equ	0xFE8
  7253                           indf1	equ	0xFE7
  7254                           postinc1	equ	0xFE6
  7255                           postdec1	equ	0xFE5
  7256                           fsr1h	equ	0xFE2
  7257                           fsr1l	equ	0xFE1
  7258                           bsr	equ	0xFE0
  7259                           indf2	equ	0xFDF
  7260                           postinc2	equ	0xFDE
  7261                           fsr2h	equ	0xFDA
  7262                           fsr2l	equ	0xFD9
  7263                           status	equ	0xFD8
  7264                           
  7265                           	psect	intcode_body
  7266  002906                     __pintcode_body:
  7267                           	opt stack 23
  7268  002906                     int_func:
  7269                           	opt stack 23
  7270  002906  0006               	pop		; remove dummy address from shadow register refresh
  7271  002908  CFE9 F09B          	movff	fsr0l,??_ISR_alta+3
  7272  00290C  CFEA F09C          	movff	fsr0h,??_ISR_alta+4
  7273  002910  CFE1 F09D          	movff	fsr1l,??_ISR_alta+5
  7274  002914  CFE2 F09E          	movff	fsr1h,??_ISR_alta+6
  7275  002918  CFD9 F09F          	movff	fsr2l,??_ISR_alta+7
  7276  00291C  CFDA F0A0          	movff	fsr2h,??_ISR_alta+8
  7277  002920  CFF3 F0A1          	movff	prodl,??_ISR_alta+9
  7278  002924  CFF4 F0A2          	movff	prodh,??_ISR_alta+10
  7279  002928  CFF6 F0A3          	movff	tblptrl,??_ISR_alta+11
  7280  00292C  CFF7 F0A4          	movff	tblptrh,??_ISR_alta+12
  7281  002930  CFF8 F0A5          	movff	tblptru,??_ISR_alta+13
  7282  002934  CFF5 F0A6          	movff	tablat,??_ISR_alta+14
  7283                           
  7284                           ;CanToSerial.c: 70: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7285  002938  A0A4               	btfss	4004,0,c	;volatile
  7286  00293A  B2A4               	btfsc	4004,1,c	;volatile
  7287  00293C  D001               	goto	i2l4806
  7288  00293E  D093               	goto	i2l640
  7289  002940                     i2l4806:
  7290                           
  7291                           ;CanToSerial.c: 71: LATDbits.LATD3 = ~LATDbits.LATD3;
  7292  002940  A68C               	btfss	3980,3,c	;volatile
  7293  002942  D002               	goto	i2u633_40
  7294  002944  0E01               	movlw	1
  7295  002946  D001               	goto	i2u633_46
  7296  002948                     i2u633_40:
  7297  002948  0E00               	movlw	0
  7298  00294A                     i2u633_46:
  7299  00294A  0AFF               	xorlw	255
  7300  00294C  0100               	movlb	0	; () banked
  7301  00294E  6F98               	movwf	??_ISR_alta& (0+255),b
  7302  002950  0100               	movlb	0	; () banked
  7303  002952  4798               	rlncf	??_ISR_alta& (0+255),f,b
  7304  002954  4798               	rlncf	??_ISR_alta& (0+255),f,b
  7305  002956  4798               	rlncf	??_ISR_alta& (0+255),f,b
  7306  002958  508C               	movf	3980,w,c	;volatile
  7307  00295A  0100               	movlb	0	; () banked
  7308  00295C  1998               	xorwf	??_ISR_alta& (0+255),w,b
  7309  00295E  0BF7               	andlw	-9
  7310  002960  1998               	xorwf	??_ISR_alta& (0+255),w,b
  7311  002962  6E8C               	movwf	3980,c	;volatile
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;CanToSerial.c: 72: if (CANisRxReady()) {
  7315  002964  EC88  F016         	call	_CANisRxReady	;wreg free
  7316  002968  0900               	iorlw	0
  7317  00296A  B4D8               	btfsc	status,2,c
  7318  00296C  D07A               	goto	i2l633
  7319                           
  7320                           ;CanToSerial.c: 73: CANreceiveMessage(&msg);
  7321  00296E  0E6D               	movlw	low _msg
  7322  002970  6E19               	movwf	CANreceiveMessage@msg,c
  7323  002972  0E00               	movlw	high _msg
  7324  002974  6E1A               	movwf	CANreceiveMessage@msg+1,c
  7325  002976  EC5C  F00D         	call	_CANreceiveMessage	;wreg free
  7326                           
  7327                           ;CanToSerial.c: 75: if ((msg.identifier == 0b00000000000000000000000000010)&&(msg.RTR ==
      +                           1)) {
  7328  00297A  0E02               	movlw	2
  7329  00297C  0100               	movlb	0	; () banked
  7330  00297E  196D               	xorwf	_msg& (0+255),w,b
  7331  002980  0100               	movlb	0	; () banked
  7332  002982  116E               	iorwf	(_msg+1)& (0+255),w,b
  7333  002984  0100               	movlb	0	; () banked
  7334  002986  116F               	iorwf	(_msg+2)& (0+255),w,b
  7335  002988  0100               	movlb	0	; () banked
  7336  00298A  1170               	iorwf	(_msg+3)& (0+255),w,b
  7337  00298C  A4D8               	btfss	status,2,c
  7338  00298E  D03B               	goto	i2l4834
  7339                           
  7340                           ; BSR set to: 0
  7341  002990  0100               	movlb	0	; () banked
  7342  002992  057B               	decf	(_msg+14)& (0+255),w,b
  7343  002994  A4D8               	btfss	status,2,c
  7344  002996  D037               	goto	i2l4834
  7345                           
  7346                           ; BSR set to: 0
  7347                           ;CanToSerial.c: 76: LATDbits.LATD2 = ~LATDbits.LATD2;
  7348  002998  A48C               	btfss	3980,2,c	;volatile
  7349  00299A  D002               	goto	i2u637_40
  7350  00299C  0E01               	movlw	1
  7351  00299E  D001               	goto	i2u637_46
  7352  0029A0                     i2u637_40:
  7353  0029A0  0E00               	movlw	0
  7354  0029A2                     i2u637_46:
  7355  0029A2  0AFF               	xorlw	255
  7356  0029A4  0100               	movlb	0	; () banked
  7357  0029A6  6F98               	movwf	??_ISR_alta& (0+255),b
  7358  0029A8  0100               	movlb	0	; () banked
  7359  0029AA  4798               	rlncf	??_ISR_alta& (0+255),f,b
  7360  0029AC  4798               	rlncf	??_ISR_alta& (0+255),f,b
  7361  0029AE  508C               	movf	3980,w,c	;volatile
  7362  0029B0  0100               	movlb	0	; () banked
  7363  0029B2  1998               	xorwf	??_ISR_alta& (0+255),w,b
  7364  0029B4  0BFB               	andlw	-5
  7365  0029B6  1998               	xorwf	??_ISR_alta& (0+255),w,b
  7366  0029B8  6E8C               	movwf	3980,c	;volatile
  7367                           
  7368                           ; BSR set to: 0
  7369                           ;CanToSerial.c: 77: previousTimeCounter = timeCounter;
  7370  0029BA  C02D  F029         	movff	_timeCounter,_previousTimeCounter	;volatile
  7371  0029BE  C02E  F02A         	movff	_timeCounter+1,_previousTimeCounter+1	;volatile
  7372  0029C2  C02F  F02B         	movff	_timeCounter+2,_previousTimeCounter+2	;volatile
  7373  0029C6  C030  F02C         	movff	_timeCounter+3,_previousTimeCounter+3	;volatile
  7374                           
  7375                           ; BSR set to: 0
  7376                           ;CanToSerial.c: 78: data[0] = 0x03;
  7377  0029CA  0E03               	movlw	3
  7378  0029CC  0100               	movlb	0	; () banked
  7379  0029CE  6F84               	movwf	_data& (0+255),b
  7380  0029D0                     i2l4822:
  7381  0029D0  EC6E  F016         	call	_CANisTxReady	;wreg free
  7382  0029D4  06E8               	decf	wreg,f,c
  7383  0029D6  A4D8               	btfss	status,2,c
  7384  0029D8  D7FB               	goto	i2l4822
  7385                           
  7386                           ;CanToSerial.c: 80: CANsendMessage(0b00000000000000000000000000010, data, 8, CAN_CONFIG_
      +                          STD_MSG & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  7387  0029DA  0E02               	movlw	2
  7388  0029DC  6E19               	movwf	i2CANsendMessage@identifier,c
  7389  0029DE  0E00               	movlw	0
  7390  0029E0  6E1A               	movwf	i2CANsendMessage@identifier+1,c
  7391  0029E2  0E00               	movlw	0
  7392  0029E4  6E1B               	movwf	i2CANsendMessage@identifier+2,c
  7393  0029E6  0E00               	movlw	0
  7394  0029E8  6E1C               	movwf	i2CANsendMessage@identifier+3,c
  7395  0029EA  0E84               	movlw	low _data
  7396  0029EC  6E1D               	movwf	i2CANsendMessage@data,c
  7397  0029EE  0E00               	movlw	high _data
  7398  0029F0  6E1E               	movwf	i2CANsendMessage@data+1,c
  7399  0029F2  0E08               	movlw	8
  7400  0029F4  6E1F               	movwf	i2CANsendMessage@dataLength,c
  7401  0029F6  0EBC               	movlw	188
  7402  0029F8  6E20               	movwf	i2CANsendMessage@flags,c
  7403  0029FA  ECED  F009         	call	i2_CANsendMessage	;wreg free
  7404                           
  7405                           ;CanToSerial.c: 81: LATDbits.LATD4 = 1;
  7406  0029FE  888C               	bsf	3980,4,c	;volatile
  7407                           
  7408                           ;CanToSerial.c: 82: LATDbits.LATD5 = 0;
  7409  002A00  9A8C               	bcf	3980,5,c	;volatile
  7410                           
  7411                           ;CanToSerial.c: 83: LATDbits.LATD6 = 0;
  7412  002A02  9C8C               	bcf	3980,6,c	;volatile
  7413                           
  7414                           ;CanToSerial.c: 84: LATDbits.LATD2 = 1;
  7415  002A04  848C               	bsf	3980,2,c	;volatile
  7416  002A06                     i2l4834:
  7417                           
  7418                           ;CanToSerial.c: 85: }
  7419                           ;CanToSerial.c: 86: RTR_Flag = msg.RTR;
  7420  002A06  0100               	movlb	0	; () banked
  7421  002A08  A17B               	btfss	(_msg+14)& (0+255),0,b
  7422  002A0A  D002               	goto	i2u639_40
  7423  002A0C  8046               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
  7424  002A0E  D001               	goto	i2l4836
  7425  002A10                     i2u639_40:
  7426  002A10  9046               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
  7427  002A12                     i2l4836:
  7428                           
  7429                           ;CanToSerial.c: 87: id = msg.identifier;
  7430  002A12  C06D  F025         	movff	_msg,_id	;volatile
  7431  002A16  C06E  F026         	movff	_msg+1,_id+1	;volatile
  7432  002A1A  C06F  F027         	movff	_msg+2,_id+2	;volatile
  7433  002A1E  C070  F028         	movff	_msg+3,_id+3	;volatile
  7434                           
  7435                           ;CanToSerial.c: 88: newMessageCan = 1;
  7436  002A22  8446               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  7437                           
  7438                           ;CanToSerial.c: 89: for (unsigned char i = 0; i < 8; i++) {
  7439  002A24  0E00               	movlw	0
  7440  002A26  0100               	movlb	0	; () banked
  7441  002A28  6FA7               	movwf	ISR_alta@i& (0+255),b
  7442  002A2A                     i2l4842:
  7443                           
  7444                           ; BSR set to: 0
  7445  002A2A  0E07               	movlw	7
  7446  002A2C  0100               	movlb	0	; () banked
  7447  002A2E  65A7               	cpfsgt	ISR_alta@i& (0+255),b
  7448  002A30  D001               	goto	i2l4846
  7449  002A32  D017               	goto	i2l633
  7450  002A34                     i2l4846:
  7451                           
  7452                           ; BSR set to: 0
  7453                           ;CanToSerial.c: 90: data[i] = msg.data[i];
  7454  002A34  0100               	movlb	0	; () banked
  7455  002A36  51A7               	movf	ISR_alta@i& (0+255),w,b
  7456  002A38  0D01               	mullw	1
  7457  002A3A  0E71               	movlw	low (_msg+4)
  7458  002A3C  24F3               	addwf	prodl,w,c
  7459  002A3E  6ED9               	movwf	fsr2l,c
  7460  002A40  0E00               	movlw	high (_msg+4)
  7461  002A42  20F4               	addwfc	prodh,w,c
  7462  002A44  6EDA               	movwf	fsr2h,c
  7463  002A46  0100               	movlb	0	; () banked
  7464  002A48  51A7               	movf	ISR_alta@i& (0+255),w,b
  7465  002A4A  0D01               	mullw	1
  7466  002A4C  0E84               	movlw	low _data
  7467  002A4E  24F3               	addwf	prodl,w,c
  7468  002A50  6EE1               	movwf	fsr1l,c
  7469  002A52  0E00               	movlw	high _data
  7470  002A54  20F4               	addwfc	prodh,w,c
  7471  002A56  6EE2               	movwf	fsr1h,c
  7472  002A58  CFDF FFE7          	movff	indf2,indf1
  7473                           
  7474                           ; BSR set to: 0
  7475  002A5C  0100               	movlb	0	; () banked
  7476  002A5E  2BA7               	incf	ISR_alta@i& (0+255),f,b
  7477  002A60  D7E4               	goto	i2l4842
  7478  002A62                     i2l633:
  7479                           
  7480                           ;CanToSerial.c: 91: }
  7481                           ;CanToSerial.c: 94: }
  7482                           ;CanToSerial.c: 95: PIR3bits.RXB0IF = 0;
  7483  002A62  90A4               	bcf	4004,0,c	;volatile
  7484                           
  7485                           ;CanToSerial.c: 96: PIR3bits.RXB1IF = 0;
  7486  002A64  92A4               	bcf	4004,1,c	;volatile
  7487  002A66                     i2l640:
  7488  002A66  C0A6  FFF5         	movff	??_ISR_alta+14,tablat
  7489  002A6A  C0A5  FFF8         	movff	??_ISR_alta+13,tblptru
  7490  002A6E  C0A4  FFF7         	movff	??_ISR_alta+12,tblptrh
  7491  002A72  C0A3  FFF6         	movff	??_ISR_alta+11,tblptrl
  7492  002A76  C0A2  FFF4         	movff	??_ISR_alta+10,prodh
  7493  002A7A  C0A1  FFF3         	movff	??_ISR_alta+9,prodl
  7494  002A7E  C0A0  FFDA         	movff	??_ISR_alta+8,fsr2h
  7495  002A82  C09F  FFD9         	movff	??_ISR_alta+7,fsr2l
  7496  002A86  C09E  FFE2         	movff	??_ISR_alta+6,fsr1h
  7497  002A8A  C09D  FFE1         	movff	??_ISR_alta+5,fsr1l
  7498  002A8E  C09C  FFEA         	movff	??_ISR_alta+4,fsr0h
  7499  002A92  C09B  FFE9         	movff	??_ISR_alta+3,fsr0l
  7500  002A96  C09A  FFFB         	movff	??_ISR_alta+2,pclatu
  7501  002A9A  C099  FFFA         	movff	??_ISR_alta+1,pclath
  7502  002A9E  9247               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7503  002AA0  0011               	retfie		f
  7504  002AA2                     __end_of_ISR_alta:
  7505                           	opt stack 0
  7506                           pclatu	equ	0xFFB
  7507                           pclath	equ	0xFFA
  7508                           tblptru	equ	0xFF8
  7509                           tblptrh	equ	0xFF7
  7510                           tblptrl	equ	0xFF6
  7511                           tablat	equ	0xFF5
  7512                           prodh	equ	0xFF4
  7513                           prodl	equ	0xFF3
  7514                           intcon	equ	0xFF2
  7515                           postinc0	equ	0xFEE
  7516                           fsr0h	equ	0xFEA
  7517                           fsr0l	equ	0xFE9
  7518                           wreg	equ	0xFE8
  7519                           indf1	equ	0xFE7
  7520                           postinc1	equ	0xFE6
  7521                           postdec1	equ	0xFE5
  7522                           fsr1h	equ	0xFE2
  7523                           fsr1l	equ	0xFE1
  7524                           bsr	equ	0xFE0
  7525                           indf2	equ	0xFDF
  7526                           postinc2	equ	0xFDE
  7527                           fsr2h	equ	0xFDA
  7528                           fsr2l	equ	0xFD9
  7529                           status	equ	0xFD8
  7530                           
  7531 ;; *************** function i2_CANsendMessage *****************
  7532 ;; Defined at:
  7533 ;;		line 295 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7534 ;; Parameters:    Size  Location     Type
  7535 ;;  identifier      4   24[COMRAM] unsigned long 
  7536 ;;  data            2   28[COMRAM] PTR unsigned char 
  7537 ;;		 -> analogic_brake(8), set_speed(8), set_steering(8), data(8), 
  7538 ;;  dataLength      1   30[COMRAM] unsigned char 
  7539 ;;  flags           1   31[COMRAM] enum E16866
  7540 ;; Auto vars:     Size  Location     Type
  7541 ;;  CANsendMessa    4    0[BANK0 ] unsigned long 
  7542 ;; Return value:  Size  Location     Type
  7543 ;;		None               void
  7544 ;; Registers used:
  7545 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7546 ;; Tracked objects:
  7547 ;;		On entry : 0/0
  7548 ;;		On exit  : 0/0
  7549 ;;		Unchanged: 0/0
  7550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7551 ;;      Params:         8       0       0       0
  7552 ;;      Locals:         0       4       0       0
  7553 ;;      Temps:          4       0       0       0
  7554 ;;      Totals:        12       4       0       0
  7555 ;;Total ram usage:       16 bytes
  7556 ;; Hardware stack levels used:    1
  7557 ;; This function calls:
  7558 ;;		Nothing
  7559 ;; This function is called by:
  7560 ;;		_ISR_alta
  7561 ;; This function uses a non-reentrant model
  7562 ;;
  7563                           
  7564                           	psect	text17
  7565  0013DA                     __ptext17:
  7566                           	opt stack 0
  7567  0013DA                     i2_CANsendMessage:
  7568                           	opt stack 23
  7569                           
  7570                           ;inc\CANlib.h: 297: unsigned long tamp;
  7571                           ;inc\CANlib.h: 299: if (TXB0CONbits.TXREQ == 0)
  7572                           
  7573                           ;incstack = 0
  7574  0013DA  010F               	movlb	15	; () banked
  7575  0013DC  B740               	btfsc	64,3,b	;volatile
  7576  0013DE  D122               	goto	i2l365
  7577                           
  7578                           ; BSR set to: 15
  7579                           ;inc\CANlib.h: 300: { TXB0DLC = dataLength;
  7580  0013E0  C01F  FF45         	movff	i2CANsendMessage@dataLength,3909	;volatile
  7581                           
  7582                           ;inc\CANlib.h: 301: if (0b01000000 & flags)
  7583  0013E4  AC20               	btfss	i2CANsendMessage@flags,6,c
  7584  0013E6  D003               	goto	i2l366
  7585                           
  7586                           ; BSR set to: 15
  7587                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x01;
  7588  0013E8  010F               	movlb	15	; () banked
  7589  0013EA  8D45               	bsf	69,6,b	;volatile
  7590  0013EC  D002               	goto	i2l367
  7591  0013EE                     i2l366:
  7592                           
  7593                           ; BSR set to: 15
  7594                           ;inc\CANlib.h: 303: else
  7595                           ;inc\CANlib.h: 304: TXB0DLCbits.TXRTR = 0x00;
  7596  0013EE  010F               	movlb	15	; () banked
  7597  0013F0  9D45               	bcf	69,6,b	;volatile
  7598  0013F2                     i2l367:
  7599                           
  7600                           ; BSR set to: 15
  7601                           ;inc\CANlib.h: 306: if (CAN_TX_FRAME_MASK & flags)
  7602  0013F2  A620               	btfss	i2CANsendMessage@flags,3,c
  7603  0013F4  D06D               	goto	i2l368
  7604                           
  7605                           ; BSR set to: 15
  7606                           ;inc\CANlib.h: 307: {
  7607                           ;inc\CANlib.h: 309: tamp = identifier & 0x000000FF;
  7608  0013F6  5019               	movf	i2CANsendMessage@identifier,w,c
  7609  0013F8  0100               	movlb	0	; () banked
  7610  0013FA  6F94               	movwf	i2CANsendMessage@tamp& (0+255),b
  7611  0013FC  6B95               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
  7612  0013FE  6B96               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
  7613  001400  6B97               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;inc\CANlib.h: 310: TXB0EIDL = (unsigned char) tamp;
  7617  001402  C094  FF44         	movff	i2CANsendMessage@tamp,3908	;volatile
  7618                           
  7619                           ; BSR set to: 0
  7620                           ;inc\CANlib.h: 312: tamp = identifier & 0x0000FF00;
  7621  001406  0E00               	movlw	0
  7622  001408  1419               	andwf	i2CANsendMessage@identifier,w,c
  7623  00140A  0100               	movlb	0	; () banked
  7624  00140C  6F94               	movwf	i2CANsendMessage@tamp& (0+255),b
  7625  00140E  0EFF               	movlw	255
  7626  001410  141A               	andwf	i2CANsendMessage@identifier+1,w,c
  7627  001412  0100               	movlb	0	; () banked
  7628  001414  6F95               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
  7629  001416  0E00               	movlw	0
  7630  001418  141B               	andwf	i2CANsendMessage@identifier+2,w,c
  7631  00141A  0100               	movlb	0	; () banked
  7632  00141C  6F96               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
  7633  00141E  0E00               	movlw	0
  7634  001420  141C               	andwf	i2CANsendMessage@identifier+3,w,c
  7635  001422  0100               	movlb	0	; () banked
  7636  001424  6F97               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
  7637                           
  7638                           ; BSR set to: 0
  7639                           ;inc\CANlib.h: 313: tamp = tamp >> 8;
  7640  001426  C094  F021         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
  7641  00142A  C095  F022         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
  7642  00142E  C096  F023         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
  7643  001432  C097  F024         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
  7644  001436  C022  F021         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
  7645  00143A  C023  F022         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
  7646  00143E  C024  F023         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
  7647  001442  6A24               	clrf	??i2_CANsendMessage+3,c
  7648  001444  C021  F094         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
  7649  001448  C022  F095         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
  7650  00144C  C023  F096         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
  7651  001450  C024  F097         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
  7652                           
  7653                           ; BSR set to: 0
  7654                           ;inc\CANlib.h: 314: TXB0EIDH = (unsigned char) tamp;
  7655  001454  C094  FF43         	movff	i2CANsendMessage@tamp,3907	;volatile
  7656                           
  7657                           ; BSR set to: 0
  7658                           ;inc\CANlib.h: 316: TXB0SIDL = 0x00;
  7659  001458  0E00               	movlw	0
  7660  00145A  010F               	movlb	15	; () banked
  7661  00145C  6F42               	movwf	66,b	;volatile
  7662                           
  7663                           ; BSR set to: 15
  7664                           ;inc\CANlib.h: 317: TXB0SIDLbits.EXIDE = 0x01;
  7665  00145E  010F               	movlb	15	; () banked
  7666  001460  8742               	bsf	66,3,b	;volatile
  7667                           
  7668                           ; BSR set to: 15
  7669                           ;inc\CANlib.h: 319: if (identifier & 0x00010000)
  7670  001462  A01B               	btfss	i2CANsendMessage@identifier+2,0,c
  7671  001464  D002               	goto	i2l369
  7672                           
  7673                           ; BSR set to: 15
  7674                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID16 = 0x01;
  7675  001466  010F               	movlb	15	; () banked
  7676  001468  8142               	bsf	66,0,b	;volatile
  7677  00146A                     i2l369:
  7678                           
  7679                           ; BSR set to: 15
  7680                           ;inc\CANlib.h: 321: if (identifier & 0x00020000)
  7681  00146A  A21B               	btfss	i2CANsendMessage@identifier+2,1,c
  7682  00146C  D002               	goto	i2l370
  7683                           
  7684                           ; BSR set to: 15
  7685                           ;inc\CANlib.h: 322: TXB0SIDLbits.EID17 = 0x01;
  7686  00146E  010F               	movlb	15	; () banked
  7687  001470  8342               	bsf	66,1,b	;volatile
  7688  001472                     i2l370:
  7689                           
  7690                           ; BSR set to: 15
  7691                           ;inc\CANlib.h: 323: if (identifier & 0x00040000)
  7692  001472  A41B               	btfss	i2CANsendMessage@identifier+2,2,c
  7693  001474  D002               	goto	i2l371
  7694                           
  7695                           ; BSR set to: 15
  7696                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID0 = 0x01;
  7697  001476  010F               	movlb	15	; () banked
  7698  001478  8B42               	bsf	66,5,b	;volatile
  7699  00147A                     i2l371:
  7700                           
  7701                           ; BSR set to: 15
  7702                           ;inc\CANlib.h: 325: if (identifier & 0x00080000)
  7703  00147A  A61B               	btfss	i2CANsendMessage@identifier+2,3,c
  7704  00147C  D002               	goto	i2l372
  7705                           
  7706                           ; BSR set to: 15
  7707                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID1 = 0x01;
  7708  00147E  010F               	movlb	15	; () banked
  7709  001480  8D42               	bsf	66,6,b	;volatile
  7710  001482                     i2l372:
  7711                           
  7712                           ; BSR set to: 15
  7713                           ;inc\CANlib.h: 327: if (identifier & 0x00100000)
  7714  001482  A81B               	btfss	i2CANsendMessage@identifier+2,4,c
  7715  001484  D002               	goto	i2l4604
  7716                           
  7717                           ; BSR set to: 15
  7718                           ;inc\CANlib.h: 328: TXB0SIDLbits.SID2 = 0x01;
  7719  001486  010F               	movlb	15	; () banked
  7720  001488  8F42               	bsf	66,7,b	;volatile
  7721  00148A                     i2l4604:
  7722                           
  7723                           ; BSR set to: 15
  7724                           ;inc\CANlib.h: 330: tamp = (identifier >> 21);
  7725  00148A  C019  F021         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
  7726  00148E  C01A  F022         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
  7727  001492  C01B  F023         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
  7728  001496  C01C  F024         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
  7729  00149A  0E16               	movlw	22
  7730  00149C  D005               	goto	i2u600_40
  7731  00149E                     i2u600_45:
  7732  00149E  90D8               	bcf	status,0,c
  7733  0014A0  3224               	rrcf	??i2_CANsendMessage+3,f,c
  7734  0014A2  3223               	rrcf	??i2_CANsendMessage+2,f,c
  7735  0014A4  3222               	rrcf	??i2_CANsendMessage+1,f,c
  7736  0014A6  3221               	rrcf	??i2_CANsendMessage,f,c
  7737  0014A8                     i2u600_40:
  7738  0014A8  2EE8               	decfsz	wreg,f,c
  7739  0014AA  D7F9               	goto	i2u600_45
  7740  0014AC  C021  F094         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
  7741  0014B0  C022  F095         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
  7742  0014B4  C023  F096         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
  7743  0014B8  C024  F097         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
  7744                           
  7745                           ; BSR set to: 15
  7746                           ;inc\CANlib.h: 331: tamp = tamp & 0x000000FF;
  7747  0014BC  0100               	movlb	0	; () banked
  7748  0014BE  5194               	movf	i2CANsendMessage@tamp& (0+255),w,b
  7749  0014C0  0100               	movlb	0	; () banked
  7750  0014C2  6F94               	movwf	i2CANsendMessage@tamp& (0+255),b
  7751  0014C4  6B95               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
  7752  0014C6  6B96               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
  7753  0014C8  6B97               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
  7754                           
  7755                           ; BSR set to: 0
  7756                           ;inc\CANlib.h: 332: TXB0SIDH = (unsigned char) tamp;
  7757  0014CA  C094  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
  7758                           
  7759                           ;inc\CANlib.h: 333: }
  7760  0014CE  D053               	goto	i2l4624
  7761  0014D0                     i2l368:
  7762                           
  7763                           ; BSR set to: 15
  7764                           ;inc\CANlib.h: 335: else
  7765                           ;inc\CANlib.h: 337: {
  7766                           ;inc\CANlib.h: 338: TXB0SIDLbits.EXIDE = 0x00;
  7767  0014D0  010F               	movlb	15	; () banked
  7768  0014D2  9742               	bcf	66,3,b	;volatile
  7769                           
  7770                           ; BSR set to: 15
  7771                           ;inc\CANlib.h: 340: tamp = (identifier >> 3);
  7772  0014D4  C019  F021         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
  7773  0014D8  C01A  F022         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
  7774  0014DC  C01B  F023         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
  7775  0014E0  C01C  F024         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
  7776  0014E4  0E04               	movlw	4
  7777  0014E6  D005               	goto	i2u601_40
  7778  0014E8                     i2u601_45:
  7779  0014E8  90D8               	bcf	status,0,c
  7780  0014EA  3224               	rrcf	??i2_CANsendMessage+3,f,c
  7781  0014EC  3223               	rrcf	??i2_CANsendMessage+2,f,c
  7782  0014EE  3222               	rrcf	??i2_CANsendMessage+1,f,c
  7783  0014F0  3221               	rrcf	??i2_CANsendMessage,f,c
  7784  0014F2                     i2u601_40:
  7785  0014F2  2EE8               	decfsz	wreg,f,c
  7786  0014F4  D7F9               	goto	i2u601_45
  7787  0014F6  C021  F094         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
  7788  0014FA  C022  F095         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
  7789  0014FE  C023  F096         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
  7790  001502  C024  F097         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
  7791                           
  7792                           ; BSR set to: 15
  7793                           ;inc\CANlib.h: 341: tamp = tamp & 0x000000FF;
  7794  001506  0100               	movlb	0	; () banked
  7795  001508  5194               	movf	i2CANsendMessage@tamp& (0+255),w,b
  7796  00150A  0100               	movlb	0	; () banked
  7797  00150C  6F94               	movwf	i2CANsendMessage@tamp& (0+255),b
  7798  00150E  6B95               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
  7799  001510  6B96               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
  7800  001512  6B97               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
  7801                           
  7802                           ; BSR set to: 0
  7803                           ;inc\CANlib.h: 342: TXB0SIDH = (unsigned char) tamp;
  7804  001514  C094  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
  7805                           
  7806                           ; BSR set to: 0
  7807                           ;inc\CANlib.h: 344: tamp = identifier & 0x00000007;
  7808  001518  0E07               	movlw	7
  7809  00151A  1419               	andwf	i2CANsendMessage@identifier,w,c
  7810  00151C  0100               	movlb	0	; () banked
  7811  00151E  6F94               	movwf	i2CANsendMessage@tamp& (0+255),b
  7812  001520  0E00               	movlw	0
  7813  001522  141A               	andwf	i2CANsendMessage@identifier+1,w,c
  7814  001524  0100               	movlb	0	; () banked
  7815  001526  6F95               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
  7816  001528  0E00               	movlw	0
  7817  00152A  141B               	andwf	i2CANsendMessage@identifier+2,w,c
  7818  00152C  0100               	movlb	0	; () banked
  7819  00152E  6F96               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
  7820  001530  0E00               	movlw	0
  7821  001532  141C               	andwf	i2CANsendMessage@identifier+3,w,c
  7822  001534  0100               	movlb	0	; () banked
  7823  001536  6F97               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
  7824                           
  7825                           ; BSR set to: 0
  7826                           ;inc\CANlib.h: 345: tamp = tamp << 5;
  7827  001538  C094  F021         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
  7828  00153C  C095  F022         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
  7829  001540  C096  F023         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
  7830  001544  C097  F024         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
  7831  001548  0E05               	movlw	5
  7832  00154A                     i2u602_45:
  7833  00154A  90D8               	bcf	status,0,c
  7834  00154C  3621               	rlcf	??i2_CANsendMessage,f,c
  7835  00154E  3622               	rlcf	??i2_CANsendMessage+1,f,c
  7836  001550  3623               	rlcf	??i2_CANsendMessage+2,f,c
  7837  001552  3624               	rlcf	??i2_CANsendMessage+3,f,c
  7838  001554  2EE8               	decfsz	wreg,f,c
  7839  001556  D7F9               	goto	i2u602_45
  7840  001558  C021  F094         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
  7841  00155C  C022  F095         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
  7842  001560  C023  F096         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
  7843  001564  C024  F097         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
  7844                           
  7845                           ; BSR set to: 0
  7846                           ;inc\CANlib.h: 346: TXB0SIDL = TXB0SIDL & 0b00011111;
  7847  001568  010F               	movlb	15	; () banked
  7848  00156A  5142               	movf	66,w,b	;volatile
  7849  00156C  0B1F               	andlw	31
  7850  00156E  010F               	movlb	15	; () banked
  7851  001570  6F42               	movwf	66,b	;volatile
  7852                           
  7853                           ; BSR set to: 15
  7854                           ;inc\CANlib.h: 347: TXB0SIDL = (unsigned char) tamp;
  7855  001572  C094  FF42         	movff	i2CANsendMessage@tamp,3906	;volatile
  7856  001576                     i2l4624:
  7857                           
  7858                           ;inc\CANlib.h: 348: }
  7859                           ;inc\CANlib.h: 350: if (0b00000001 & flags)
  7860  001576  A020               	btfss	i2CANsendMessage@flags,0,c
  7861  001578  D003               	goto	i2l375
  7862                           
  7863                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x01;
  7864  00157A  010F               	movlb	15	; () banked
  7865  00157C  8140               	bsf	64,0,b	;volatile
  7866  00157E  D002               	goto	i2l376
  7867  001580                     i2l375:
  7868                           
  7869                           ;inc\CANlib.h: 352: else
  7870                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI0 = 0x00;
  7871  001580  010F               	movlb	15	; () banked
  7872  001582  9140               	bcf	64,0,b	;volatile
  7873  001584                     i2l376:
  7874                           
  7875                           ; BSR set to: 15
  7876                           ;inc\CANlib.h: 354: if (0b00000010 & flags)
  7877  001584  A220               	btfss	i2CANsendMessage@flags,1,c
  7878  001586  D003               	goto	i2l377
  7879                           
  7880                           ; BSR set to: 15
  7881                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x01;
  7882  001588  010F               	movlb	15	; () banked
  7883  00158A  8340               	bsf	64,1,b	;volatile
  7884  00158C  D002               	goto	i2l4630
  7885  00158E                     i2l377:
  7886                           
  7887                           ; BSR set to: 15
  7888                           ;inc\CANlib.h: 356: else
  7889                           ;inc\CANlib.h: 357: TXB0CONbits.TXPRI1 = 0x00;
  7890  00158E  010F               	movlb	15	; () banked
  7891  001590  9340               	bcf	64,1,b	;volatile
  7892  001592                     i2l4630:
  7893                           
  7894                           ; BSR set to: 15
  7895                           ;inc\CANlib.h: 359: TXB0D0 = data[0];
  7896  001592  C01D  FFD9         	movff	i2CANsendMessage@data,fsr2l
  7897  001596  C01E  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
  7898  00159A  50DF               	movf	indf2,w,c
  7899  00159C  010F               	movlb	15	; () banked
  7900  00159E  6F46               	movwf	70,b	;volatile
  7901                           
  7902                           ; BSR set to: 15
  7903                           ;inc\CANlib.h: 360: TXB0D1 = data[1];
  7904  0015A0  EE20 F001          	lfsr	2,1
  7905  0015A4  501D               	movf	i2CANsendMessage@data,w,c
  7906  0015A6  26D9               	addwf	fsr2l,f,c
  7907  0015A8  501E               	movf	i2CANsendMessage@data+1,w,c
  7908  0015AA  22DA               	addwfc	fsr2h,f,c
  7909  0015AC  50DF               	movf	indf2,w,c
  7910  0015AE  010F               	movlb	15	; () banked
  7911  0015B0  6F47               	movwf	71,b	;volatile
  7912                           
  7913                           ; BSR set to: 15
  7914                           ;inc\CANlib.h: 361: TXB0D2 = data[2];
  7915  0015B2  EE20 F002          	lfsr	2,2
  7916  0015B6  501D               	movf	i2CANsendMessage@data,w,c
  7917  0015B8  26D9               	addwf	fsr2l,f,c
  7918  0015BA  501E               	movf	i2CANsendMessage@data+1,w,c
  7919  0015BC  22DA               	addwfc	fsr2h,f,c
  7920  0015BE  50DF               	movf	indf2,w,c
  7921  0015C0  010F               	movlb	15	; () banked
  7922  0015C2  6F48               	movwf	72,b	;volatile
  7923                           
  7924                           ; BSR set to: 15
  7925                           ;inc\CANlib.h: 362: TXB0D3 = data[3];
  7926  0015C4  EE20 F003          	lfsr	2,3
  7927  0015C8  501D               	movf	i2CANsendMessage@data,w,c
  7928  0015CA  26D9               	addwf	fsr2l,f,c
  7929  0015CC  501E               	movf	i2CANsendMessage@data+1,w,c
  7930  0015CE  22DA               	addwfc	fsr2h,f,c
  7931  0015D0  50DF               	movf	indf2,w,c
  7932  0015D2  010F               	movlb	15	; () banked
  7933  0015D4  6F49               	movwf	73,b	;volatile
  7934                           
  7935                           ; BSR set to: 15
  7936                           ;inc\CANlib.h: 363: TXB0D4 = data[4];
  7937  0015D6  EE20 F004          	lfsr	2,4
  7938  0015DA  501D               	movf	i2CANsendMessage@data,w,c
  7939  0015DC  26D9               	addwf	fsr2l,f,c
  7940  0015DE  501E               	movf	i2CANsendMessage@data+1,w,c
  7941  0015E0  22DA               	addwfc	fsr2h,f,c
  7942  0015E2  50DF               	movf	indf2,w,c
  7943  0015E4  010F               	movlb	15	; () banked
  7944  0015E6  6F4A               	movwf	74,b	;volatile
  7945                           
  7946                           ; BSR set to: 15
  7947                           ;inc\CANlib.h: 364: TXB0D5 = data[5];
  7948  0015E8  EE20 F005          	lfsr	2,5
  7949  0015EC  501D               	movf	i2CANsendMessage@data,w,c
  7950  0015EE  26D9               	addwf	fsr2l,f,c
  7951  0015F0  501E               	movf	i2CANsendMessage@data+1,w,c
  7952  0015F2  22DA               	addwfc	fsr2h,f,c
  7953  0015F4  50DF               	movf	indf2,w,c
  7954  0015F6  010F               	movlb	15	; () banked
  7955  0015F8  6F4B               	movwf	75,b	;volatile
  7956                           
  7957                           ; BSR set to: 15
  7958                           ;inc\CANlib.h: 365: TXB0D6 = data[6];
  7959  0015FA  EE20 F006          	lfsr	2,6
  7960  0015FE  501D               	movf	i2CANsendMessage@data,w,c
  7961  001600  26D9               	addwf	fsr2l,f,c
  7962  001602  501E               	movf	i2CANsendMessage@data+1,w,c
  7963  001604  22DA               	addwfc	fsr2h,f,c
  7964  001606  50DF               	movf	indf2,w,c
  7965  001608  010F               	movlb	15	; () banked
  7966  00160A  6F4C               	movwf	76,b	;volatile
  7967                           
  7968                           ; BSR set to: 15
  7969                           ;inc\CANlib.h: 366: TXB0D7 = data[7];
  7970  00160C  EE20 F007          	lfsr	2,7
  7971  001610  501D               	movf	i2CANsendMessage@data,w,c
  7972  001612  26D9               	addwf	fsr2l,f,c
  7973  001614  501E               	movf	i2CANsendMessage@data+1,w,c
  7974  001616  22DA               	addwfc	fsr2h,f,c
  7975  001618  50DF               	movf	indf2,w,c
  7976  00161A  010F               	movlb	15	; () banked
  7977  00161C  6F4D               	movwf	77,b	;volatile
  7978                           
  7979                           ; BSR set to: 15
  7980                           ;inc\CANlib.h: 368: TXB0CONbits.TXREQ = 0x01;
  7981  00161E  010F               	movlb	15	; () banked
  7982  001620  8740               	bsf	64,3,b	;volatile
  7983                           
  7984                           ; BSR set to: 15
  7985                           ;inc\CANlib.h: 369: return;
  7986  001622  0012               	return	
  7987  001624                     i2l365:
  7988                           
  7989                           ; BSR set to: 15
  7990                           ;inc\CANlib.h: 370: }
  7991                           ;inc\CANlib.h: 374: if (TXB1CONbits.TXREQ == 0)
  7992  001624  010F               	movlb	15	; () banked
  7993  001626  B730               	btfsc	48,3,b	;volatile
  7994  001628  D122               	goto	i2l380
  7995                           
  7996                           ; BSR set to: 15
  7997                           ;inc\CANlib.h: 375: { TXB1DLC = dataLength;
  7998  00162A  C01F  FF35         	movff	i2CANsendMessage@dataLength,3893	;volatile
  7999                           
  8000                           ;inc\CANlib.h: 377: if (0b01000000 & flags)
  8001  00162E  AC20               	btfss	i2CANsendMessage@flags,6,c
  8002  001630  D003               	goto	i2l381
  8003                           
  8004                           ; BSR set to: 15
  8005                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x01;
  8006  001632  010F               	movlb	15	; () banked
  8007  001634  8D35               	bsf	53,6,b	;volatile
  8008  001636  D002               	goto	i2l382
  8009  001638                     i2l381:
  8010                           
  8011                           ; BSR set to: 15
  8012                           ;inc\CANlib.h: 379: else
  8013                           ;inc\CANlib.h: 380: TXB1DLCbits.TXRTR = 0x00;
  8014  001638  010F               	movlb	15	; () banked
  8015  00163A  9D35               	bcf	53,6,b	;volatile
  8016  00163C                     i2l382:
  8017                           
  8018                           ; BSR set to: 15
  8019                           ;inc\CANlib.h: 382: if (CAN_TX_FRAME_MASK & flags)
  8020  00163C  A620               	btfss	i2CANsendMessage@flags,3,c
  8021  00163E  D06D               	goto	i2l383
  8022                           
  8023                           ; BSR set to: 15
  8024                           ;inc\CANlib.h: 383: {
  8025                           ;inc\CANlib.h: 384: tamp = identifier & 0x000000FF;
  8026  001640  5019               	movf	i2CANsendMessage@identifier,w,c
  8027  001642  0100               	movlb	0	; () banked
  8028  001644  6F94               	movwf	i2CANsendMessage@tamp& (0+255),b
  8029  001646  6B95               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
  8030  001648  6B96               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
  8031  00164A  6B97               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
  8032                           
  8033                           ; BSR set to: 0
  8034                           ;inc\CANlib.h: 385: TXB1EIDL = (unsigned char) tamp;
  8035  00164C  C094  FF34         	movff	i2CANsendMessage@tamp,3892	;volatile
  8036                           
  8037                           ; BSR set to: 0
  8038                           ;inc\CANlib.h: 387: tamp = identifier & 0x0000FF00;
  8039  001650  0E00               	movlw	0
  8040  001652  1419               	andwf	i2CANsendMessage@identifier,w,c
  8041  001654  0100               	movlb	0	; () banked
  8042  001656  6F94               	movwf	i2CANsendMessage@tamp& (0+255),b
  8043  001658  0EFF               	movlw	255
  8044  00165A  141A               	andwf	i2CANsendMessage@identifier+1,w,c
  8045  00165C  0100               	movlb	0	; () banked
  8046  00165E  6F95               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
  8047  001660  0E00               	movlw	0
  8048  001662  141B               	andwf	i2CANsendMessage@identifier+2,w,c
  8049  001664  0100               	movlb	0	; () banked
  8050  001666  6F96               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
  8051  001668  0E00               	movlw	0
  8052  00166A  141C               	andwf	i2CANsendMessage@identifier+3,w,c
  8053  00166C  0100               	movlb	0	; () banked
  8054  00166E  6F97               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
  8055                           
  8056                           ; BSR set to: 0
  8057                           ;inc\CANlib.h: 388: tamp = tamp >> 8;
  8058  001670  C094  F021         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
  8059  001674  C095  F022         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
  8060  001678  C096  F023         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
  8061  00167C  C097  F024         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
  8062  001680  C022  F021         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
  8063  001684  C023  F022         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
  8064  001688  C024  F023         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
  8065  00168C  6A24               	clrf	??i2_CANsendMessage+3,c
  8066  00168E  C021  F094         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
  8067  001692  C022  F095         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
  8068  001696  C023  F096         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
  8069  00169A  C024  F097         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
  8070                           
  8071                           ; BSR set to: 0
  8072                           ;inc\CANlib.h: 389: TXB1EIDH = (unsigned char) tamp;
  8073  00169E  C094  FF33         	movff	i2CANsendMessage@tamp,3891	;volatile
  8074                           
  8075                           ; BSR set to: 0
  8076                           ;inc\CANlib.h: 391: TXB1SIDL = 0x00;
  8077  0016A2  0E00               	movlw	0
  8078  0016A4  010F               	movlb	15	; () banked
  8079  0016A6  6F32               	movwf	50,b	;volatile
  8080                           
  8081                           ; BSR set to: 15
  8082                           ;inc\CANlib.h: 392: TXB1SIDLbits.EXIDE = 0x01;
  8083  0016A8  010F               	movlb	15	; () banked
  8084  0016AA  8732               	bsf	50,3,b	;volatile
  8085                           
  8086                           ; BSR set to: 15
  8087                           ;inc\CANlib.h: 394: if (identifier & 0x00010000)
  8088  0016AC  A01B               	btfss	i2CANsendMessage@identifier+2,0,c
  8089  0016AE  D002               	goto	i2l384
  8090                           
  8091                           ; BSR set to: 15
  8092                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID16 = 0x01;
  8093  0016B0  010F               	movlb	15	; () banked
  8094  0016B2  8132               	bsf	50,0,b	;volatile
  8095  0016B4                     i2l384:
  8096                           
  8097                           ; BSR set to: 15
  8098                           ;inc\CANlib.h: 396: if (identifier & 0x00020000)
  8099  0016B4  A21B               	btfss	i2CANsendMessage@identifier+2,1,c
  8100  0016B6  D002               	goto	i2l385
  8101                           
  8102                           ; BSR set to: 15
  8103                           ;inc\CANlib.h: 397: TXB1SIDLbits.EID17 = 0x01;
  8104  0016B8  010F               	movlb	15	; () banked
  8105  0016BA  8332               	bsf	50,1,b	;volatile
  8106  0016BC                     i2l385:
  8107                           
  8108                           ; BSR set to: 15
  8109                           ;inc\CANlib.h: 398: if (identifier & 0x00040000)
  8110  0016BC  A41B               	btfss	i2CANsendMessage@identifier+2,2,c
  8111  0016BE  D002               	goto	i2l386
  8112                           
  8113                           ; BSR set to: 15
  8114                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID0 = 0x01;
  8115  0016C0  010F               	movlb	15	; () banked
  8116  0016C2  8B32               	bsf	50,5,b	;volatile
  8117  0016C4                     i2l386:
  8118                           
  8119                           ; BSR set to: 15
  8120                           ;inc\CANlib.h: 400: if (identifier & 0x00080000)
  8121  0016C4  A61B               	btfss	i2CANsendMessage@identifier+2,3,c
  8122  0016C6  D002               	goto	i2l387
  8123                           
  8124                           ; BSR set to: 15
  8125                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID1 = 0x01;
  8126  0016C8  010F               	movlb	15	; () banked
  8127  0016CA  8D32               	bsf	50,6,b	;volatile
  8128  0016CC                     i2l387:
  8129                           
  8130                           ; BSR set to: 15
  8131                           ;inc\CANlib.h: 402: if (identifier & 0x00100000)
  8132  0016CC  A81B               	btfss	i2CANsendMessage@identifier+2,4,c
  8133  0016CE  D002               	goto	i2l4680
  8134                           
  8135                           ; BSR set to: 15
  8136                           ;inc\CANlib.h: 403: TXB1SIDLbits.SID2 = 0x01;
  8137  0016D0  010F               	movlb	15	; () banked
  8138  0016D2  8F32               	bsf	50,7,b	;volatile
  8139  0016D4                     i2l4680:
  8140                           
  8141                           ; BSR set to: 15
  8142                           ;inc\CANlib.h: 405: tamp = (identifier >> 21);
  8143  0016D4  C019  F021         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
  8144  0016D8  C01A  F022         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
  8145  0016DC  C01B  F023         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
  8146  0016E0  C01C  F024         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
  8147  0016E4  0E16               	movlw	22
  8148  0016E6  D005               	goto	i2u613_40
  8149  0016E8                     i2u613_45:
  8150  0016E8  90D8               	bcf	status,0,c
  8151  0016EA  3224               	rrcf	??i2_CANsendMessage+3,f,c
  8152  0016EC  3223               	rrcf	??i2_CANsendMessage+2,f,c
  8153  0016EE  3222               	rrcf	??i2_CANsendMessage+1,f,c
  8154  0016F0  3221               	rrcf	??i2_CANsendMessage,f,c
  8155  0016F2                     i2u613_40:
  8156  0016F2  2EE8               	decfsz	wreg,f,c
  8157  0016F4  D7F9               	goto	i2u613_45
  8158  0016F6  C021  F094         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
  8159  0016FA  C022  F095         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
  8160  0016FE  C023  F096         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
  8161  001702  C024  F097         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
  8162                           
  8163                           ; BSR set to: 15
  8164                           ;inc\CANlib.h: 406: tamp = tamp & 0x000000FF;
  8165  001706  0100               	movlb	0	; () banked
  8166  001708  5194               	movf	i2CANsendMessage@tamp& (0+255),w,b
  8167  00170A  0100               	movlb	0	; () banked
  8168  00170C  6F94               	movwf	i2CANsendMessage@tamp& (0+255),b
  8169  00170E  6B95               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
  8170  001710  6B96               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
  8171  001712  6B97               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
  8172                           
  8173                           ; BSR set to: 0
  8174                           ;inc\CANlib.h: 407: TXB1SIDH = (unsigned char) tamp;
  8175  001714  C094  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
  8176                           
  8177                           ;inc\CANlib.h: 408: }
  8178  001718  D053               	goto	i2l4700
  8179  00171A                     i2l383:
  8180                           
  8181                           ; BSR set to: 15
  8182                           ;inc\CANlib.h: 410: else
  8183                           ;inc\CANlib.h: 412: {
  8184                           ;inc\CANlib.h: 413: TXB1SIDLbits.EXIDE = 0x00;
  8185  00171A  010F               	movlb	15	; () banked
  8186  00171C  9732               	bcf	50,3,b	;volatile
  8187                           
  8188                           ; BSR set to: 15
  8189                           ;inc\CANlib.h: 415: tamp = (identifier >> 3);
  8190  00171E  C019  F021         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
  8191  001722  C01A  F022         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
  8192  001726  C01B  F023         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
  8193  00172A  C01C  F024         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
  8194  00172E  0E04               	movlw	4
  8195  001730  D005               	goto	i2u614_40
  8196  001732                     i2u614_45:
  8197  001732  90D8               	bcf	status,0,c
  8198  001734  3224               	rrcf	??i2_CANsendMessage+3,f,c
  8199  001736  3223               	rrcf	??i2_CANsendMessage+2,f,c
  8200  001738  3222               	rrcf	??i2_CANsendMessage+1,f,c
  8201  00173A  3221               	rrcf	??i2_CANsendMessage,f,c
  8202  00173C                     i2u614_40:
  8203  00173C  2EE8               	decfsz	wreg,f,c
  8204  00173E  D7F9               	goto	i2u614_45
  8205  001740  C021  F094         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
  8206  001744  C022  F095         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
  8207  001748  C023  F096         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
  8208  00174C  C024  F097         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
  8209                           
  8210                           ; BSR set to: 15
  8211                           ;inc\CANlib.h: 416: tamp = tamp & 0x000000FF;
  8212  001750  0100               	movlb	0	; () banked
  8213  001752  5194               	movf	i2CANsendMessage@tamp& (0+255),w,b
  8214  001754  0100               	movlb	0	; () banked
  8215  001756  6F94               	movwf	i2CANsendMessage@tamp& (0+255),b
  8216  001758  6B95               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
  8217  00175A  6B96               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
  8218  00175C  6B97               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
  8219                           
  8220                           ; BSR set to: 0
  8221                           ;inc\CANlib.h: 417: TXB1SIDH = (unsigned char) tamp;
  8222  00175E  C094  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
  8223                           
  8224                           ; BSR set to: 0
  8225                           ;inc\CANlib.h: 419: tamp = identifier & 0x00000007;
  8226  001762  0E07               	movlw	7
  8227  001764  1419               	andwf	i2CANsendMessage@identifier,w,c
  8228  001766  0100               	movlb	0	; () banked
  8229  001768  6F94               	movwf	i2CANsendMessage@tamp& (0+255),b
  8230  00176A  0E00               	movlw	0
  8231  00176C  141A               	andwf	i2CANsendMessage@identifier+1,w,c
  8232  00176E  0100               	movlb	0	; () banked
  8233  001770  6F95               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
  8234  001772  0E00               	movlw	0
  8235  001774  141B               	andwf	i2CANsendMessage@identifier+2,w,c
  8236  001776  0100               	movlb	0	; () banked
  8237  001778  6F96               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
  8238  00177A  0E00               	movlw	0
  8239  00177C  141C               	andwf	i2CANsendMessage@identifier+3,w,c
  8240  00177E  0100               	movlb	0	; () banked
  8241  001780  6F97               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
  8242                           
  8243                           ; BSR set to: 0
  8244                           ;inc\CANlib.h: 420: tamp = tamp << 5;
  8245  001782  C094  F021         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
  8246  001786  C095  F022         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
  8247  00178A  C096  F023         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
  8248  00178E  C097  F024         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
  8249  001792  0E05               	movlw	5
  8250  001794                     i2u615_45:
  8251  001794  90D8               	bcf	status,0,c
  8252  001796  3621               	rlcf	??i2_CANsendMessage,f,c
  8253  001798  3622               	rlcf	??i2_CANsendMessage+1,f,c
  8254  00179A  3623               	rlcf	??i2_CANsendMessage+2,f,c
  8255  00179C  3624               	rlcf	??i2_CANsendMessage+3,f,c
  8256  00179E  2EE8               	decfsz	wreg,f,c
  8257  0017A0  D7F9               	goto	i2u615_45
  8258  0017A2  C021  F094         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
  8259  0017A6  C022  F095         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
  8260  0017AA  C023  F096         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
  8261  0017AE  C024  F097         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
  8262                           
  8263                           ; BSR set to: 0
  8264                           ;inc\CANlib.h: 421: TXB1SIDL = TXB1SIDL & 0b00011111;
  8265  0017B2  010F               	movlb	15	; () banked
  8266  0017B4  5132               	movf	50,w,b	;volatile
  8267  0017B6  0B1F               	andlw	31
  8268  0017B8  010F               	movlb	15	; () banked
  8269  0017BA  6F32               	movwf	50,b	;volatile
  8270                           
  8271                           ; BSR set to: 15
  8272                           ;inc\CANlib.h: 422: TXB1SIDL = (unsigned char) tamp;
  8273  0017BC  C094  FF32         	movff	i2CANsendMessage@tamp,3890	;volatile
  8274  0017C0                     i2l4700:
  8275                           
  8276                           ;inc\CANlib.h: 423: }
  8277                           ;inc\CANlib.h: 425: if (0b00000001 & flags)
  8278  0017C0  A020               	btfss	i2CANsendMessage@flags,0,c
  8279  0017C2  D003               	goto	i2l390
  8280                           
  8281                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x01;
  8282  0017C4  010F               	movlb	15	; () banked
  8283  0017C6  8130               	bsf	48,0,b	;volatile
  8284  0017C8  D002               	goto	i2l391
  8285  0017CA                     i2l390:
  8286                           
  8287                           ;inc\CANlib.h: 427: else
  8288                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI0 = 0x00;
  8289  0017CA  010F               	movlb	15	; () banked
  8290  0017CC  9130               	bcf	48,0,b	;volatile
  8291  0017CE                     i2l391:
  8292                           
  8293                           ; BSR set to: 15
  8294                           ;inc\CANlib.h: 429: if (0b00000010 & flags)
  8295  0017CE  A220               	btfss	i2CANsendMessage@flags,1,c
  8296  0017D0  D003               	goto	i2l392
  8297                           
  8298                           ; BSR set to: 15
  8299                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x01;
  8300  0017D2  010F               	movlb	15	; () banked
  8301  0017D4  8330               	bsf	48,1,b	;volatile
  8302  0017D6  D002               	goto	i2l4706
  8303  0017D8                     i2l392:
  8304                           
  8305                           ; BSR set to: 15
  8306                           ;inc\CANlib.h: 431: else
  8307                           ;inc\CANlib.h: 432: TXB1CONbits.TXPRI1 = 0x00;
  8308  0017D8  010F               	movlb	15	; () banked
  8309  0017DA  9330               	bcf	48,1,b	;volatile
  8310  0017DC                     i2l4706:
  8311                           
  8312                           ; BSR set to: 15
  8313                           ;inc\CANlib.h: 434: TXB1D0 = data[0];
  8314  0017DC  C01D  FFD9         	movff	i2CANsendMessage@data,fsr2l
  8315  0017E0  C01E  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
  8316  0017E4  50DF               	movf	indf2,w,c
  8317  0017E6  010F               	movlb	15	; () banked
  8318  0017E8  6F36               	movwf	54,b	;volatile
  8319                           
  8320                           ; BSR set to: 15
  8321                           ;inc\CANlib.h: 435: TXB1D1 = data[1];
  8322  0017EA  EE20 F001          	lfsr	2,1
  8323  0017EE  501D               	movf	i2CANsendMessage@data,w,c
  8324  0017F0  26D9               	addwf	fsr2l,f,c
  8325  0017F2  501E               	movf	i2CANsendMessage@data+1,w,c
  8326  0017F4  22DA               	addwfc	fsr2h,f,c
  8327  0017F6  50DF               	movf	indf2,w,c
  8328  0017F8  010F               	movlb	15	; () banked
  8329  0017FA  6F37               	movwf	55,b	;volatile
  8330                           
  8331                           ; BSR set to: 15
  8332                           ;inc\CANlib.h: 436: TXB1D2 = data[2];
  8333  0017FC  EE20 F002          	lfsr	2,2
  8334  001800  501D               	movf	i2CANsendMessage@data,w,c
  8335  001802  26D9               	addwf	fsr2l,f,c
  8336  001804  501E               	movf	i2CANsendMessage@data+1,w,c
  8337  001806  22DA               	addwfc	fsr2h,f,c
  8338  001808  50DF               	movf	indf2,w,c
  8339  00180A  010F               	movlb	15	; () banked
  8340  00180C  6F38               	movwf	56,b	;volatile
  8341                           
  8342                           ; BSR set to: 15
  8343                           ;inc\CANlib.h: 437: TXB1D3 = data[3];
  8344  00180E  EE20 F003          	lfsr	2,3
  8345  001812  501D               	movf	i2CANsendMessage@data,w,c
  8346  001814  26D9               	addwf	fsr2l,f,c
  8347  001816  501E               	movf	i2CANsendMessage@data+1,w,c
  8348  001818  22DA               	addwfc	fsr2h,f,c
  8349  00181A  50DF               	movf	indf2,w,c
  8350  00181C  010F               	movlb	15	; () banked
  8351  00181E  6F39               	movwf	57,b	;volatile
  8352                           
  8353                           ; BSR set to: 15
  8354                           ;inc\CANlib.h: 438: TXB1D4 = data[4];
  8355  001820  EE20 F004          	lfsr	2,4
  8356  001824  501D               	movf	i2CANsendMessage@data,w,c
  8357  001826  26D9               	addwf	fsr2l,f,c
  8358  001828  501E               	movf	i2CANsendMessage@data+1,w,c
  8359  00182A  22DA               	addwfc	fsr2h,f,c
  8360  00182C  50DF               	movf	indf2,w,c
  8361  00182E  010F               	movlb	15	; () banked
  8362  001830  6F3A               	movwf	58,b	;volatile
  8363                           
  8364                           ; BSR set to: 15
  8365                           ;inc\CANlib.h: 439: TXB1D5 = data[5];
  8366  001832  EE20 F005          	lfsr	2,5
  8367  001836  501D               	movf	i2CANsendMessage@data,w,c
  8368  001838  26D9               	addwf	fsr2l,f,c
  8369  00183A  501E               	movf	i2CANsendMessage@data+1,w,c
  8370  00183C  22DA               	addwfc	fsr2h,f,c
  8371  00183E  50DF               	movf	indf2,w,c
  8372  001840  010F               	movlb	15	; () banked
  8373  001842  6F3B               	movwf	59,b	;volatile
  8374                           
  8375                           ; BSR set to: 15
  8376                           ;inc\CANlib.h: 440: TXB1D6 = data[6];
  8377  001844  EE20 F006          	lfsr	2,6
  8378  001848  501D               	movf	i2CANsendMessage@data,w,c
  8379  00184A  26D9               	addwf	fsr2l,f,c
  8380  00184C  501E               	movf	i2CANsendMessage@data+1,w,c
  8381  00184E  22DA               	addwfc	fsr2h,f,c
  8382  001850  50DF               	movf	indf2,w,c
  8383  001852  010F               	movlb	15	; () banked
  8384  001854  6F3C               	movwf	60,b	;volatile
  8385                           
  8386                           ; BSR set to: 15
  8387                           ;inc\CANlib.h: 441: TXB1D7 = data[7];
  8388  001856  EE20 F007          	lfsr	2,7
  8389  00185A  501D               	movf	i2CANsendMessage@data,w,c
  8390  00185C  26D9               	addwf	fsr2l,f,c
  8391  00185E  501E               	movf	i2CANsendMessage@data+1,w,c
  8392  001860  22DA               	addwfc	fsr2h,f,c
  8393  001862  50DF               	movf	indf2,w,c
  8394  001864  010F               	movlb	15	; () banked
  8395  001866  6F3D               	movwf	61,b	;volatile
  8396                           
  8397                           ; BSR set to: 15
  8398                           ;inc\CANlib.h: 443: TXB1CONbits.TXREQ = 0x01;
  8399  001868  010F               	movlb	15	; () banked
  8400  00186A  8730               	bsf	48,3,b	;volatile
  8401                           
  8402                           ; BSR set to: 15
  8403                           ;inc\CANlib.h: 445: return;
  8404  00186C  0012               	return	
  8405  00186E                     i2l380:
  8406                           
  8407                           ; BSR set to: 15
  8408                           ;inc\CANlib.h: 446: }
  8409                           ;inc\CANlib.h: 450: if (TXB2CONbits.TXREQ == 0)
  8410  00186E  010F               	movlb	15	; () banked
  8411  001870  B720               	btfsc	32,3,b	;volatile
  8412  001872  0012               	return	
  8413                           
  8414                           ; BSR set to: 15
  8415                           ;inc\CANlib.h: 451: { TXB2DLC = dataLength;
  8416  001874  C01F  FF25         	movff	i2CANsendMessage@dataLength,3877	;volatile
  8417                           
  8418                           ;inc\CANlib.h: 453: if (0b01000000 & flags)
  8419  001878  AC20               	btfss	i2CANsendMessage@flags,6,c
  8420  00187A  D003               	goto	i2l395
  8421                           
  8422                           ; BSR set to: 15
  8423                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x01;
  8424  00187C  010F               	movlb	15	; () banked
  8425  00187E  8D25               	bsf	37,6,b	;volatile
  8426  001880  D002               	goto	i2l396
  8427  001882                     i2l395:
  8428                           
  8429                           ; BSR set to: 15
  8430                           ;inc\CANlib.h: 455: else
  8431                           ;inc\CANlib.h: 456: TXB2DLCbits.TXRTR = 0x00;
  8432  001882  010F               	movlb	15	; () banked
  8433  001884  9D25               	bcf	37,6,b	;volatile
  8434  001886                     i2l396:
  8435                           
  8436                           ; BSR set to: 15
  8437                           ;inc\CANlib.h: 458: if (CAN_TX_FRAME_MASK & flags)
  8438  001886  A620               	btfss	i2CANsendMessage@flags,3,c
  8439  001888  D06D               	goto	i2l397
  8440                           
  8441                           ; BSR set to: 15
  8442                           ;inc\CANlib.h: 459: {
  8443                           ;inc\CANlib.h: 460: tamp = identifier & 0x000000FF;
  8444  00188A  5019               	movf	i2CANsendMessage@identifier,w,c
  8445  00188C  0100               	movlb	0	; () banked
  8446  00188E  6F94               	movwf	i2CANsendMessage@tamp& (0+255),b
  8447  001890  6B95               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
  8448  001892  6B96               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
  8449  001894  6B97               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
  8450                           
  8451                           ; BSR set to: 0
  8452                           ;inc\CANlib.h: 461: TXB2EIDL = (unsigned char) tamp;
  8453  001896  C094  FF24         	movff	i2CANsendMessage@tamp,3876	;volatile
  8454                           
  8455                           ; BSR set to: 0
  8456                           ;inc\CANlib.h: 463: tamp = identifier & 0x0000FF00;
  8457  00189A  0E00               	movlw	0
  8458  00189C  1419               	andwf	i2CANsendMessage@identifier,w,c
  8459  00189E  0100               	movlb	0	; () banked
  8460  0018A0  6F94               	movwf	i2CANsendMessage@tamp& (0+255),b
  8461  0018A2  0EFF               	movlw	255
  8462  0018A4  141A               	andwf	i2CANsendMessage@identifier+1,w,c
  8463  0018A6  0100               	movlb	0	; () banked
  8464  0018A8  6F95               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
  8465  0018AA  0E00               	movlw	0
  8466  0018AC  141B               	andwf	i2CANsendMessage@identifier+2,w,c
  8467  0018AE  0100               	movlb	0	; () banked
  8468  0018B0  6F96               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
  8469  0018B2  0E00               	movlw	0
  8470  0018B4  141C               	andwf	i2CANsendMessage@identifier+3,w,c
  8471  0018B6  0100               	movlb	0	; () banked
  8472  0018B8  6F97               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
  8473                           
  8474                           ; BSR set to: 0
  8475                           ;inc\CANlib.h: 464: tamp = tamp >> 8;
  8476  0018BA  C094  F021         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
  8477  0018BE  C095  F022         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
  8478  0018C2  C096  F023         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
  8479  0018C6  C097  F024         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
  8480  0018CA  C022  F021         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
  8481  0018CE  C023  F022         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
  8482  0018D2  C024  F023         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
  8483  0018D6  6A24               	clrf	??i2_CANsendMessage+3,c
  8484  0018D8  C021  F094         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
  8485  0018DC  C022  F095         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
  8486  0018E0  C023  F096         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
  8487  0018E4  C024  F097         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
  8488                           
  8489                           ; BSR set to: 0
  8490                           ;inc\CANlib.h: 465: TXB2EIDH = (unsigned char) tamp;
  8491  0018E8  C094  FF23         	movff	i2CANsendMessage@tamp,3875	;volatile
  8492                           
  8493                           ; BSR set to: 0
  8494                           ;inc\CANlib.h: 467: TXB2SIDL = 0x00;
  8495  0018EC  0E00               	movlw	0
  8496  0018EE  010F               	movlb	15	; () banked
  8497  0018F0  6F22               	movwf	34,b	;volatile
  8498                           
  8499                           ; BSR set to: 15
  8500                           ;inc\CANlib.h: 468: TXB2SIDLbits.EXIDE = 0x01;
  8501  0018F2  010F               	movlb	15	; () banked
  8502  0018F4  8722               	bsf	34,3,b	;volatile
  8503                           
  8504                           ; BSR set to: 15
  8505                           ;inc\CANlib.h: 470: if (identifier & 0x00010000)
  8506  0018F6  A01B               	btfss	i2CANsendMessage@identifier+2,0,c
  8507  0018F8  D002               	goto	i2l398
  8508                           
  8509                           ; BSR set to: 15
  8510                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID16 = 0x01;
  8511  0018FA  010F               	movlb	15	; () banked
  8512  0018FC  8122               	bsf	34,0,b	;volatile
  8513  0018FE                     i2l398:
  8514                           
  8515                           ; BSR set to: 15
  8516                           ;inc\CANlib.h: 472: if (identifier & 0x00020000)
  8517  0018FE  A21B               	btfss	i2CANsendMessage@identifier+2,1,c
  8518  001900  D002               	goto	i2l399
  8519                           
  8520                           ; BSR set to: 15
  8521                           ;inc\CANlib.h: 473: TXB2SIDLbits.EID17 = 0x01;
  8522  001902  010F               	movlb	15	; () banked
  8523  001904  8322               	bsf	34,1,b	;volatile
  8524  001906                     i2l399:
  8525                           
  8526                           ; BSR set to: 15
  8527                           ;inc\CANlib.h: 474: if (identifier & 0x00040000)
  8528  001906  A41B               	btfss	i2CANsendMessage@identifier+2,2,c
  8529  001908  D002               	goto	i2l400
  8530                           
  8531                           ; BSR set to: 15
  8532                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID0 = 0x01;
  8533  00190A  010F               	movlb	15	; () banked
  8534  00190C  8B22               	bsf	34,5,b	;volatile
  8535  00190E                     i2l400:
  8536                           
  8537                           ; BSR set to: 15
  8538                           ;inc\CANlib.h: 476: if (identifier & 0x00080000)
  8539  00190E  A61B               	btfss	i2CANsendMessage@identifier+2,3,c
  8540  001910  D002               	goto	i2l401
  8541                           
  8542                           ; BSR set to: 15
  8543                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID1 = 0x01;
  8544  001912  010F               	movlb	15	; () banked
  8545  001914  8D22               	bsf	34,6,b	;volatile
  8546  001916                     i2l401:
  8547                           
  8548                           ; BSR set to: 15
  8549                           ;inc\CANlib.h: 478: if (identifier & 0x00100000)
  8550  001916  A81B               	btfss	i2CANsendMessage@identifier+2,4,c
  8551  001918  D002               	goto	i2l4756
  8552                           
  8553                           ; BSR set to: 15
  8554                           ;inc\CANlib.h: 479: TXB2SIDLbits.SID2 = 0x01;
  8555  00191A  010F               	movlb	15	; () banked
  8556  00191C  8F22               	bsf	34,7,b	;volatile
  8557  00191E                     i2l4756:
  8558                           
  8559                           ; BSR set to: 15
  8560                           ;inc\CANlib.h: 481: tamp = (identifier >> 21);
  8561  00191E  C019  F021         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
  8562  001922  C01A  F022         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
  8563  001926  C01B  F023         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
  8564  00192A  C01C  F024         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
  8565  00192E  0E16               	movlw	22
  8566  001930  D005               	goto	i2u626_40
  8567  001932                     i2u626_45:
  8568  001932  90D8               	bcf	status,0,c
  8569  001934  3224               	rrcf	??i2_CANsendMessage+3,f,c
  8570  001936  3223               	rrcf	??i2_CANsendMessage+2,f,c
  8571  001938  3222               	rrcf	??i2_CANsendMessage+1,f,c
  8572  00193A  3221               	rrcf	??i2_CANsendMessage,f,c
  8573  00193C                     i2u626_40:
  8574  00193C  2EE8               	decfsz	wreg,f,c
  8575  00193E  D7F9               	goto	i2u626_45
  8576  001940  C021  F094         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
  8577  001944  C022  F095         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
  8578  001948  C023  F096         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
  8579  00194C  C024  F097         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
  8580                           
  8581                           ; BSR set to: 15
  8582                           ;inc\CANlib.h: 482: tamp = tamp & 0x000000FF;
  8583  001950  0100               	movlb	0	; () banked
  8584  001952  5194               	movf	i2CANsendMessage@tamp& (0+255),w,b
  8585  001954  0100               	movlb	0	; () banked
  8586  001956  6F94               	movwf	i2CANsendMessage@tamp& (0+255),b
  8587  001958  6B95               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
  8588  00195A  6B96               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
  8589  00195C  6B97               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
  8590                           
  8591                           ; BSR set to: 0
  8592                           ;inc\CANlib.h: 483: TXB2SIDH = (unsigned char) tamp;
  8593  00195E  C094  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
  8594                           
  8595                           ;inc\CANlib.h: 484: }
  8596  001962  D053               	goto	i2l4776
  8597  001964                     i2l397:
  8598                           
  8599                           ; BSR set to: 15
  8600                           ;inc\CANlib.h: 486: else
  8601                           ;inc\CANlib.h: 488: {
  8602                           ;inc\CANlib.h: 489: TXB2SIDLbits.EXIDE = 0x00;
  8603  001964  010F               	movlb	15	; () banked
  8604  001966  9722               	bcf	34,3,b	;volatile
  8605                           
  8606                           ; BSR set to: 15
  8607                           ;inc\CANlib.h: 491: tamp = (identifier >> 3);
  8608  001968  C019  F021         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
  8609  00196C  C01A  F022         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
  8610  001970  C01B  F023         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
  8611  001974  C01C  F024         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
  8612  001978  0E04               	movlw	4
  8613  00197A  D005               	goto	i2u627_40
  8614  00197C                     i2u627_45:
  8615  00197C  90D8               	bcf	status,0,c
  8616  00197E  3224               	rrcf	??i2_CANsendMessage+3,f,c
  8617  001980  3223               	rrcf	??i2_CANsendMessage+2,f,c
  8618  001982  3222               	rrcf	??i2_CANsendMessage+1,f,c
  8619  001984  3221               	rrcf	??i2_CANsendMessage,f,c
  8620  001986                     i2u627_40:
  8621  001986  2EE8               	decfsz	wreg,f,c
  8622  001988  D7F9               	goto	i2u627_45
  8623  00198A  C021  F094         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
  8624  00198E  C022  F095         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
  8625  001992  C023  F096         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
  8626  001996  C024  F097         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
  8627                           
  8628                           ; BSR set to: 15
  8629                           ;inc\CANlib.h: 492: tamp = tamp & 0x000000FF;
  8630  00199A  0100               	movlb	0	; () banked
  8631  00199C  5194               	movf	i2CANsendMessage@tamp& (0+255),w,b
  8632  00199E  0100               	movlb	0	; () banked
  8633  0019A0  6F94               	movwf	i2CANsendMessage@tamp& (0+255),b
  8634  0019A2  6B95               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
  8635  0019A4  6B96               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
  8636  0019A6  6B97               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
  8637                           
  8638                           ; BSR set to: 0
  8639                           ;inc\CANlib.h: 493: TXB2SIDH = (unsigned char) tamp;
  8640  0019A8  C094  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
  8641                           
  8642                           ; BSR set to: 0
  8643                           ;inc\CANlib.h: 495: tamp = identifier & 0x00000007;
  8644  0019AC  0E07               	movlw	7
  8645  0019AE  1419               	andwf	i2CANsendMessage@identifier,w,c
  8646  0019B0  0100               	movlb	0	; () banked
  8647  0019B2  6F94               	movwf	i2CANsendMessage@tamp& (0+255),b
  8648  0019B4  0E00               	movlw	0
  8649  0019B6  141A               	andwf	i2CANsendMessage@identifier+1,w,c
  8650  0019B8  0100               	movlb	0	; () banked
  8651  0019BA  6F95               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
  8652  0019BC  0E00               	movlw	0
  8653  0019BE  141B               	andwf	i2CANsendMessage@identifier+2,w,c
  8654  0019C0  0100               	movlb	0	; () banked
  8655  0019C2  6F96               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
  8656  0019C4  0E00               	movlw	0
  8657  0019C6  141C               	andwf	i2CANsendMessage@identifier+3,w,c
  8658  0019C8  0100               	movlb	0	; () banked
  8659  0019CA  6F97               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
  8660                           
  8661                           ; BSR set to: 0
  8662                           ;inc\CANlib.h: 496: tamp = tamp << 5;
  8663  0019CC  C094  F021         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
  8664  0019D0  C095  F022         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
  8665  0019D4  C096  F023         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
  8666  0019D8  C097  F024         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
  8667  0019DC  0E05               	movlw	5
  8668  0019DE                     i2u628_45:
  8669  0019DE  90D8               	bcf	status,0,c
  8670  0019E0  3621               	rlcf	??i2_CANsendMessage,f,c
  8671  0019E2  3622               	rlcf	??i2_CANsendMessage+1,f,c
  8672  0019E4  3623               	rlcf	??i2_CANsendMessage+2,f,c
  8673  0019E6  3624               	rlcf	??i2_CANsendMessage+3,f,c
  8674  0019E8  2EE8               	decfsz	wreg,f,c
  8675  0019EA  D7F9               	goto	i2u628_45
  8676  0019EC  C021  F094         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
  8677  0019F0  C022  F095         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
  8678  0019F4  C023  F096         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
  8679  0019F8  C024  F097         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
  8680                           
  8681                           ; BSR set to: 0
  8682                           ;inc\CANlib.h: 497: TXB2SIDL = TXB2SIDL & 0b00011111;
  8683  0019FC  010F               	movlb	15	; () banked
  8684  0019FE  5122               	movf	34,w,b	;volatile
  8685  001A00  0B1F               	andlw	31
  8686  001A02  010F               	movlb	15	; () banked
  8687  001A04  6F22               	movwf	34,b	;volatile
  8688                           
  8689                           ; BSR set to: 15
  8690                           ;inc\CANlib.h: 498: TXB2SIDL = (unsigned char) tamp;
  8691  001A06  C094  FF22         	movff	i2CANsendMessage@tamp,3874	;volatile
  8692  001A0A                     i2l4776:
  8693                           
  8694                           ;inc\CANlib.h: 499: }
  8695                           ;inc\CANlib.h: 501: if (0b00000001 & flags)
  8696  001A0A  A020               	btfss	i2CANsendMessage@flags,0,c
  8697  001A0C  D003               	goto	i2l404
  8698                           
  8699                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x01;
  8700  001A0E  010F               	movlb	15	; () banked
  8701  001A10  8120               	bsf	32,0,b	;volatile
  8702  001A12  D002               	goto	i2l405
  8703  001A14                     i2l404:
  8704                           
  8705                           ;inc\CANlib.h: 503: else
  8706                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI0 = 0x00;
  8707  001A14  010F               	movlb	15	; () banked
  8708  001A16  9120               	bcf	32,0,b	;volatile
  8709  001A18                     i2l405:
  8710                           
  8711                           ; BSR set to: 15
  8712                           ;inc\CANlib.h: 505: if (0b00000010 & flags)
  8713  001A18  A220               	btfss	i2CANsendMessage@flags,1,c
  8714  001A1A  D003               	goto	i2l406
  8715                           
  8716                           ; BSR set to: 15
  8717                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x01;
  8718  001A1C  010F               	movlb	15	; () banked
  8719  001A1E  8320               	bsf	32,1,b	;volatile
  8720  001A20  D002               	goto	i2l4782
  8721  001A22                     i2l406:
  8722                           
  8723                           ; BSR set to: 15
  8724                           ;inc\CANlib.h: 507: else
  8725                           ;inc\CANlib.h: 508: TXB2CONbits.TXPRI1 = 0x00;
  8726  001A22  010F               	movlb	15	; () banked
  8727  001A24  9320               	bcf	32,1,b	;volatile
  8728  001A26                     i2l4782:
  8729                           
  8730                           ; BSR set to: 15
  8731                           ;inc\CANlib.h: 510: TXB2D0 = data[0];
  8732  001A26  C01D  FFD9         	movff	i2CANsendMessage@data,fsr2l
  8733  001A2A  C01E  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
  8734  001A2E  50DF               	movf	indf2,w,c
  8735  001A30  010F               	movlb	15	; () banked
  8736  001A32  6F26               	movwf	38,b	;volatile
  8737                           
  8738                           ; BSR set to: 15
  8739                           ;inc\CANlib.h: 511: TXB2D1 = data[1];
  8740  001A34  EE20 F001          	lfsr	2,1
  8741  001A38  501D               	movf	i2CANsendMessage@data,w,c
  8742  001A3A  26D9               	addwf	fsr2l,f,c
  8743  001A3C  501E               	movf	i2CANsendMessage@data+1,w,c
  8744  001A3E  22DA               	addwfc	fsr2h,f,c
  8745  001A40  50DF               	movf	indf2,w,c
  8746  001A42  010F               	movlb	15	; () banked
  8747  001A44  6F27               	movwf	39,b	;volatile
  8748                           
  8749                           ; BSR set to: 15
  8750                           ;inc\CANlib.h: 512: TXB2D2 = data[2];
  8751  001A46  EE20 F002          	lfsr	2,2
  8752  001A4A  501D               	movf	i2CANsendMessage@data,w,c
  8753  001A4C  26D9               	addwf	fsr2l,f,c
  8754  001A4E  501E               	movf	i2CANsendMessage@data+1,w,c
  8755  001A50  22DA               	addwfc	fsr2h,f,c
  8756  001A52  50DF               	movf	indf2,w,c
  8757  001A54  010F               	movlb	15	; () banked
  8758  001A56  6F28               	movwf	40,b	;volatile
  8759                           
  8760                           ; BSR set to: 15
  8761                           ;inc\CANlib.h: 513: TXB2D3 = data[3];
  8762  001A58  EE20 F003          	lfsr	2,3
  8763  001A5C  501D               	movf	i2CANsendMessage@data,w,c
  8764  001A5E  26D9               	addwf	fsr2l,f,c
  8765  001A60  501E               	movf	i2CANsendMessage@data+1,w,c
  8766  001A62  22DA               	addwfc	fsr2h,f,c
  8767  001A64  50DF               	movf	indf2,w,c
  8768  001A66  010F               	movlb	15	; () banked
  8769  001A68  6F29               	movwf	41,b	;volatile
  8770                           
  8771                           ; BSR set to: 15
  8772                           ;inc\CANlib.h: 514: TXB2D4 = data[4];
  8773  001A6A  EE20 F004          	lfsr	2,4
  8774  001A6E  501D               	movf	i2CANsendMessage@data,w,c
  8775  001A70  26D9               	addwf	fsr2l,f,c
  8776  001A72  501E               	movf	i2CANsendMessage@data+1,w,c
  8777  001A74  22DA               	addwfc	fsr2h,f,c
  8778  001A76  50DF               	movf	indf2,w,c
  8779  001A78  010F               	movlb	15	; () banked
  8780  001A7A  6F2A               	movwf	42,b	;volatile
  8781                           
  8782                           ; BSR set to: 15
  8783                           ;inc\CANlib.h: 515: TXB2D5 = data[5];
  8784  001A7C  EE20 F005          	lfsr	2,5
  8785  001A80  501D               	movf	i2CANsendMessage@data,w,c
  8786  001A82  26D9               	addwf	fsr2l,f,c
  8787  001A84  501E               	movf	i2CANsendMessage@data+1,w,c
  8788  001A86  22DA               	addwfc	fsr2h,f,c
  8789  001A88  50DF               	movf	indf2,w,c
  8790  001A8A  010F               	movlb	15	; () banked
  8791  001A8C  6F2B               	movwf	43,b	;volatile
  8792                           
  8793                           ; BSR set to: 15
  8794                           ;inc\CANlib.h: 516: TXB2D6 = data[6];
  8795  001A8E  EE20 F006          	lfsr	2,6
  8796  001A92  501D               	movf	i2CANsendMessage@data,w,c
  8797  001A94  26D9               	addwf	fsr2l,f,c
  8798  001A96  501E               	movf	i2CANsendMessage@data+1,w,c
  8799  001A98  22DA               	addwfc	fsr2h,f,c
  8800  001A9A  50DF               	movf	indf2,w,c
  8801  001A9C  010F               	movlb	15	; () banked
  8802  001A9E  6F2C               	movwf	44,b	;volatile
  8803                           
  8804                           ; BSR set to: 15
  8805                           ;inc\CANlib.h: 517: TXB2D7 = data[7];
  8806  001AA0  EE20 F007          	lfsr	2,7
  8807  001AA4  501D               	movf	i2CANsendMessage@data,w,c
  8808  001AA6  26D9               	addwf	fsr2l,f,c
  8809  001AA8  501E               	movf	i2CANsendMessage@data+1,w,c
  8810  001AAA  22DA               	addwfc	fsr2h,f,c
  8811  001AAC  50DF               	movf	indf2,w,c
  8812  001AAE  010F               	movlb	15	; () banked
  8813  001AB0  6F2D               	movwf	45,b	;volatile
  8814                           
  8815                           ; BSR set to: 15
  8816                           ;inc\CANlib.h: 519: TXB2CONbits.TXREQ = 0x01;
  8817  001AB2  010F               	movlb	15	; () banked
  8818  001AB4  8720               	bsf	32,3,b	;volatile
  8819                           
  8820                           ; BSR set to: 15
  8821                           ;inc\CANlib.h: 521: return;
  8822  001AB6  0012               	return	
  8823  001AB8                     __end_ofi2_CANsendMessage:
  8824                           	opt stack 0
  8825                           pclatu	equ	0xFFB
  8826                           pclath	equ	0xFFA
  8827                           tblptru	equ	0xFF8
  8828                           tblptrh	equ	0xFF7
  8829                           tblptrl	equ	0xFF6
  8830                           tablat	equ	0xFF5
  8831                           prodh	equ	0xFF4
  8832                           prodl	equ	0xFF3
  8833                           intcon	equ	0xFF2
  8834                           postinc0	equ	0xFEE
  8835                           fsr0h	equ	0xFEA
  8836                           fsr0l	equ	0xFE9
  8837                           wreg	equ	0xFE8
  8838                           indf1	equ	0xFE7
  8839                           postinc1	equ	0xFE6
  8840                           postdec1	equ	0xFE5
  8841                           fsr1h	equ	0xFE2
  8842                           fsr1l	equ	0xFE1
  8843                           bsr	equ	0xFE0
  8844                           indf2	equ	0xFDF
  8845                           postinc2	equ	0xFDE
  8846                           fsr2h	equ	0xFDA
  8847                           fsr2l	equ	0xFD9
  8848                           status	equ	0xFD8
  8849                           
  8850 ;; *************** function _CANreceiveMessage *****************
  8851 ;; Defined at:
  8852 ;;		line 529 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8853 ;; Parameters:    Size  Location     Type
  8854 ;;  msg             2   24[COMRAM] PTR struct .
  8855 ;;		 -> msg(15), 
  8856 ;; Auto vars:     Size  Location     Type
  8857 ;;  tamp            1   35[COMRAM] unsigned char 
  8858 ;;  error           1   34[COMRAM] unsigned char 
  8859 ;; Return value:  Size  Location     Type
  8860 ;;                  1    wreg      unsigned char 
  8861 ;; Registers used:
  8862 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8863 ;; Tracked objects:
  8864 ;;		On entry : 0/0
  8865 ;;		On exit  : 0/0
  8866 ;;		Unchanged: 0/0
  8867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8868 ;;      Params:         2       0       0       0
  8869 ;;      Locals:         2       0       0       0
  8870 ;;      Temps:          8       0       0       0
  8871 ;;      Totals:        12       0       0       0
  8872 ;;Total ram usage:       12 bytes
  8873 ;; Hardware stack levels used:    1
  8874 ;; This function calls:
  8875 ;;		Nothing
  8876 ;; This function is called by:
  8877 ;;		_ISR_alta
  8878 ;; This function uses a non-reentrant model
  8879 ;;
  8880                           
  8881                           	psect	text18
  8882  001AB8                     __ptext18:
  8883                           	opt stack 0
  8884  001AB8                     _CANreceiveMessage:
  8885                           	opt stack 23
  8886                           
  8887                           ;inc\CANlib.h: 531: BYTE tamp;
  8888                           ;inc\CANlib.h: 532: BYTE error = 0;
  8889                           
  8890                           ; BSR set to: 15
  8891                           ;incstack = 0
  8892  001AB8  0E00               	movlw	0
  8893  001ABA  6E23               	movwf	CANreceiveMessage@error,c
  8894                           
  8895                           ;inc\CANlib.h: 534: if (COMSTATbits.RXB0OVFL == 0x01)
  8896  001ABC  BE74               	btfsc	3956,7,c	;volatile
  8897                           
  8898                           ;inc\CANlib.h: 535: error |= CAN_RX_BUFFER_1_OVFL;
  8899  001ABE  8023               	bsf	CANreceiveMessage@error,0,c
  8900                           
  8901                           ;inc\CANlib.h: 537: if (COMSTATbits.RXB1OVFL == 0x01)
  8902  001AC0  BC74               	btfsc	3956,6,c	;volatile
  8903                           
  8904                           ;inc\CANlib.h: 538: error |= CAN_RX_BUFFER_2_OVFL;
  8905  001AC2  8223               	bsf	CANreceiveMessage@error,1,c
  8906                           
  8907                           ;inc\CANlib.h: 541: if (RXB1CONbits.RXFUL ==0x01)
  8908  001AC4  010F               	movlb	15	; () banked
  8909  001AC6  AF50               	btfss	80,7,b	;volatile
  8910  001AC8  D143               	goto	i2l412
  8911                           
  8912                           ; BSR set to: 15
  8913                           ;inc\CANlib.h: 542: {
  8914                           ;inc\CANlib.h: 543: msg->identifier = 0;
  8915  001ACA  C019  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8916  001ACE  C01A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8917  001AD2  6ADE               	clrf	postinc2,c
  8918  001AD4  6ADE               	clrf	postinc2,c
  8919  001AD6  6ADE               	clrf	postinc2,c
  8920  001AD8  6ADD               	clrf	postdec2,c
  8921                           
  8922                           ; BSR set to: 15
  8923                           ;inc\CANlib.h: 544: msg->data[0] =RXB1D0;
  8924  001ADA  EE20 F004          	lfsr	2,4
  8925  001ADE  5019               	movf	CANreceiveMessage@msg,w,c
  8926  001AE0  26D9               	addwf	fsr2l,f,c
  8927  001AE2  501A               	movf	CANreceiveMessage@msg+1,w,c
  8928  001AE4  22DA               	addwfc	fsr2h,f,c
  8929  001AE6  CF56 FFDF          	movff	3926,indf2	;volatile
  8930                           
  8931                           ; BSR set to: 15
  8932                           ;inc\CANlib.h: 545: msg->data[1] =RXB1D1;
  8933  001AEA  EE20 F005          	lfsr	2,5
  8934  001AEE  5019               	movf	CANreceiveMessage@msg,w,c
  8935  001AF0  26D9               	addwf	fsr2l,f,c
  8936  001AF2  501A               	movf	CANreceiveMessage@msg+1,w,c
  8937  001AF4  22DA               	addwfc	fsr2h,f,c
  8938  001AF6  CF57 FFDF          	movff	3927,indf2	;volatile
  8939                           
  8940                           ; BSR set to: 15
  8941                           ;inc\CANlib.h: 546: msg->data[2] =RXB1D2;
  8942  001AFA  EE20 F006          	lfsr	2,6
  8943  001AFE  5019               	movf	CANreceiveMessage@msg,w,c
  8944  001B00  26D9               	addwf	fsr2l,f,c
  8945  001B02  501A               	movf	CANreceiveMessage@msg+1,w,c
  8946  001B04  22DA               	addwfc	fsr2h,f,c
  8947  001B06  CF58 FFDF          	movff	3928,indf2	;volatile
  8948                           
  8949                           ; BSR set to: 15
  8950                           ;inc\CANlib.h: 547: msg->data[3] =RXB1D3;
  8951  001B0A  EE20 F007          	lfsr	2,7
  8952  001B0E  5019               	movf	CANreceiveMessage@msg,w,c
  8953  001B10  26D9               	addwf	fsr2l,f,c
  8954  001B12  501A               	movf	CANreceiveMessage@msg+1,w,c
  8955  001B14  22DA               	addwfc	fsr2h,f,c
  8956  001B16  CF59 FFDF          	movff	3929,indf2	;volatile
  8957                           
  8958                           ; BSR set to: 15
  8959                           ;inc\CANlib.h: 548: msg->data[4] =RXB1D4;
  8960  001B1A  EE20 F008          	lfsr	2,8
  8961  001B1E  5019               	movf	CANreceiveMessage@msg,w,c
  8962  001B20  26D9               	addwf	fsr2l,f,c
  8963  001B22  501A               	movf	CANreceiveMessage@msg+1,w,c
  8964  001B24  22DA               	addwfc	fsr2h,f,c
  8965  001B26  CF5A FFDF          	movff	3930,indf2	;volatile
  8966                           
  8967                           ; BSR set to: 15
  8968                           ;inc\CANlib.h: 549: msg->data[5] =RXB1D5;
  8969  001B2A  EE20 F009          	lfsr	2,9
  8970  001B2E  5019               	movf	CANreceiveMessage@msg,w,c
  8971  001B30  26D9               	addwf	fsr2l,f,c
  8972  001B32  501A               	movf	CANreceiveMessage@msg+1,w,c
  8973  001B34  22DA               	addwfc	fsr2h,f,c
  8974  001B36  CF5B FFDF          	movff	3931,indf2	;volatile
  8975                           
  8976                           ; BSR set to: 15
  8977                           ;inc\CANlib.h: 550: msg->data[6] =RXB1D6;
  8978  001B3A  EE20 F00A          	lfsr	2,10
  8979  001B3E  5019               	movf	CANreceiveMessage@msg,w,c
  8980  001B40  26D9               	addwf	fsr2l,f,c
  8981  001B42  501A               	movf	CANreceiveMessage@msg+1,w,c
  8982  001B44  22DA               	addwfc	fsr2h,f,c
  8983  001B46  CF5C FFDF          	movff	3932,indf2	;volatile
  8984                           
  8985                           ; BSR set to: 15
  8986                           ;inc\CANlib.h: 551: msg->data[7] =RXB1D7;
  8987  001B4A  EE20 F00B          	lfsr	2,11
  8988  001B4E  5019               	movf	CANreceiveMessage@msg,w,c
  8989  001B50  26D9               	addwf	fsr2l,f,c
  8990  001B52  501A               	movf	CANreceiveMessage@msg+1,w,c
  8991  001B54  22DA               	addwfc	fsr2h,f,c
  8992  001B56  CF5D FFDF          	movff	3933,indf2	;volatile
  8993                           
  8994                           ; BSR set to: 15
  8995                           ;inc\CANlib.h: 553: msg->RTR = RXB1DLCbits.RXRTR;
  8996  001B5A  EE20 F00E          	lfsr	2,14
  8997  001B5E  5019               	movf	CANreceiveMessage@msg,w,c
  8998  001B60  26D9               	addwf	fsr2l,f,c
  8999  001B62  501A               	movf	CANreceiveMessage@msg+1,w,c
  9000  001B64  22DA               	addwfc	fsr2h,f,c
  9001  001B66  010F               	movlb	15	; () banked
  9002  001B68  AD55               	btfss	85,6,b	;volatile
  9003  001B6A  D002               	goto	i2u566_40
  9004  001B6C  0E01               	movlw	1
  9005  001B6E  D001               	goto	i2u566_46
  9006  001B70                     i2u566_40:
  9007  001B70  0E00               	movlw	0
  9008  001B72                     i2u566_46:
  9009  001B72  6EDF               	movwf	indf2,c
  9010                           
  9011                           ; BSR set to: 15
  9012                           ;inc\CANlib.h: 555: msg->length = RXB1DLC & 0x0F;
  9013  001B74  EE20 F00D          	lfsr	2,13
  9014  001B78  5019               	movf	CANreceiveMessage@msg,w,c
  9015  001B7A  26D9               	addwf	fsr2l,f,c
  9016  001B7C  501A               	movf	CANreceiveMessage@msg+1,w,c
  9017  001B7E  22DA               	addwfc	fsr2h,f,c
  9018  001B80  010F               	movlb	15	; () banked
  9019  001B82  5155               	movf	85,w,b	;volatile
  9020  001B84  0B0F               	andlw	15
  9021  001B86  6EDF               	movwf	indf2,c
  9022                           
  9023                           ; BSR set to: 15
  9024                           ;inc\CANlib.h: 557: msg->type = RXB1SIDLbits.EXID;
  9025  001B88  EE20 F00C          	lfsr	2,12
  9026  001B8C  5019               	movf	CANreceiveMessage@msg,w,c
  9027  001B8E  26D9               	addwf	fsr2l,f,c
  9028  001B90  501A               	movf	CANreceiveMessage@msg+1,w,c
  9029  001B92  22DA               	addwfc	fsr2h,f,c
  9030  001B94  010F               	movlb	15	; () banked
  9031  001B96  A752               	btfss	82,3,b	;volatile
  9032  001B98  D002               	goto	i2u567_40
  9033  001B9A  0E01               	movlw	1
  9034  001B9C  D001               	goto	i2u567_46
  9035  001B9E                     i2u567_40:
  9036  001B9E  0E00               	movlw	0
  9037  001BA0                     i2u567_46:
  9038  001BA0  6EDF               	movwf	indf2,c
  9039                           
  9040                           ; BSR set to: 15
  9041                           ;inc\CANlib.h: 559: if (RXB1SIDLbits.EXID == 0)
  9042  001BA2  010F               	movlb	15	; () banked
  9043  001BA4  B752               	btfsc	82,3,b	;volatile
  9044  001BA6  D044               	goto	i2l4458
  9045                           
  9046                           ; BSR set to: 15
  9047                           ;inc\CANlib.h: 560: {
  9048                           ;inc\CANlib.h: 561: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  9049  001BA8  CF51 F01B          	movff	3921,??_CANreceiveMessage	;volatile
  9050  001BAC  6A1C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9051  001BAE  6A1D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9052  001BB0  6A1E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9053  001BB2  0E03               	movlw	3
  9054  001BB4                     i2u569_45:
  9055  001BB4  90D8               	bcf	status,0,c
  9056  001BB6  361B               	rlcf	??_CANreceiveMessage,f,c
  9057  001BB8  361C               	rlcf	??_CANreceiveMessage+1,f,c
  9058  001BBA  361D               	rlcf	??_CANreceiveMessage+2,f,c
  9059  001BBC  361E               	rlcf	??_CANreceiveMessage+3,f,c
  9060  001BBE  2EE8               	decfsz	wreg,f,c
  9061  001BC0  D7F9               	goto	i2u569_45
  9062  001BC2  C019  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9063  001BC6  C01A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9064  001BCA  C01B  FFDE         	movff	??_CANreceiveMessage,postinc2
  9065  001BCE  C01C  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  9066  001BD2  C01D  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  9067  001BD6  C01E  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  9068                           
  9069                           ; BSR set to: 15
  9070                           ;inc\CANlib.h: 562: tamp = (RXB1SIDL >> 5 ) & 0x07;
  9071  001BDA  010F               	movlb	15	; () banked
  9072  001BDC  3952               	swapf	82,w,b	;volatile
  9073  001BDE  42E8               	rrncf	wreg,f,c
  9074  001BE0  0B07               	andlw	7
  9075  001BE2  0B07               	andlw	7
  9076  001BE4  6E24               	movwf	CANreceiveMessage@tamp,c
  9077                           
  9078                           ; BSR set to: 15
  9079                           ;inc\CANlib.h: 563: msg->identifier = msg->identifier + tamp;
  9080  001BE6  C019  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9081  001BEA  C01A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9082  001BEE  CFDE F01B          	movff	postinc2,??_CANreceiveMessage
  9083  001BF2  CFDE F01C          	movff	postinc2,??_CANreceiveMessage+1
  9084  001BF6  CFDE F01D          	movff	postinc2,??_CANreceiveMessage+2
  9085  001BFA  CFDE F01E          	movff	postinc2,??_CANreceiveMessage+3
  9086  001BFE  5024               	movf	CANreceiveMessage@tamp,w,c
  9087  001C00  241B               	addwf	??_CANreceiveMessage,w,c
  9088  001C02  6E1F               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  9089  001C04  0E00               	movlw	0
  9090  001C06  201C               	addwfc	??_CANreceiveMessage+1,w,c
  9091  001C08  6E20               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  9092  001C0A  0E00               	movlw	0
  9093  001C0C  201D               	addwfc	??_CANreceiveMessage+2,w,c
  9094  001C0E  6E21               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  9095  001C10  0E00               	movlw	0
  9096  001C12  201E               	addwfc	??_CANreceiveMessage+3,w,c
  9097  001C14  6E22               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  9098  001C16  C019  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9099  001C1A  C01A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9100  001C1E  C01F  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  9101  001C22  C020  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  9102  001C26  C021  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  9103  001C2A  C022  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  9104                           
  9105                           ;inc\CANlib.h: 564: }
  9106  001C2E  D08D               	goto	i2l4484
  9107  001C30                     i2l4458:
  9108                           
  9109                           ; BSR set to: 15
  9110                           ;inc\CANlib.h: 565: else
  9111                           ;inc\CANlib.h: 566: {
  9112                           ;inc\CANlib.h: 567: msg->identifier = (unsigned long) RXB1EIDL;
  9113  001C30  CF54 F01B          	movff	3924,??_CANreceiveMessage	;volatile
  9114  001C34  6A1C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9115  001C36  6A1D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9116  001C38  6A1E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9117  001C3A  C019  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9118  001C3E  C01A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9119  001C42  C01B  FFDE         	movff	??_CANreceiveMessage,postinc2
  9120  001C46  C01C  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  9121  001C4A  C01D  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  9122  001C4E  C01E  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  9123                           
  9124                           ; BSR set to: 15
  9125                           ;inc\CANlib.h: 568: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  9126  001C52  CF53 F01B          	movff	3923,??_CANreceiveMessage	;volatile
  9127  001C56  6A1C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9128  001C58  6A1D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9129  001C5A  6A1E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9130  001C5C  C01D  F01E         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  9131  001C60  C01C  F01D         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  9132  001C64  C01B  F01C         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  9133  001C68  6A1B               	clrf	??_CANreceiveMessage,c
  9134  001C6A  C019  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9135  001C6E  C01A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9136  001C72  501B               	movf	??_CANreceiveMessage,w,c
  9137  001C74  26DE               	addwf	postinc2,f,c
  9138  001C76  501C               	movf	??_CANreceiveMessage+1,w,c
  9139  001C78  22DE               	addwfc	postinc2,f,c
  9140  001C7A  501D               	movf	??_CANreceiveMessage+2,w,c
  9141  001C7C  22DE               	addwfc	postinc2,f,c
  9142  001C7E  501E               	movf	??_CANreceiveMessage+3,w,c
  9143  001C80  22DE               	addwfc	postinc2,f,c
  9144                           
  9145                           ; BSR set to: 15
  9146                           ;inc\CANlib.h: 570: if (RXB1SIDLbits.EID16)
  9147  001C82  010F               	movlb	15	; () banked
  9148  001C84  A152               	btfss	82,0,b	;volatile
  9149  001C86  D00C               	goto	i2l4466
  9150                           
  9151                           ; BSR set to: 15
  9152                           ;inc\CANlib.h: 571: msg->identifier |= 0x00010000;
  9153  001C88  C019  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9154  001C8C  C01A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9155  001C90  0E00               	movlw	0
  9156  001C92  12DE               	iorwf	postinc2,f,c
  9157  001C94  0E00               	movlw	0
  9158  001C96  12DE               	iorwf	postinc2,f,c
  9159  001C98  0E01               	movlw	1
  9160  001C9A  12DE               	iorwf	postinc2,f,c
  9161  001C9C  0E00               	movlw	0
  9162  001C9E  12DE               	iorwf	postinc2,f,c
  9163  001CA0                     i2l4466:
  9164                           
  9165                           ; BSR set to: 15
  9166                           ;inc\CANlib.h: 572: if (RXB1SIDLbits.EID17)
  9167  001CA0  010F               	movlb	15	; () banked
  9168  001CA2  A352               	btfss	82,1,b	;volatile
  9169  001CA4  D00C               	goto	i2l4470
  9170                           
  9171                           ; BSR set to: 15
  9172                           ;inc\CANlib.h: 573: msg->identifier |= 0x00020000;
  9173  001CA6  C019  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9174  001CAA  C01A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9175  001CAE  0E00               	movlw	0
  9176  001CB0  12DE               	iorwf	postinc2,f,c
  9177  001CB2  0E00               	movlw	0
  9178  001CB4  12DE               	iorwf	postinc2,f,c
  9179  001CB6  0E02               	movlw	2
  9180  001CB8  12DE               	iorwf	postinc2,f,c
  9181  001CBA  0E00               	movlw	0
  9182  001CBC  12DE               	iorwf	postinc2,f,c
  9183  001CBE                     i2l4470:
  9184                           
  9185                           ; BSR set to: 15
  9186                           ;inc\CANlib.h: 574: if (RXB1SIDLbits.SID0)
  9187  001CBE  010F               	movlb	15	; () banked
  9188  001CC0  AB52               	btfss	82,5,b	;volatile
  9189  001CC2  D00C               	goto	i2l4474
  9190                           
  9191                           ; BSR set to: 15
  9192                           ;inc\CANlib.h: 575: msg->identifier |= 0x00040000;
  9193  001CC4  C019  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9194  001CC8  C01A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9195  001CCC  0E00               	movlw	0
  9196  001CCE  12DE               	iorwf	postinc2,f,c
  9197  001CD0  0E00               	movlw	0
  9198  001CD2  12DE               	iorwf	postinc2,f,c
  9199  001CD4  0E04               	movlw	4
  9200  001CD6  12DE               	iorwf	postinc2,f,c
  9201  001CD8  0E00               	movlw	0
  9202  001CDA  12DE               	iorwf	postinc2,f,c
  9203  001CDC                     i2l4474:
  9204                           
  9205                           ; BSR set to: 15
  9206                           ;inc\CANlib.h: 576: if (RXB1SIDLbits.SID1)
  9207  001CDC  010F               	movlb	15	; () banked
  9208  001CDE  AD52               	btfss	82,6,b	;volatile
  9209  001CE0  D00C               	goto	i2l4478
  9210                           
  9211                           ; BSR set to: 15
  9212                           ;inc\CANlib.h: 577: msg->identifier |= 0x00080000;
  9213  001CE2  C019  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9214  001CE6  C01A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9215  001CEA  0E00               	movlw	0
  9216  001CEC  12DE               	iorwf	postinc2,f,c
  9217  001CEE  0E00               	movlw	0
  9218  001CF0  12DE               	iorwf	postinc2,f,c
  9219  001CF2  0E08               	movlw	8
  9220  001CF4  12DE               	iorwf	postinc2,f,c
  9221  001CF6  0E00               	movlw	0
  9222  001CF8  12DE               	iorwf	postinc2,f,c
  9223  001CFA                     i2l4478:
  9224                           
  9225                           ; BSR set to: 15
  9226                           ;inc\CANlib.h: 578: if (RXB1SIDLbits.SID2)
  9227  001CFA  010F               	movlb	15	; () banked
  9228  001CFC  AF52               	btfss	82,7,b	;volatile
  9229  001CFE  D00C               	goto	i2l4482
  9230                           
  9231                           ; BSR set to: 15
  9232                           ;inc\CANlib.h: 579: msg->identifier |= 0x00100000;
  9233  001D00  C019  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9234  001D04  C01A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9235  001D08  0E00               	movlw	0
  9236  001D0A  12DE               	iorwf	postinc2,f,c
  9237  001D0C  0E00               	movlw	0
  9238  001D0E  12DE               	iorwf	postinc2,f,c
  9239  001D10  0E10               	movlw	16
  9240  001D12  12DE               	iorwf	postinc2,f,c
  9241  001D14  0E00               	movlw	0
  9242  001D16  12DE               	iorwf	postinc2,f,c
  9243  001D18                     i2l4482:
  9244                           
  9245                           ; BSR set to: 15
  9246                           ;inc\CANlib.h: 581: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  9247  001D18  CF51 F01B          	movff	3921,??_CANreceiveMessage	;volatile
  9248  001D1C  6A1C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9249  001D1E  6A1D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9250  001D20  6A1E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9251  001D22  0E15               	movlw	21
  9252  001D24                     i2u575_45:
  9253  001D24  90D8               	bcf	status,0,c
  9254  001D26  361B               	rlcf	??_CANreceiveMessage,f,c
  9255  001D28  361C               	rlcf	??_CANreceiveMessage+1,f,c
  9256  001D2A  361D               	rlcf	??_CANreceiveMessage+2,f,c
  9257  001D2C  361E               	rlcf	??_CANreceiveMessage+3,f,c
  9258  001D2E  2EE8               	decfsz	wreg,f,c
  9259  001D30  D7F9               	goto	i2u575_45
  9260  001D32  C019  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9261  001D36  C01A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9262  001D3A  501B               	movf	??_CANreceiveMessage,w,c
  9263  001D3C  12DE               	iorwf	postinc2,f,c
  9264  001D3E  501C               	movf	??_CANreceiveMessage+1,w,c
  9265  001D40  12DE               	iorwf	postinc2,f,c
  9266  001D42  501D               	movf	??_CANreceiveMessage+2,w,c
  9267  001D44  12DE               	iorwf	postinc2,f,c
  9268  001D46  501E               	movf	??_CANreceiveMessage+3,w,c
  9269  001D48  12DE               	iorwf	postinc2,f,c
  9270  001D4A                     i2l4484:
  9271                           
  9272                           ; BSR set to: 15
  9273                           ;inc\CANlib.h: 582: }
  9274                           ;inc\CANlib.h: 584: RXB1CONbits.RXFUL = 0x00;
  9275  001D4A  010F               	movlb	15	; () banked
  9276  001D4C  9F50               	bcf	80,7,b	;volatile
  9277                           
  9278                           ; BSR set to: 15
  9279                           ;inc\CANlib.h: 585: return (error);
  9280                           ;	Return value of _CANreceiveMessage is never used
  9281  001D4E  0012               	return	
  9282  001D50                     i2l412:
  9283                           
  9284                           ; BSR set to: 15
  9285                           ;inc\CANlib.h: 586: }
  9286                           ;inc\CANlib.h: 588: if (RXB0CONbits.RXFUL ==0x01)
  9287  001D50  AE60               	btfss	3936,7,c	;volatile
  9288  001D52  0012               	return	
  9289                           
  9290                           ; BSR set to: 15
  9291                           ;inc\CANlib.h: 589: {
  9292                           ;inc\CANlib.h: 590: msg->identifier = 0;
  9293  001D54  C019  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9294  001D58  C01A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9295  001D5C  6ADE               	clrf	postinc2,c
  9296  001D5E  6ADE               	clrf	postinc2,c
  9297  001D60  6ADE               	clrf	postinc2,c
  9298  001D62  6ADD               	clrf	postdec2,c
  9299                           
  9300                           ; BSR set to: 15
  9301                           ;inc\CANlib.h: 591: msg->data[0] =RXB0D0;
  9302  001D64  EE20 F004          	lfsr	2,4
  9303  001D68  5019               	movf	CANreceiveMessage@msg,w,c
  9304  001D6A  26D9               	addwf	fsr2l,f,c
  9305  001D6C  501A               	movf	CANreceiveMessage@msg+1,w,c
  9306  001D6E  22DA               	addwfc	fsr2h,f,c
  9307  001D70  CF66 FFDF          	movff	3942,indf2	;volatile
  9308                           
  9309                           ; BSR set to: 15
  9310                           ;inc\CANlib.h: 592: msg->data[1] =RXB0D1;
  9311  001D74  EE20 F005          	lfsr	2,5
  9312  001D78  5019               	movf	CANreceiveMessage@msg,w,c
  9313  001D7A  26D9               	addwf	fsr2l,f,c
  9314  001D7C  501A               	movf	CANreceiveMessage@msg+1,w,c
  9315  001D7E  22DA               	addwfc	fsr2h,f,c
  9316  001D80  CF67 FFDF          	movff	3943,indf2	;volatile
  9317                           
  9318                           ; BSR set to: 15
  9319                           ;inc\CANlib.h: 593: msg->data[2] =RXB0D2;
  9320  001D84  EE20 F006          	lfsr	2,6
  9321  001D88  5019               	movf	CANreceiveMessage@msg,w,c
  9322  001D8A  26D9               	addwf	fsr2l,f,c
  9323  001D8C  501A               	movf	CANreceiveMessage@msg+1,w,c
  9324  001D8E  22DA               	addwfc	fsr2h,f,c
  9325  001D90  CF68 FFDF          	movff	3944,indf2	;volatile
  9326                           
  9327                           ; BSR set to: 15
  9328                           ;inc\CANlib.h: 594: msg->data[3] =RXB0D3;
  9329  001D94  EE20 F007          	lfsr	2,7
  9330  001D98  5019               	movf	CANreceiveMessage@msg,w,c
  9331  001D9A  26D9               	addwf	fsr2l,f,c
  9332  001D9C  501A               	movf	CANreceiveMessage@msg+1,w,c
  9333  001D9E  22DA               	addwfc	fsr2h,f,c
  9334  001DA0  CF69 FFDF          	movff	3945,indf2	;volatile
  9335                           
  9336                           ; BSR set to: 15
  9337                           ;inc\CANlib.h: 595: msg->data[4] =RXB0D4;
  9338  001DA4  EE20 F008          	lfsr	2,8
  9339  001DA8  5019               	movf	CANreceiveMessage@msg,w,c
  9340  001DAA  26D9               	addwf	fsr2l,f,c
  9341  001DAC  501A               	movf	CANreceiveMessage@msg+1,w,c
  9342  001DAE  22DA               	addwfc	fsr2h,f,c
  9343  001DB0  CF6A FFDF          	movff	3946,indf2	;volatile
  9344                           
  9345                           ; BSR set to: 15
  9346                           ;inc\CANlib.h: 596: msg->data[5] =RXB0D5;
  9347  001DB4  EE20 F009          	lfsr	2,9
  9348  001DB8  5019               	movf	CANreceiveMessage@msg,w,c
  9349  001DBA  26D9               	addwf	fsr2l,f,c
  9350  001DBC  501A               	movf	CANreceiveMessage@msg+1,w,c
  9351  001DBE  22DA               	addwfc	fsr2h,f,c
  9352  001DC0  CF6B FFDF          	movff	3947,indf2	;volatile
  9353                           
  9354                           ; BSR set to: 15
  9355                           ;inc\CANlib.h: 597: msg->data[6] =RXB0D6;
  9356  001DC4  EE20 F00A          	lfsr	2,10
  9357  001DC8  5019               	movf	CANreceiveMessage@msg,w,c
  9358  001DCA  26D9               	addwf	fsr2l,f,c
  9359  001DCC  501A               	movf	CANreceiveMessage@msg+1,w,c
  9360  001DCE  22DA               	addwfc	fsr2h,f,c
  9361  001DD0  CF6C FFDF          	movff	3948,indf2	;volatile
  9362                           
  9363                           ; BSR set to: 15
  9364                           ;inc\CANlib.h: 598: msg->data[7] =RXB0D7;
  9365  001DD4  EE20 F00B          	lfsr	2,11
  9366  001DD8  5019               	movf	CANreceiveMessage@msg,w,c
  9367  001DDA  26D9               	addwf	fsr2l,f,c
  9368  001DDC  501A               	movf	CANreceiveMessage@msg+1,w,c
  9369  001DDE  22DA               	addwfc	fsr2h,f,c
  9370  001DE0  CF6D FFDF          	movff	3949,indf2	;volatile
  9371                           
  9372                           ; BSR set to: 15
  9373                           ;inc\CANlib.h: 600: msg->RTR = RXB0DLCbits.RXRTR;
  9374  001DE4  EE20 F00E          	lfsr	2,14
  9375  001DE8  5019               	movf	CANreceiveMessage@msg,w,c
  9376  001DEA  26D9               	addwf	fsr2l,f,c
  9377  001DEC  501A               	movf	CANreceiveMessage@msg+1,w,c
  9378  001DEE  22DA               	addwfc	fsr2h,f,c
  9379  001DF0  AC65               	btfss	3941,6,c	;volatile
  9380  001DF2  D002               	goto	i2u577_40
  9381  001DF4  0E01               	movlw	1
  9382  001DF6  D001               	goto	i2u577_46
  9383  001DF8                     i2u577_40:
  9384  001DF8  0E00               	movlw	0
  9385  001DFA                     i2u577_46:
  9386  001DFA  6EDF               	movwf	indf2,c
  9387                           
  9388                           ; BSR set to: 15
  9389                           ;inc\CANlib.h: 602: msg->length = RXB0DLC & 0x0F;
  9390  001DFC  EE20 F00D          	lfsr	2,13
  9391  001E00  5019               	movf	CANreceiveMessage@msg,w,c
  9392  001E02  26D9               	addwf	fsr2l,f,c
  9393  001E04  501A               	movf	CANreceiveMessage@msg+1,w,c
  9394  001E06  22DA               	addwfc	fsr2h,f,c
  9395  001E08  5065               	movf	3941,w,c	;volatile
  9396  001E0A  0B0F               	andlw	15
  9397  001E0C  6EDF               	movwf	indf2,c
  9398                           
  9399                           ; BSR set to: 15
  9400                           ;inc\CANlib.h: 604: msg->type = RXB0SIDLbits.EXID;
  9401  001E0E  EE20 F00C          	lfsr	2,12
  9402  001E12  5019               	movf	CANreceiveMessage@msg,w,c
  9403  001E14  26D9               	addwf	fsr2l,f,c
  9404  001E16  501A               	movf	CANreceiveMessage@msg+1,w,c
  9405  001E18  22DA               	addwfc	fsr2h,f,c
  9406  001E1A  A662               	btfss	3938,3,c	;volatile
  9407  001E1C  D002               	goto	i2u578_40
  9408  001E1E  0E01               	movlw	1
  9409  001E20  D001               	goto	i2u578_46
  9410  001E22                     i2u578_40:
  9411  001E22  0E00               	movlw	0
  9412  001E24                     i2u578_46:
  9413  001E24  6EDF               	movwf	indf2,c
  9414                           
  9415                           ; BSR set to: 15
  9416                           ;inc\CANlib.h: 606: if (RXB0SIDLbits.EXID == 0)
  9417  001E26  B662               	btfsc	3938,3,c	;volatile
  9418  001E28  D043               	goto	i2l4520
  9419                           
  9420                           ; BSR set to: 15
  9421                           ;inc\CANlib.h: 607: {
  9422                           ;inc\CANlib.h: 608: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  9423  001E2A  CF61 F01B          	movff	3937,??_CANreceiveMessage	;volatile
  9424  001E2E  6A1C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9425  001E30  6A1D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9426  001E32  6A1E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9427  001E34  0E03               	movlw	3
  9428  001E36                     i2u580_45:
  9429  001E36  90D8               	bcf	status,0,c
  9430  001E38  361B               	rlcf	??_CANreceiveMessage,f,c
  9431  001E3A  361C               	rlcf	??_CANreceiveMessage+1,f,c
  9432  001E3C  361D               	rlcf	??_CANreceiveMessage+2,f,c
  9433  001E3E  361E               	rlcf	??_CANreceiveMessage+3,f,c
  9434  001E40  2EE8               	decfsz	wreg,f,c
  9435  001E42  D7F9               	goto	i2u580_45
  9436  001E44  C019  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9437  001E48  C01A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9438  001E4C  C01B  FFDE         	movff	??_CANreceiveMessage,postinc2
  9439  001E50  C01C  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  9440  001E54  C01D  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  9441  001E58  C01E  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  9442                           
  9443                           ; BSR set to: 15
  9444                           ;inc\CANlib.h: 609: tamp = (RXB0SIDL >> 5 ) & 0x07;
  9445  001E5C  3862               	swapf	3938,w,c	;volatile
  9446  001E5E  42E8               	rrncf	wreg,f,c
  9447  001E60  0B07               	andlw	7
  9448  001E62  0B07               	andlw	7
  9449  001E64  6E24               	movwf	CANreceiveMessage@tamp,c
  9450                           
  9451                           ; BSR set to: 15
  9452                           ;inc\CANlib.h: 610: msg->identifier = msg->identifier + tamp;
  9453  001E66  C019  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9454  001E6A  C01A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9455  001E6E  CFDE F01B          	movff	postinc2,??_CANreceiveMessage
  9456  001E72  CFDE F01C          	movff	postinc2,??_CANreceiveMessage+1
  9457  001E76  CFDE F01D          	movff	postinc2,??_CANreceiveMessage+2
  9458  001E7A  CFDE F01E          	movff	postinc2,??_CANreceiveMessage+3
  9459  001E7E  5024               	movf	CANreceiveMessage@tamp,w,c
  9460  001E80  241B               	addwf	??_CANreceiveMessage,w,c
  9461  001E82  6E1F               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  9462  001E84  0E00               	movlw	0
  9463  001E86  201C               	addwfc	??_CANreceiveMessage+1,w,c
  9464  001E88  6E20               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  9465  001E8A  0E00               	movlw	0
  9466  001E8C  201D               	addwfc	??_CANreceiveMessage+2,w,c
  9467  001E8E  6E21               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  9468  001E90  0E00               	movlw	0
  9469  001E92  201E               	addwfc	??_CANreceiveMessage+3,w,c
  9470  001E94  6E22               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  9471  001E96  C019  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9472  001E9A  C01A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9473  001E9E  C01F  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  9474  001EA2  C020  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  9475  001EA6  C021  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  9476  001EAA  C022  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  9477                           
  9478                           ;inc\CANlib.h: 611: }
  9479  001EAE  D088               	goto	i2l4546
  9480  001EB0                     i2l4520:
  9481                           
  9482                           ; BSR set to: 15
  9483                           ;inc\CANlib.h: 612: else
  9484                           ;inc\CANlib.h: 613: {
  9485                           ;inc\CANlib.h: 614: msg->identifier = (unsigned long) RXB0EIDL;
  9486  001EB0  CF64 F01B          	movff	3940,??_CANreceiveMessage	;volatile
  9487  001EB4  6A1C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9488  001EB6  6A1D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9489  001EB8  6A1E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9490  001EBA  C019  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9491  001EBE  C01A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9492  001EC2  C01B  FFDE         	movff	??_CANreceiveMessage,postinc2
  9493  001EC6  C01C  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  9494  001ECA  C01D  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  9495  001ECE  C01E  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  9496                           
  9497                           ; BSR set to: 15
  9498                           ;inc\CANlib.h: 615: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  9499  001ED2  CF63 F01B          	movff	3939,??_CANreceiveMessage	;volatile
  9500  001ED6  6A1C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9501  001ED8  6A1D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9502  001EDA  6A1E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9503  001EDC  C01D  F01E         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  9504  001EE0  C01C  F01D         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  9505  001EE4  C01B  F01C         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  9506  001EE8  6A1B               	clrf	??_CANreceiveMessage,c
  9507  001EEA  C019  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9508  001EEE  C01A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9509  001EF2  501B               	movf	??_CANreceiveMessage,w,c
  9510  001EF4  26DE               	addwf	postinc2,f,c
  9511  001EF6  501C               	movf	??_CANreceiveMessage+1,w,c
  9512  001EF8  22DE               	addwfc	postinc2,f,c
  9513  001EFA  501D               	movf	??_CANreceiveMessage+2,w,c
  9514  001EFC  22DE               	addwfc	postinc2,f,c
  9515  001EFE  501E               	movf	??_CANreceiveMessage+3,w,c
  9516  001F00  22DE               	addwfc	postinc2,f,c
  9517                           
  9518                           ; BSR set to: 15
  9519                           ;inc\CANlib.h: 617: if (RXB0SIDLbits.EID16)
  9520  001F02  A062               	btfss	3938,0,c	;volatile
  9521  001F04  D00C               	goto	i2l4528
  9522                           
  9523                           ; BSR set to: 15
  9524                           ;inc\CANlib.h: 618: msg->identifier |= 0x00010000;
  9525  001F06  C019  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9526  001F0A  C01A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9527  001F0E  0E00               	movlw	0
  9528  001F10  12DE               	iorwf	postinc2,f,c
  9529  001F12  0E00               	movlw	0
  9530  001F14  12DE               	iorwf	postinc2,f,c
  9531  001F16  0E01               	movlw	1
  9532  001F18  12DE               	iorwf	postinc2,f,c
  9533  001F1A  0E00               	movlw	0
  9534  001F1C  12DE               	iorwf	postinc2,f,c
  9535  001F1E                     i2l4528:
  9536                           
  9537                           ; BSR set to: 15
  9538                           ;inc\CANlib.h: 619: if (RXB0SIDLbits.EID17)
  9539  001F1E  A262               	btfss	3938,1,c	;volatile
  9540  001F20  D00C               	goto	i2l4532
  9541                           
  9542                           ; BSR set to: 15
  9543                           ;inc\CANlib.h: 620: msg->identifier |= 0x00020000;
  9544  001F22  C019  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9545  001F26  C01A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9546  001F2A  0E00               	movlw	0
  9547  001F2C  12DE               	iorwf	postinc2,f,c
  9548  001F2E  0E00               	movlw	0
  9549  001F30  12DE               	iorwf	postinc2,f,c
  9550  001F32  0E02               	movlw	2
  9551  001F34  12DE               	iorwf	postinc2,f,c
  9552  001F36  0E00               	movlw	0
  9553  001F38  12DE               	iorwf	postinc2,f,c
  9554  001F3A                     i2l4532:
  9555                           
  9556                           ; BSR set to: 15
  9557                           ;inc\CANlib.h: 621: if (RXB0SIDLbits.SID0)
  9558  001F3A  AA62               	btfss	3938,5,c	;volatile
  9559  001F3C  D00C               	goto	i2l4536
  9560                           
  9561                           ; BSR set to: 15
  9562                           ;inc\CANlib.h: 622: msg->identifier |= 0x00040000;
  9563  001F3E  C019  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9564  001F42  C01A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9565  001F46  0E00               	movlw	0
  9566  001F48  12DE               	iorwf	postinc2,f,c
  9567  001F4A  0E00               	movlw	0
  9568  001F4C  12DE               	iorwf	postinc2,f,c
  9569  001F4E  0E04               	movlw	4
  9570  001F50  12DE               	iorwf	postinc2,f,c
  9571  001F52  0E00               	movlw	0
  9572  001F54  12DE               	iorwf	postinc2,f,c
  9573  001F56                     i2l4536:
  9574                           
  9575                           ; BSR set to: 15
  9576                           ;inc\CANlib.h: 623: if (RXB0SIDLbits.SID1)
  9577  001F56  AC62               	btfss	3938,6,c	;volatile
  9578  001F58  D00C               	goto	i2l4540
  9579                           
  9580                           ; BSR set to: 15
  9581                           ;inc\CANlib.h: 624: msg->identifier |= 0x00080000;
  9582  001F5A  C019  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9583  001F5E  C01A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9584  001F62  0E00               	movlw	0
  9585  001F64  12DE               	iorwf	postinc2,f,c
  9586  001F66  0E00               	movlw	0
  9587  001F68  12DE               	iorwf	postinc2,f,c
  9588  001F6A  0E08               	movlw	8
  9589  001F6C  12DE               	iorwf	postinc2,f,c
  9590  001F6E  0E00               	movlw	0
  9591  001F70  12DE               	iorwf	postinc2,f,c
  9592  001F72                     i2l4540:
  9593                           
  9594                           ; BSR set to: 15
  9595                           ;inc\CANlib.h: 625: if (RXB0SIDLbits.SID2)
  9596  001F72  AE62               	btfss	3938,7,c	;volatile
  9597  001F74  D00C               	goto	i2l4544
  9598                           
  9599                           ; BSR set to: 15
  9600                           ;inc\CANlib.h: 626: msg->identifier |= 0x00100000;
  9601  001F76  C019  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9602  001F7A  C01A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9603  001F7E  0E00               	movlw	0
  9604  001F80  12DE               	iorwf	postinc2,f,c
  9605  001F82  0E00               	movlw	0
  9606  001F84  12DE               	iorwf	postinc2,f,c
  9607  001F86  0E10               	movlw	16
  9608  001F88  12DE               	iorwf	postinc2,f,c
  9609  001F8A  0E00               	movlw	0
  9610  001F8C  12DE               	iorwf	postinc2,f,c
  9611  001F8E                     i2l4544:
  9612                           
  9613                           ; BSR set to: 15
  9614                           ;inc\CANlib.h: 628: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  9615  001F8E  CF61 F01B          	movff	3937,??_CANreceiveMessage	;volatile
  9616  001F92  6A1C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9617  001F94  6A1D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9618  001F96  6A1E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9619  001F98  0E15               	movlw	21
  9620  001F9A                     i2u586_45:
  9621  001F9A  90D8               	bcf	status,0,c
  9622  001F9C  361B               	rlcf	??_CANreceiveMessage,f,c
  9623  001F9E  361C               	rlcf	??_CANreceiveMessage+1,f,c
  9624  001FA0  361D               	rlcf	??_CANreceiveMessage+2,f,c
  9625  001FA2  361E               	rlcf	??_CANreceiveMessage+3,f,c
  9626  001FA4  2EE8               	decfsz	wreg,f,c
  9627  001FA6  D7F9               	goto	i2u586_45
  9628  001FA8  C019  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9629  001FAC  C01A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9630  001FB0  501B               	movf	??_CANreceiveMessage,w,c
  9631  001FB2  12DE               	iorwf	postinc2,f,c
  9632  001FB4  501C               	movf	??_CANreceiveMessage+1,w,c
  9633  001FB6  12DE               	iorwf	postinc2,f,c
  9634  001FB8  501D               	movf	??_CANreceiveMessage+2,w,c
  9635  001FBA  12DE               	iorwf	postinc2,f,c
  9636  001FBC  501E               	movf	??_CANreceiveMessage+3,w,c
  9637  001FBE  12DE               	iorwf	postinc2,f,c
  9638  001FC0                     i2l4546:
  9639                           
  9640                           ; BSR set to: 15
  9641                           ;inc\CANlib.h: 630: }
  9642                           ;inc\CANlib.h: 631: RXB0CONbits.RXFUL = 0x00;
  9643  001FC0  9E60               	bcf	3936,7,c	;volatile
  9644                           
  9645                           ; BSR set to: 15
  9646                           ;inc\CANlib.h: 633: return (error);
  9647                           ;	Return value of _CANreceiveMessage is never used
  9648  001FC2  0012               	return	
  9649  001FC4                     __end_of_CANreceiveMessage:
  9650                           	opt stack 0
  9651                           pclatu	equ	0xFFB
  9652                           pclath	equ	0xFFA
  9653                           tblptru	equ	0xFF8
  9654                           tblptrh	equ	0xFF7
  9655                           tblptrl	equ	0xFF6
  9656                           tablat	equ	0xFF5
  9657                           prodh	equ	0xFF4
  9658                           prodl	equ	0xFF3
  9659                           intcon	equ	0xFF2
  9660                           postinc0	equ	0xFEE
  9661                           fsr0h	equ	0xFEA
  9662                           fsr0l	equ	0xFE9
  9663                           wreg	equ	0xFE8
  9664                           indf1	equ	0xFE7
  9665                           postinc1	equ	0xFE6
  9666                           postdec1	equ	0xFE5
  9667                           fsr1h	equ	0xFE2
  9668                           fsr1l	equ	0xFE1
  9669                           bsr	equ	0xFE0
  9670                           indf2	equ	0xFDF
  9671                           postinc2	equ	0xFDE
  9672                           postdec2	equ	0xFDD
  9673                           fsr2h	equ	0xFDA
  9674                           fsr2l	equ	0xFD9
  9675                           status	equ	0xFD8
  9676                           
  9677 ;; *************** function _CANisTxReady *****************
  9678 ;; Defined at:
  9679 ;;		line 1155 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  9680 ;; Parameters:    Size  Location     Type
  9681 ;;		None
  9682 ;; Auto vars:     Size  Location     Type
  9683 ;;		None
  9684 ;; Return value:  Size  Location     Type
  9685 ;;                  1    wreg      unsigned char 
  9686 ;; Registers used:
  9687 ;;		wreg, status,2
  9688 ;; Tracked objects:
  9689 ;;		On entry : 0/0
  9690 ;;		On exit  : 0/0
  9691 ;;		Unchanged: 0/0
  9692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9693 ;;      Params:         0       0       0       0
  9694 ;;      Locals:         1       0       0       0
  9695 ;;      Temps:          0       0       0       0
  9696 ;;      Totals:         1       0       0       0
  9697 ;;Total ram usage:        1 bytes
  9698 ;; Hardware stack levels used:    1
  9699 ;; This function calls:
  9700 ;;		Nothing
  9701 ;; This function is called by:
  9702 ;;		_ISR_alta
  9703 ;; This function uses a non-reentrant model
  9704 ;;
  9705                           
  9706                           	psect	text19
  9707  002CDC                     __ptext19:
  9708                           	opt stack 0
  9709  002CDC                     _CANisTxReady:
  9710                           	opt stack 23
  9711                           
  9712                           ;inc\CANlib.h: 1157: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  9713                           
  9714                           ; BSR set to: 15
  9715                           ;incstack = 0
  9716  002CDC  0E01               	movlw	1
  9717  002CDE  6E19               	movwf	_CANisTxReady$3105,c
  9718  002CE0  010F               	movlb	15	; () banked
  9719  002CE2  A740               	btfss	64,3,b	;volatile
  9720  002CE4  D008               	goto	i2l558
  9721                           
  9722                           ; BSR set to: 15
  9723  002CE6  010F               	movlb	15	; () banked
  9724  002CE8  A730               	btfss	48,3,b	;volatile
  9725  002CEA  D005               	goto	i2l558
  9726                           
  9727                           ; BSR set to: 15
  9728  002CEC  010F               	movlb	15	; () banked
  9729  002CEE  A720               	btfss	32,3,b	;volatile
  9730  002CF0  D002               	goto	i2l558
  9731                           
  9732                           ; BSR set to: 15
  9733  002CF2  0E00               	movlw	0
  9734  002CF4  6E19               	movwf	_CANisTxReady$3105,c
  9735  002CF6                     i2l558:
  9736                           
  9737                           ; BSR set to: 15
  9738  002CF6  5019               	movf	_CANisTxReady$3105,w,c
  9739  002CF8  0012               	return	
  9740  002CFA                     __end_of_CANisTxReady:
  9741                           	opt stack 0
  9742                           pclatu	equ	0xFFB
  9743                           pclath	equ	0xFFA
  9744                           tblptru	equ	0xFF8
  9745                           tblptrh	equ	0xFF7
  9746                           tblptrl	equ	0xFF6
  9747                           tablat	equ	0xFF5
  9748                           prodh	equ	0xFF4
  9749                           prodl	equ	0xFF3
  9750                           intcon	equ	0xFF2
  9751                           postinc0	equ	0xFEE
  9752                           fsr0h	equ	0xFEA
  9753                           fsr0l	equ	0xFE9
  9754                           wreg	equ	0xFE8
  9755                           indf1	equ	0xFE7
  9756                           postinc1	equ	0xFE6
  9757                           postdec1	equ	0xFE5
  9758                           fsr1h	equ	0xFE2
  9759                           fsr1l	equ	0xFE1
  9760                           bsr	equ	0xFE0
  9761                           indf2	equ	0xFDF
  9762                           postinc2	equ	0xFDE
  9763                           postdec2	equ	0xFDD
  9764                           fsr2h	equ	0xFDA
  9765                           fsr2l	equ	0xFD9
  9766                           status	equ	0xFD8
  9767                           
  9768 ;; *************** function _CANisRxReady *****************
  9769 ;; Defined at:
  9770 ;;		line 1164 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  9771 ;; Parameters:    Size  Location     Type
  9772 ;;		None
  9773 ;; Auto vars:     Size  Location     Type
  9774 ;;		None
  9775 ;; Return value:  Size  Location     Type
  9776 ;;                  1    wreg      unsigned char 
  9777 ;; Registers used:
  9778 ;;		wreg, status,2
  9779 ;; Tracked objects:
  9780 ;;		On entry : 0/0
  9781 ;;		On exit  : 0/0
  9782 ;;		Unchanged: 0/0
  9783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9784 ;;      Params:         0       0       0       0
  9785 ;;      Locals:         1       0       0       0
  9786 ;;      Temps:          0       0       0       0
  9787 ;;      Totals:         1       0       0       0
  9788 ;;Total ram usage:        1 bytes
  9789 ;; Hardware stack levels used:    1
  9790 ;; This function calls:
  9791 ;;		Nothing
  9792 ;; This function is called by:
  9793 ;;		_ISR_alta
  9794 ;; This function uses a non-reentrant model
  9795 ;;
  9796                           
  9797                           	psect	text20
  9798  002D10                     __ptext20:
  9799                           	opt stack 0
  9800  002D10                     _CANisRxReady:
  9801                           	opt stack 23
  9802                           
  9803                           ;inc\CANlib.h: 1166: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  9804                           
  9805                           ; BSR set to: 15
  9806                           ;incstack = 0
  9807  002D10  0E01               	movlw	1
  9808  002D12  6E19               	movwf	_CANisRxReady$3107,c
  9809  002D14  BE60               	btfsc	3936,7,c	;volatile
  9810  002D16  D005               	goto	i2l563
  9811  002D18  010F               	movlb	15	; () banked
  9812  002D1A  BF50               	btfsc	80,7,b	;volatile
  9813  002D1C  D002               	goto	i2l563
  9814                           
  9815                           ; BSR set to: 15
  9816  002D1E  0E00               	movlw	0
  9817  002D20  6E19               	movwf	_CANisRxReady$3107,c
  9818  002D22                     i2l563:
  9819  002D22  5019               	movf	_CANisRxReady$3107,w,c
  9820  002D24  0012               	return	
  9821  002D26                     __end_of_CANisRxReady:
  9822                           	opt stack 0
  9823  0000                     pclatu	equ	0xFFB
  9824                           pclath	equ	0xFFA
  9825                           tblptru	equ	0xFF8
  9826                           tblptrh	equ	0xFF7
  9827                           tblptrl	equ	0xFF6
  9828                           tablat	equ	0xFF5
  9829                           prodh	equ	0xFF4
  9830                           prodl	equ	0xFF3
  9831                           intcon	equ	0xFF2
  9832                           postinc0	equ	0xFEE
  9833                           fsr0h	equ	0xFEA
  9834                           fsr0l	equ	0xFE9
  9835                           wreg	equ	0xFE8
  9836                           indf1	equ	0xFE7
  9837                           postinc1	equ	0xFE6
  9838                           postdec1	equ	0xFE5
  9839                           fsr1h	equ	0xFE2
  9840                           fsr1l	equ	0xFE1
  9841                           bsr	equ	0xFE0
  9842                           indf2	equ	0xFDF
  9843                           postinc2	equ	0xFDE
  9844                           postdec2	equ	0xFDD
  9845                           fsr2h	equ	0xFDA
  9846                           fsr2l	equ	0xFD9
  9847                           status	equ	0xFD8
  9848                           pclatu	equ	0xFFB
  9849                           pclath	equ	0xFFA
  9850                           tblptru	equ	0xFF8
  9851                           tblptrh	equ	0xFF7
  9852                           tblptrl	equ	0xFF6
  9853                           tablat	equ	0xFF5
  9854                           prodh	equ	0xFF4
  9855                           prodl	equ	0xFF3
  9856                           intcon	equ	0xFF2
  9857                           postinc0	equ	0xFEE
  9858                           fsr0h	equ	0xFEA
  9859                           fsr0l	equ	0xFE9
  9860                           wreg	equ	0xFE8
  9861                           indf1	equ	0xFE7
  9862                           postinc1	equ	0xFE6
  9863                           postdec1	equ	0xFE5
  9864                           fsr1h	equ	0xFE2
  9865                           fsr1l	equ	0xFE1
  9866                           bsr	equ	0xFE0
  9867                           indf2	equ	0xFDF
  9868                           postinc2	equ	0xFDE
  9869                           postdec2	equ	0xFDD
  9870                           fsr2h	equ	0xFDA
  9871                           fsr2l	equ	0xFD9
  9872                           status	equ	0xFD8
  9873                           
  9874                           	psect	rparam
  9875  0000                     pclatu	equ	0xFFB
  9876                           pclath	equ	0xFFA
  9877                           tblptru	equ	0xFF8
  9878                           tblptrh	equ	0xFF7
  9879                           tblptrl	equ	0xFF6
  9880                           tablat	equ	0xFF5
  9881                           prodh	equ	0xFF4
  9882                           prodl	equ	0xFF3
  9883                           intcon	equ	0xFF2
  9884                           postinc0	equ	0xFEE
  9885                           fsr0h	equ	0xFEA
  9886                           fsr0l	equ	0xFE9
  9887                           wreg	equ	0xFE8
  9888                           indf1	equ	0xFE7
  9889                           postinc1	equ	0xFE6
  9890                           postdec1	equ	0xFE5
  9891                           fsr1h	equ	0xFE2
  9892                           fsr1l	equ	0xFE1
  9893                           bsr	equ	0xFE0
  9894                           indf2	equ	0xFDF
  9895                           postinc2	equ	0xFDE
  9896                           postdec2	equ	0xFDD
  9897                           fsr2h	equ	0xFDA
  9898                           fsr2l	equ	0xFD9
  9899                           status	equ	0xFD8
  9900                           
  9901                           	psect	temp
  9902  000047                     btemp:
  9903                           	opt stack 0
  9904  000047                     	ds	1
  9905  0000                     int$flags	set	btemp
  9906                           pclatu	equ	0xFFB
  9907                           pclath	equ	0xFFA
  9908                           tblptru	equ	0xFF8
  9909                           tblptrh	equ	0xFF7
  9910                           tblptrl	equ	0xFF6
  9911                           tablat	equ	0xFF5
  9912                           prodh	equ	0xFF4
  9913                           prodl	equ	0xFF3
  9914                           intcon	equ	0xFF2
  9915                           postinc0	equ	0xFEE
  9916                           fsr0h	equ	0xFEA
  9917                           fsr0l	equ	0xFE9
  9918                           wreg	equ	0xFE8
  9919                           indf1	equ	0xFE7
  9920                           postinc1	equ	0xFE6
  9921                           postdec1	equ	0xFE5
  9922                           fsr1h	equ	0xFE2
  9923                           fsr1l	equ	0xFE1
  9924                           bsr	equ	0xFE0
  9925                           indf2	equ	0xFDF
  9926                           postinc2	equ	0xFDE
  9927                           postdec2	equ	0xFDD
  9928                           fsr2h	equ	0xFDA
  9929                           fsr2l	equ	0xFD9
  9930                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         85
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      70
    BANK0           160     50     119
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    putsUSART@data	PTR unsigned char  size(2) Largest target is 8
		 -> SerialOutput(BANK0[8]), 

    getsUSART@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> USART_Rx(COMRAM[8]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> analogic_brake(BANK0[8]), set_speed(COMRAM[8]), set_steering(BANK0[8]), data(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->_CANreceiveMessage
    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_getsUSART
    _getsUSART->_ReadUSART

Critical Paths under _main in BANK0

    _putsUSART->_WriteUSART
    _delay_ms->___wmul
    _configurazione_iniziale->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_alta in BANK0

    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   10068
                                             46 BANK0      4     4      0
                     _CANsendMessage
                    _can_interpreter
            _configurazione_iniziale
                           _delay_ms
                          _putsUSART
 ---------------------------------------------------------------------------------
 (1) _putsUSART                                            2     0      2     130
                                             21 BANK0      2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      22
                                             20 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     437
                                             26 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     287
                                             20 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    6218
                      _CANInitialize
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                             20 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             34 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             20 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             20 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             20 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      8     8      0       0
                                             20 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (1) _CANsendMessage                                      16     8      8    3059
                                             20 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           18    18      0     243
                                              6 COMRAM    18    18      0
                          _getsUSART
 ---------------------------------------------------------------------------------
 (5) _getsUSART                                            5     2      3     243
                                              1 COMRAM     5     2      3
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (6) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_alta                                            16    16      0    4995
                                              4 BANK0     16    16      0
                       _CANisRxReady
                       _CANisTxReady
                  _CANreceiveMessage
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (8) i2_CANsendMessage                                    16     8      8    3197
                                             24 COMRAM    12     4      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1594
                                             24 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (8) _CANisTxReady                                         1     1      0      37
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _CANisRxReady                                         1     1      0      37
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANsendMessage
   _can_interpreter
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _OpenUSART
   _delay_ms
     ___wmul
   _putsUSART
     _WriteUSART

 _ISR_bassa (ROOT)
   _getsUSART
     _ReadUSART

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANisTxReady
   _CANreceiveMessage
   i2_CANsendMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     32      77       4       74.4%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     24      46       1       74.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BD       9        0.0%
DATA                 0      0      BD      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Mar 20 18:47:10 2016

            __end_of_CANSetFilter 0C4E                                _id 0025  
                              bsr 000FE0               ___wmul@multiplicand 00AA  
                     __CFG_BORV$3 000000                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                       __CFG_OSC$HS 000000  
                             l400 120C                               l401 1216  
                             l404 1326                               l500 099A  
                             l405 132A                               l501 099E  
                             l406 1336                               l510 0AAA  
                             l502 09AA                               l511 0AB6  
                             l503 09AE                               l520 0BC2  
                             l512 0ABA                               l504 09BA  
                             l440 21EE                               l360 2640  
                             l521 0BC6                               l513 0AC6  
                             l505 09BE                               l441 21F2  
                             l361 264A                               l370 0CFA  
                             l522 0BD2                               l514 0ACA  
                             l506 09CA                               l450 22FA  
                             l442 21FE                               l434 21BE  
                             l371 0D04                               l523 0BD6  
                             l515 0AD6                               l451 2306  
                             l435 21C2                               l380 1156  
                             l372 0D0E                               l524 0BE2  
                             l516 0ADA                               l452 230A  
                             l436 21CE                               l381 0EE8  
                             l365 0ED2                               l525 0BE6  
                             l517 0AE6                               l509 0AA6  
                             l453 2316                               l445 22D6  
                             l437 21D2                               l390 10A2  
                             l382 0EEC                               l366 0C64  
                             l526 0BF2                               l470 065C  
                             l446 22DA                               l438 21DE  
                             l391 10A6                               l383 0FE4  
                             l375 0E1E                               l367 0C68  
                             l527 0BF6                               l471 0668  
                             l447 22E6                               l439 21E2  
                             l392 10B2                               l384 0F74  
                             l376 0E22                               l368 0D60  
                             l528 0C02                               l480 0772  
                             l472 066C                               l448 22EA  
                             l385 0F7E                               l377 0E2E  
                             l369 0CF0                               l481 0776  
                             l473 0678                               l465 0638  
                             l449 22F6                               l386 0F88  
                             l490 0882                               l482 0782  
                             l466 063C                               l395 116C  
                             l387 0F92                               l491 088E  
                             l483 0786                               l467 0648  
                             l723 2B84                               l571 2C26  
                             l396 1170                               l492 0892  
                             l484 0792                               l476 0752  
                             l468 064C                               l724 2B86  
                             l397 1268                               l493 089E  
                             l477 0756                               l469 0658  
                             l725 2B92                               l398 11F8  
                             l494 08A2                               l478 0762  
                             l726 2B94                               l399 1202  
                             l495 08AE                               l487 086E  
                             l479 0766                               l719 2B6A  
                             l488 0872                               l736 2C96  
                             l489 087E                               l498 098A  
                             l658 2462                               l499 098E  
                             l659 245C                      getsUSART@len 0004  
                    __CFG_CPB$OFF 000000                      __CFG_CPD$OFF 000000  
                             _dir 0231                               _msg 006D  
                             prod 000FF3                               wreg 000FE8  
                    __CFG_LVP$OFF 000000                      __CFG_WDT$OFF 000000  
                            l3102 04EC                              l3030 0206  
                            l3006 231A                              l3120 05A6  
                            l3222 08F8                              l3216 08B2  
                            l3048 02BE                              l3250 09CE  
                            l3154 06C2                              l3066 0378  
                            l3148 067C                              l3084 0432  
                            l3318 0C06                              l3182 0796  
                            l3256 0A14                              l3514 0E32  
                            l3290 0B30                              l3370 269A  
                            l3362 2638                              l3508 0E12  
                            l3284 0AEA                              l3188 07DC  
                            l3364 264E                              l4340 23B0  
                            l4350 2410                              l3640 1220  
                            l3368 2656                              l3448 2D34  
                            l4360 242C                              l4344 23BA  
                            l4328 2390                              l2914 2D02  
                            l3394 2B6C                              l3386 2B5A  
                            l4354 2416                              l3660 131A  
                            l3564 0F9C                              l2932 207C  
                            l4380 24FE                              l4372 249C  
                            l4356 2422                              l3590 10B6  
                            l4374 249E                              l3584 1096  
                            l3488 0D18                              l3920 2782  
                            l4392 2580                              l3666 133A  
                            l4386 2540                              l3924 2790  
                            l3916 2776                              l3932 284C  
                            l2980 2248                              l2948 2132  
                            l2974 2202                              l3846 2C18  
                            l3948 28F2                     getsUSART@data 0005  
                            _LATA 000F89                              _LATB 000F8A  
                            _LATC 000F8B                              _LATD 000F8C  
                            u3105 01E2                              _LATE 000F8D  
                            u3210 03AE                              u3130 023A  
                            u3060 233A                              u3215 03A2  
                            u3135 022E                              u4200 0FBC  
                            u3305 0582                              u3225 040E  
                            u3145 029A                              u3065 232E  
                            u4210 1008                              u3250 0468  
                            u3170 02F4                              u3090 0182  
                            u4205 0FB0                              u4070 0D38  
                            u4215 0FFC                              u3255 045C  
                            u3175 02E8                              u3095 0176  
                            _PIE1 000F9D                              u4080 0D84  
                            u4225 1068                              u3265 04C8  
                            u3185 0354                              u4330 1240  
                            u3290 0522                              u4075 0D2C  
                            u4340 128C                              u3700 0B0A  
                            u3620 09EE                              u3540 08D2  
                            u3460 07B6                              u3380 069C  
                            u4085 0D78                              u4335 1234  
                            u4095 0DE4                              u3295 0516  
                            u4345 1280                              u3705 0AFE  
                            u3625 09E2                              u3545 08C6  
                            u3465 07AA                              u3385 0690  
                            u2905 210E                              u2850 1FF8  
                            u4355 12EC                              u2855 1FEC  
                            u4800 2844                              u2865 2058  
                            u2890 20AE                              u4740 27F6  
                            u3780 0C26                              u2980 2222  
                            u4750 280C                              u2895 20A2  
                            u4760 281C                              u5560 2478  
                            u3785 0C1A                              u2985 2216  
                            u4770 281E                              u4780 2832  
                            u5580 24AA                              u6437 2C1A  
                            u4790 2842                              u4758 2810  
                            u5566 247A                              u5586 24AC  
                            u4788 2836               __size_of_CANSetMask 039E  
                            _data 0084                              _main 2362  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            indf1 000FE7                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            btemp 0047                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 0144                     __CFG_IESO$OFF 000000  
                   __CFG_MCLRE$ON 000000                      ___param_bank 000010  
                _CANOperationMode 2CFA        __size_of_CANreceiveMessage 050C  
                           ?_main 0001                             _T3CON 000FB1  
                           i2l400 190E                             i2l401 1916  
                           i2l412 1D50                             i2l404 1A14  
                           i2l405 1A18                             i2l406 1A22  
                           i1l649 00FC                             i2l370 1472  
                           i2l371 147A                             i1l691 2C70  
                           i2l380 186E                             i2l372 1482  
                           i2l381 1638                             i2l365 1624  
                           i1l749 2CCC                             i2l390 17CA  
                           i2l382 163C                             i2l366 13EE  
                           i2l391 17CE                             i2l383 171A  
                           i2l375 1580                             i2l367 13F2  
                           i2l392 17D8                             i2l384 16B4  
                           i2l376 1584                             i2l368 14D0  
                           i2l640 2A66                             i2l385 16BC  
                           i2l377 158E                             i2l369 146A  
                           i2l633 2A62                             i2l386 16C4  
                           i2l563 2D22                             i2l395 1882  
                           i2l387 16CC                             i2l396 1886  
                           i2l397 1964                             i2l558 2CF6  
                           i2l398 18FE                             i2l399 1906  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _TMR3H 000FB3                             _TMR3L 000FB2  
                           _SPBRG 000FAF                 _CANisRxReady$3107 0019  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                             _TXREG 000FAD  
                           _TXSTA 000FAC                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
              __size_of_ISR_bassa 012C                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
              CANInitialize@flags 00BA                  __end_of_ISR_alta 2AA2  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                    __CFG_EBTRB$OFF 000000  
                           main@i 00C5                    __pbitbssCOMRAM 0230  
            __end_of_CANisRxReady 2D26                             tablat 000FF5  
            __end_of_CANisTxReady 2CFA                             status 000FD8  
                  __CFG_PBADEN$ON 000000                    WriteUSART@data 00A8  
                 __initialization 2BB2                      __end_of_main 2584  
                          ??_main 00C2         __size_ofi2_CANsendMessage 06DE  
                   __activetblptr 000002                 _CANisTxReady$3105 0019  
           i2CANsendMessage@flags 0020                            _CANCON 000F6F  
                 __CFG_BBSIZ$1024 000000                   getsUSART@buffer 0002  
                          i1l4270 00C2                            i1l4266 00B6  
                          i1l4284 00E0                            i1l4278 00D6  
                          i1l4286 00E2                            i1l3860 2C8C  
                          i2l4520 1EB0                            i2l4540 1F72  
                          i2l4532 1F3A                            i2l4700 17C0  
                          i2l4604 148A                            i2l4470 1CBE  
                          i2l4630 1592                            i2l4544 1F8E  
                          i2l4536 1F56                            i2l4528 1F1E  
                          i2l4624 1576                            i2l4546 1FC0  
                          i2l4482 1D18                            i2l4474 1CDC  
                          i2l4466 1CA0                            i2l4458 1C30  
                          i2l4706 17DC                            i2l4484 1D4A  
                          i2l4478 1CFA                            i2l4822 29D0  
                          i2l4806 2940                            i2l4680 16D4  
                          i2l4842 2A2A                            i2l4834 2A06  
                          i2l4756 191E                            i2l4836 2A12  
                          i2l4782 1A26                            i2l4846 2A34  
                          i2l4776 1A0A                __size_of_ReadUSART 001E  
                 _newMessageUsart 0233                            _RXB0D0 000F66  
                          _RXB0D1 000F67                            _RXB0D2 000F68  
                          _RXB0D3 000F69                            _RXB0D4 000F6A  
                          _RXB1D0 000F56                            _RXB0D5 000F6B  
                          _RXB1D1 000F57                            _RXB0D6 000F6C  
                          _RXB1D2 000F58                            _RXB0D7 000F6D  
                          _RXB1D3 000F59                            _RXB1D4 000F5A  
                          _RXB1D5 000F5B                            _RXB1D6 000F5C  
                          _RXB1D7 000F5D                    __CFG_WDTPS$128 000000  
                          _TXB0D0 000F46                            _TXB0D1 000F47  
                          _TXB0D2 000F48                            _TXB0D3 000F49  
                          _TXB1D0 000F36                            _TXB0D4 000F4A  
                          _TXB1D1 000F37                            _TXB0D5 000F4B  
                          _SPBRGH 000FB0                            _TXB1D2 000F38  
                          _TXB0D6 000F4C                            _TXB1D3 000F39  
                          _TXB0D7 000F4D                            _TXB2D0 000F26  
                          _TXB1D4 000F3A                            _TXB2D1 000F27  
                          _TXB1D5 000F3B                            _TXB2D2 000F28  
                          _TXB1D6 000F3C                            _TXB2D3 000F29  
                          _TXB1D7 000F3D                            _TXB2D4 000F2A  
                          _TXB2D5 000F2B                            _TXB2D6 000F2C  
                          _TXB2D7 000F2D                CANsendMessage@data 00AC  
              CANsendMessage@tamp 00B4                  __end_of_delay_ms 2C34  
           __size_of_CANSetFilter 0B06                    __CFG_XINST$OFF 000000  
               __end_of_ISR_bassa 0144                __size_of_OpenUSART 0074  
                          ___wmul 2C34                    __CFG_STVREN$ON 000000  
                    ??_CANSetMask 00AD                            clear_0 2BB8  
                          clear_1 2BC6          ?_configurazione_iniziale 0001  
                 __CFG_BOREN$BOHW 000000                            tblptrh 000FF7  
                  _analogic_brake 007C                            tblptrl 000FF6  
                          tblptru 000FF8                      _CANSetFilter 0148  
                      __accesstop 0060           __end_of__initialization 2BEC  
              __end_of_CANSetMask 2362                     ___rparam_used 000001  
                      _WriteUSART 2D26                    __pcstackCOMRAM 0001  
                 _SerialOutputOld 00C6                      __pidataBANK0 2D3A  
                       ?_ISR_alta 0001                 __end_of_ReadUSART 2CDC  
           CANSetFilter@numBuffer 00B1                     _newMessageCan 0232  
           __size_of_CANisRxReady 0016                __size_of_getsUSART 002C  
           __size_of_CANisTxReady 001E                     ReadUSART@data 0001  
               __end_of_OpenUSART 2BB2          __end_of_CANOperationMode 2D10  
                      __pbssBANK0 0060                  _set_steering_old 006B  
         __size_of_CANsendMessage 078C          __size_of_can_interpreter 01BC  
                         ?___wmul 00A8                        ??_ISR_alta 0098  
                   putsUSART@data 00A9                      _CANisRxReady 2D10  
                         _CANSTAT 000F6E                      _CANisTxReady 2CDC  
                       ISR_alta@i 00A7                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
                i2_CANsendMessage 13DA            __size_of_CANInitialize 01C6  
                       ?_delay_ms 00AE                           _RXB0DLC 000F65  
                         _RXB1DLC 000F55                           _RXB0CON 000F60  
                         _RXB1CON 000F50                           _TXB0DLC 000F45  
                         _TXB1DLC 000F35                           _TXB2DLC 000F25  
              __size_of_putsUSART 0028               CANsendMessage@flags 00AF  
                         __Hparam 0000                        _left_speed 0031  
                         __Lparam 0000                  delay_ms@value_ms 00AE  
               __end_of_getsUSART 2C96                       ?_WriteUSART 0001  
                 __size_of___wmul 0036              CANInitialize@propSeg 00BF  
                         __pcinit 2BB2                           __ramtop 0300  
                         __ptext0 2362                           __ptext1 2C96  
                         __ptext2 2D26                           __ptext3 2BFA  
                         __ptext4 2C34                           __ptext5 2AA2  
                         __ptext6 2B3E                           __ptext7 2584  
                         __ptext8 1FC4                           __ptext9 0148  
                      ??_delay_ms 00B0            CANreceiveMessage@error 0023  
                  __pintcode_body 2906              end_of_initialization 2BEC  
                   __Lmediumconst 0000                           int_func 2906  
                   _CANInitialize 2584                         _RCSTAbits 000FAB  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                 __end_of_putsUSART 2CBE  
                       _ISR_bassa 0018                 ??_can_interpreter 00A8  
                  CANSetMask@mask 00A8                         _PORTCbits 000F82  
                  CANSetMask@tamp 00B2                    CANSetMask@type 00AC  
                       _TRISCbits 000F94                        getsUSART@i 0006  
                      main@i_3182 00C4               __size_of_WriteUSART 0014  
__size_of_configurazione_iniziale 009C               _previousTimeCounter 0029  
         _clock_counter_reference 0068                    _CANsendMessage 0C4E  
                CANInitialize@BRP 00B9                  CANInitialize@SJW 00B8  
                       _TXSTAbits 000FAC                    ?_CANInitialize 00B6  
                      ?_ISR_bassa 0001                    __end_of___wmul 2C6A  
               __size_of_ISR_alta 2A9A               start_initialization 2BB2  
                       _ReadUSART 2CBE               CANSetMask@numBuffer 00B1  
          __end_of_CANsendMessage 13DA                 ?_CANOperationMode 0001  
      i2CANsendMessage@dataLength 001F                         _OpenUSART 2B3E  
            i2CANsendMessage@data 001D                ??_CANOperationMode 00A8  
            i2CANsendMessage@tamp 0094          __end_ofi2_CANsendMessage 1AB8  
      CANInitialize@FilterConfig1 00C0        CANInitialize@FilterConfig2 00C1  
                        ??___wmul 00AC                       __pdataBANK0 00C6  
                __CFG_LPT1OSC$OFF 000000            CANInitialize@phaseSeg1 00B6  
          CANInitialize@phaseSeg2 00B7                       __pbssCOMRAM 0025  
                      ?_ReadUSART 0001                     __pcstackBANK0 0094  
                     _BRGCON2bits 000F71                       _BRGCON3bits 000F72  
      i2CANsendMessage@identifier 0019                 __size_of_delay_ms 003A  
                 ?_CANsendMessage 00A8                   ??_CANInitialize 00BB  
                      ?_OpenUSART 00A8                CANSetFilter@filter 00A8  
                    ??_WriteUSART 00A8                         __pintcode 0008  
                     ??_ISR_bassa 0007                         _getsUSART 2C6A  
                     __pintcodelo 0018                       _COMSTATbits 000F74  
         _configurazione_iniziale 2AA2                __end_of_WriteUSART 2D3A  
           CANreceiveMessage@tamp 0024                    ___wmul@product 00AC  
                        _LATDbits 000F8C                   _can_interpreter 274A  
                        _IPR1bits 000F9F                _analogic_brake_old 006A  
                        _IPR2bits 000FA2      _delay_quartz_frequency_value 00CE  
                        _PIE1bits 000F9D                          _IPR3bits 000FA5  
                        _PIE2bits 000FA0                          _PIE3bits 000FA3  
                        i1u542_20 008A                          i1u542_26 008C  
                        i2u600_40 14A8                          i2u600_45 149E  
                        i2u601_40 14F2                          _PIR1bits 000F9E  
                        i2u601_45 14E8                          i2u602_45 154A  
                        _PIR2bits 000FA1                          i2u613_40 16F2  
                        _PIR3bits 000FA4                          i2u613_45 16E8  
                        i2u614_40 173C                          i2u614_45 1732  
                        i2u615_45 1794                          i2u633_40 2948  
                        i2u633_46 294A                          i2u626_40 193C  
                        i2u626_45 1932                          i2u627_40 1986  
                        i2u627_45 197C                          i2u580_45 1E36  
                        i2u628_45 19DE                          i2u637_40 29A0  
                        i2u637_46 29A2                          i2u566_40 1B70  
                        i2u566_46 1B72                          i2u567_40 1B9E  
                        i2u639_40 2A10                          i2u575_45 1D24  
                        i2u567_46 1BA0                          i2u577_40 1DF8  
                        i2u569_45 1BB4                          i2u577_46 1DFA  
                        i2u578_40 1E22                          i2u586_45 1F9A  
                        i2u578_46 1E24                          _RXB0EIDH 000F63  
                        _RXB0EIDL 000F64                          _RXB1EIDH 000F53  
                        _RXB1EIDL 000F54                         _set_speed 003E  
                        _RCONbits 000FD0                          _RXB0SIDH 000F61  
                        _RXB0SIDL 000F62                          _RXF0EIDH 000F02  
                        _RXB1SIDH 000F51                          _RXF0EIDL 000F03  
                        _RXB1SIDL 000F52                          _RXF1EIDH 000F06  
                        _RXF1EIDL 000F07                          _RXF2EIDH 000F0A  
                        _RXF2EIDL 000F0B                          _RXF3EIDH 000F0E  
                        _RXF3EIDL 000F0F                          _RXF4EIDH 000F12  
                        _RXF4EIDL 000F13                          _RXF5EIDH 000F16  
                        _RXF5EIDL 000F17                          _RXF0SIDH 000F00  
                        _RXF0SIDL 000F01                          _TXB0EIDH 000F43  
                        _RXF1SIDH 000F04                          _TXB0EIDL 000F44  
                        _RXF1SIDL 000F05                          _TXB1EIDH 000F33  
                        _RXF2SIDH 000F08                          _TXB1EIDL 000F34  
                        _RXF2SIDL 000F09                          _ISR_alta 0008  
                        _TXB2EIDH 000F23                          _RXF3SIDH 000F0C  
                        _TXB2EIDL 000F24                          _RXF3SIDL 000F0D  
                        _RXF4SIDH 000F10                          _RXF4SIDL 000F11  
                        _RXF5SIDH 000F14                          _RXF5SIDL 000F15  
                        _RXM0EIDH 000F1A                          _RXM0EIDL 000F1B  
                        _TXB0SIDH 000F41                          _RXM1EIDH 000F1E  
                        _TXB0SIDL 000F42                          _RXM1EIDL 000F1F  
                        _TXB1SIDH 000F31                          _TXB1SIDL 000F32  
                        _TXB2SIDH 000F21                          _TXB2SIDL 000F22  
                        _RXM0SIDH 000F18                          _RXM0SIDL 000F19  
                        _RXM1SIDH 000F1C                          _RXM1SIDL 000F1D  
                      ?_getsUSART 0002                          _RXERRCNT 000F75  
                        _USART_Rx 0036                          _TXERRCNT 000F76  
                       _putsUSART 2C96                        _ADCON1bits 000FC1  
               ___wmul@multiplier 00A8                          _RTR_Flag 0230  
                     ??_ReadUSART 0001                     ?_CANSetFilter 00A8  
                       copy_data0 2BE0                     _set_speed_old 0060  
                      _CANCONbits 000F6F                       ??_OpenUSART 00AA  
                    _SerialOutput 00CF                   OpenUSART@config 00AA  
                        __Hrparam 0000                      _RXB0SIDLbits 000F62  
                        __Lrparam 0000                      _RXB1SIDLbits 000F52  
                      _CANSetMask 1FC4                        ?_putsUSART 00A9  
       ??_configurazione_iniziale 00C2                      _RXF0SIDLbits 000F01  
                        _delay_ms 2BFA                      _RXF1SIDLbits 000F05  
                  ??_CANSetFilter 00AD                          __ptext10 2CFA  
                        __ptext11 274A                          __ptext20 2D10  
                        __ptext12 0C4E                          __ptext14 2C6A  
                        __ptext15 2CBE                          __ptext17 13DA  
                        __ptext18 1AB8                          __ptext19 2CDC  
                    _RXF2SIDLbits 000F09           __end_of_can_interpreter 2906  
                    _RXF3SIDLbits 000F0D                      _RXF4SIDLbits 000F11  
                    _RXF5SIDLbits 000F15          CANsendMessage@dataLength 00AE  
                   __size_of_main 0222                 ?i2_CANsendMessage 0019  
            CANreceiveMessage@msg 0019                      _TXB0SIDLbits 000F42  
              ??i2_CANsendMessage 0021                      _TXB1SIDLbits 000F32  
                    _TXB2SIDLbits 000F22                          int$flags 0047  
       __size_of_CANOperationMode 0016                     ?_CANisRxReady 0001  
                     ??_getsUSART 0005                     ?_CANisTxReady 0001  
                     _RXB0DLCbits 000F65                       _sendMessage 0234  
                     _RXB1DLCbits 000F55                      _RXM0SIDLbits 000F19  
                     _RXB0CONbits 000F60                       _RXB1CONbits 000F50  
               _CANreceiveMessage 1AB8                      _RXM1SIDLbits 000F1D  
                      _INTCONbits 000FF2                      _set_steering 008C  
                ??_CANsendMessage 00B0                    OpenUSART@spbrg 00A8  
              ?_CANreceiveMessage 0019          CANsendMessage@identifier 00A8  
                        intlevel1 0000                          intlevel2 0000  
                CANSetFilter@tamp 00B2                  CANSetFilter@type 00AC  
             ??_CANreceiveMessage 001B                       _TXB0DLCbits 000F45  
                     _right_speed 0033                       _TXB1DLCbits 000F35  
                     _TXB0CONbits 000F40                       _TXB2DLCbits 000F25  
 __end_of_configurazione_iniziale 2B3E                       _TXB1CONbits 000F30  
                    _spam_counter 006C                       _TXB2CONbits 000F20  
                     _timeCounter 002D              CANOperationMode@mode 00A8  
                  ??_CANisRxReady 0019                       ?_CANSetMask 00A8  
                  ??_CANisTxReady 0019         __end_of_CANreceiveMessage 1FC4  
                     ??_putsUSART 00AB                  ?_can_interpreter 0001  
           __end_of_CANInitialize 274A                      _USART_Status 0035  
