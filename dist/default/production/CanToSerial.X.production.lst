

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Feb 27 19:12:04 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           	psect	idataCOMRAM
    34  00210C                     __pidataCOMRAM:
    35                           	opt stack 0
    36                           
    37                           ;initializer for _delay_quartz_frequency_value
    38  00210C  14                 	db	20
    39  0000                     _RXB1CON	set	3920
    40  0000                     _RXB1CONbits	set	3920
    41  0000                     _RXB1D0	set	3926
    42  0000                     _RXB1D1	set	3927
    43  0000                     _RXB1D2	set	3928
    44  0000                     _RXB1D3	set	3929
    45  0000                     _RXB1D4	set	3930
    46  0000                     _RXB1D5	set	3931
    47  0000                     _RXB1D6	set	3932
    48  0000                     _RXB1D7	set	3933
    49  0000                     _RXB1DLC	set	3925
    50  0000                     _RXB1DLCbits	set	3925
    51  0000                     _RXB1EIDH	set	3923
    52  0000                     _RXB1EIDL	set	3924
    53  0000                     _RXB1SIDH	set	3921
    54  0000                     _RXB1SIDL	set	3922
    55  0000                     _RXB1SIDLbits	set	3922
    56  0000                     _RXF0EIDH	set	3842
    57  0000                     _RXF0EIDL	set	3843
    58  0000                     _RXF0SIDH	set	3840
    59  0000                     _RXF0SIDL	set	3841
    60  0000                     _RXF0SIDLbits	set	3841
    61  0000                     _RXF1EIDH	set	3846
    62  0000                     _RXF1EIDL	set	3847
    63  0000                     _RXF1SIDH	set	3844
    64  0000                     _RXF1SIDL	set	3845
    65  0000                     _RXF1SIDLbits	set	3845
    66  0000                     _RXF2EIDH	set	3850
    67  0000                     _RXF2EIDL	set	3851
    68  0000                     _RXF2SIDH	set	3848
    69  0000                     _RXF2SIDL	set	3849
    70  0000                     _RXF2SIDLbits	set	3849
    71  0000                     _RXF3EIDH	set	3854
    72  0000                     _RXF3EIDL	set	3855
    73  0000                     _RXF3SIDH	set	3852
    74  0000                     _RXF3SIDL	set	3853
    75  0000                     _RXF3SIDLbits	set	3853
    76  0000                     _RXF4EIDH	set	3858
    77  0000                     _RXF4EIDL	set	3859
    78  0000                     _RXF4SIDH	set	3856
    79  0000                     _RXF4SIDL	set	3857
    80  0000                     _RXF4SIDLbits	set	3857
    81  0000                     _RXF5EIDH	set	3862
    82  0000                     _RXF5EIDL	set	3863
    83  0000                     _RXF5SIDH	set	3860
    84  0000                     _RXF5SIDL	set	3861
    85  0000                     _RXF5SIDLbits	set	3861
    86  0000                     _RXM0EIDH	set	3866
    87  0000                     _RXM0EIDL	set	3867
    88  0000                     _RXM0SIDH	set	3864
    89  0000                     _RXM0SIDL	set	3865
    90  0000                     _RXM0SIDLbits	set	3865
    91  0000                     _RXM1EIDH	set	3870
    92  0000                     _RXM1EIDL	set	3871
    93  0000                     _RXM1SIDH	set	3868
    94  0000                     _RXM1SIDL	set	3869
    95  0000                     _RXM1SIDLbits	set	3869
    96  0000                     _TXB0CONbits	set	3904
    97  0000                     _TXB0D0	set	3910
    98  0000                     _TXB0D1	set	3911
    99  0000                     _TXB0D2	set	3912
   100  0000                     _TXB0D3	set	3913
   101  0000                     _TXB0D4	set	3914
   102  0000                     _TXB0D5	set	3915
   103  0000                     _TXB0D6	set	3916
   104  0000                     _TXB0D7	set	3917
   105  0000                     _TXB0DLC	set	3909
   106  0000                     _TXB0DLCbits	set	3909
   107  0000                     _TXB0EIDH	set	3907
   108  0000                     _TXB0EIDL	set	3908
   109  0000                     _TXB0SIDH	set	3905
   110  0000                     _TXB0SIDL	set	3906
   111  0000                     _TXB0SIDLbits	set	3906
   112  0000                     _TXB1CONbits	set	3888
   113  0000                     _TXB1D0	set	3894
   114  0000                     _TXB1D1	set	3895
   115  0000                     _TXB1D2	set	3896
   116  0000                     _TXB1D3	set	3897
   117  0000                     _TXB1D4	set	3898
   118  0000                     _TXB1D5	set	3899
   119  0000                     _TXB1D6	set	3900
   120  0000                     _TXB1D7	set	3901
   121  0000                     _TXB1DLC	set	3893
   122  0000                     _TXB1DLCbits	set	3893
   123  0000                     _TXB1EIDH	set	3891
   124  0000                     _TXB1EIDL	set	3892
   125  0000                     _TXB1SIDH	set	3889
   126  0000                     _TXB1SIDL	set	3890
   127  0000                     _TXB1SIDLbits	set	3890
   128  0000                     _TXB2CONbits	set	3872
   129  0000                     _TXB2D0	set	3878
   130  0000                     _TXB2D1	set	3879
   131  0000                     _TXB2D2	set	3880
   132  0000                     _TXB2D3	set	3881
   133  0000                     _TXB2D4	set	3882
   134  0000                     _TXB2D5	set	3883
   135  0000                     _TXB2D6	set	3884
   136  0000                     _TXB2D7	set	3885
   137  0000                     _TXB2DLC	set	3877
   138  0000                     _TXB2DLCbits	set	3877
   139  0000                     _TXB2EIDH	set	3875
   140  0000                     _TXB2EIDL	set	3876
   141  0000                     _TXB2SIDH	set	3873
   142  0000                     _TXB2SIDL	set	3874
   143  0000                     _TXB2SIDLbits	set	3874
   144  0000                     _BRGCON1	set	3952
   145  0000                     _BRGCON2	set	3953
   146  0000                     _BRGCON2bits	set	3953
   147  0000                     _BRGCON3	set	3954
   148  0000                     _BRGCON3bits	set	3954
   149  0000                     _CANCON	set	3951
   150  0000                     _CANCONbits	set	3951
   151  0000                     _CANSTAT	set	3950
   152  0000                     _COMSTATbits	set	3956
   153  0000                     _INTCONbits	set	4082
   154  0000                     _IPR1bits	set	3999
   155  0000                     _IPR3bits	set	4005
   156  0000                     _LATA	set	3977
   157  0000                     _LATB	set	3978
   158  0000                     _LATC	set	3979
   159  0000                     _PIE1	set	3997
   160  0000                     _PIE1bits	set	3997
   161  0000                     _PIE3bits	set	4003
   162  0000                     _PIR1bits	set	3998
   163  0000                     _PIR3bits	set	4004
   164  0000                     _RCONbits	set	4048
   165  0000                     _RCREG	set	4014
   166  0000                     _RCSTA	set	4011
   167  0000                     _RCSTAbits	set	4011
   168  0000                     _RXB0CON	set	3936
   169  0000                     _RXB0CONbits	set	3936
   170  0000                     _RXB0D0	set	3942
   171  0000                     _RXB0D1	set	3943
   172  0000                     _RXB0D2	set	3944
   173  0000                     _RXB0D3	set	3945
   174  0000                     _RXB0D4	set	3946
   175  0000                     _RXB0D5	set	3947
   176  0000                     _RXB0D6	set	3948
   177  0000                     _RXB0D7	set	3949
   178  0000                     _RXB0DLC	set	3941
   179  0000                     _RXB0DLCbits	set	3941
   180  0000                     _RXB0EIDH	set	3939
   181  0000                     _RXB0EIDL	set	3940
   182  0000                     _RXB0SIDH	set	3937
   183  0000                     _RXB0SIDL	set	3938
   184  0000                     _RXB0SIDLbits	set	3938
   185  0000                     _RXERRCNT	set	3957
   186  0000                     _SPBRG	set	4015
   187  0000                     _SPBRGH	set	4016
   188  0000                     _TRISA	set	3986
   189  0000                     _TRISB	set	3987
   190  0000                     _TRISC	set	3988
   191  0000                     _TRISCbits	set	3988
   192  0000                     _TXERRCNT	set	3958
   193  0000                     _TXREG	set	4013
   194  0000                     _TXSTA	set	4012
   195  0000                     _TXSTAbits	set	4012
   196                           
   197                           ; #config settings
   198  0000                     
   199                           	psect	cinit
   200  002026                     __pcinit:
   201                           	opt stack 0
   202  002026                     start_initialization:
   203                           	opt stack 0
   204  002026                     __initialization:
   205                           	opt stack 0
   206                           
   207                           ; Clear objects allocated to BANK0 (50 bytes)
   208  002026  EE00  F060         	lfsr	0,__pbssBANK0
   209  00202A  0E32               	movlw	50
   210  00202C                     clear_0:
   211  00202C  6AEE               	clrf	postinc0,c
   212  00202E  06E8               	decf	wreg,f,c
   213  002030  E1FD               	bnz	clear_0
   214                           
   215                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   216  002032  6A40               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   217                           
   218                           ; Clear objects allocated to COMRAM (32 bytes)
   219  002034  EE00  F001         	lfsr	0,__pbssCOMRAM
   220  002038  0E20               	movlw	32
   221  00203A                     clear_1:
   222  00203A  6AEE               	clrf	postinc0,c
   223  00203C  06E8               	decf	wreg,f,c
   224  00203E  E1FD               	bnz	clear_1
   225                           
   226                           ; Initialize objects allocated to COMRAM (1 bytes)
   227                           ; load TBLPTR registers with __pidataCOMRAM
   228  002040  0E0C               	movlw	low __pidataCOMRAM
   229  002042  6EF6               	movwf	tblptrl,c
   230  002044  0E21               	movlw	high __pidataCOMRAM
   231  002046  6EF7               	movwf	tblptrh,c
   232  002048  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   233  00204A  6EF8               	movwf	tblptru,c
   234  00204C  0009               	tblrd		*+	;fetch initializer
   235  00204E  CFF5 F041          	movff	tablat,__pdataCOMRAM
   236  002052                     end_of_initialization:
   237                           	opt stack 0
   238  002052                     __end_of__initialization:
   239                           	opt stack 0
   240  002052  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   241  002054  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   242  002056  0E00               	movlw	low (__Lmediumconst shr (0+16))
   243  002058  6EF8               	movwf	tblptru,c
   244  00205A  0100               	movlb	0
   245  00205C  EF1B  F00F         	goto	_main	;jump to C main() function
   246                           tblptru	equ	0xFF8
   247                           tblptrh	equ	0xFF7
   248                           tblptrl	equ	0xFF6
   249                           tablat	equ	0xFF5
   250                           postinc0	equ	0xFEE
   251                           wreg	equ	0xFE8
   252                           
   253                           	psect	bitbssCOMRAM
   254  000200                     __pbitbssCOMRAM:
   255                           	opt stack 0
   256  000200                     _RTR_Flag:
   257                           	opt stack 0
   258  000200                     	ds	1
   259  000201                     _dir:
   260                           	opt stack 0
   261  000201                     	ds	1
   262  000202                     _newMessageCan:
   263                           	opt stack 0
   264  000202                     	ds	1
   265  000203                     _newMessageUsart:
   266                           	opt stack 0
   267  000203                     	ds	1
   268                           tblptru	equ	0xFF8
   269                           tblptrh	equ	0xFF7
   270                           tblptrl	equ	0xFF6
   271                           tablat	equ	0xFF5
   272                           postinc0	equ	0xFEE
   273                           wreg	equ	0xFE8
   274                           
   275                           	psect	bssCOMRAM
   276  000001                     __pbssCOMRAM:
   277                           	opt stack 0
   278  000001                     _set_speed_old:
   279                           	opt stack 0
   280  000001                     	ds	8
   281  000009                     _id:
   282                           	opt stack 0
   283  000009                     	ds	4
   284  00000D                     _clock_counter_reference:
   285                           	opt stack 0
   286  00000D                     	ds	2
   287  00000F                     _USART_Status:
   288                           	opt stack 0
   289  00000F                     	ds	1
   290  000010                     _analogic_brake_old:
   291                           	opt stack 0
   292  000010                     	ds	1
   293  000011                     _set_steering_old:
   294                           	opt stack 0
   295  000011                     	ds	1
   296  000012                     _set_speed:
   297                           	opt stack 0
   298  000012                     	ds	8
   299  00001A                     _USART_Rx:
   300                           	opt stack 0
   301  00001A                     	ds	7
   302                           tblptru	equ	0xFF8
   303                           tblptrh	equ	0xFF7
   304                           tblptrl	equ	0xFF6
   305                           tablat	equ	0xFF5
   306                           postinc0	equ	0xFEE
   307                           wreg	equ	0xFE8
   308                           
   309                           	psect	dataCOMRAM
   310  000041                     __pdataCOMRAM:
   311                           	opt stack 0
   312  000041                     _delay_quartz_frequency_value:
   313                           	opt stack 0
   314  000041                     	ds	1
   315                           tblptru	equ	0xFF8
   316                           tblptrh	equ	0xFF7
   317                           tblptrl	equ	0xFF6
   318                           tablat	equ	0xFF5
   319                           postinc0	equ	0xFEE
   320                           wreg	equ	0xFE8
   321                           
   322                           	psect	bssBANK0
   323  000060                     __pbssBANK0:
   324                           	opt stack 0
   325  000060                     _msg:
   326                           	opt stack 0
   327  000060                     	ds	15
   328  00006F                     _USART_Tx:
   329                           	opt stack 0
   330  00006F                     	ds	11
   331  00007A                     _analogic_brake:
   332                           	opt stack 0
   333  00007A                     	ds	8
   334  000082                     _data:
   335                           	opt stack 0
   336  000082                     	ds	8
   337  00008A                     _set_steering:
   338                           	opt stack 0
   339  00008A                     	ds	8
   340                           tblptru	equ	0xFF8
   341                           tblptrh	equ	0xFF7
   342                           tblptrl	equ	0xFF6
   343                           tablat	equ	0xFF5
   344                           postinc0	equ	0xFEE
   345                           wreg	equ	0xFE8
   346                           
   347                           	psect	cstackBANK0
   348  000092                     __pcstackBANK0:
   349                           	opt stack 0
   350  000092                     OpenUSART@config:
   351                           	opt stack 0
   352  000092                     putsUSART@data:
   353                           	opt stack 0
   354  000092                     CANsendMessage@identifier:
   355                           	opt stack 0
   356  000092                     CANSetMask@mask:
   357                           	opt stack 0
   358  000092                     CANSetFilter@filter:
   359                           	opt stack 0
   360                           
   361                           ; 4 bytes @ 0x0
   362  000092                     	ds	4
   363  000096                     CANSetMask@type:
   364                           	opt stack 0
   365  000096                     CANSetFilter@type:
   366                           	opt stack 0
   367  000096                     CANsendMessage@data:
   368                           	opt stack 0
   369                           
   370                           ; 2 bytes @ 0x4
   371  000096                     	ds	1
   372  000097                     ??_CANSetMask:
   373  000097                     ??_CANSetFilter:
   374                           
   375                           ; 1 bytes @ 0x5
   376  000097                     	ds	1
   377  000098                     CANsendMessage@dataLength:
   378                           	opt stack 0
   379                           
   380                           ; 1 bytes @ 0x6
   381  000098                     	ds	1
   382  000099                     CANsendMessage@flags:
   383                           	opt stack 0
   384                           
   385                           ; 1 bytes @ 0x7
   386  000099                     	ds	1
   387  00009A                     ??_CANsendMessage:
   388                           
   389                           ; 1 bytes @ 0x8
   390  00009A                     	ds	1
   391  00009B                     CANSetMask@numBuffer:
   392                           	opt stack 0
   393  00009B                     CANSetFilter@numBuffer:
   394                           	opt stack 0
   395                           
   396                           ; 1 bytes @ 0x9
   397  00009B                     	ds	1
   398  00009C                     CANSetMask@tamp:
   399                           	opt stack 0
   400  00009C                     CANSetFilter@tamp:
   401                           	opt stack 0
   402                           
   403                           ; 4 bytes @ 0xA
   404  00009C                     	ds	2
   405  00009E                     CANsendMessage@tamp:
   406                           	opt stack 0
   407                           
   408                           ; 4 bytes @ 0xC
   409  00009E                     	ds	2
   410  0000A0                     CANInitialize@phaseSeg1:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0xE
   414  0000A0                     	ds	1
   415  0000A1                     CANInitialize@phaseSeg2:
   416                           	opt stack 0
   417                           
   418                           ; 1 bytes @ 0xF
   419  0000A1                     	ds	1
   420  0000A2                     CANInitialize@SJW:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0x10
   424  0000A2                     	ds	1
   425  0000A3                     CANInitialize@BRP:
   426                           	opt stack 0
   427                           
   428                           ; 1 bytes @ 0x11
   429  0000A3                     	ds	1
   430  0000A4                     CANInitialize@flags:
   431                           	opt stack 0
   432                           
   433                           ; 1 bytes @ 0x12
   434  0000A4                     	ds	1
   435  0000A5                     ??_CANInitialize:
   436                           
   437                           ; 1 bytes @ 0x13
   438  0000A5                     	ds	4
   439  0000A9                     CANInitialize@propSeg:
   440                           	opt stack 0
   441                           
   442                           ; 1 bytes @ 0x17
   443  0000A9                     	ds	1
   444  0000AA                     CANInitialize@FilterConfig1:
   445                           	opt stack 0
   446                           
   447                           ; 1 bytes @ 0x18
   448  0000AA                     	ds	1
   449  0000AB                     CANInitialize@FilterConfig2:
   450                           	opt stack 0
   451                           
   452                           ; 1 bytes @ 0x19
   453  0000AB                     	ds	1
   454                           tblptru	equ	0xFF8
   455                           tblptrh	equ	0xFF7
   456                           tblptrl	equ	0xFF6
   457                           tablat	equ	0xFF5
   458                           postinc0	equ	0xFEE
   459                           wreg	equ	0xFE8
   460                           
   461                           	psect	cstackCOMRAM
   462  000021                     __pcstackCOMRAM:
   463                           	opt stack 0
   464  000021                     _CANisRxReady$2719:
   465                           	opt stack 0
   466  000021                     ReadUSART@data:
   467                           	opt stack 0
   468  000021                     CANreceiveMessage@msg:
   469                           	opt stack 0
   470                           
   471                           ; 2 bytes @ 0x0
   472  000021                     	ds	1
   473  000022                     getsUSART@buffer:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0x1
   477  000022                     	ds	1
   478  000023                     ??_CANreceiveMessage:
   479                           
   480                           ; 1 bytes @ 0x2
   481  000023                     	ds	1
   482  000024                     getsUSART@len:
   483                           	opt stack 0
   484                           
   485                           ; 1 bytes @ 0x3
   486  000024                     	ds	1
   487  000025                     getsUSART@data:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x4
   491  000025                     	ds	1
   492  000026                     getsUSART@i:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x5
   496  000026                     	ds	5
   497  00002B                     CANreceiveMessage@error:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0xA
   501  00002B                     	ds	1
   502  00002C                     CANreceiveMessage@tamp:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0xB
   506  00002C                     	ds	1
   507  00002D                     ??_ISR_bassa:
   508                           
   509                           ; 1 bytes @ 0xC
   510  00002D                     	ds	17
   511  00003E                     CANOperationMode@mode:
   512                           	opt stack 0
   513  00003E                     WriteUSART@data:
   514                           	opt stack 0
   515  00003E                     OpenUSART@spbrg:
   516                           	opt stack 0
   517                           
   518                           ; 2 bytes @ 0x1D
   519  00003E                     	ds	1
   520  00003F                     
   521                           ; 1 bytes @ 0x1E
   522  00003F                     	ds	1
   523  000040                     tblptru	equ	0xFF8
   524                           tblptrh	equ	0xFF7
   525                           tblptrl	equ	0xFF6
   526                           tablat	equ	0xFF5
   527                           postinc0	equ	0xFEE
   528                           wreg	equ	0xFE8
   529                           
   530                           ; 1 bytes @ 0x1F
   531 ;;
   532 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   533 ;;
   534 ;; *************** function _main *****************
   535 ;; Defined at:
   536 ;;		line 83 in file "CanToSerial.c"
   537 ;; Parameters:    Size  Location     Type
   538 ;;		None
   539 ;; Auto vars:     Size  Location     Type
   540 ;;		None
   541 ;; Return value:  Size  Location     Type
   542 ;;                  1    wreg      void 
   543 ;; Registers used:
   544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   545 ;; Tracked objects:
   546 ;;		On entry : 0/0
   547 ;;		On exit  : 0/0
   548 ;;		Unchanged: 0/0
   549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   550 ;;      Params:         0       0       0       0
   551 ;;      Locals:         0       0       0       0
   552 ;;      Temps:          0       0       0       0
   553 ;;      Totals:         0       0       0       0
   554 ;;Total ram usage:        0 bytes
   555 ;; Hardware stack levels required when called:    6
   556 ;; This function calls:
   557 ;;		_CANsendMessage
   558 ;;		_can_interpreter
   559 ;;		_configurazione_iniziale
   560 ;;		_putsUSART
   561 ;; This function is called by:
   562 ;;		Startup code after reset
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           	psect	text0
   567  001E36                     __ptext0:
   568                           	opt stack 0
   569  001E36                     _main:
   570                           	opt stack 25
   571                           
   572                           ;CanToSerial.c: 84: configurazione_iniziale();
   573                           
   574                           ;incstack = 0
   575  001E36  ECBE  F00F         	call	_configurazione_iniziale	;wreg free
   576  001E3A                     l4231:
   577                           
   578                           ;CanToSerial.c: 86: if (newMessageCan == 1) {
   579  001E3A  A440               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
   580  001E3C  D00B               	goto	l4237
   581                           
   582                           ;CanToSerial.c: 87: can_interpreter();
   583  001E3E  ECF5  F00F         	call	_can_interpreter	;wreg free
   584                           
   585                           ;CanToSerial.c: 88: putsUSART((char *) USART_Tx);
   586  001E42  0E6F               	movlw	low _USART_Tx
   587  001E44  0100               	movlb	0	; () banked
   588  001E46  6F92               	movwf	putsUSART@data& (0+255),b
   589  001E48  0E00               	movlw	high _USART_Tx
   590  001E4A  0100               	movlb	0	; () banked
   591  001E4C  6F93               	movwf	(putsUSART@data+1)& (0+255),b
   592  001E4E  EC46  F010         	call	_putsUSART	;wreg free
   593                           
   594                           ;CanToSerial.c: 89: newMessageCan = 0;
   595  001E52  9440               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
   596  001E54                     l4237:
   597                           
   598                           ;CanToSerial.c: 90: }
   599                           ;CanToSerial.c: 91: if (newMessageUsart == 1) {
   600  001E54  A640               	btfss	_newMessageUsart/(0+8),_newMessageUsart& (0+7),c	;volatile
   601  001E56  D7F1               	goto	l4231
   602                           
   603                           ;CanToSerial.c: 92: if (set_steering_old != set_steering[0]) {
   604  001E58  5011               	movf	_set_steering_old,w,c	;volatile
   605  001E5A  0100               	movlb	0	; () banked
   606  001E5C  198A               	xorwf	_set_steering& (0+255),w,b
   607  001E5E  B4D8               	btfsc	status,2,c
   608  001E60  D017               	goto	l4243
   609                           
   610                           ; BSR set to: 0
   611                           ;CanToSerial.c: 93: CANsendMessage(0b00000000000000000000000000101, set_steering, 8, CAN
      +                          _CONFIG_STD_MSG & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
   612  001E62  0E05               	movlw	5
   613  001E64  0100               	movlb	0	; () banked
   614  001E66  6F92               	movwf	CANsendMessage@identifier& (0+255),b
   615  001E68  0E00               	movlw	0
   616  001E6A  6F93               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   617  001E6C  0E00               	movlw	0
   618  001E6E  6F94               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   619  001E70  0E00               	movlw	0
   620  001E72  6F95               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   621  001E74  0E8A               	movlw	low _set_steering
   622  001E76  0100               	movlb	0	; () banked
   623  001E78  6F96               	movwf	CANsendMessage@data& (0+255),b
   624  001E7A  0E00               	movlw	high _set_steering
   625  001E7C  0100               	movlb	0	; () banked
   626  001E7E  6F97               	movwf	(CANsendMessage@data+1)& (0+255),b
   627  001E80  0E08               	movlw	8
   628  001E82  0100               	movlb	0	; () banked
   629  001E84  6F98               	movwf	CANsendMessage@dataLength& (0+255),b
   630  001E86  0EBC               	movlw	188
   631  001E88  0100               	movlb	0	; () banked
   632  001E8A  6F99               	movwf	CANsendMessage@flags& (0+255),b
   633  001E8C  EC1D  F006         	call	_CANsendMessage	;wreg free
   634  001E90                     l4243:
   635                           
   636                           ;CanToSerial.c: 94: }
   637                           ;CanToSerial.c: 95: if ((set_speed_old[0] != set_speed[0])&&(set_speed_old[1] != set_spe
      +                          ed[1])) {
   638  001E90  5012               	movf	_set_speed,w,c
   639  001E92  1801               	xorwf	_set_speed_old,w,c	;volatile
   640  001E94  B4D8               	btfsc	status,2,c
   641  001E96  D01B               	goto	l4249
   642  001E98  5013               	movf	_set_speed+1,w,c
   643  001E9A  1802               	xorwf	_set_speed_old+1,w,c	;volatile
   644  001E9C  B4D8               	btfsc	status,2,c
   645  001E9E  D017               	goto	l4249
   646                           
   647                           ;CanToSerial.c: 96: CANsendMessage(0b00000000000000000000000000011, set_speed, 8, CAN_CO
      +                          NFIG_STD_MSG & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
   648  001EA0  0E03               	movlw	3
   649  001EA2  0100               	movlb	0	; () banked
   650  001EA4  6F92               	movwf	CANsendMessage@identifier& (0+255),b
   651  001EA6  0E00               	movlw	0
   652  001EA8  6F93               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   653  001EAA  0E00               	movlw	0
   654  001EAC  6F94               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   655  001EAE  0E00               	movlw	0
   656  001EB0  6F95               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   657  001EB2  0E12               	movlw	low _set_speed
   658  001EB4  0100               	movlb	0	; () banked
   659  001EB6  6F96               	movwf	CANsendMessage@data& (0+255),b
   660  001EB8  0E00               	movlw	high _set_speed
   661  001EBA  0100               	movlb	0	; () banked
   662  001EBC  6F97               	movwf	(CANsendMessage@data+1)& (0+255),b
   663  001EBE  0E08               	movlw	8
   664  001EC0  0100               	movlb	0	; () banked
   665  001EC2  6F98               	movwf	CANsendMessage@dataLength& (0+255),b
   666  001EC4  0EBC               	movlw	188
   667  001EC6  0100               	movlb	0	; () banked
   668  001EC8  6F99               	movwf	CANsendMessage@flags& (0+255),b
   669  001ECA  EC1D  F006         	call	_CANsendMessage	;wreg free
   670  001ECE                     l4249:
   671                           
   672                           ;CanToSerial.c: 97: }
   673                           ;CanToSerial.c: 98: if (analogic_brake_old != analogic_brake[0]) {
   674  001ECE  5010               	movf	_analogic_brake_old,w,c	;volatile
   675  001ED0  0100               	movlb	0	; () banked
   676  001ED2  197A               	xorwf	_analogic_brake& (0+255),w,b
   677  001ED4  B4D8               	btfsc	status,2,c
   678  001ED6  D017               	goto	l4253
   679                           
   680                           ; BSR set to: 0
   681                           ;CanToSerial.c: 99: CANsendMessage(0b00000000000000000000000000100, analogic_brake, 8, C
      +                          AN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
   682  001ED8  0E04               	movlw	4
   683  001EDA  0100               	movlb	0	; () banked
   684  001EDC  6F92               	movwf	CANsendMessage@identifier& (0+255),b
   685  001EDE  0E00               	movlw	0
   686  001EE0  6F93               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   687  001EE2  0E00               	movlw	0
   688  001EE4  6F94               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   689  001EE6  0E00               	movlw	0
   690  001EE8  6F95               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   691  001EEA  0E7A               	movlw	low _analogic_brake
   692  001EEC  0100               	movlb	0	; () banked
   693  001EEE  6F96               	movwf	CANsendMessage@data& (0+255),b
   694  001EF0  0E00               	movlw	high _analogic_brake
   695  001EF2  0100               	movlb	0	; () banked
   696  001EF4  6F97               	movwf	(CANsendMessage@data+1)& (0+255),b
   697  001EF6  0E08               	movlw	8
   698  001EF8  0100               	movlb	0	; () banked
   699  001EFA  6F98               	movwf	CANsendMessage@dataLength& (0+255),b
   700  001EFC  0EBC               	movlw	188
   701  001EFE  0100               	movlb	0	; () banked
   702  001F00  6F99               	movwf	CANsendMessage@flags& (0+255),b
   703  001F02  EC1D  F006         	call	_CANsendMessage	;wreg free
   704  001F06                     l4253:
   705                           
   706                           ;CanToSerial.c: 100: }
   707                           ;CanToSerial.c: 101: newMessageUsart = 0;
   708  001F06  9640               	bcf	_newMessageUsart/(0+8),_newMessageUsart& (0+7),c	;volatile
   709  001F08  D798               	goto	l4231
   710  001F0A                     __end_of_main:
   711                           	opt stack 0
   712                           tblptru	equ	0xFF8
   713                           tblptrh	equ	0xFF7
   714                           tblptrl	equ	0xFF6
   715                           tablat	equ	0xFF5
   716                           postinc0	equ	0xFEE
   717                           wreg	equ	0xFE8
   718                           status	equ	0xFD8
   719                           
   720 ;; *************** function _putsUSART *****************
   721 ;; Defined at:
   722 ;;		line 14 in file "sources\pic18\plib\USART\uputs.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  data            2    0[BANK0 ] PTR unsigned char 
   725 ;;		 -> USART_Tx(11), 
   726 ;; Auto vars:     Size  Location     Type
   727 ;;		None
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   737 ;;      Params:         0       2       0       0
   738 ;;      Locals:         0       0       0       0
   739 ;;      Temps:          0       0       0       0
   740 ;;      Totals:         0       2       0       0
   741 ;;Total ram usage:        2 bytes
   742 ;; Hardware stack levels used:    1
   743 ;; Hardware stack levels required when called:    4
   744 ;; This function calls:
   745 ;;		_WriteUSART
   746 ;; This function is called by:
   747 ;;		_main
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           	psect	text1
   752  00208C                     __ptext1:
   753                           	opt stack 0
   754  00208C                     _putsUSART:
   755                           	opt stack 26
   756  00208C                     l667:
   757  00208C  A2AC               	btfss	4012,1,c	;volatile
   758  00208E  D7FE               	goto	l667
   759  002090  C092  FFD9         	movff	putsUSART@data,fsr2l
   760  002094  C093  FFDA         	movff	putsUSART@data+1,fsr2h
   761  002098  50DF               	movf	indf2,w,c
   762  00209A  EC74  F010         	call	_WriteUSART
   763  00209E  C092  FFD9         	movff	putsUSART@data,fsr2l
   764  0020A2  C093  FFDA         	movff	putsUSART@data+1,fsr2h
   765  0020A6  0100               	movlb	0	; () banked
   766  0020A8  4B92               	infsnz	putsUSART@data& (0+255),f,b
   767  0020AA  2B93               	incf	(putsUSART@data+1)& (0+255),f,b
   768  0020AC  50DF               	movf	indf2,w,c
   769  0020AE  B4D8               	btfsc	status,2,c
   770  0020B0  0012               	return	
   771  0020B2  D7EC               	goto	l667
   772  0020B4                     __end_of_putsUSART:
   773                           	opt stack 0
   774                           tblptru	equ	0xFF8
   775                           tblptrh	equ	0xFF7
   776                           tblptrl	equ	0xFF6
   777                           tablat	equ	0xFF5
   778                           postinc0	equ	0xFEE
   779                           wreg	equ	0xFE8
   780                           indf2	equ	0xFDF
   781                           fsr2h	equ	0xFDA
   782                           fsr2l	equ	0xFD9
   783                           status	equ	0xFD8
   784                           
   785 ;; *************** function _WriteUSART *****************
   786 ;; Defined at:
   787 ;;		line 13 in file "sources\pic18\plib\USART\uwrite.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;  data            1    wreg     unsigned char 
   790 ;; Auto vars:     Size  Location     Type
   791 ;;  data            1   29[COMRAM] unsigned char 
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      void 
   794 ;; Registers used:
   795 ;;		wreg
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   801 ;;      Params:         0       0       0       0
   802 ;;      Locals:         1       0       0       0
   803 ;;      Temps:          0       0       0       0
   804 ;;      Totals:         1       0       0       0
   805 ;;Total ram usage:        1 bytes
   806 ;; Hardware stack levels used:    1
   807 ;; Hardware stack levels required when called:    3
   808 ;; This function calls:
   809 ;;		Nothing
   810 ;; This function is called by:
   811 ;;		_putsUSART
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           	psect	text2
   816  0020E8                     __ptext2:
   817                           	opt stack 0
   818  0020E8                     _WriteUSART:
   819                           	opt stack 26
   820                           
   821                           ; BSR set to: 0
   822                           ;incstack = 0
   823                           ;WriteUSART@data stored from wreg
   824  0020E8  6E3E               	movwf	WriteUSART@data,c
   825  0020EA  ACAC               	btfss	4012,6,c	;volatile
   826  0020EC  D003               	goto	l3171
   827  0020EE  90AC               	bcf	4012,0,c	;volatile
   828  0020F0  B20F               	btfsc	_USART_Status,1,c
   829  0020F2  80AC               	bsf	4012,0,c	;volatile
   830  0020F4                     l3171:
   831  0020F4  C03E  FFAD         	movff	WriteUSART@data,4013	;volatile
   832  0020F8  0012               	return		;funcret
   833  0020FA                     __end_of_WriteUSART:
   834                           	opt stack 0
   835                           tblptru	equ	0xFF8
   836                           tblptrh	equ	0xFF7
   837                           tblptrl	equ	0xFF6
   838                           tablat	equ	0xFF5
   839                           postinc0	equ	0xFEE
   840                           wreg	equ	0xFE8
   841                           indf2	equ	0xFDF
   842                           fsr2h	equ	0xFDA
   843                           fsr2l	equ	0xFD9
   844                           status	equ	0xFD8
   845                           
   846 ;; *************** function _configurazione_iniziale *****************
   847 ;; Defined at:
   848 ;;		line 116 in file "CanToSerial.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;		None
   851 ;; Auto vars:     Size  Location     Type
   852 ;;		None
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      void 
   855 ;; Registers used:
   856 ;;		wreg, status,2, status,0, cstack
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   862 ;;      Params:         0       0       0       0
   863 ;;      Locals:         0       0       0       0
   864 ;;      Temps:          0       0       0       0
   865 ;;      Totals:         0       0       0       0
   866 ;;Total ram usage:        0 bytes
   867 ;; Hardware stack levels used:    1
   868 ;; Hardware stack levels required when called:    5
   869 ;; This function calls:
   870 ;;		_CANInitialize
   871 ;;		_OpenUSART
   872 ;; This function is called by:
   873 ;;		_main
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           	psect	text3
   878  001F7C                     __ptext3:
   879                           	opt stack 0
   880  001F7C                     _configurazione_iniziale:
   881                           	opt stack 25
   882                           
   883                           ;CanToSerial.c: 117: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
   884                           
   885                           ;incstack = 0
   886  001F7C  0E4F               	movlw	79
   887  001F7E  16AB               	andwf	4011,f,c	;volatile
   888  001F80  9AAC               	bcf	4012,5,c	;volatile
   889  001F82  0ECF               	movlw	207
   890  001F84  169D               	andwf	3997,f,c	;volatile
   891                           
   892                           ;CanToSerial.c: 119: RCONbits.IPEN = 1;
   893  001F86  8ED0               	bsf	4048,7,c	;volatile
   894                           
   895                           ;CanToSerial.c: 120: PIR3bits.RXB1IF = 0;
   896  001F88  92A4               	bcf	4004,1,c	;volatile
   897                           
   898                           ;CanToSerial.c: 121: PIR3bits.RXB0IF = 0;
   899  001F8A  90A4               	bcf	4004,0,c	;volatile
   900                           
   901                           ;CanToSerial.c: 122: PIR1bits.RC1IF = 0;
   902  001F8C  9A9E               	bcf	3998,5,c	;volatile
   903                           
   904                           ;CanToSerial.c: 124: IPR3bits.RXB1IP = 0;
   905  001F8E  92A5               	bcf	4005,1,c	;volatile
   906                           
   907                           ;CanToSerial.c: 125: IPR3bits.RXB0IP = 0;
   908  001F90  90A5               	bcf	4005,0,c	;volatile
   909                           
   910                           ;CanToSerial.c: 126: IPR1bits.RC1IP = 0;
   911  001F92  9A9F               	bcf	3999,5,c	;volatile
   912                           
   913                           ;CanToSerial.c: 128: PIE3bits.RXB1IE = 1;
   914  001F94  82A3               	bsf	4003,1,c	;volatile
   915                           
   916                           ;CanToSerial.c: 129: PIE3bits.RXB0IE = 1;
   917  001F96  80A3               	bsf	4003,0,c	;volatile
   918                           
   919                           ;CanToSerial.c: 130: PIE1bits.RC1IE = 1;
   920  001F98  8A9D               	bsf	3997,5,c	;volatile
   921                           
   922                           ;CanToSerial.c: 132: INTCONbits.GIEH = 1;
   923  001F9A  8EF2               	bsf	intcon,7,c	;volatile
   924                           
   925                           ;CanToSerial.c: 133: INTCONbits.GIEL = 1;
   926  001F9C  8CF2               	bsf	intcon,6,c	;volatile
   927                           
   928                           ;CanToSerial.c: 137: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFI
      +                          G_SAMPLE_ONCE &
   929                           ;CanToSerial.c: 138: CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
   930  001F9E  0E06               	movlw	6
   931  001FA0  0100               	movlb	0	; () banked
   932  001FA2  6FA0               	movwf	CANInitialize@phaseSeg1& (0+255),b
   933  001FA4  0E05               	movlw	5
   934  001FA6  0100               	movlb	0	; () banked
   935  001FA8  6FA1               	movwf	CANInitialize@phaseSeg2& (0+255),b
   936  001FAA  0E01               	movlw	1
   937  001FAC  0100               	movlb	0	; () banked
   938  001FAE  6FA2               	movwf	CANInitialize@SJW& (0+255),b
   939  001FB0  0E03               	movlw	3
   940  001FB2  0100               	movlb	0	; () banked
   941  001FB4  6FA3               	movwf	CANInitialize@BRP& (0+255),b
   942  001FB6  0E9D               	movlw	157
   943  001FB8  0100               	movlb	0	; () banked
   944  001FBA  6FA4               	movwf	CANInitialize@flags& (0+255),b
   945  001FBC  0E04               	movlw	4
   946  001FBE  EC38  F00E         	call	_CANInitialize
   947                           
   948                           ;CanToSerial.c: 140: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101
   949                           ;CanToSerial.c: 141: & 0b11111111 & 0b11111111, 103);
   950  001FC2  0E00               	movlw	0
   951  001FC4  6E3F               	movwf	OpenUSART@spbrg+1,c
   952  001FC6  0E67               	movlw	103
   953  001FC8  6E3E               	movwf	OpenUSART@spbrg,c
   954  001FCA  0E7C               	movlw	124
   955  001FCC  EC85  F00F         	call	_OpenUSART
   956                           
   957                           ;CanToSerial.c: 145: LATA = 0x00;
   958  001FD0  0E00               	movlw	0
   959  001FD2  6E89               	movwf	3977,c	;volatile
   960                           
   961                           ;CanToSerial.c: 146: TRISA = 0b01111101;
   962  001FD4  0E7D               	movlw	125
   963  001FD6  6E92               	movwf	3986,c	;volatile
   964                           
   965                           ;CanToSerial.c: 148: LATB = 0x00;
   966  001FD8  0E00               	movlw	0
   967  001FDA  6E8A               	movwf	3978,c	;volatile
   968                           
   969                           ;CanToSerial.c: 149: TRISB = 0b11111011;
   970  001FDC  0EFB               	movlw	251
   971  001FDE  6E93               	movwf	3987,c	;volatile
   972                           
   973                           ;CanToSerial.c: 151: LATC = 0x00;
   974  001FE0  0E00               	movlw	0
   975  001FE2  6E8B               	movwf	3979,c	;volatile
   976                           
   977                           ;CanToSerial.c: 152: TRISC = 0b10111111;
   978  001FE4  0EBF               	movlw	191
   979  001FE6  6E94               	movwf	3988,c	;volatile
   980  001FE8  0012               	return		;funcret
   981  001FEA                     __end_of_configurazione_iniziale:
   982                           	opt stack 0
   983                           tblptru	equ	0xFF8
   984                           tblptrh	equ	0xFF7
   985                           tblptrl	equ	0xFF6
   986                           tablat	equ	0xFF5
   987                           intcon	equ	0xFF2
   988                           postinc0	equ	0xFEE
   989                           wreg	equ	0xFE8
   990                           indf2	equ	0xFDF
   991                           fsr2h	equ	0xFDA
   992                           fsr2l	equ	0xFD9
   993                           status	equ	0xFD8
   994                           
   995 ;; *************** function _OpenUSART *****************
   996 ;; Defined at:
   997 ;;		line 73 in file "sources\pic18\plib\USART\uopen.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;  config          1    wreg     unsigned char 
  1000 ;;  spbrg           2   29[COMRAM] unsigned int 
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;  config          1    0[BANK0 ] unsigned char 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      void 
  1005 ;; Registers used:
  1006 ;;		wreg, status,2
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1012 ;;      Params:         2       0       0       0
  1013 ;;      Locals:         0       1       0       0
  1014 ;;      Temps:          0       0       0       0
  1015 ;;      Totals:         2       1       0       0
  1016 ;;Total ram usage:        3 bytes
  1017 ;; Hardware stack levels used:    1
  1018 ;; Hardware stack levels required when called:    3
  1019 ;; This function calls:
  1020 ;;		Nothing
  1021 ;; This function is called by:
  1022 ;;		_configurazione_iniziale
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           	psect	text4
  1027  001F0A                     __ptext4:
  1028                           	opt stack 0
  1029  001F0A                     _OpenUSART:
  1030                           	opt stack 26
  1031                           
  1032                           ;incstack = 0
  1033                           ;OpenUSART@config stored from wreg
  1034  001F0A  0100               	movlb	0	; () banked
  1035  001F0C  6F92               	movwf	OpenUSART@config& (0+255),b
  1036  001F0E  0E00               	movlw	0
  1037  001F10  6EAC               	movwf	4012,c	;volatile
  1038  001F12  0E00               	movlw	0
  1039  001F14  6EAB               	movwf	4011,c	;volatile
  1040  001F16  0100               	movlb	0	; () banked
  1041  001F18  B192               	btfsc	OpenUSART@config& (0+255),0,b
  1042                           
  1043                           ; BSR set to: 0
  1044  001F1A  88AC               	bsf	4012,4,c	;volatile
  1045                           
  1046                           ; BSR set to: 0
  1047                           
  1048                           ; BSR set to: 0
  1049  001F1C  0100               	movlb	0	; () banked
  1050  001F1E  A392               	btfss	OpenUSART@config& (0+255),1,b
  1051  001F20  D002               	goto	l4149
  1052                           
  1053                           ; BSR set to: 0
  1054  001F22  8CAC               	bsf	4012,6,c	;volatile
  1055  001F24  8CAB               	bsf	4011,6,c	;volatile
  1056  001F26                     l4149:
  1057                           
  1058                           ; BSR set to: 0
  1059  001F26  0100               	movlb	0	; () banked
  1060  001F28  B592               	btfsc	OpenUSART@config& (0+255),2,b
  1061                           
  1062                           ; BSR set to: 0
  1063  001F2A  8EAC               	bsf	4012,7,c	;volatile
  1064                           
  1065                           ; BSR set to: 0
  1066                           
  1067                           ; BSR set to: 0
  1068  001F2C  0100               	movlb	0	; () banked
  1069  001F2E  A792               	btfss	OpenUSART@config& (0+255),3,b
  1070  001F30  D002               	goto	l650
  1071                           
  1072                           ; BSR set to: 0
  1073  001F32  88AB               	bsf	4011,4,c	;volatile
  1074  001F34  D001               	goto	l4157
  1075  001F36                     l650:
  1076                           
  1077                           ; BSR set to: 0
  1078  001F36  8AAB               	bsf	4011,5,c	;volatile
  1079  001F38                     l4157:
  1080                           
  1081                           ; BSR set to: 0
  1082  001F38  0100               	movlb	0	; () banked
  1083  001F3A  B992               	btfsc	OpenUSART@config& (0+255),4,b
  1084                           
  1085                           ; BSR set to: 0
  1086  001F3C  84AC               	bsf	4012,2,c	;volatile
  1087                           
  1088                           ; BSR set to: 0
  1089  001F3E  989E               	bcf	3998,4,c	;volatile
  1090                           
  1091                           ; BSR set to: 0
  1092  001F40  0100               	movlb	0	; () banked
  1093  001F42  BB92               	btfsc	OpenUSART@config& (0+255),5,b
  1094                           
  1095                           ; BSR set to: 0
  1096  001F44  86AB               	bsf	4011,3,c	;volatile
  1097                           
  1098                           ; BSR set to: 0
  1099                           
  1100                           ; BSR set to: 0
  1101  001F46  0100               	movlb	0	; () banked
  1102  001F48  AD92               	btfss	OpenUSART@config& (0+255),6,b
  1103  001F4A  D002               	goto	l654
  1104                           
  1105                           ; BSR set to: 0
  1106  001F4C  8A9D               	bsf	3997,5,c	;volatile
  1107  001F4E  D001               	goto	l655
  1108  001F50                     l654:
  1109                           
  1110                           ; BSR set to: 0
  1111  001F50  9A9D               	bcf	3997,5,c	;volatile
  1112  001F52                     l655:
  1113                           
  1114                           ; BSR set to: 0
  1115  001F52  9A9E               	bcf	3998,5,c	;volatile
  1116                           
  1117                           ; BSR set to: 0
  1118  001F54  0100               	movlb	0	; () banked
  1119  001F56  AF92               	btfss	OpenUSART@config& (0+255),7,b
  1120  001F58  D002               	goto	l656
  1121                           
  1122                           ; BSR set to: 0
  1123  001F5A  889D               	bsf	3997,4,c	;volatile
  1124  001F5C  D001               	goto	l657
  1125  001F5E                     l656:
  1126                           
  1127                           ; BSR set to: 0
  1128  001F5E  989D               	bcf	3997,4,c	;volatile
  1129  001F60                     l657:
  1130                           
  1131                           ; BSR set to: 0
  1132  001F60  C03E  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  1133                           
  1134                           ; BSR set to: 0
  1135  001F64  503F               	movf	OpenUSART@spbrg+1,w,c
  1136  001F66  6EB0               	movwf	4016,c	;volatile
  1137                           
  1138                           ; BSR set to: 0
  1139  001F68  8AAC               	bsf	4012,5,c	;volatile
  1140                           
  1141                           ; BSR set to: 0
  1142  001F6A  8EAB               	bsf	4011,7,c	;volatile
  1143                           
  1144                           ; BSR set to: 0
  1145  001F6C  9C94               	bcf	3988,6,c	;volatile
  1146                           
  1147                           ; BSR set to: 0
  1148  001F6E  8E94               	bsf	3988,7,c	;volatile
  1149                           
  1150                           ; BSR set to: 0
  1151  001F70  A8AC               	btfss	4012,4,c	;volatile
  1152  001F72  0012               	return	
  1153                           
  1154                           ; BSR set to: 0
  1155  001F74  BEAC               	btfsc	4012,7,c	;volatile
  1156  001F76  0012               	return	
  1157                           
  1158                           ; BSR set to: 0
  1159  001F78  8C94               	bsf	3988,6,c	;volatile
  1160  001F7A  0012               	return	
  1161  001F7C                     __end_of_OpenUSART:
  1162                           	opt stack 0
  1163                           tblptru	equ	0xFF8
  1164                           tblptrh	equ	0xFF7
  1165                           tblptrl	equ	0xFF6
  1166                           tablat	equ	0xFF5
  1167                           intcon	equ	0xFF2
  1168                           postinc0	equ	0xFEE
  1169                           wreg	equ	0xFE8
  1170                           indf2	equ	0xFDF
  1171                           fsr2h	equ	0xFDA
  1172                           fsr2l	equ	0xFD9
  1173                           status	equ	0xFD8
  1174                           
  1175 ;; *************** function _CANInitialize *****************
  1176 ;; Defined at:
  1177 ;;		line 218 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;  propSeg         1    wreg     unsigned char 
  1180 ;;  phaseSeg1       1   14[BANK0 ] unsigned char 
  1181 ;;  phaseSeg2       1   15[BANK0 ] unsigned char 
  1182 ;;  SJW             1   16[BANK0 ] unsigned char 
  1183 ;;  BRP             1   17[BANK0 ] unsigned char 
  1184 ;;  flags           1   18[BANK0 ] enum E16706
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;  propSeg         1   23[BANK0 ] unsigned char 
  1187 ;;  FilterConfig    1   25[BANK0 ] unsigned char 
  1188 ;;  FilterConfig    1   24[BANK0 ] unsigned char 
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		wreg, status,2, status,0, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1198 ;;      Params:         0       5       0       0
  1199 ;;      Locals:         0       3       0       0
  1200 ;;      Temps:          0       4       0       0
  1201 ;;      Totals:         0      12       0       0
  1202 ;;Total ram usage:       12 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; Hardware stack levels required when called:    4
  1205 ;; This function calls:
  1206 ;;		_CANOperationMode
  1207 ;;		_CANSetFilter
  1208 ;;		_CANSetMask
  1209 ;; This function is called by:
  1210 ;;		_configurazione_iniziale
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           	psect	text5
  1215  001C70                     __ptext5:
  1216                           	opt stack 0
  1217  001C70                     _CANInitialize:
  1218                           	opt stack 25
  1219                           
  1220                           ; BSR set to: 0
  1221                           ;incstack = 0
  1222                           ;CANInitialize@propSeg stored from wreg
  1223  001C70  0100               	movlb	0	; () banked
  1224  001C72  6FA9               	movwf	CANInitialize@propSeg& (0+255),b
  1225                           
  1226                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  1227                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  1228                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  1229  001C74  0E80               	movlw	128
  1230  001C76  EC7D  F010         	call	_CANOperationMode
  1231                           
  1232                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  1233  001C7A  0E00               	movlw	0
  1234  001C7C  6E70               	movwf	3952,c	;volatile
  1235                           
  1236                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  1237  001C7E  0E00               	movlw	0
  1238  001C80  6E71               	movwf	3953,c	;volatile
  1239                           
  1240                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  1241  001C82  0E00               	movlw	0
  1242  001C84  6E72               	movwf	3954,c	;volatile
  1243                           
  1244                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  1245  001C86  0100               	movlb	0	; () banked
  1246  001C88  41A2               	rrncf	CANInitialize@SJW& (0+255),w,b
  1247  001C8A  42E8               	rrncf	wreg,f,c
  1248  001C8C  0BC0               	andlw	192
  1249  001C8E  0100               	movlb	0	; () banked
  1250  001C90  6FA2               	movwf	CANInitialize@SJW& (0+255),b
  1251                           
  1252                           ; BSR set to: 0
  1253                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  1254  001C92  0100               	movlb	0	; () banked
  1255  001C94  51A2               	movf	CANInitialize@SJW& (0+255),w,b
  1256  001C96  1270               	iorwf	3952,f,c	;volatile
  1257                           
  1258                           ; BSR set to: 0
  1259                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  1260  001C98  0100               	movlb	0	; () banked
  1261  001C9A  51A3               	movf	CANInitialize@BRP& (0+255),w,b
  1262  001C9C  1270               	iorwf	3952,f,c	;volatile
  1263                           
  1264                           ; BSR set to: 0
  1265                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  1266  001C9E  0100               	movlb	0	; () banked
  1267  001CA0  51A9               	movf	CANInitialize@propSeg& (0+255),w,b
  1268  001CA2  1271               	iorwf	3953,f,c	;volatile
  1269                           
  1270                           ; BSR set to: 0
  1271                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  1272  001CA4  0100               	movlb	0	; () banked
  1273  001CA6  39A0               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  1274  001CA8  42E8               	rrncf	wreg,f,c
  1275  001CAA  0BF8               	andlw	248
  1276  001CAC  0100               	movlb	0	; () banked
  1277  001CAE  6FA0               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1278                           
  1279                           ; BSR set to: 0
  1280                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  1281  001CB0  0100               	movlb	0	; () banked
  1282  001CB2  51A0               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  1283  001CB4  1271               	iorwf	3953,f,c	;volatile
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  1287  001CB6  0100               	movlb	0	; () banked
  1288  001CB8  A5A4               	btfss	CANInitialize@flags& (0+255),2,b
  1289                           
  1290                           ; BSR set to: 0
  1291                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  1292  001CBA  8C71               	bsf	3953,6,c	;volatile
  1293                           
  1294                           ; BSR set to: 0
  1295                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  1296  001CBC  0100               	movlb	0	; () banked
  1297  001CBE  B1A4               	btfsc	CANInitialize@flags& (0+255),0,b
  1298                           
  1299                           ; BSR set to: 0
  1300                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  1301  001CC0  8E71               	bsf	3953,7,c	;volatile
  1302                           
  1303                           ; BSR set to: 0
  1304                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  1305                           
  1306                           ; BSR set to: 0
  1307  001CC2  0100               	movlb	0	; () banked
  1308  001CC4  51A1               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  1309  001CC6  1272               	iorwf	3954,f,c	;volatile
  1310                           
  1311                           ; BSR set to: 0
  1312                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  1313  001CC8  0100               	movlb	0	; () banked
  1314  001CCA  B3A4               	btfsc	CANInitialize@flags& (0+255),1,b
  1315                           
  1316                           ; BSR set to: 0
  1317                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  1318  001CCC  8C72               	bsf	3954,6,c	;volatile
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  1322                           
  1323                           ; BSR set to: 0
  1324  001CCE  0100               	movlb	0	; () banked
  1325  001CD0  51A4               	movf	CANInitialize@flags& (0+255),w,b
  1326  001CD2  0B60               	andlw	96
  1327  001CD4  6E60               	movwf	3936,c	;volatile
  1328                           
  1329                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  1330  001CD6  0100               	movlb	0	; () banked
  1331  001CD8  51A4               	movf	CANInitialize@flags& (0+255),w,b
  1332  001CDA  0B10               	andlw	16
  1333  001CDC  0AFF               	xorlw	255
  1334  001CDE  B4D8               	btfsc	status,2,c
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  1338  001CE0  8460               	bsf	3936,2,c	;volatile
  1339                           
  1340                           ; BSR set to: 0
  1341                           ;inc\CANlib.h: 254: RXB1CON = RXB0CON;
  1342  001CE2  CF60 FF50          	movff	3936,3920	;volatile
  1343                           
  1344                           ; BSR set to: 0
  1345                           ;inc\CANlib.h: 258: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  1346  001CE6  0E00               	movlw	0
  1347  001CE8  0100               	movlb	0	; () banked
  1348  001CEA  6F92               	movwf	CANSetMask@mask& (0+255),b
  1349  001CEC  0E00               	movlw	0
  1350  001CEE  6F93               	movwf	(CANSetMask@mask+1)& (0+255),b
  1351  001CF0  0E00               	movlw	0
  1352  001CF2  6F94               	movwf	(CANSetMask@mask+2)& (0+255),b
  1353  001CF4  0E00               	movlw	0
  1354  001CF6  6F95               	movwf	(CANSetMask@mask+3)& (0+255),b
  1355  001CF8  0EF7               	movlw	247
  1356  001CFA  0100               	movlb	0	; () banked
  1357  001CFC  6F96               	movwf	CANSetMask@type& (0+255),b
  1358  001CFE  0E01               	movlw	1
  1359  001D00  EC69  F00C         	call	_CANSetMask
  1360                           
  1361                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  1362  001D04  0E00               	movlw	0
  1363  001D06  0100               	movlb	0	; () banked
  1364  001D08  6F92               	movwf	CANSetMask@mask& (0+255),b
  1365  001D0A  0E00               	movlw	0
  1366  001D0C  6F93               	movwf	(CANSetMask@mask+1)& (0+255),b
  1367  001D0E  0E00               	movlw	0
  1368  001D10  6F94               	movwf	(CANSetMask@mask+2)& (0+255),b
  1369  001D12  0E00               	movlw	0
  1370  001D14  6F95               	movwf	(CANSetMask@mask+3)& (0+255),b
  1371  001D16  0EF7               	movlw	247
  1372  001D18  0100               	movlb	0	; () banked
  1373  001D1A  6F96               	movwf	CANSetMask@type& (0+255),b
  1374  001D1C  0E02               	movlw	2
  1375  001D1E  EC69  F00C         	call	_CANSetMask
  1376                           
  1377                           ;inc\CANlib.h: 262: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  1378  001D22  D00F               	goto	l3901
  1379  001D24                     l3895:
  1380                           
  1381                           ;inc\CANlib.h: 265: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  1382  001D24  0EF7               	movlw	247
  1383  001D26  0100               	movlb	0	; () banked
  1384  001D28  6FAA               	movwf	CANInitialize@FilterConfig1& (0+255),b
  1385  001D2A  D007               	goto	l3897
  1386  001D2C                     l332:
  1387                           
  1388                           ; BSR set to: 0
  1389                           ;inc\CANlib.h: 270: FilterConfig1 = CAN_CONFIG_STD_MSG;
  1390  001D2C  0100               	movlb	0	; () banked
  1391  001D2E  69AA               	setf	CANInitialize@FilterConfig1& (0+255),b
  1392                           
  1393                           ;inc\CANlib.h: 271: FilterConfig2 = CAN_CONFIG_STD_MSG;
  1394  001D30  0100               	movlb	0	; () banked
  1395  001D32  69AB               	setf	CANInitialize@FilterConfig2& (0+255),b
  1396                           
  1397                           ;inc\CANlib.h: 272: break;
  1398  001D34  D028               	goto	l3903
  1399  001D36                     l333:
  1400                           
  1401                           ; BSR set to: 0
  1402                           ;inc\CANlib.h: 274: FilterConfig1 = CAN_CONFIG_STD_MSG;
  1403  001D36  0100               	movlb	0	; () banked
  1404  001D38  69AA               	setf	CANInitialize@FilterConfig1& (0+255),b
  1405  001D3A                     l3897:
  1406                           
  1407                           ; BSR set to: 0
  1408                           ;inc\CANlib.h: 275: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  1409  001D3A  0EF7               	movlw	247
  1410  001D3C  0100               	movlb	0	; () banked
  1411  001D3E  6FAB               	movwf	CANInitialize@FilterConfig2& (0+255),b
  1412                           
  1413                           ; BSR set to: 0
  1414                           ;inc\CANlib.h: 277: }
  1415                           
  1416                           ;inc\CANlib.h: 276: break;
  1417  001D40  D022               	goto	l3903
  1418  001D42                     l3901:
  1419  001D42  0E9F               	movlw	159
  1420  001D44  0100               	movlb	0	; () banked
  1421  001D46  6FA5               	movwf	??_CANInitialize& (0+255),b
  1422  001D48  0EFF               	movlw	255
  1423  001D4A  0100               	movlb	0	; () banked
  1424  001D4C  6FA6               	movwf	(??_CANInitialize+1)& (0+255),b
  1425  001D4E  0100               	movlb	0	; () banked
  1426  001D50  51A4               	movf	CANInitialize@flags& (0+255),w,b
  1427  001D52  0B60               	andlw	96
  1428  001D54  0100               	movlb	0	; () banked
  1429  001D56  6FA7               	movwf	(??_CANInitialize+2)& (0+255),b
  1430  001D58  6BA8               	clrf	(??_CANInitialize+3)& (0+255),b
  1431  001D5A  0100               	movlb	0	; () banked
  1432  001D5C  51A5               	movf	??_CANInitialize& (0+255),w,b
  1433  001D5E  0100               	movlb	0	; () banked
  1434  001D60  13A7               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  1435  001D62  0100               	movlb	0	; () banked
  1436  001D64  51A6               	movf	(??_CANInitialize+1)& (0+255),w,b
  1437  001D66  0100               	movlb	0	; () banked
  1438  001D68  13A8               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  1439                           
  1440                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1441                           ; Switch size 1, requested type "space"
  1442                           ; Number of cases is 1, Range of values is 0 to 0
  1443                           ; switch strategies available:
  1444                           ; Name         Instructions Cycles
  1445                           ; simple_byte            4     3 (average)
  1446                           ;	Chosen strategy is simple_byte
  1447  001D6A  0100               	movlb	0	; () banked
  1448  001D6C  51A8               	movf	(??_CANInitialize+3)& (0+255),w,b
  1449  001D6E  0A00               	xorlw	0	; case 0
  1450  001D70  A4D8               	btfss	status,2,c
  1451  001D72  D7E1               	goto	l333
  1452                           
  1453                           ; BSR set to: 0
  1454                           ; Switch size 1, requested type "space"
  1455                           ; Number of cases is 2, Range of values is 191 to 223
  1456                           ; switch strategies available:
  1457                           ; Name         Instructions Cycles
  1458                           ; simple_byte            7     4 (average)
  1459                           ;	Chosen strategy is simple_byte
  1460  001D74  0100               	movlb	0	; () banked
  1461  001D76  51A7               	movf	(??_CANInitialize+2)& (0+255),w,b
  1462  001D78  0ABF               	xorlw	191	; case 191
  1463  001D7A  B4D8               	btfsc	status,2,c
  1464  001D7C  D7D7               	goto	l332
  1465  001D7E  0A60               	xorlw	96	; case 223
  1466  001D80  B4D8               	btfsc	status,2,c
  1467  001D82  D7D0               	goto	l3895
  1468  001D84  D7D8               	goto	l333
  1469  001D86                     l3903:
  1470                           
  1471                           ; BSR set to: 0
  1472                           ;inc\CANlib.h: 279: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  1473  001D86  0E00               	movlw	0
  1474  001D88  0100               	movlb	0	; () banked
  1475  001D8A  6F92               	movwf	CANSetFilter@filter& (0+255),b
  1476  001D8C  0E00               	movlw	0
  1477  001D8E  6F93               	movwf	(CANSetFilter@filter+1)& (0+255),b
  1478  001D90  0E00               	movlw	0
  1479  001D92  6F94               	movwf	(CANSetFilter@filter+2)& (0+255),b
  1480  001D94  0E00               	movlw	0
  1481  001D96  6F95               	movwf	(CANSetFilter@filter+3)& (0+255),b
  1482  001D98  C0AA  F096         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  1483  001D9C  0E00               	movlw	0
  1484  001D9E  EC9A  F000         	call	_CANSetFilter
  1485                           
  1486                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  1487  001DA2  0E00               	movlw	0
  1488  001DA4  0100               	movlb	0	; () banked
  1489  001DA6  6F92               	movwf	CANSetFilter@filter& (0+255),b
  1490  001DA8  0E00               	movlw	0
  1491  001DAA  6F93               	movwf	(CANSetFilter@filter+1)& (0+255),b
  1492  001DAC  0E00               	movlw	0
  1493  001DAE  6F94               	movwf	(CANSetFilter@filter+2)& (0+255),b
  1494  001DB0  0E00               	movlw	0
  1495  001DB2  6F95               	movwf	(CANSetFilter@filter+3)& (0+255),b
  1496  001DB4  C0AA  F096         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  1497  001DB8  0E01               	movlw	1
  1498  001DBA  EC9A  F000         	call	_CANSetFilter
  1499                           
  1500                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  1501  001DBE  0E00               	movlw	0
  1502  001DC0  0100               	movlb	0	; () banked
  1503  001DC2  6F92               	movwf	CANSetFilter@filter& (0+255),b
  1504  001DC4  0E00               	movlw	0
  1505  001DC6  6F93               	movwf	(CANSetFilter@filter+1)& (0+255),b
  1506  001DC8  0E00               	movlw	0
  1507  001DCA  6F94               	movwf	(CANSetFilter@filter+2)& (0+255),b
  1508  001DCC  0E00               	movlw	0
  1509  001DCE  6F95               	movwf	(CANSetFilter@filter+3)& (0+255),b
  1510  001DD0  C0AB  F096         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  1511  001DD4  0E02               	movlw	2
  1512  001DD6  EC9A  F000         	call	_CANSetFilter
  1513                           
  1514                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  1515  001DDA  0E00               	movlw	0
  1516  001DDC  0100               	movlb	0	; () banked
  1517  001DDE  6F92               	movwf	CANSetFilter@filter& (0+255),b
  1518  001DE0  0E00               	movlw	0
  1519  001DE2  6F93               	movwf	(CANSetFilter@filter+1)& (0+255),b
  1520  001DE4  0E00               	movlw	0
  1521  001DE6  6F94               	movwf	(CANSetFilter@filter+2)& (0+255),b
  1522  001DE8  0E00               	movlw	0
  1523  001DEA  6F95               	movwf	(CANSetFilter@filter+3)& (0+255),b
  1524  001DEC  C0AB  F096         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  1525  001DF0  0E03               	movlw	3
  1526  001DF2  EC9A  F000         	call	_CANSetFilter
  1527                           
  1528                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  1529  001DF6  0E00               	movlw	0
  1530  001DF8  0100               	movlb	0	; () banked
  1531  001DFA  6F92               	movwf	CANSetFilter@filter& (0+255),b
  1532  001DFC  0E00               	movlw	0
  1533  001DFE  6F93               	movwf	(CANSetFilter@filter+1)& (0+255),b
  1534  001E00  0E00               	movlw	0
  1535  001E02  6F94               	movwf	(CANSetFilter@filter+2)& (0+255),b
  1536  001E04  0E00               	movlw	0
  1537  001E06  6F95               	movwf	(CANSetFilter@filter+3)& (0+255),b
  1538  001E08  C0AB  F096         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  1539  001E0C  0E04               	movlw	4
  1540  001E0E  EC9A  F000         	call	_CANSetFilter
  1541                           
  1542                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  1543  001E12  0E00               	movlw	0
  1544  001E14  0100               	movlb	0	; () banked
  1545  001E16  6F92               	movwf	CANSetFilter@filter& (0+255),b
  1546  001E18  0E00               	movlw	0
  1547  001E1A  6F93               	movwf	(CANSetFilter@filter+1)& (0+255),b
  1548  001E1C  0E00               	movlw	0
  1549  001E1E  6F94               	movwf	(CANSetFilter@filter+2)& (0+255),b
  1550  001E20  0E00               	movlw	0
  1551  001E22  6F95               	movwf	(CANSetFilter@filter+3)& (0+255),b
  1552  001E24  C0AB  F096         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  1553  001E28  0E05               	movlw	5
  1554  001E2A  EC9A  F000         	call	_CANSetFilter
  1555                           
  1556                           ;inc\CANlib.h: 286: CANOperationMode(CAN_OP_MODE_NORMAL);
  1557  001E2E  0E00               	movlw	0
  1558  001E30  EC7D  F010         	call	_CANOperationMode
  1559  001E34  0012               	return		;funcret
  1560  001E36                     __end_of_CANInitialize:
  1561                           	opt stack 0
  1562                           tblptru	equ	0xFF8
  1563                           tblptrh	equ	0xFF7
  1564                           tblptrl	equ	0xFF6
  1565                           tablat	equ	0xFF5
  1566                           intcon	equ	0xFF2
  1567                           postinc0	equ	0xFEE
  1568                           wreg	equ	0xFE8
  1569                           indf2	equ	0xFDF
  1570                           fsr2h	equ	0xFDA
  1571                           fsr2l	equ	0xFD9
  1572                           status	equ	0xFD8
  1573                           
  1574 ;; *************** function _CANSetMask *****************
  1575 ;; Defined at:
  1576 ;;		line 639 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;  numBuffer       1    wreg     enum E16740
  1579 ;;  mask            4    0[BANK0 ] unsigned long 
  1580 ;;  type            1    4[BANK0 ] enum E16706
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;  numBuffer       1    9[BANK0 ] enum E16740
  1583 ;;  tamp            4   10[BANK0 ] unsigned long 
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      void 
  1586 ;; Registers used:
  1587 ;;		wreg, status,2, status,0
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1593 ;;      Params:         0       5       0       0
  1594 ;;      Locals:         0       5       0       0
  1595 ;;      Temps:          0       4       0       0
  1596 ;;      Totals:         0      14       0       0
  1597 ;;Total ram usage:       14 bytes
  1598 ;; Hardware stack levels used:    1
  1599 ;; Hardware stack levels required when called:    3
  1600 ;; This function calls:
  1601 ;;		Nothing
  1602 ;; This function is called by:
  1603 ;;		_CANInitialize
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text6
  1608  0018D2                     __ptext6:
  1609                           	opt stack 0
  1610  0018D2                     _CANSetMask:
  1611                           	opt stack 25
  1612                           
  1613                           ;incstack = 0
  1614                           ;CANSetMask@numBuffer stored from wreg
  1615  0018D2  0100               	movlb	0	; () banked
  1616  0018D4  6F9B               	movwf	CANSetMask@numBuffer& (0+255),b
  1617                           
  1618                           ;inc\CANlib.h: 642: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  1619  0018D6  0100               	movlb	0	; () banked
  1620  0018D8  059B               	decf	CANSetMask@numBuffer& (0+255),w,b
  1621  0018DA  A4D8               	btfss	status,2,c
  1622  0018DC  D056               	goto	l3465
  1623                           
  1624                           ; BSR set to: 0
  1625  0018DE  0100               	movlb	0	; () banked
  1626  0018E0  2996               	incf	CANSetMask@type& (0+255),w,b
  1627  0018E2  A4D8               	btfss	status,2,c
  1628  0018E4  D052               	goto	l3465
  1629                           
  1630                           ; BSR set to: 0
  1631                           ;inc\CANlib.h: 643: {
  1632                           ;inc\CANlib.h: 644: tamp = (mask >> 3);
  1633  0018E6  C092  F097         	movff	CANSetMask@mask,??_CANSetMask
  1634  0018EA  C093  F098         	movff	CANSetMask@mask+1,??_CANSetMask+1
  1635  0018EE  C094  F099         	movff	CANSetMask@mask+2,??_CANSetMask+2
  1636  0018F2  C095  F09A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  1637  0018F6  0E04               	movlw	4
  1638  0018F8  D006               	goto	u4110
  1639  0018FA                     u4115:
  1640  0018FA  0100               	movlb	0	; () banked
  1641  0018FC  90D8               	bcf	status,0,c
  1642  0018FE  339A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  1643  001900  3399               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  1644  001902  3398               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  1645  001904  3397               	rrcf	??_CANSetMask& (0+255),f,b
  1646  001906                     u4110:
  1647  001906  2EE8               	decfsz	wreg,f,c
  1648  001908  D7F8               	goto	u4115
  1649  00190A  C097  F09C         	movff	??_CANSetMask,CANSetMask@tamp
  1650  00190E  C098  F09D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1651  001912  C099  F09E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1652  001916  C09A  F09F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;inc\CANlib.h: 645: tamp = tamp & 0x000000FF;
  1656  00191A  0100               	movlb	0	; () banked
  1657  00191C  519C               	movf	CANSetMask@tamp& (0+255),w,b
  1658  00191E  0100               	movlb	0	; () banked
  1659  001920  6F9C               	movwf	CANSetMask@tamp& (0+255),b
  1660  001922  6B9D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  1661  001924  6B9E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  1662  001926  6B9F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  1663                           
  1664                           ; BSR set to: 0
  1665                           ;inc\CANlib.h: 646: RXM0SIDH = (unsigned char) tamp;
  1666  001928  C09C  FF18         	movff	CANSetMask@tamp,3864	;volatile
  1667                           
  1668                           ; BSR set to: 0
  1669                           ;inc\CANlib.h: 648: tamp = mask & 0x00000007;
  1670  00192C  0E07               	movlw	7
  1671  00192E  0100               	movlb	0	; () banked
  1672  001930  1592               	andwf	CANSetMask@mask& (0+255),w,b
  1673  001932  0100               	movlb	0	; () banked
  1674  001934  6F9C               	movwf	CANSetMask@tamp& (0+255),b
  1675  001936  0E00               	movlw	0
  1676  001938  0100               	movlb	0	; () banked
  1677  00193A  1593               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  1678  00193C  0100               	movlb	0	; () banked
  1679  00193E  6F9D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  1680  001940  0E00               	movlw	0
  1681  001942  0100               	movlb	0	; () banked
  1682  001944  1594               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  1683  001946  0100               	movlb	0	; () banked
  1684  001948  6F9E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  1685  00194A  0E00               	movlw	0
  1686  00194C  0100               	movlb	0	; () banked
  1687  00194E  1595               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  1688  001950  0100               	movlb	0	; () banked
  1689  001952  6F9F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  1690                           
  1691                           ; BSR set to: 0
  1692                           ;inc\CANlib.h: 649: tamp = tamp << 5;
  1693  001954  C09C  F097         	movff	CANSetMask@tamp,??_CANSetMask
  1694  001958  C09D  F098         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  1695  00195C  C09E  F099         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  1696  001960  C09F  F09A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  1697  001964  0E05               	movlw	5
  1698  001966                     u4125:
  1699  001966  90D8               	bcf	status,0,c
  1700  001968  0100               	movlb	0	; () banked
  1701  00196A  3797               	rlcf	??_CANSetMask& (0+255),f,b
  1702  00196C  3798               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  1703  00196E  3799               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  1704  001970  379A               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  1705  001972  2EE8               	decfsz	wreg,f,c
  1706  001974  D7F8               	goto	u4125
  1707  001976  C097  F09C         	movff	??_CANSetMask,CANSetMask@tamp
  1708  00197A  C098  F09D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1709  00197E  C099  F09E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1710  001982  C09A  F09F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;inc\CANlib.h: 650: RXM0SIDL = (unsigned char) tamp;
  1714  001986  C09C  FF19         	movff	CANSetMask@tamp,3865	;volatile
  1715  00198A                     l3465:
  1716                           
  1717                           ; BSR set to: 0
  1718                           ;inc\CANlib.h: 651: }
  1719                           ;inc\CANlib.h: 653: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  1720  00198A  0E02               	movlw	2
  1721  00198C  0100               	movlb	0	; () banked
  1722  00198E  199B               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  1723  001990  A4D8               	btfss	status,2,c
  1724  001992  D056               	goto	l3481
  1725                           
  1726                           ; BSR set to: 0
  1727  001994  0100               	movlb	0	; () banked
  1728  001996  2996               	incf	CANSetMask@type& (0+255),w,b
  1729  001998  A4D8               	btfss	status,2,c
  1730  00199A  D052               	goto	l3481
  1731                           
  1732                           ; BSR set to: 0
  1733                           ;inc\CANlib.h: 654: {
  1734                           ;inc\CANlib.h: 655: tamp = (mask >> 3);
  1735  00199C  C092  F097         	movff	CANSetMask@mask,??_CANSetMask
  1736  0019A0  C093  F098         	movff	CANSetMask@mask+1,??_CANSetMask+1
  1737  0019A4  C094  F099         	movff	CANSetMask@mask+2,??_CANSetMask+2
  1738  0019A8  C095  F09A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  1739  0019AC  0E04               	movlw	4
  1740  0019AE  D006               	goto	u4150
  1741  0019B0                     u4155:
  1742  0019B0  0100               	movlb	0	; () banked
  1743  0019B2  90D8               	bcf	status,0,c
  1744  0019B4  339A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  1745  0019B6  3399               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  1746  0019B8  3398               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  1747  0019BA  3397               	rrcf	??_CANSetMask& (0+255),f,b
  1748  0019BC                     u4150:
  1749  0019BC  2EE8               	decfsz	wreg,f,c
  1750  0019BE  D7F8               	goto	u4155
  1751  0019C0  C097  F09C         	movff	??_CANSetMask,CANSetMask@tamp
  1752  0019C4  C098  F09D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1753  0019C8  C099  F09E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1754  0019CC  C09A  F09F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;inc\CANlib.h: 656: tamp = tamp & 0x000000FF;
  1758  0019D0  0100               	movlb	0	; () banked
  1759  0019D2  519C               	movf	CANSetMask@tamp& (0+255),w,b
  1760  0019D4  0100               	movlb	0	; () banked
  1761  0019D6  6F9C               	movwf	CANSetMask@tamp& (0+255),b
  1762  0019D8  6B9D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  1763  0019DA  6B9E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  1764  0019DC  6B9F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;inc\CANlib.h: 657: RXM1SIDH = (unsigned char) tamp;
  1768  0019DE  C09C  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;inc\CANlib.h: 659: tamp = mask & 0x00000007;
  1772  0019E2  0E07               	movlw	7
  1773  0019E4  0100               	movlb	0	; () banked
  1774  0019E6  1592               	andwf	CANSetMask@mask& (0+255),w,b
  1775  0019E8  0100               	movlb	0	; () banked
  1776  0019EA  6F9C               	movwf	CANSetMask@tamp& (0+255),b
  1777  0019EC  0E00               	movlw	0
  1778  0019EE  0100               	movlb	0	; () banked
  1779  0019F0  1593               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  1780  0019F2  0100               	movlb	0	; () banked
  1781  0019F4  6F9D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  1782  0019F6  0E00               	movlw	0
  1783  0019F8  0100               	movlb	0	; () banked
  1784  0019FA  1594               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  1785  0019FC  0100               	movlb	0	; () banked
  1786  0019FE  6F9E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  1787  001A00  0E00               	movlw	0
  1788  001A02  0100               	movlb	0	; () banked
  1789  001A04  1595               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  1790  001A06  0100               	movlb	0	; () banked
  1791  001A08  6F9F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;inc\CANlib.h: 660: tamp = tamp << 5;
  1795  001A0A  C09C  F097         	movff	CANSetMask@tamp,??_CANSetMask
  1796  001A0E  C09D  F098         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  1797  001A12  C09E  F099         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  1798  001A16  C09F  F09A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  1799  001A1A  0E05               	movlw	5
  1800  001A1C                     u4165:
  1801  001A1C  90D8               	bcf	status,0,c
  1802  001A1E  0100               	movlb	0	; () banked
  1803  001A20  3797               	rlcf	??_CANSetMask& (0+255),f,b
  1804  001A22  3798               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  1805  001A24  3799               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  1806  001A26  379A               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  1807  001A28  2EE8               	decfsz	wreg,f,c
  1808  001A2A  D7F8               	goto	u4165
  1809  001A2C  C097  F09C         	movff	??_CANSetMask,CANSetMask@tamp
  1810  001A30  C098  F09D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1811  001A34  C099  F09E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1812  001A38  C09A  F09F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;inc\CANlib.h: 661: RXM1SIDL = (unsigned char) tamp;
  1816  001A3C  C09C  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  1817  001A40                     l3481:
  1818                           
  1819                           ; BSR set to: 0
  1820                           ;inc\CANlib.h: 662: }
  1821                           ;inc\CANlib.h: 664: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  1822  001A40  0100               	movlb	0	; () banked
  1823  001A42  059B               	decf	CANSetMask@numBuffer& (0+255),w,b
  1824  001A44  A4D8               	btfss	status,2,c
  1825  001A46  D087               	goto	l3513
  1826                           
  1827                           ; BSR set to: 0
  1828  001A48  0EF7               	movlw	247
  1829  001A4A  0100               	movlb	0	; () banked
  1830  001A4C  1996               	xorwf	CANSetMask@type& (0+255),w,b
  1831  001A4E  A4D8               	btfss	status,2,c
  1832  001A50  D082               	goto	l3513
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;inc\CANlib.h: 665: {
  1836                           ;inc\CANlib.h: 666: tamp = mask & 0x000000FF;
  1837  001A52  0100               	movlb	0	; () banked
  1838  001A54  5192               	movf	CANSetMask@mask& (0+255),w,b
  1839  001A56  0100               	movlb	0	; () banked
  1840  001A58  6F9C               	movwf	CANSetMask@tamp& (0+255),b
  1841  001A5A  6B9D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  1842  001A5C  6B9E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  1843  001A5E  6B9F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  1844                           
  1845                           ; BSR set to: 0
  1846                           ;inc\CANlib.h: 667: RXM0EIDL = (unsigned char) tamp;
  1847  001A60  C09C  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;inc\CANlib.h: 669: tamp = mask & 0x0000FF00;
  1851  001A64  0E00               	movlw	0
  1852  001A66  0100               	movlb	0	; () banked
  1853  001A68  1592               	andwf	CANSetMask@mask& (0+255),w,b
  1854  001A6A  0100               	movlb	0	; () banked
  1855  001A6C  6F9C               	movwf	CANSetMask@tamp& (0+255),b
  1856  001A6E  0EFF               	movlw	255
  1857  001A70  0100               	movlb	0	; () banked
  1858  001A72  1593               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  1859  001A74  0100               	movlb	0	; () banked
  1860  001A76  6F9D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  1861  001A78  0E00               	movlw	0
  1862  001A7A  0100               	movlb	0	; () banked
  1863  001A7C  1594               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  1864  001A7E  0100               	movlb	0	; () banked
  1865  001A80  6F9E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  1866  001A82  0E00               	movlw	0
  1867  001A84  0100               	movlb	0	; () banked
  1868  001A86  1595               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  1869  001A88  0100               	movlb	0	; () banked
  1870  001A8A  6F9F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;inc\CANlib.h: 670: tamp = tamp >> 8;
  1874  001A8C  C09C  F097         	movff	CANSetMask@tamp,??_CANSetMask
  1875  001A90  C09D  F098         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  1876  001A94  C09E  F099         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  1877  001A98  C09F  F09A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  1878  001A9C  C098  F097         	movff	??_CANSetMask+1,??_CANSetMask
  1879  001AA0  C099  F098         	movff	??_CANSetMask+2,??_CANSetMask+1
  1880  001AA4  C09A  F099         	movff	??_CANSetMask+3,??_CANSetMask+2
  1881  001AA8  0100               	movlb	0	; () banked
  1882  001AAA  6B9A               	clrf	(??_CANSetMask+3)& (0+255),b
  1883  001AAC  C097  F09C         	movff	??_CANSetMask,CANSetMask@tamp
  1884  001AB0  C098  F09D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1885  001AB4  C099  F09E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1886  001AB8  C09A  F09F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1887                           
  1888                           ; BSR set to: 0
  1889                           ;inc\CANlib.h: 671: RXM0EIDH = (unsigned char) tamp;
  1890  001ABC  C09C  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;inc\CANlib.h: 673: if (mask & 0x00010000)
  1894  001AC0  0100               	movlb	0	; () banked
  1895  001AC2  A194               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  1896  001AC4  D003               	goto	l406
  1897                           
  1898                           ; BSR set to: 0
  1899                           ;inc\CANlib.h: 674: RXM0SIDLbits.EID16 = 0x01;
  1900  001AC6  010F               	movlb	15	; () banked
  1901  001AC8  8119               	bsf	25,0,b	;volatile
  1902  001ACA  D002               	goto	l407
  1903  001ACC                     l406:
  1904                           
  1905                           ; BSR set to: 0
  1906                           ;inc\CANlib.h: 675: else
  1907                           ;inc\CANlib.h: 676: RXM0SIDLbits.EID16 = 0x00;
  1908  001ACC  010F               	movlb	15	; () banked
  1909  001ACE  9119               	bcf	25,0,b	;volatile
  1910  001AD0                     l407:
  1911                           
  1912                           ; BSR set to: 15
  1913                           ;inc\CANlib.h: 678: if (mask & 0x00020000)
  1914  001AD0  0100               	movlb	0	; () banked
  1915  001AD2  A394               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  1916  001AD4  D003               	goto	l408
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;inc\CANlib.h: 679: RXM0SIDLbits.EID17 = 0x01;
  1920  001AD6  010F               	movlb	15	; () banked
  1921  001AD8  8319               	bsf	25,1,b	;volatile
  1922  001ADA  D002               	goto	l409
  1923  001ADC                     l408:
  1924                           
  1925                           ; BSR set to: 0
  1926                           ;inc\CANlib.h: 680: else
  1927                           ;inc\CANlib.h: 681: RXM0SIDLbits.EID17 = 0x00;
  1928  001ADC  010F               	movlb	15	; () banked
  1929  001ADE  9319               	bcf	25,1,b	;volatile
  1930  001AE0                     l409:
  1931                           
  1932                           ; BSR set to: 15
  1933                           ;inc\CANlib.h: 683: if (mask & 0x00040000)
  1934  001AE0  0100               	movlb	0	; () banked
  1935  001AE2  A594               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  1936  001AE4  D003               	goto	l410
  1937                           
  1938                           ; BSR set to: 0
  1939                           ;inc\CANlib.h: 684: RXM0SIDLbits.SID0 = 0x01;
  1940  001AE6  010F               	movlb	15	; () banked
  1941  001AE8  8B19               	bsf	25,5,b	;volatile
  1942  001AEA  D002               	goto	l411
  1943  001AEC                     l410:
  1944                           
  1945                           ; BSR set to: 0
  1946                           ;inc\CANlib.h: 685: else
  1947                           ;inc\CANlib.h: 686: RXM0SIDLbits.SID0 = 0x00;
  1948  001AEC  010F               	movlb	15	; () banked
  1949  001AEE  9B19               	bcf	25,5,b	;volatile
  1950  001AF0                     l411:
  1951                           
  1952                           ; BSR set to: 15
  1953                           ;inc\CANlib.h: 688: if (mask & 0x00080000)
  1954  001AF0  0100               	movlb	0	; () banked
  1955  001AF2  A794               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  1956  001AF4  D003               	goto	l412
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;inc\CANlib.h: 689: RXM0SIDLbits.SID1 = 0x01;
  1960  001AF6  010F               	movlb	15	; () banked
  1961  001AF8  8D19               	bsf	25,6,b	;volatile
  1962  001AFA  D002               	goto	l413
  1963  001AFC                     l412:
  1964                           
  1965                           ; BSR set to: 0
  1966                           ;inc\CANlib.h: 690: else
  1967                           ;inc\CANlib.h: 691: RXM0SIDLbits.SID1 = 0x00;
  1968  001AFC  010F               	movlb	15	; () banked
  1969  001AFE  9D19               	bcf	25,6,b	;volatile
  1970  001B00                     l413:
  1971                           
  1972                           ; BSR set to: 15
  1973                           ;inc\CANlib.h: 693: if (mask & 0x00100000)
  1974  001B00  0100               	movlb	0	; () banked
  1975  001B02  A994               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  1976  001B04  D003               	goto	l414
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;inc\CANlib.h: 694: RXM0SIDLbits.SID2 = 0x01 ;
  1980  001B06  010F               	movlb	15	; () banked
  1981  001B08  8F19               	bsf	25,7,b	;volatile
  1982  001B0A  D002               	goto	l3507
  1983  001B0C                     l414:
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;inc\CANlib.h: 695: else
  1987                           ;inc\CANlib.h: 696: RXM0SIDLbits.SID2 = 0x00 ;
  1988  001B0C  010F               	movlb	15	; () banked
  1989  001B0E  9F19               	bcf	25,7,b	;volatile
  1990  001B10                     l3507:
  1991                           
  1992                           ; BSR set to: 15
  1993                           ;inc\CANlib.h: 698: tamp = (mask >> 21);
  1994  001B10  C092  F097         	movff	CANSetMask@mask,??_CANSetMask
  1995  001B14  C093  F098         	movff	CANSetMask@mask+1,??_CANSetMask+1
  1996  001B18  C094  F099         	movff	CANSetMask@mask+2,??_CANSetMask+2
  1997  001B1C  C095  F09A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  1998  001B20  0E16               	movlw	22
  1999  001B22  D006               	goto	u4240
  2000  001B24                     u4245:
  2001  001B24  0100               	movlb	0	; () banked
  2002  001B26  90D8               	bcf	status,0,c
  2003  001B28  339A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2004  001B2A  3399               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2005  001B2C  3398               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2006  001B2E  3397               	rrcf	??_CANSetMask& (0+255),f,b
  2007  001B30                     u4240:
  2008  001B30  2EE8               	decfsz	wreg,f,c
  2009  001B32  D7F8               	goto	u4245
  2010  001B34  C097  F09C         	movff	??_CANSetMask,CANSetMask@tamp
  2011  001B38  C098  F09D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2012  001B3C  C099  F09E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2013  001B40  C09A  F09F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;inc\CANlib.h: 699: tamp = tamp & 0x000000FF;
  2017  001B44  0100               	movlb	0	; () banked
  2018  001B46  519C               	movf	CANSetMask@tamp& (0+255),w,b
  2019  001B48  0100               	movlb	0	; () banked
  2020  001B4A  6F9C               	movwf	CANSetMask@tamp& (0+255),b
  2021  001B4C  6B9D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2022  001B4E  6B9E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2023  001B50  6B9F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;inc\CANlib.h: 700: RXM0SIDH = (unsigned char) tamp;
  2027  001B52  C09C  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2028  001B56                     l3513:
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;inc\CANlib.h: 701: }
  2032                           ;inc\CANlib.h: 703: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  2033  001B56  0E02               	movlw	2
  2034  001B58  0100               	movlb	0	; () banked
  2035  001B5A  199B               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2036  001B5C  A4D8               	btfss	status,2,c
  2037  001B5E  0012               	return	
  2038                           
  2039                           ; BSR set to: 0
  2040  001B60  0EF7               	movlw	247
  2041  001B62  0100               	movlb	0	; () banked
  2042  001B64  1996               	xorwf	CANSetMask@type& (0+255),w,b
  2043  001B66  A4D8               	btfss	status,2,c
  2044  001B68  0012               	return	
  2045                           
  2046                           ; BSR set to: 0
  2047                           ;inc\CANlib.h: 704: {
  2048                           ;inc\CANlib.h: 705: tamp = mask & 0x000000FF;
  2049  001B6A  0100               	movlb	0	; () banked
  2050  001B6C  5192               	movf	CANSetMask@mask& (0+255),w,b
  2051  001B6E  0100               	movlb	0	; () banked
  2052  001B70  6F9C               	movwf	CANSetMask@tamp& (0+255),b
  2053  001B72  6B9D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2054  001B74  6B9E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2055  001B76  6B9F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;inc\CANlib.h: 706: RXM1EIDL = (unsigned char) tamp;
  2059  001B78  C09C  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  2060                           
  2061                           ; BSR set to: 0
  2062                           ;inc\CANlib.h: 708: tamp = mask & 0x0000FF00;
  2063  001B7C  0E00               	movlw	0
  2064  001B7E  0100               	movlb	0	; () banked
  2065  001B80  1592               	andwf	CANSetMask@mask& (0+255),w,b
  2066  001B82  0100               	movlb	0	; () banked
  2067  001B84  6F9C               	movwf	CANSetMask@tamp& (0+255),b
  2068  001B86  0EFF               	movlw	255
  2069  001B88  0100               	movlb	0	; () banked
  2070  001B8A  1593               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2071  001B8C  0100               	movlb	0	; () banked
  2072  001B8E  6F9D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2073  001B90  0E00               	movlw	0
  2074  001B92  0100               	movlb	0	; () banked
  2075  001B94  1594               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2076  001B96  0100               	movlb	0	; () banked
  2077  001B98  6F9E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2078  001B9A  0E00               	movlw	0
  2079  001B9C  0100               	movlb	0	; () banked
  2080  001B9E  1595               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2081  001BA0  0100               	movlb	0	; () banked
  2082  001BA2  6F9F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;inc\CANlib.h: 709: tamp = tamp >> 8;
  2086  001BA4  C09C  F097         	movff	CANSetMask@tamp,??_CANSetMask
  2087  001BA8  C09D  F098         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2088  001BAC  C09E  F099         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2089  001BB0  C09F  F09A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2090  001BB4  C098  F097         	movff	??_CANSetMask+1,??_CANSetMask
  2091  001BB8  C099  F098         	movff	??_CANSetMask+2,??_CANSetMask+1
  2092  001BBC  C09A  F099         	movff	??_CANSetMask+3,??_CANSetMask+2
  2093  001BC0  0100               	movlb	0	; () banked
  2094  001BC2  6B9A               	clrf	(??_CANSetMask+3)& (0+255),b
  2095  001BC4  C097  F09C         	movff	??_CANSetMask,CANSetMask@tamp
  2096  001BC8  C098  F09D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2097  001BCC  C099  F09E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2098  001BD0  C09A  F09F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;inc\CANlib.h: 710: RXM1EIDH = (unsigned char) tamp;
  2102  001BD4  C09C  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  2103                           
  2104                           ; BSR set to: 0
  2105                           ;inc\CANlib.h: 712: if (mask & 0x00010000)
  2106  001BD8  0100               	movlb	0	; () banked
  2107  001BDA  A194               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  2108  001BDC  D003               	goto	l417
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;inc\CANlib.h: 713: RXM1SIDLbits.EID16 = 0x01;
  2112  001BDE  010F               	movlb	15	; () banked
  2113  001BE0  811D               	bsf	29,0,b	;volatile
  2114  001BE2  D002               	goto	l418
  2115  001BE4                     l417:
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;inc\CANlib.h: 714: else
  2119                           ;inc\CANlib.h: 715: RXM1SIDLbits.EID16 = 0x00;
  2120  001BE4  010F               	movlb	15	; () banked
  2121  001BE6  911D               	bcf	29,0,b	;volatile
  2122  001BE8                     l418:
  2123                           
  2124                           ; BSR set to: 15
  2125                           ;inc\CANlib.h: 717: if (mask & 0x00020000)
  2126  001BE8  0100               	movlb	0	; () banked
  2127  001BEA  A394               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  2128  001BEC  D003               	goto	l419
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;inc\CANlib.h: 718: RXM1SIDLbits.EID17 = 0x01;
  2132  001BEE  010F               	movlb	15	; () banked
  2133  001BF0  831D               	bsf	29,1,b	;volatile
  2134  001BF2  D002               	goto	l420
  2135  001BF4                     l419:
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;inc\CANlib.h: 719: else
  2139                           ;inc\CANlib.h: 720: RXM1SIDLbits.EID17 = 0x00;
  2140  001BF4  010F               	movlb	15	; () banked
  2141  001BF6  931D               	bcf	29,1,b	;volatile
  2142  001BF8                     l420:
  2143                           
  2144                           ; BSR set to: 15
  2145                           ;inc\CANlib.h: 722: if (mask & 0x00040000)
  2146  001BF8  0100               	movlb	0	; () banked
  2147  001BFA  A594               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  2148  001BFC  D003               	goto	l421
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;inc\CANlib.h: 723: RXM1SIDLbits.SID0 = 0x01;
  2152  001BFE  010F               	movlb	15	; () banked
  2153  001C00  8B1D               	bsf	29,5,b	;volatile
  2154  001C02  D002               	goto	l422
  2155  001C04                     l421:
  2156                           
  2157                           ; BSR set to: 0
  2158                           ;inc\CANlib.h: 724: else
  2159                           ;inc\CANlib.h: 725: RXM1SIDLbits.SID0 = 0x00;
  2160  001C04  010F               	movlb	15	; () banked
  2161  001C06  9B1D               	bcf	29,5,b	;volatile
  2162  001C08                     l422:
  2163                           
  2164                           ; BSR set to: 15
  2165                           ;inc\CANlib.h: 727: if (mask & 0x00080000)
  2166  001C08  0100               	movlb	0	; () banked
  2167  001C0A  A794               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  2168  001C0C  D003               	goto	l423
  2169                           
  2170                           ; BSR set to: 0
  2171                           ;inc\CANlib.h: 728: RXM1SIDLbits.SID1 = 0x01;
  2172  001C0E  010F               	movlb	15	; () banked
  2173  001C10  8D1D               	bsf	29,6,b	;volatile
  2174  001C12  D002               	goto	l424
  2175  001C14                     l423:
  2176                           
  2177                           ; BSR set to: 0
  2178                           ;inc\CANlib.h: 729: else
  2179                           ;inc\CANlib.h: 730: RXM1SIDLbits.SID1 = 0x00;
  2180  001C14  010F               	movlb	15	; () banked
  2181  001C16  9D1D               	bcf	29,6,b	;volatile
  2182  001C18                     l424:
  2183                           
  2184                           ; BSR set to: 15
  2185                           ;inc\CANlib.h: 732: if (mask & 0x00100000)
  2186  001C18  0100               	movlb	0	; () banked
  2187  001C1A  A994               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  2188  001C1C  D003               	goto	l425
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;inc\CANlib.h: 733: RXM1SIDLbits.SID2 = 0x01 ;
  2192  001C1E  010F               	movlb	15	; () banked
  2193  001C20  8F1D               	bsf	29,7,b	;volatile
  2194  001C22  D002               	goto	l3539
  2195  001C24                     l425:
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;inc\CANlib.h: 734: else
  2199                           ;inc\CANlib.h: 735: RXM1SIDLbits.SID2 = 0x00 ;
  2200  001C24  010F               	movlb	15	; () banked
  2201  001C26  9F1D               	bcf	29,7,b	;volatile
  2202  001C28                     l3539:
  2203                           
  2204                           ; BSR set to: 15
  2205                           ;inc\CANlib.h: 737: tamp = (mask >> 21);
  2206  001C28  C092  F097         	movff	CANSetMask@mask,??_CANSetMask
  2207  001C2C  C093  F098         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2208  001C30  C094  F099         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2209  001C34  C095  F09A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2210  001C38  0E16               	movlw	22
  2211  001C3A  D006               	goto	u4320
  2212  001C3C                     u4325:
  2213  001C3C  0100               	movlb	0	; () banked
  2214  001C3E  90D8               	bcf	status,0,c
  2215  001C40  339A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2216  001C42  3399               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2217  001C44  3398               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2218  001C46  3397               	rrcf	??_CANSetMask& (0+255),f,b
  2219  001C48                     u4320:
  2220  001C48  2EE8               	decfsz	wreg,f,c
  2221  001C4A  D7F8               	goto	u4325
  2222  001C4C  C097  F09C         	movff	??_CANSetMask,CANSetMask@tamp
  2223  001C50  C098  F09D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2224  001C54  C099  F09E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2225  001C58  C09A  F09F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;inc\CANlib.h: 738: tamp = tamp & 0x000000FF;
  2229  001C5C  0100               	movlb	0	; () banked
  2230  001C5E  519C               	movf	CANSetMask@tamp& (0+255),w,b
  2231  001C60  0100               	movlb	0	; () banked
  2232  001C62  6F9C               	movwf	CANSetMask@tamp& (0+255),b
  2233  001C64  6B9D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2234  001C66  6B9E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2235  001C68  6B9F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2236                           
  2237                           ; BSR set to: 0
  2238                           ;inc\CANlib.h: 739: RXM1SIDH = (unsigned char) tamp;
  2239  001C6A  C09C  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2240  001C6E  0012               	return	
  2241  001C70                     __end_of_CANSetMask:
  2242                           	opt stack 0
  2243                           tblptru	equ	0xFF8
  2244                           tblptrh	equ	0xFF7
  2245                           tblptrl	equ	0xFF6
  2246                           tablat	equ	0xFF5
  2247                           intcon	equ	0xFF2
  2248                           postinc0	equ	0xFEE
  2249                           wreg	equ	0xFE8
  2250                           indf2	equ	0xFDF
  2251                           fsr2h	equ	0xFDA
  2252                           fsr2l	equ	0xFD9
  2253                           status	equ	0xFD8
  2254                           
  2255 ;; *************** function _CANSetFilter *****************
  2256 ;; Defined at:
  2257 ;;		line 747 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  numBuffer       1    wreg     enum E16743
  2260 ;;  filter          4    0[BANK0 ] unsigned long 
  2261 ;;  type            1    4[BANK0 ] enum E16706
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;  numBuffer       1    9[BANK0 ] enum E16743
  2264 ;;  tamp            4   10[BANK0 ] unsigned long 
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      void 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2, status,0
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2274 ;;      Params:         0       5       0       0
  2275 ;;      Locals:         0       5       0       0
  2276 ;;      Temps:          0       4       0       0
  2277 ;;      Totals:         0      14       0       0
  2278 ;;Total ram usage:       14 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; Hardware stack levels required when called:    3
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_CANInitialize
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text7
  2289  000134                     __ptext7:
  2290                           	opt stack 0
  2291  000134                     _CANSetFilter:
  2292                           	opt stack 25
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;incstack = 0
  2296                           ;CANSetFilter@numBuffer stored from wreg
  2297  000134  0100               	movlb	0	; () banked
  2298  000136  6F9B               	movwf	CANSetFilter@numBuffer& (0+255),b
  2299                           
  2300                           ;inc\CANlib.h: 749: unsigned long tamp;
  2301                           ;inc\CANlib.h: 751: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  2302  000138  0100               	movlb	0	; () banked
  2303  00013A  519B               	movf	CANSetFilter@numBuffer& (0+255),w,b
  2304  00013C  0100               	movlb	0	; () banked
  2305  00013E  A4D8               	btfss	status,2,c
  2306  000140  D058               	goto	l3563
  2307                           
  2308                           ; BSR set to: 0
  2309  000142  0100               	movlb	0	; () banked
  2310  000144  2996               	incf	CANSetFilter@type& (0+255),w,b
  2311  000146  A4D8               	btfss	status,2,c
  2312  000148  D054               	goto	l3563
  2313                           
  2314                           ; BSR set to: 0
  2315                           ;inc\CANlib.h: 752: {
  2316                           ;inc\CANlib.h: 753: RXF0SIDLbits.EXIDEN = 0x00;
  2317  00014A  010F               	movlb	15	; () banked
  2318  00014C  9701               	bcf	1,3,b	;volatile
  2319                           
  2320                           ; BSR set to: 15
  2321                           ;inc\CANlib.h: 755: tamp = (filter >> 3);
  2322  00014E  C092  F097         	movff	CANSetFilter@filter,??_CANSetFilter
  2323  000152  C093  F098         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2324  000156  C094  F099         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2325  00015A  C095  F09A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2326  00015E  0E04               	movlw	4
  2327  000160  D006               	goto	u4350
  2328  000162                     u4355:
  2329  000162  0100               	movlb	0	; () banked
  2330  000164  90D8               	bcf	status,0,c
  2331  000166  339A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  2332  000168  3399               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  2333  00016A  3398               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  2334  00016C  3397               	rrcf	??_CANSetFilter& (0+255),f,b
  2335  00016E                     u4350:
  2336  00016E  2EE8               	decfsz	wreg,f,c
  2337  000170  D7F8               	goto	u4355
  2338  000172  C097  F09C         	movff	??_CANSetFilter,CANSetFilter@tamp
  2339  000176  C098  F09D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2340  00017A  C099  F09E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2341  00017E  C09A  F09F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;inc\CANlib.h: 756: tamp = tamp & 0x000000FF;
  2345  000182  0100               	movlb	0	; () banked
  2346  000184  519C               	movf	CANSetFilter@tamp& (0+255),w,b
  2347  000186  0100               	movlb	0	; () banked
  2348  000188  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  2349  00018A  6B9D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  2350  00018C  6B9E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  2351  00018E  6B9F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  2352                           
  2353                           ; BSR set to: 0
  2354                           ;inc\CANlib.h: 757: RXF0SIDH = (unsigned char) tamp;
  2355  000190  C09C  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;inc\CANlib.h: 759: tamp = filter & 0x00000007;
  2359  000194  0E07               	movlw	7
  2360  000196  0100               	movlb	0	; () banked
  2361  000198  1592               	andwf	CANSetFilter@filter& (0+255),w,b
  2362  00019A  0100               	movlb	0	; () banked
  2363  00019C  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  2364  00019E  0E00               	movlw	0
  2365  0001A0  0100               	movlb	0	; () banked
  2366  0001A2  1593               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  2367  0001A4  0100               	movlb	0	; () banked
  2368  0001A6  6F9D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  2369  0001A8  0E00               	movlw	0
  2370  0001AA  0100               	movlb	0	; () banked
  2371  0001AC  1594               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  2372  0001AE  0100               	movlb	0	; () banked
  2373  0001B0  6F9E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  2374  0001B2  0E00               	movlw	0
  2375  0001B4  0100               	movlb	0	; () banked
  2376  0001B6  1595               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  2377  0001B8  0100               	movlb	0	; () banked
  2378  0001BA  6F9F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  2379                           
  2380                           ; BSR set to: 0
  2381                           ;inc\CANlib.h: 760: tamp = tamp << 5;
  2382  0001BC  C09C  F097         	movff	CANSetFilter@tamp,??_CANSetFilter
  2383  0001C0  C09D  F098         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2384  0001C4  C09E  F099         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2385  0001C8  C09F  F09A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2386  0001CC  0E05               	movlw	5
  2387  0001CE                     u4365:
  2388  0001CE  90D8               	bcf	status,0,c
  2389  0001D0  0100               	movlb	0	; () banked
  2390  0001D2  3797               	rlcf	??_CANSetFilter& (0+255),f,b
  2391  0001D4  3798               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  2392  0001D6  3799               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  2393  0001D8  379A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  2394  0001DA  2EE8               	decfsz	wreg,f,c
  2395  0001DC  D7F8               	goto	u4365
  2396  0001DE  C097  F09C         	movff	??_CANSetFilter,CANSetFilter@tamp
  2397  0001E2  C098  F09D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2398  0001E6  C099  F09E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2399  0001EA  C09A  F09F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2400                           
  2401                           ; BSR set to: 0
  2402                           ;inc\CANlib.h: 761: RXF0SIDL = (unsigned char) tamp;
  2403  0001EE  C09C  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  2404  0001F2                     l3563:
  2405                           
  2406                           ; BSR set to: 0
  2407                           ;inc\CANlib.h: 762: }
  2408                           ;inc\CANlib.h: 764: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  2409  0001F2  0100               	movlb	0	; () banked
  2410  0001F4  059B               	decf	CANSetFilter@numBuffer& (0+255),w,b
  2411  0001F6  A4D8               	btfss	status,2,c
  2412  0001F8  D058               	goto	l3581
  2413                           
  2414                           ; BSR set to: 0
  2415  0001FA  0100               	movlb	0	; () banked
  2416  0001FC  2996               	incf	CANSetFilter@type& (0+255),w,b
  2417  0001FE  A4D8               	btfss	status,2,c
  2418  000200  D054               	goto	l3581
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;inc\CANlib.h: 765: {
  2422                           ;inc\CANlib.h: 766: RXF1SIDLbits.EXIDEN = 0x00;
  2423  000202  010F               	movlb	15	; () banked
  2424  000204  9705               	bcf	5,3,b	;volatile
  2425                           
  2426                           ; BSR set to: 15
  2427                           ;inc\CANlib.h: 768: tamp = (filter >> 3);
  2428  000206  C092  F097         	movff	CANSetFilter@filter,??_CANSetFilter
  2429  00020A  C093  F098         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2430  00020E  C094  F099         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2431  000212  C095  F09A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2432  000216  0E04               	movlw	4
  2433  000218  D006               	goto	u4390
  2434  00021A                     u4395:
  2435  00021A  0100               	movlb	0	; () banked
  2436  00021C  90D8               	bcf	status,0,c
  2437  00021E  339A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  2438  000220  3399               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  2439  000222  3398               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  2440  000224  3397               	rrcf	??_CANSetFilter& (0+255),f,b
  2441  000226                     u4390:
  2442  000226  2EE8               	decfsz	wreg,f,c
  2443  000228  D7F8               	goto	u4395
  2444  00022A  C097  F09C         	movff	??_CANSetFilter,CANSetFilter@tamp
  2445  00022E  C098  F09D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2446  000232  C099  F09E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2447  000236  C09A  F09F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2448                           
  2449                           ; BSR set to: 0
  2450                           ;inc\CANlib.h: 769: tamp = tamp & 0x000000FF;
  2451  00023A  0100               	movlb	0	; () banked
  2452  00023C  519C               	movf	CANSetFilter@tamp& (0+255),w,b
  2453  00023E  0100               	movlb	0	; () banked
  2454  000240  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  2455  000242  6B9D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  2456  000244  6B9E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  2457  000246  6B9F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;inc\CANlib.h: 770: RXF1SIDH = (unsigned char) tamp;
  2461  000248  C09C  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  2462                           
  2463                           ; BSR set to: 0
  2464                           ;inc\CANlib.h: 772: tamp = filter & 0x00000007;
  2465  00024C  0E07               	movlw	7
  2466  00024E  0100               	movlb	0	; () banked
  2467  000250  1592               	andwf	CANSetFilter@filter& (0+255),w,b
  2468  000252  0100               	movlb	0	; () banked
  2469  000254  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  2470  000256  0E00               	movlw	0
  2471  000258  0100               	movlb	0	; () banked
  2472  00025A  1593               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  2473  00025C  0100               	movlb	0	; () banked
  2474  00025E  6F9D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  2475  000260  0E00               	movlw	0
  2476  000262  0100               	movlb	0	; () banked
  2477  000264  1594               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  2478  000266  0100               	movlb	0	; () banked
  2479  000268  6F9E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  2480  00026A  0E00               	movlw	0
  2481  00026C  0100               	movlb	0	; () banked
  2482  00026E  1595               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  2483  000270  0100               	movlb	0	; () banked
  2484  000272  6F9F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  2485                           
  2486                           ; BSR set to: 0
  2487                           ;inc\CANlib.h: 773: tamp = tamp << 5;
  2488  000274  C09C  F097         	movff	CANSetFilter@tamp,??_CANSetFilter
  2489  000278  C09D  F098         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2490  00027C  C09E  F099         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2491  000280  C09F  F09A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2492  000284  0E05               	movlw	5
  2493  000286                     u4405:
  2494  000286  90D8               	bcf	status,0,c
  2495  000288  0100               	movlb	0	; () banked
  2496  00028A  3797               	rlcf	??_CANSetFilter& (0+255),f,b
  2497  00028C  3798               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  2498  00028E  3799               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  2499  000290  379A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  2500  000292  2EE8               	decfsz	wreg,f,c
  2501  000294  D7F8               	goto	u4405
  2502  000296  C097  F09C         	movff	??_CANSetFilter,CANSetFilter@tamp
  2503  00029A  C098  F09D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2504  00029E  C099  F09E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2505  0002A2  C09A  F09F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2506                           
  2507                           ; BSR set to: 0
  2508                           ;inc\CANlib.h: 774: RXF1SIDL = (unsigned char) tamp;
  2509  0002A6  C09C  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  2510  0002AA                     l3581:
  2511                           
  2512                           ; BSR set to: 0
  2513                           ;inc\CANlib.h: 775: }
  2514                           ;inc\CANlib.h: 777: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  2515  0002AA  0E02               	movlw	2
  2516  0002AC  0100               	movlb	0	; () banked
  2517  0002AE  199B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  2518  0002B0  A4D8               	btfss	status,2,c
  2519  0002B2  D058               	goto	l3599
  2520                           
  2521                           ; BSR set to: 0
  2522  0002B4  0100               	movlb	0	; () banked
  2523  0002B6  2996               	incf	CANSetFilter@type& (0+255),w,b
  2524  0002B8  A4D8               	btfss	status,2,c
  2525  0002BA  D054               	goto	l3599
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;inc\CANlib.h: 778: {
  2529                           ;inc\CANlib.h: 779: RXF2SIDLbits.EXIDEN = 0x00;
  2530  0002BC  010F               	movlb	15	; () banked
  2531  0002BE  9709               	bcf	9,3,b	;volatile
  2532                           
  2533                           ; BSR set to: 15
  2534                           ;inc\CANlib.h: 781: tamp = (filter >> 3);
  2535  0002C0  C092  F097         	movff	CANSetFilter@filter,??_CANSetFilter
  2536  0002C4  C093  F098         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2537  0002C8  C094  F099         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2538  0002CC  C095  F09A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2539  0002D0  0E04               	movlw	4
  2540  0002D2  D006               	goto	u4430
  2541  0002D4                     u4435:
  2542  0002D4  0100               	movlb	0	; () banked
  2543  0002D6  90D8               	bcf	status,0,c
  2544  0002D8  339A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  2545  0002DA  3399               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  2546  0002DC  3398               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  2547  0002DE  3397               	rrcf	??_CANSetFilter& (0+255),f,b
  2548  0002E0                     u4430:
  2549  0002E0  2EE8               	decfsz	wreg,f,c
  2550  0002E2  D7F8               	goto	u4435
  2551  0002E4  C097  F09C         	movff	??_CANSetFilter,CANSetFilter@tamp
  2552  0002E8  C098  F09D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2553  0002EC  C099  F09E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2554  0002F0  C09A  F09F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;inc\CANlib.h: 782: tamp = tamp & 0x000000FF;
  2558  0002F4  0100               	movlb	0	; () banked
  2559  0002F6  519C               	movf	CANSetFilter@tamp& (0+255),w,b
  2560  0002F8  0100               	movlb	0	; () banked
  2561  0002FA  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  2562  0002FC  6B9D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  2563  0002FE  6B9E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  2564  000300  6B9F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;inc\CANlib.h: 783: RXF2SIDH = (unsigned char) tamp;
  2568  000302  C09C  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  2569                           
  2570                           ; BSR set to: 0
  2571                           ;inc\CANlib.h: 785: tamp = filter & 0x00000007;
  2572  000306  0E07               	movlw	7
  2573  000308  0100               	movlb	0	; () banked
  2574  00030A  1592               	andwf	CANSetFilter@filter& (0+255),w,b
  2575  00030C  0100               	movlb	0	; () banked
  2576  00030E  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  2577  000310  0E00               	movlw	0
  2578  000312  0100               	movlb	0	; () banked
  2579  000314  1593               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  2580  000316  0100               	movlb	0	; () banked
  2581  000318  6F9D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  2582  00031A  0E00               	movlw	0
  2583  00031C  0100               	movlb	0	; () banked
  2584  00031E  1594               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  2585  000320  0100               	movlb	0	; () banked
  2586  000322  6F9E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  2587  000324  0E00               	movlw	0
  2588  000326  0100               	movlb	0	; () banked
  2589  000328  1595               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  2590  00032A  0100               	movlb	0	; () banked
  2591  00032C  6F9F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;inc\CANlib.h: 786: tamp = tamp << 5;
  2595  00032E  C09C  F097         	movff	CANSetFilter@tamp,??_CANSetFilter
  2596  000332  C09D  F098         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2597  000336  C09E  F099         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2598  00033A  C09F  F09A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2599  00033E  0E05               	movlw	5
  2600  000340                     u4445:
  2601  000340  90D8               	bcf	status,0,c
  2602  000342  0100               	movlb	0	; () banked
  2603  000344  3797               	rlcf	??_CANSetFilter& (0+255),f,b
  2604  000346  3798               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  2605  000348  3799               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  2606  00034A  379A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  2607  00034C  2EE8               	decfsz	wreg,f,c
  2608  00034E  D7F8               	goto	u4445
  2609  000350  C097  F09C         	movff	??_CANSetFilter,CANSetFilter@tamp
  2610  000354  C098  F09D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2611  000358  C099  F09E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2612  00035C  C09A  F09F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;inc\CANlib.h: 787: RXF2SIDL = (unsigned char) tamp;
  2616  000360  C09C  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  2617  000364                     l3599:
  2618                           
  2619                           ; BSR set to: 0
  2620                           ;inc\CANlib.h: 788: }
  2621                           ;inc\CANlib.h: 790: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  2622  000364  0E03               	movlw	3
  2623  000366  0100               	movlb	0	; () banked
  2624  000368  199B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  2625  00036A  A4D8               	btfss	status,2,c
  2626  00036C  D058               	goto	l3617
  2627                           
  2628                           ; BSR set to: 0
  2629  00036E  0100               	movlb	0	; () banked
  2630  000370  2996               	incf	CANSetFilter@type& (0+255),w,b
  2631  000372  A4D8               	btfss	status,2,c
  2632  000374  D054               	goto	l3617
  2633                           
  2634                           ; BSR set to: 0
  2635                           ;inc\CANlib.h: 791: {
  2636                           ;inc\CANlib.h: 792: RXF3SIDLbits.EXIDEN = 0x00;
  2637  000376  010F               	movlb	15	; () banked
  2638  000378  970D               	bcf	13,3,b	;volatile
  2639                           
  2640                           ; BSR set to: 15
  2641                           ;inc\CANlib.h: 794: tamp = (filter >> 3);
  2642  00037A  C092  F097         	movff	CANSetFilter@filter,??_CANSetFilter
  2643  00037E  C093  F098         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2644  000382  C094  F099         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2645  000386  C095  F09A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2646  00038A  0E04               	movlw	4
  2647  00038C  D006               	goto	u4470
  2648  00038E                     u4475:
  2649  00038E  0100               	movlb	0	; () banked
  2650  000390  90D8               	bcf	status,0,c
  2651  000392  339A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  2652  000394  3399               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  2653  000396  3398               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  2654  000398  3397               	rrcf	??_CANSetFilter& (0+255),f,b
  2655  00039A                     u4470:
  2656  00039A  2EE8               	decfsz	wreg,f,c
  2657  00039C  D7F8               	goto	u4475
  2658  00039E  C097  F09C         	movff	??_CANSetFilter,CANSetFilter@tamp
  2659  0003A2  C098  F09D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2660  0003A6  C099  F09E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2661  0003AA  C09A  F09F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2662                           
  2663                           ; BSR set to: 0
  2664                           ;inc\CANlib.h: 795: tamp = tamp & 0x000000FF;
  2665  0003AE  0100               	movlb	0	; () banked
  2666  0003B0  519C               	movf	CANSetFilter@tamp& (0+255),w,b
  2667  0003B2  0100               	movlb	0	; () banked
  2668  0003B4  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  2669  0003B6  6B9D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  2670  0003B8  6B9E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  2671  0003BA  6B9F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;inc\CANlib.h: 796: RXF3SIDH = (unsigned char) tamp;
  2675  0003BC  C09C  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  2676                           
  2677                           ; BSR set to: 0
  2678                           ;inc\CANlib.h: 798: tamp = filter & 0x00000007;
  2679  0003C0  0E07               	movlw	7
  2680  0003C2  0100               	movlb	0	; () banked
  2681  0003C4  1592               	andwf	CANSetFilter@filter& (0+255),w,b
  2682  0003C6  0100               	movlb	0	; () banked
  2683  0003C8  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  2684  0003CA  0E00               	movlw	0
  2685  0003CC  0100               	movlb	0	; () banked
  2686  0003CE  1593               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  2687  0003D0  0100               	movlb	0	; () banked
  2688  0003D2  6F9D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  2689  0003D4  0E00               	movlw	0
  2690  0003D6  0100               	movlb	0	; () banked
  2691  0003D8  1594               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  2692  0003DA  0100               	movlb	0	; () banked
  2693  0003DC  6F9E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  2694  0003DE  0E00               	movlw	0
  2695  0003E0  0100               	movlb	0	; () banked
  2696  0003E2  1595               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  2697  0003E4  0100               	movlb	0	; () banked
  2698  0003E6  6F9F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  2699                           
  2700                           ; BSR set to: 0
  2701                           ;inc\CANlib.h: 799: tamp = tamp << 5;
  2702  0003E8  C09C  F097         	movff	CANSetFilter@tamp,??_CANSetFilter
  2703  0003EC  C09D  F098         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2704  0003F0  C09E  F099         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2705  0003F4  C09F  F09A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2706  0003F8  0E05               	movlw	5
  2707  0003FA                     u4485:
  2708  0003FA  90D8               	bcf	status,0,c
  2709  0003FC  0100               	movlb	0	; () banked
  2710  0003FE  3797               	rlcf	??_CANSetFilter& (0+255),f,b
  2711  000400  3798               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  2712  000402  3799               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  2713  000404  379A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  2714  000406  2EE8               	decfsz	wreg,f,c
  2715  000408  D7F8               	goto	u4485
  2716  00040A  C097  F09C         	movff	??_CANSetFilter,CANSetFilter@tamp
  2717  00040E  C098  F09D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2718  000412  C099  F09E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2719  000416  C09A  F09F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2720                           
  2721                           ; BSR set to: 0
  2722                           ;inc\CANlib.h: 800: RXF3SIDL = (unsigned char) tamp;
  2723  00041A  C09C  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  2724  00041E                     l3617:
  2725                           
  2726                           ; BSR set to: 0
  2727                           ;inc\CANlib.h: 801: }
  2728                           ;inc\CANlib.h: 803: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  2729  00041E  0E04               	movlw	4
  2730  000420  0100               	movlb	0	; () banked
  2731  000422  199B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  2732  000424  A4D8               	btfss	status,2,c
  2733  000426  D058               	goto	l3635
  2734                           
  2735                           ; BSR set to: 0
  2736  000428  0100               	movlb	0	; () banked
  2737  00042A  2996               	incf	CANSetFilter@type& (0+255),w,b
  2738  00042C  A4D8               	btfss	status,2,c
  2739  00042E  D054               	goto	l3635
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;inc\CANlib.h: 804: {
  2743                           ;inc\CANlib.h: 805: RXF4SIDLbits.EXIDEN = 0x00;
  2744  000430  010F               	movlb	15	; () banked
  2745  000432  9711               	bcf	17,3,b	;volatile
  2746                           
  2747                           ; BSR set to: 15
  2748                           ;inc\CANlib.h: 807: tamp = (filter >> 3);
  2749  000434  C092  F097         	movff	CANSetFilter@filter,??_CANSetFilter
  2750  000438  C093  F098         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2751  00043C  C094  F099         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2752  000440  C095  F09A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2753  000444  0E04               	movlw	4
  2754  000446  D006               	goto	u4510
  2755  000448                     u4515:
  2756  000448  0100               	movlb	0	; () banked
  2757  00044A  90D8               	bcf	status,0,c
  2758  00044C  339A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  2759  00044E  3399               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  2760  000450  3398               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  2761  000452  3397               	rrcf	??_CANSetFilter& (0+255),f,b
  2762  000454                     u4510:
  2763  000454  2EE8               	decfsz	wreg,f,c
  2764  000456  D7F8               	goto	u4515
  2765  000458  C097  F09C         	movff	??_CANSetFilter,CANSetFilter@tamp
  2766  00045C  C098  F09D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2767  000460  C099  F09E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2768  000464  C09A  F09F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2769                           
  2770                           ; BSR set to: 0
  2771                           ;inc\CANlib.h: 808: tamp = tamp & 0x000000FF;
  2772  000468  0100               	movlb	0	; () banked
  2773  00046A  519C               	movf	CANSetFilter@tamp& (0+255),w,b
  2774  00046C  0100               	movlb	0	; () banked
  2775  00046E  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  2776  000470  6B9D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  2777  000472  6B9E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  2778  000474  6B9F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;inc\CANlib.h: 809: RXF4SIDH = (unsigned char) tamp;
  2782  000476  C09C  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;inc\CANlib.h: 811: tamp = filter & 0x00000007;
  2786  00047A  0E07               	movlw	7
  2787  00047C  0100               	movlb	0	; () banked
  2788  00047E  1592               	andwf	CANSetFilter@filter& (0+255),w,b
  2789  000480  0100               	movlb	0	; () banked
  2790  000482  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  2791  000484  0E00               	movlw	0
  2792  000486  0100               	movlb	0	; () banked
  2793  000488  1593               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  2794  00048A  0100               	movlb	0	; () banked
  2795  00048C  6F9D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  2796  00048E  0E00               	movlw	0
  2797  000490  0100               	movlb	0	; () banked
  2798  000492  1594               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  2799  000494  0100               	movlb	0	; () banked
  2800  000496  6F9E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  2801  000498  0E00               	movlw	0
  2802  00049A  0100               	movlb	0	; () banked
  2803  00049C  1595               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  2804  00049E  0100               	movlb	0	; () banked
  2805  0004A0  6F9F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;inc\CANlib.h: 812: tamp = tamp << 5;
  2809  0004A2  C09C  F097         	movff	CANSetFilter@tamp,??_CANSetFilter
  2810  0004A6  C09D  F098         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2811  0004AA  C09E  F099         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2812  0004AE  C09F  F09A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2813  0004B2  0E05               	movlw	5
  2814  0004B4                     u4525:
  2815  0004B4  90D8               	bcf	status,0,c
  2816  0004B6  0100               	movlb	0	; () banked
  2817  0004B8  3797               	rlcf	??_CANSetFilter& (0+255),f,b
  2818  0004BA  3798               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  2819  0004BC  3799               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  2820  0004BE  379A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  2821  0004C0  2EE8               	decfsz	wreg,f,c
  2822  0004C2  D7F8               	goto	u4525
  2823  0004C4  C097  F09C         	movff	??_CANSetFilter,CANSetFilter@tamp
  2824  0004C8  C098  F09D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2825  0004CC  C099  F09E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2826  0004D0  C09A  F09F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;inc\CANlib.h: 813: RXF4SIDL = (unsigned char) tamp;
  2830  0004D4  C09C  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  2831  0004D8                     l3635:
  2832                           
  2833                           ; BSR set to: 0
  2834                           ;inc\CANlib.h: 814: }
  2835                           ;inc\CANlib.h: 816: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  2836  0004D8  0E05               	movlw	5
  2837  0004DA  0100               	movlb	0	; () banked
  2838  0004DC  199B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  2839  0004DE  A4D8               	btfss	status,2,c
  2840  0004E0  D058               	goto	l3653
  2841                           
  2842                           ; BSR set to: 0
  2843  0004E2  0100               	movlb	0	; () banked
  2844  0004E4  2996               	incf	CANSetFilter@type& (0+255),w,b
  2845  0004E6  A4D8               	btfss	status,2,c
  2846  0004E8  D054               	goto	l3653
  2847                           
  2848                           ; BSR set to: 0
  2849                           ;inc\CANlib.h: 817: {
  2850                           ;inc\CANlib.h: 818: RXF5SIDLbits.EXIDEN = 0x00;
  2851  0004EA  010F               	movlb	15	; () banked
  2852  0004EC  9715               	bcf	21,3,b	;volatile
  2853                           
  2854                           ; BSR set to: 15
  2855                           ;inc\CANlib.h: 820: tamp = (filter >> 3);
  2856  0004EE  C092  F097         	movff	CANSetFilter@filter,??_CANSetFilter
  2857  0004F2  C093  F098         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2858  0004F6  C094  F099         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2859  0004FA  C095  F09A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2860  0004FE  0E04               	movlw	4
  2861  000500  D006               	goto	u4550
  2862  000502                     u4555:
  2863  000502  0100               	movlb	0	; () banked
  2864  000504  90D8               	bcf	status,0,c
  2865  000506  339A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  2866  000508  3399               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  2867  00050A  3398               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  2868  00050C  3397               	rrcf	??_CANSetFilter& (0+255),f,b
  2869  00050E                     u4550:
  2870  00050E  2EE8               	decfsz	wreg,f,c
  2871  000510  D7F8               	goto	u4555
  2872  000512  C097  F09C         	movff	??_CANSetFilter,CANSetFilter@tamp
  2873  000516  C098  F09D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2874  00051A  C099  F09E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2875  00051E  C09A  F09F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2876                           
  2877                           ; BSR set to: 0
  2878                           ;inc\CANlib.h: 821: tamp = tamp & 0x000000FF;
  2879  000522  0100               	movlb	0	; () banked
  2880  000524  519C               	movf	CANSetFilter@tamp& (0+255),w,b
  2881  000526  0100               	movlb	0	; () banked
  2882  000528  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  2883  00052A  6B9D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  2884  00052C  6B9E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  2885  00052E  6B9F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  2886                           
  2887                           ; BSR set to: 0
  2888                           ;inc\CANlib.h: 822: RXF5SIDH = (unsigned char) tamp;
  2889  000530  C09C  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;inc\CANlib.h: 824: tamp = filter & 0x00000007;
  2893  000534  0E07               	movlw	7
  2894  000536  0100               	movlb	0	; () banked
  2895  000538  1592               	andwf	CANSetFilter@filter& (0+255),w,b
  2896  00053A  0100               	movlb	0	; () banked
  2897  00053C  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  2898  00053E  0E00               	movlw	0
  2899  000540  0100               	movlb	0	; () banked
  2900  000542  1593               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  2901  000544  0100               	movlb	0	; () banked
  2902  000546  6F9D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  2903  000548  0E00               	movlw	0
  2904  00054A  0100               	movlb	0	; () banked
  2905  00054C  1594               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  2906  00054E  0100               	movlb	0	; () banked
  2907  000550  6F9E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  2908  000552  0E00               	movlw	0
  2909  000554  0100               	movlb	0	; () banked
  2910  000556  1595               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  2911  000558  0100               	movlb	0	; () banked
  2912  00055A  6F9F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;inc\CANlib.h: 825: tamp = tamp << 5;
  2916  00055C  C09C  F097         	movff	CANSetFilter@tamp,??_CANSetFilter
  2917  000560  C09D  F098         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2918  000564  C09E  F099         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2919  000568  C09F  F09A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2920  00056C  0E05               	movlw	5
  2921  00056E                     u4565:
  2922  00056E  90D8               	bcf	status,0,c
  2923  000570  0100               	movlb	0	; () banked
  2924  000572  3797               	rlcf	??_CANSetFilter& (0+255),f,b
  2925  000574  3798               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  2926  000576  3799               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  2927  000578  379A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  2928  00057A  2EE8               	decfsz	wreg,f,c
  2929  00057C  D7F8               	goto	u4565
  2930  00057E  C097  F09C         	movff	??_CANSetFilter,CANSetFilter@tamp
  2931  000582  C098  F09D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2932  000586  C099  F09E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2933  00058A  C09A  F09F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2934                           
  2935                           ; BSR set to: 0
  2936                           ;inc\CANlib.h: 826: RXF5SIDL = (unsigned char) tamp;
  2937  00058E  C09C  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  2938  000592                     l3653:
  2939                           
  2940                           ; BSR set to: 0
  2941                           ;inc\CANlib.h: 827: }
  2942                           ;inc\CANlib.h: 830: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  2943  000592  0100               	movlb	0	; () banked
  2944  000594  519B               	movf	CANSetFilter@numBuffer& (0+255),w,b
  2945  000596  0100               	movlb	0	; () banked
  2946  000598  A4D8               	btfss	status,2,c
  2947  00059A  D089               	goto	l3687
  2948                           
  2949                           ; BSR set to: 0
  2950  00059C  0EF7               	movlw	247
  2951  00059E  0100               	movlb	0	; () banked
  2952  0005A0  1996               	xorwf	CANSetFilter@type& (0+255),w,b
  2953  0005A2  A4D8               	btfss	status,2,c
  2954  0005A4  D084               	goto	l3687
  2955                           
  2956                           ; BSR set to: 0
  2957                           ;inc\CANlib.h: 831: {
  2958                           ;inc\CANlib.h: 832: RXF0SIDLbits.EXIDEN = 0x01;
  2959  0005A6  010F               	movlb	15	; () banked
  2960  0005A8  8701               	bsf	1,3,b	;volatile
  2961                           
  2962                           ; BSR set to: 15
  2963                           ;inc\CANlib.h: 834: tamp = filter & 0x000000FF;
  2964  0005AA  0100               	movlb	0	; () banked
  2965  0005AC  5192               	movf	CANSetFilter@filter& (0+255),w,b
  2966  0005AE  0100               	movlb	0	; () banked
  2967  0005B0  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  2968  0005B2  6B9D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  2969  0005B4  6B9E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  2970  0005B6  6B9F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  2971                           
  2972                           ; BSR set to: 0
  2973                           ;inc\CANlib.h: 835: RXF0EIDL = (unsigned char) tamp;
  2974  0005B8  C09C  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  2975                           
  2976                           ; BSR set to: 0
  2977                           ;inc\CANlib.h: 837: tamp = filter & 0x0000FF00;
  2978  0005BC  0E00               	movlw	0
  2979  0005BE  0100               	movlb	0	; () banked
  2980  0005C0  1592               	andwf	CANSetFilter@filter& (0+255),w,b
  2981  0005C2  0100               	movlb	0	; () banked
  2982  0005C4  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  2983  0005C6  0EFF               	movlw	255
  2984  0005C8  0100               	movlb	0	; () banked
  2985  0005CA  1593               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  2986  0005CC  0100               	movlb	0	; () banked
  2987  0005CE  6F9D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  2988  0005D0  0E00               	movlw	0
  2989  0005D2  0100               	movlb	0	; () banked
  2990  0005D4  1594               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  2991  0005D6  0100               	movlb	0	; () banked
  2992  0005D8  6F9E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  2993  0005DA  0E00               	movlw	0
  2994  0005DC  0100               	movlb	0	; () banked
  2995  0005DE  1595               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  2996  0005E0  0100               	movlb	0	; () banked
  2997  0005E2  6F9F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;inc\CANlib.h: 838: tamp = tamp >> 8;
  3001  0005E4  C09C  F097         	movff	CANSetFilter@tamp,??_CANSetFilter
  3002  0005E8  C09D  F098         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3003  0005EC  C09E  F099         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3004  0005F0  C09F  F09A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3005  0005F4  C098  F097         	movff	??_CANSetFilter+1,??_CANSetFilter
  3006  0005F8  C099  F098         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3007  0005FC  C09A  F099         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3008  000600  0100               	movlb	0	; () banked
  3009  000602  6B9A               	clrf	(??_CANSetFilter+3)& (0+255),b
  3010  000604  C097  F09C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3011  000608  C098  F09D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3012  00060C  C099  F09E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3013  000610  C09A  F09F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3014                           
  3015                           ; BSR set to: 0
  3016                           ;inc\CANlib.h: 839: RXF0EIDH = (unsigned char) tamp;
  3017  000614  C09C  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  3018                           
  3019                           ; BSR set to: 0
  3020                           ;inc\CANlib.h: 841: if (filter & 0x00010000)
  3021  000618  0100               	movlb	0	; () banked
  3022  00061A  A194               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3023  00061C  D003               	goto	l437
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;inc\CANlib.h: 842: RXF0SIDLbits.EID16 = 0x01;
  3027  00061E  010F               	movlb	15	; () banked
  3028  000620  8101               	bsf	1,0,b	;volatile
  3029  000622  D002               	goto	l438
  3030  000624                     l437:
  3031                           
  3032                           ; BSR set to: 0
  3033                           ;inc\CANlib.h: 843: else
  3034                           ;inc\CANlib.h: 844: RXF0SIDLbits.EID16 = 0x00;
  3035  000624  010F               	movlb	15	; () banked
  3036  000626  9101               	bcf	1,0,b	;volatile
  3037  000628                     l438:
  3038                           
  3039                           ; BSR set to: 15
  3040                           ;inc\CANlib.h: 846: if (filter & 0x00020000)
  3041  000628  0100               	movlb	0	; () banked
  3042  00062A  A394               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3043  00062C  D003               	goto	l439
  3044                           
  3045                           ; BSR set to: 0
  3046                           ;inc\CANlib.h: 847: RXF0SIDLbits.EID17 = 0x01;
  3047  00062E  010F               	movlb	15	; () banked
  3048  000630  8301               	bsf	1,1,b	;volatile
  3049  000632  D002               	goto	l440
  3050  000634                     l439:
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;inc\CANlib.h: 848: else
  3054                           ;inc\CANlib.h: 849: RXF0SIDLbits.EID17 = 0x00;
  3055  000634  010F               	movlb	15	; () banked
  3056  000636  9301               	bcf	1,1,b	;volatile
  3057  000638                     l440:
  3058                           
  3059                           ; BSR set to: 15
  3060                           ;inc\CANlib.h: 851: if (filter & 0x00040000)
  3061  000638  0100               	movlb	0	; () banked
  3062  00063A  A594               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3063  00063C  D003               	goto	l441
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;inc\CANlib.h: 852: RXF0SIDLbits.SID0 = 0x01;
  3067  00063E  010F               	movlb	15	; () banked
  3068  000640  8B01               	bsf	1,5,b	;volatile
  3069  000642  D002               	goto	l442
  3070  000644                     l441:
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;inc\CANlib.h: 853: else
  3074                           ;inc\CANlib.h: 854: RXF0SIDLbits.SID0 = 0x00;
  3075  000644  010F               	movlb	15	; () banked
  3076  000646  9B01               	bcf	1,5,b	;volatile
  3077  000648                     l442:
  3078                           
  3079                           ; BSR set to: 15
  3080                           ;inc\CANlib.h: 856: if (filter & 0x00080000)
  3081  000648  0100               	movlb	0	; () banked
  3082  00064A  A794               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  3083  00064C  D003               	goto	l443
  3084                           
  3085                           ; BSR set to: 0
  3086                           ;inc\CANlib.h: 857: RXF0SIDLbits.SID1 = 0x01;
  3087  00064E  010F               	movlb	15	; () banked
  3088  000650  8D01               	bsf	1,6,b	;volatile
  3089  000652  D002               	goto	l444
  3090  000654                     l443:
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;inc\CANlib.h: 858: else
  3094                           ;inc\CANlib.h: 859: RXF0SIDLbits.SID1 = 0x00;
  3095  000654  010F               	movlb	15	; () banked
  3096  000656  9D01               	bcf	1,6,b	;volatile
  3097  000658                     l444:
  3098                           
  3099                           ; BSR set to: 15
  3100                           ;inc\CANlib.h: 861: if (filter & 0x00100000)
  3101  000658  0100               	movlb	0	; () banked
  3102  00065A  A994               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  3103  00065C  D003               	goto	l445
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;inc\CANlib.h: 862: RXF0SIDLbits.SID2 = 0x01 ;
  3107  00065E  010F               	movlb	15	; () banked
  3108  000660  8F01               	bsf	1,7,b	;volatile
  3109  000662  D002               	goto	l3681
  3110  000664                     l445:
  3111                           
  3112                           ; BSR set to: 0
  3113                           ;inc\CANlib.h: 863: else
  3114                           ;inc\CANlib.h: 864: RXF0SIDLbits.SID2 = 0x00 ;
  3115  000664  010F               	movlb	15	; () banked
  3116  000666  9F01               	bcf	1,7,b	;volatile
  3117  000668                     l3681:
  3118                           
  3119                           ; BSR set to: 15
  3120                           ;inc\CANlib.h: 866: tamp = (filter >> 21);
  3121  000668  C092  F097         	movff	CANSetFilter@filter,??_CANSetFilter
  3122  00066C  C093  F098         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3123  000670  C094  F099         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3124  000674  C095  F09A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3125  000678  0E16               	movlw	22
  3126  00067A  D006               	goto	u4640
  3127  00067C                     u4645:
  3128  00067C  0100               	movlb	0	; () banked
  3129  00067E  90D8               	bcf	status,0,c
  3130  000680  339A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3131  000682  3399               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3132  000684  3398               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3133  000686  3397               	rrcf	??_CANSetFilter& (0+255),f,b
  3134  000688                     u4640:
  3135  000688  2EE8               	decfsz	wreg,f,c
  3136  00068A  D7F8               	goto	u4645
  3137  00068C  C097  F09C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3138  000690  C098  F09D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3139  000694  C099  F09E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3140  000698  C09A  F09F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;inc\CANlib.h: 867: tamp = tamp & 0x000000FF;
  3144  00069C  0100               	movlb	0	; () banked
  3145  00069E  519C               	movf	CANSetFilter@tamp& (0+255),w,b
  3146  0006A0  0100               	movlb	0	; () banked
  3147  0006A2  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  3148  0006A4  6B9D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3149  0006A6  6B9E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3150  0006A8  6B9F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;inc\CANlib.h: 868: RXF0SIDH = (unsigned char) tamp;
  3154  0006AA  C09C  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3155  0006AE                     l3687:
  3156                           
  3157                           ; BSR set to: 0
  3158                           ;inc\CANlib.h: 869: }
  3159                           ;inc\CANlib.h: 871: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  3160  0006AE  0100               	movlb	0	; () banked
  3161  0006B0  059B               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3162  0006B2  A4D8               	btfss	status,2,c
  3163  0006B4  D089               	goto	l3721
  3164                           
  3165                           ; BSR set to: 0
  3166  0006B6  0EF7               	movlw	247
  3167  0006B8  0100               	movlb	0	; () banked
  3168  0006BA  1996               	xorwf	CANSetFilter@type& (0+255),w,b
  3169  0006BC  A4D8               	btfss	status,2,c
  3170  0006BE  D084               	goto	l3721
  3171                           
  3172                           ; BSR set to: 0
  3173                           ;inc\CANlib.h: 872: {
  3174                           ;inc\CANlib.h: 873: RXF1SIDLbits.EXIDEN = 0x01;
  3175  0006C0  010F               	movlb	15	; () banked
  3176  0006C2  8705               	bsf	5,3,b	;volatile
  3177                           
  3178                           ; BSR set to: 15
  3179                           ;inc\CANlib.h: 875: tamp = filter & 0x000000FF;
  3180  0006C4  0100               	movlb	0	; () banked
  3181  0006C6  5192               	movf	CANSetFilter@filter& (0+255),w,b
  3182  0006C8  0100               	movlb	0	; () banked
  3183  0006CA  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  3184  0006CC  6B9D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3185  0006CE  6B9E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3186  0006D0  6B9F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3187                           
  3188                           ; BSR set to: 0
  3189                           ;inc\CANlib.h: 876: RXF1EIDL = (unsigned char) tamp;
  3190  0006D2  C09C  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  3191                           
  3192                           ; BSR set to: 0
  3193                           ;inc\CANlib.h: 878: tamp = filter & 0x0000FF00;
  3194  0006D6  0E00               	movlw	0
  3195  0006D8  0100               	movlb	0	; () banked
  3196  0006DA  1592               	andwf	CANSetFilter@filter& (0+255),w,b
  3197  0006DC  0100               	movlb	0	; () banked
  3198  0006DE  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  3199  0006E0  0EFF               	movlw	255
  3200  0006E2  0100               	movlb	0	; () banked
  3201  0006E4  1593               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3202  0006E6  0100               	movlb	0	; () banked
  3203  0006E8  6F9D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3204  0006EA  0E00               	movlw	0
  3205  0006EC  0100               	movlb	0	; () banked
  3206  0006EE  1594               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3207  0006F0  0100               	movlb	0	; () banked
  3208  0006F2  6F9E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3209  0006F4  0E00               	movlw	0
  3210  0006F6  0100               	movlb	0	; () banked
  3211  0006F8  1595               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3212  0006FA  0100               	movlb	0	; () banked
  3213  0006FC  6F9F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;inc\CANlib.h: 879: tamp = tamp >> 8;
  3217  0006FE  C09C  F097         	movff	CANSetFilter@tamp,??_CANSetFilter
  3218  000702  C09D  F098         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3219  000706  C09E  F099         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3220  00070A  C09F  F09A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3221  00070E  C098  F097         	movff	??_CANSetFilter+1,??_CANSetFilter
  3222  000712  C099  F098         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3223  000716  C09A  F099         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3224  00071A  0100               	movlb	0	; () banked
  3225  00071C  6B9A               	clrf	(??_CANSetFilter+3)& (0+255),b
  3226  00071E  C097  F09C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3227  000722  C098  F09D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3228  000726  C099  F09E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3229  00072A  C09A  F09F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;inc\CANlib.h: 880: RXF1EIDH = (unsigned char) tamp;
  3233  00072E  C09C  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  3234                           
  3235                           ; BSR set to: 0
  3236                           ;inc\CANlib.h: 882: if (filter & 0x00010000)
  3237  000732  0100               	movlb	0	; () banked
  3238  000734  A194               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3239  000736  D003               	goto	l448
  3240                           
  3241                           ; BSR set to: 0
  3242                           ;inc\CANlib.h: 883: RXF1SIDLbits.EID16 = 0x01;
  3243  000738  010F               	movlb	15	; () banked
  3244  00073A  8105               	bsf	5,0,b	;volatile
  3245  00073C  D002               	goto	l449
  3246  00073E                     l448:
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;inc\CANlib.h: 884: else
  3250                           ;inc\CANlib.h: 885: RXF1SIDLbits.EID16 = 0x00;
  3251  00073E  010F               	movlb	15	; () banked
  3252  000740  9105               	bcf	5,0,b	;volatile
  3253  000742                     l449:
  3254                           
  3255                           ; BSR set to: 15
  3256                           ;inc\CANlib.h: 887: if (filter & 0x00020000)
  3257  000742  0100               	movlb	0	; () banked
  3258  000744  A394               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3259  000746  D003               	goto	l450
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;inc\CANlib.h: 888: RXF1SIDLbits.EID17 = 0x01;
  3263  000748  010F               	movlb	15	; () banked
  3264  00074A  8305               	bsf	5,1,b	;volatile
  3265  00074C  D002               	goto	l451
  3266  00074E                     l450:
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;inc\CANlib.h: 889: else
  3270                           ;inc\CANlib.h: 890: RXF1SIDLbits.EID17 = 0x00;
  3271  00074E  010F               	movlb	15	; () banked
  3272  000750  9305               	bcf	5,1,b	;volatile
  3273  000752                     l451:
  3274                           
  3275                           ; BSR set to: 15
  3276                           ;inc\CANlib.h: 892: if (filter & 0x00040000)
  3277  000752  0100               	movlb	0	; () banked
  3278  000754  A594               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3279  000756  D003               	goto	l452
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;inc\CANlib.h: 893: RXF1SIDLbits.SID0 = 0x01;
  3283  000758  010F               	movlb	15	; () banked
  3284  00075A  8B05               	bsf	5,5,b	;volatile
  3285  00075C  D002               	goto	l453
  3286  00075E                     l452:
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;inc\CANlib.h: 894: else
  3290                           ;inc\CANlib.h: 895: RXF1SIDLbits.SID0 = 0x00;
  3291  00075E  010F               	movlb	15	; () banked
  3292  000760  9B05               	bcf	5,5,b	;volatile
  3293  000762                     l453:
  3294                           
  3295                           ; BSR set to: 15
  3296                           ;inc\CANlib.h: 897: if (filter & 0x00080000)
  3297  000762  0100               	movlb	0	; () banked
  3298  000764  A794               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  3299  000766  D003               	goto	l454
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;inc\CANlib.h: 898: RXF1SIDLbits.SID1 = 0x01;
  3303  000768  010F               	movlb	15	; () banked
  3304  00076A  8D05               	bsf	5,6,b	;volatile
  3305  00076C  D002               	goto	l455
  3306  00076E                     l454:
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;inc\CANlib.h: 899: else
  3310                           ;inc\CANlib.h: 900: RXF1SIDLbits.SID1 = 0x00;
  3311  00076E  010F               	movlb	15	; () banked
  3312  000770  9D05               	bcf	5,6,b	;volatile
  3313  000772                     l455:
  3314                           
  3315                           ; BSR set to: 15
  3316                           ;inc\CANlib.h: 902: if (filter & 0x00100000)
  3317  000772  0100               	movlb	0	; () banked
  3318  000774  A994               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  3319  000776  D003               	goto	l456
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;inc\CANlib.h: 903: RXF1SIDLbits.SID2 = 0x01 ;
  3323  000778  010F               	movlb	15	; () banked
  3324  00077A  8F05               	bsf	5,7,b	;volatile
  3325  00077C  D002               	goto	l3715
  3326  00077E                     l456:
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;inc\CANlib.h: 904: else
  3330                           ;inc\CANlib.h: 905: RXF1SIDLbits.SID2 = 0x00 ;
  3331  00077E  010F               	movlb	15	; () banked
  3332  000780  9F05               	bcf	5,7,b	;volatile
  3333  000782                     l3715:
  3334                           
  3335                           ; BSR set to: 15
  3336                           ;inc\CANlib.h: 907: tamp = (filter >> 21);
  3337  000782  C092  F097         	movff	CANSetFilter@filter,??_CANSetFilter
  3338  000786  C093  F098         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3339  00078A  C094  F099         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3340  00078E  C095  F09A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3341  000792  0E16               	movlw	22
  3342  000794  D006               	goto	u4720
  3343  000796                     u4725:
  3344  000796  0100               	movlb	0	; () banked
  3345  000798  90D8               	bcf	status,0,c
  3346  00079A  339A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3347  00079C  3399               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3348  00079E  3398               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3349  0007A0  3397               	rrcf	??_CANSetFilter& (0+255),f,b
  3350  0007A2                     u4720:
  3351  0007A2  2EE8               	decfsz	wreg,f,c
  3352  0007A4  D7F8               	goto	u4725
  3353  0007A6  C097  F09C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3354  0007AA  C098  F09D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3355  0007AE  C099  F09E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3356  0007B2  C09A  F09F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;inc\CANlib.h: 908: tamp = tamp & 0x000000FF;
  3360  0007B6  0100               	movlb	0	; () banked
  3361  0007B8  519C               	movf	CANSetFilter@tamp& (0+255),w,b
  3362  0007BA  0100               	movlb	0	; () banked
  3363  0007BC  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  3364  0007BE  6B9D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3365  0007C0  6B9E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3366  0007C2  6B9F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;inc\CANlib.h: 909: RXF1SIDH = (unsigned char) tamp;
  3370  0007C4  C09C  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3371  0007C8                     l3721:
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;inc\CANlib.h: 910: }
  3375                           ;inc\CANlib.h: 913: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  3376  0007C8  0E02               	movlw	2
  3377  0007CA  0100               	movlb	0	; () banked
  3378  0007CC  199B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3379  0007CE  A4D8               	btfss	status,2,c
  3380  0007D0  D089               	goto	l3755
  3381                           
  3382                           ; BSR set to: 0
  3383  0007D2  0EF7               	movlw	247
  3384  0007D4  0100               	movlb	0	; () banked
  3385  0007D6  1996               	xorwf	CANSetFilter@type& (0+255),w,b
  3386  0007D8  A4D8               	btfss	status,2,c
  3387  0007DA  D084               	goto	l3755
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;inc\CANlib.h: 914: {
  3391                           ;inc\CANlib.h: 915: RXF2SIDLbits.EXIDEN = 0x01;
  3392  0007DC  010F               	movlb	15	; () banked
  3393  0007DE  8709               	bsf	9,3,b	;volatile
  3394                           
  3395                           ; BSR set to: 15
  3396                           ;inc\CANlib.h: 917: tamp = filter & 0x000000FF;
  3397  0007E0  0100               	movlb	0	; () banked
  3398  0007E2  5192               	movf	CANSetFilter@filter& (0+255),w,b
  3399  0007E4  0100               	movlb	0	; () banked
  3400  0007E6  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  3401  0007E8  6B9D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3402  0007EA  6B9E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3403  0007EC  6B9F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;inc\CANlib.h: 918: RXF2EIDL = (unsigned char) tamp;
  3407  0007EE  C09C  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;inc\CANlib.h: 920: tamp = filter & 0x0000FF00;
  3411  0007F2  0E00               	movlw	0
  3412  0007F4  0100               	movlb	0	; () banked
  3413  0007F6  1592               	andwf	CANSetFilter@filter& (0+255),w,b
  3414  0007F8  0100               	movlb	0	; () banked
  3415  0007FA  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  3416  0007FC  0EFF               	movlw	255
  3417  0007FE  0100               	movlb	0	; () banked
  3418  000800  1593               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3419  000802  0100               	movlb	0	; () banked
  3420  000804  6F9D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3421  000806  0E00               	movlw	0
  3422  000808  0100               	movlb	0	; () banked
  3423  00080A  1594               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3424  00080C  0100               	movlb	0	; () banked
  3425  00080E  6F9E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3426  000810  0E00               	movlw	0
  3427  000812  0100               	movlb	0	; () banked
  3428  000814  1595               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3429  000816  0100               	movlb	0	; () banked
  3430  000818  6F9F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;inc\CANlib.h: 921: tamp = tamp >> 8;
  3434  00081A  C09C  F097         	movff	CANSetFilter@tamp,??_CANSetFilter
  3435  00081E  C09D  F098         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3436  000822  C09E  F099         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3437  000826  C09F  F09A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3438  00082A  C098  F097         	movff	??_CANSetFilter+1,??_CANSetFilter
  3439  00082E  C099  F098         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3440  000832  C09A  F099         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3441  000836  0100               	movlb	0	; () banked
  3442  000838  6B9A               	clrf	(??_CANSetFilter+3)& (0+255),b
  3443  00083A  C097  F09C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3444  00083E  C098  F09D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3445  000842  C099  F09E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3446  000846  C09A  F09F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3447                           
  3448                           ; BSR set to: 0
  3449                           ;inc\CANlib.h: 922: RXF2EIDH = (unsigned char) tamp;
  3450  00084A  C09C  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;inc\CANlib.h: 924: if (filter & 0x00010000)
  3454  00084E  0100               	movlb	0	; () banked
  3455  000850  A194               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3456  000852  D003               	goto	l459
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;inc\CANlib.h: 925: RXF2SIDLbits.EID16 = 0x01;
  3460  000854  010F               	movlb	15	; () banked
  3461  000856  8109               	bsf	9,0,b	;volatile
  3462  000858  D002               	goto	l460
  3463  00085A                     l459:
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;inc\CANlib.h: 926: else
  3467                           ;inc\CANlib.h: 927: RXF2SIDLbits.EID16 = 0x00;
  3468  00085A  010F               	movlb	15	; () banked
  3469  00085C  9109               	bcf	9,0,b	;volatile
  3470  00085E                     l460:
  3471                           
  3472                           ; BSR set to: 15
  3473                           ;inc\CANlib.h: 929: if (filter & 0x00020000)
  3474  00085E  0100               	movlb	0	; () banked
  3475  000860  A394               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3476  000862  D003               	goto	l461
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;inc\CANlib.h: 930: RXF2SIDLbits.EID17 = 0x01;
  3480  000864  010F               	movlb	15	; () banked
  3481  000866  8309               	bsf	9,1,b	;volatile
  3482  000868  D002               	goto	l462
  3483  00086A                     l461:
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;inc\CANlib.h: 931: else
  3487                           ;inc\CANlib.h: 932: RXF2SIDLbits.EID17 = 0x00;
  3488  00086A  010F               	movlb	15	; () banked
  3489  00086C  9309               	bcf	9,1,b	;volatile
  3490  00086E                     l462:
  3491                           
  3492                           ; BSR set to: 15
  3493                           ;inc\CANlib.h: 934: if (filter & 0x00040000)
  3494  00086E  0100               	movlb	0	; () banked
  3495  000870  A594               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3496  000872  D003               	goto	l463
  3497                           
  3498                           ; BSR set to: 0
  3499                           ;inc\CANlib.h: 935: RXF2SIDLbits.SID0 = 0x01;
  3500  000874  010F               	movlb	15	; () banked
  3501  000876  8B09               	bsf	9,5,b	;volatile
  3502  000878  D002               	goto	l464
  3503  00087A                     l463:
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;inc\CANlib.h: 936: else
  3507                           ;inc\CANlib.h: 937: RXF2SIDLbits.SID0 = 0x00;
  3508  00087A  010F               	movlb	15	; () banked
  3509  00087C  9B09               	bcf	9,5,b	;volatile
  3510  00087E                     l464:
  3511                           
  3512                           ; BSR set to: 15
  3513                           ;inc\CANlib.h: 939: if (filter & 0x00080000)
  3514  00087E  0100               	movlb	0	; () banked
  3515  000880  A794               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  3516  000882  D003               	goto	l465
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;inc\CANlib.h: 940: RXF2SIDLbits.SID1 = 0x01;
  3520  000884  010F               	movlb	15	; () banked
  3521  000886  8D09               	bsf	9,6,b	;volatile
  3522  000888  D002               	goto	l466
  3523  00088A                     l465:
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;inc\CANlib.h: 941: else
  3527                           ;inc\CANlib.h: 942: RXF2SIDLbits.SID1 = 0x00;
  3528  00088A  010F               	movlb	15	; () banked
  3529  00088C  9D09               	bcf	9,6,b	;volatile
  3530  00088E                     l466:
  3531                           
  3532                           ; BSR set to: 15
  3533                           ;inc\CANlib.h: 944: if (filter & 0x00100000)
  3534  00088E  0100               	movlb	0	; () banked
  3535  000890  A994               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  3536  000892  D003               	goto	l467
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;inc\CANlib.h: 945: RXF2SIDLbits.SID2 = 0x01 ;
  3540  000894  010F               	movlb	15	; () banked
  3541  000896  8F09               	bsf	9,7,b	;volatile
  3542  000898  D002               	goto	l3749
  3543  00089A                     l467:
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;inc\CANlib.h: 946: else
  3547                           ;inc\CANlib.h: 947: RXF2SIDLbits.SID2 = 0x00 ;
  3548  00089A  010F               	movlb	15	; () banked
  3549  00089C  9F09               	bcf	9,7,b	;volatile
  3550  00089E                     l3749:
  3551                           
  3552                           ; BSR set to: 15
  3553                           ;inc\CANlib.h: 949: tamp = (filter >> 21);
  3554  00089E  C092  F097         	movff	CANSetFilter@filter,??_CANSetFilter
  3555  0008A2  C093  F098         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3556  0008A6  C094  F099         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3557  0008AA  C095  F09A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3558  0008AE  0E16               	movlw	22
  3559  0008B0  D006               	goto	u4800
  3560  0008B2                     u4805:
  3561  0008B2  0100               	movlb	0	; () banked
  3562  0008B4  90D8               	bcf	status,0,c
  3563  0008B6  339A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3564  0008B8  3399               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3565  0008BA  3398               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3566  0008BC  3397               	rrcf	??_CANSetFilter& (0+255),f,b
  3567  0008BE                     u4800:
  3568  0008BE  2EE8               	decfsz	wreg,f,c
  3569  0008C0  D7F8               	goto	u4805
  3570  0008C2  C097  F09C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3571  0008C6  C098  F09D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3572  0008CA  C099  F09E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3573  0008CE  C09A  F09F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;inc\CANlib.h: 950: tamp = tamp & 0x000000FF;
  3577  0008D2  0100               	movlb	0	; () banked
  3578  0008D4  519C               	movf	CANSetFilter@tamp& (0+255),w,b
  3579  0008D6  0100               	movlb	0	; () banked
  3580  0008D8  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  3581  0008DA  6B9D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3582  0008DC  6B9E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3583  0008DE  6B9F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;inc\CANlib.h: 951: RXF2SIDH = (unsigned char) tamp;
  3587  0008E0  C09C  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3588  0008E4                     l3755:
  3589                           
  3590                           ; BSR set to: 0
  3591                           ;inc\CANlib.h: 952: }
  3592                           ;inc\CANlib.h: 954: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  3593  0008E4  0E03               	movlw	3
  3594  0008E6  0100               	movlb	0	; () banked
  3595  0008E8  199B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3596  0008EA  A4D8               	btfss	status,2,c
  3597  0008EC  D089               	goto	l3789
  3598                           
  3599                           ; BSR set to: 0
  3600  0008EE  0EF7               	movlw	247
  3601  0008F0  0100               	movlb	0	; () banked
  3602  0008F2  1996               	xorwf	CANSetFilter@type& (0+255),w,b
  3603  0008F4  A4D8               	btfss	status,2,c
  3604  0008F6  D084               	goto	l3789
  3605                           
  3606                           ; BSR set to: 0
  3607                           ;inc\CANlib.h: 955: {
  3608                           ;inc\CANlib.h: 956: RXF3SIDLbits.EXIDEN = 0x01;
  3609  0008F8  010F               	movlb	15	; () banked
  3610  0008FA  870D               	bsf	13,3,b	;volatile
  3611                           
  3612                           ; BSR set to: 15
  3613                           ;inc\CANlib.h: 958: tamp = filter & 0x000000FF;
  3614  0008FC  0100               	movlb	0	; () banked
  3615  0008FE  5192               	movf	CANSetFilter@filter& (0+255),w,b
  3616  000900  0100               	movlb	0	; () banked
  3617  000902  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  3618  000904  6B9D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3619  000906  6B9E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3620  000908  6B9F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;inc\CANlib.h: 959: RXF3EIDL = (unsigned char) tamp;
  3624  00090A  C09C  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  3625                           
  3626                           ; BSR set to: 0
  3627                           ;inc\CANlib.h: 961: tamp = filter & 0x0000FF00;
  3628  00090E  0E00               	movlw	0
  3629  000910  0100               	movlb	0	; () banked
  3630  000912  1592               	andwf	CANSetFilter@filter& (0+255),w,b
  3631  000914  0100               	movlb	0	; () banked
  3632  000916  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  3633  000918  0EFF               	movlw	255
  3634  00091A  0100               	movlb	0	; () banked
  3635  00091C  1593               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3636  00091E  0100               	movlb	0	; () banked
  3637  000920  6F9D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3638  000922  0E00               	movlw	0
  3639  000924  0100               	movlb	0	; () banked
  3640  000926  1594               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3641  000928  0100               	movlb	0	; () banked
  3642  00092A  6F9E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3643  00092C  0E00               	movlw	0
  3644  00092E  0100               	movlb	0	; () banked
  3645  000930  1595               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3646  000932  0100               	movlb	0	; () banked
  3647  000934  6F9F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;inc\CANlib.h: 962: tamp = tamp >> 8;
  3651  000936  C09C  F097         	movff	CANSetFilter@tamp,??_CANSetFilter
  3652  00093A  C09D  F098         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3653  00093E  C09E  F099         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3654  000942  C09F  F09A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3655  000946  C098  F097         	movff	??_CANSetFilter+1,??_CANSetFilter
  3656  00094A  C099  F098         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3657  00094E  C09A  F099         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3658  000952  0100               	movlb	0	; () banked
  3659  000954  6B9A               	clrf	(??_CANSetFilter+3)& (0+255),b
  3660  000956  C097  F09C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3661  00095A  C098  F09D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3662  00095E  C099  F09E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3663  000962  C09A  F09F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;inc\CANlib.h: 963: RXF3EIDH = (unsigned char) tamp;
  3667  000966  C09C  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  3668                           
  3669                           ; BSR set to: 0
  3670                           ;inc\CANlib.h: 965: if (filter & 0x00010000)
  3671  00096A  0100               	movlb	0	; () banked
  3672  00096C  A194               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3673  00096E  D003               	goto	l470
  3674                           
  3675                           ; BSR set to: 0
  3676                           ;inc\CANlib.h: 966: RXF3SIDLbits.EID16 = 0x01;
  3677  000970  010F               	movlb	15	; () banked
  3678  000972  810D               	bsf	13,0,b	;volatile
  3679  000974  D002               	goto	l471
  3680  000976                     l470:
  3681                           
  3682                           ; BSR set to: 0
  3683                           ;inc\CANlib.h: 967: else
  3684                           ;inc\CANlib.h: 968: RXF3SIDLbits.EID16 = 0x00;
  3685  000976  010F               	movlb	15	; () banked
  3686  000978  910D               	bcf	13,0,b	;volatile
  3687  00097A                     l471:
  3688                           
  3689                           ; BSR set to: 15
  3690                           ;inc\CANlib.h: 970: if (filter & 0x00020000)
  3691  00097A  0100               	movlb	0	; () banked
  3692  00097C  A394               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3693  00097E  D003               	goto	l472
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;inc\CANlib.h: 971: RXF3SIDLbits.EID17 = 0x01;
  3697  000980  010F               	movlb	15	; () banked
  3698  000982  830D               	bsf	13,1,b	;volatile
  3699  000984  D002               	goto	l473
  3700  000986                     l472:
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;inc\CANlib.h: 972: else
  3704                           ;inc\CANlib.h: 973: RXF3SIDLbits.EID17 = 0x00;
  3705  000986  010F               	movlb	15	; () banked
  3706  000988  930D               	bcf	13,1,b	;volatile
  3707  00098A                     l473:
  3708                           
  3709                           ; BSR set to: 15
  3710                           ;inc\CANlib.h: 975: if (filter & 0x00040000)
  3711  00098A  0100               	movlb	0	; () banked
  3712  00098C  A594               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3713  00098E  D003               	goto	l474
  3714                           
  3715                           ; BSR set to: 0
  3716                           ;inc\CANlib.h: 976: RXF3SIDLbits.SID0 = 0x01;
  3717  000990  010F               	movlb	15	; () banked
  3718  000992  8B0D               	bsf	13,5,b	;volatile
  3719  000994  D002               	goto	l475
  3720  000996                     l474:
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;inc\CANlib.h: 977: else
  3724                           ;inc\CANlib.h: 978: RXF3SIDLbits.SID0 = 0x00;
  3725  000996  010F               	movlb	15	; () banked
  3726  000998  9B0D               	bcf	13,5,b	;volatile
  3727  00099A                     l475:
  3728                           
  3729                           ; BSR set to: 15
  3730                           ;inc\CANlib.h: 980: if (filter & 0x00080000)
  3731  00099A  0100               	movlb	0	; () banked
  3732  00099C  A794               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  3733  00099E  D003               	goto	l476
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;inc\CANlib.h: 981: RXF3SIDLbits.SID1 = 0x01;
  3737  0009A0  010F               	movlb	15	; () banked
  3738  0009A2  8D0D               	bsf	13,6,b	;volatile
  3739  0009A4  D002               	goto	l477
  3740  0009A6                     l476:
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;inc\CANlib.h: 982: else
  3744                           ;inc\CANlib.h: 983: RXF3SIDLbits.SID1 = 0x00;
  3745  0009A6  010F               	movlb	15	; () banked
  3746  0009A8  9D0D               	bcf	13,6,b	;volatile
  3747  0009AA                     l477:
  3748                           
  3749                           ; BSR set to: 15
  3750                           ;inc\CANlib.h: 985: if (filter & 0x00100000)
  3751  0009AA  0100               	movlb	0	; () banked
  3752  0009AC  A994               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  3753  0009AE  D003               	goto	l478
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;inc\CANlib.h: 986: RXF3SIDLbits.SID2 = 0x01 ;
  3757  0009B0  010F               	movlb	15	; () banked
  3758  0009B2  8F0D               	bsf	13,7,b	;volatile
  3759  0009B4  D002               	goto	l3783
  3760  0009B6                     l478:
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;inc\CANlib.h: 987: else
  3764                           ;inc\CANlib.h: 988: RXF3SIDLbits.SID2 = 0x00 ;
  3765  0009B6  010F               	movlb	15	; () banked
  3766  0009B8  9F0D               	bcf	13,7,b	;volatile
  3767  0009BA                     l3783:
  3768                           
  3769                           ; BSR set to: 15
  3770                           ;inc\CANlib.h: 990: tamp = (filter >> 21);
  3771  0009BA  C092  F097         	movff	CANSetFilter@filter,??_CANSetFilter
  3772  0009BE  C093  F098         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3773  0009C2  C094  F099         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3774  0009C6  C095  F09A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3775  0009CA  0E16               	movlw	22
  3776  0009CC  D006               	goto	u4880
  3777  0009CE                     u4885:
  3778  0009CE  0100               	movlb	0	; () banked
  3779  0009D0  90D8               	bcf	status,0,c
  3780  0009D2  339A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3781  0009D4  3399               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3782  0009D6  3398               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3783  0009D8  3397               	rrcf	??_CANSetFilter& (0+255),f,b
  3784  0009DA                     u4880:
  3785  0009DA  2EE8               	decfsz	wreg,f,c
  3786  0009DC  D7F8               	goto	u4885
  3787  0009DE  C097  F09C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3788  0009E2  C098  F09D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3789  0009E6  C099  F09E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3790  0009EA  C09A  F09F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;inc\CANlib.h: 991: tamp = tamp & 0x000000FF;
  3794  0009EE  0100               	movlb	0	; () banked
  3795  0009F0  519C               	movf	CANSetFilter@tamp& (0+255),w,b
  3796  0009F2  0100               	movlb	0	; () banked
  3797  0009F4  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  3798  0009F6  6B9D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3799  0009F8  6B9E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3800  0009FA  6B9F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;inc\CANlib.h: 992: RXF3SIDH = (unsigned char) tamp;
  3804  0009FC  C09C  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  3805  000A00                     l3789:
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;inc\CANlib.h: 993: }
  3809                           ;inc\CANlib.h: 995: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  3810  000A00  0E04               	movlw	4
  3811  000A02  0100               	movlb	0	; () banked
  3812  000A04  199B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3813  000A06  A4D8               	btfss	status,2,c
  3814  000A08  D089               	goto	l3823
  3815                           
  3816                           ; BSR set to: 0
  3817  000A0A  0EF7               	movlw	247
  3818  000A0C  0100               	movlb	0	; () banked
  3819  000A0E  1996               	xorwf	CANSetFilter@type& (0+255),w,b
  3820  000A10  A4D8               	btfss	status,2,c
  3821  000A12  D084               	goto	l3823
  3822                           
  3823                           ; BSR set to: 0
  3824                           ;inc\CANlib.h: 996: {
  3825                           ;inc\CANlib.h: 997: RXF4SIDLbits.EXIDEN = 0x01;
  3826  000A14  010F               	movlb	15	; () banked
  3827  000A16  8711               	bsf	17,3,b	;volatile
  3828                           
  3829                           ; BSR set to: 15
  3830                           ;inc\CANlib.h: 999: tamp = filter & 0x000000FF;
  3831  000A18  0100               	movlb	0	; () banked
  3832  000A1A  5192               	movf	CANSetFilter@filter& (0+255),w,b
  3833  000A1C  0100               	movlb	0	; () banked
  3834  000A1E  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  3835  000A20  6B9D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3836  000A22  6B9E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3837  000A24  6B9F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;inc\CANlib.h: 1000: RXF4EIDL = (unsigned char) tamp;
  3841  000A26  C09C  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  3842                           
  3843                           ; BSR set to: 0
  3844                           ;inc\CANlib.h: 1002: tamp = filter & 0x0000FF00;
  3845  000A2A  0E00               	movlw	0
  3846  000A2C  0100               	movlb	0	; () banked
  3847  000A2E  1592               	andwf	CANSetFilter@filter& (0+255),w,b
  3848  000A30  0100               	movlb	0	; () banked
  3849  000A32  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  3850  000A34  0EFF               	movlw	255
  3851  000A36  0100               	movlb	0	; () banked
  3852  000A38  1593               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3853  000A3A  0100               	movlb	0	; () banked
  3854  000A3C  6F9D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3855  000A3E  0E00               	movlw	0
  3856  000A40  0100               	movlb	0	; () banked
  3857  000A42  1594               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3858  000A44  0100               	movlb	0	; () banked
  3859  000A46  6F9E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3860  000A48  0E00               	movlw	0
  3861  000A4A  0100               	movlb	0	; () banked
  3862  000A4C  1595               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3863  000A4E  0100               	movlb	0	; () banked
  3864  000A50  6F9F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;inc\CANlib.h: 1003: tamp = tamp >> 8;
  3868  000A52  C09C  F097         	movff	CANSetFilter@tamp,??_CANSetFilter
  3869  000A56  C09D  F098         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3870  000A5A  C09E  F099         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3871  000A5E  C09F  F09A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3872  000A62  C098  F097         	movff	??_CANSetFilter+1,??_CANSetFilter
  3873  000A66  C099  F098         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3874  000A6A  C09A  F099         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3875  000A6E  0100               	movlb	0	; () banked
  3876  000A70  6B9A               	clrf	(??_CANSetFilter+3)& (0+255),b
  3877  000A72  C097  F09C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3878  000A76  C098  F09D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3879  000A7A  C099  F09E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3880  000A7E  C09A  F09F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;inc\CANlib.h: 1004: RXF4EIDH = (unsigned char) tamp;
  3884  000A82  C09C  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;inc\CANlib.h: 1006: if (filter & 0x00010000)
  3888  000A86  0100               	movlb	0	; () banked
  3889  000A88  A194               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3890  000A8A  D003               	goto	l481
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;inc\CANlib.h: 1007: RXF4SIDLbits.EID16 = 0x01;
  3894  000A8C  010F               	movlb	15	; () banked
  3895  000A8E  8111               	bsf	17,0,b	;volatile
  3896  000A90  D002               	goto	l482
  3897  000A92                     l481:
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;inc\CANlib.h: 1008: else
  3901                           ;inc\CANlib.h: 1009: RXF4SIDLbits.EID16 = 0x00;
  3902  000A92  010F               	movlb	15	; () banked
  3903  000A94  9111               	bcf	17,0,b	;volatile
  3904  000A96                     l482:
  3905                           
  3906                           ; BSR set to: 15
  3907                           ;inc\CANlib.h: 1011: if (filter & 0x00020000)
  3908  000A96  0100               	movlb	0	; () banked
  3909  000A98  A394               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3910  000A9A  D003               	goto	l483
  3911                           
  3912                           ; BSR set to: 0
  3913                           ;inc\CANlib.h: 1012: RXF4SIDLbits.EID17 = 0x01;
  3914  000A9C  010F               	movlb	15	; () banked
  3915  000A9E  8311               	bsf	17,1,b	;volatile
  3916  000AA0  D002               	goto	l484
  3917  000AA2                     l483:
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;inc\CANlib.h: 1013: else
  3921                           ;inc\CANlib.h: 1014: RXF4SIDLbits.EID17 = 0x00;
  3922  000AA2  010F               	movlb	15	; () banked
  3923  000AA4  9311               	bcf	17,1,b	;volatile
  3924  000AA6                     l484:
  3925                           
  3926                           ; BSR set to: 15
  3927                           ;inc\CANlib.h: 1016: if (filter & 0x00040000)
  3928  000AA6  0100               	movlb	0	; () banked
  3929  000AA8  A594               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3930  000AAA  D003               	goto	l485
  3931                           
  3932                           ; BSR set to: 0
  3933                           ;inc\CANlib.h: 1017: RXF4SIDLbits.SID0 = 0x01;
  3934  000AAC  010F               	movlb	15	; () banked
  3935  000AAE  8B11               	bsf	17,5,b	;volatile
  3936  000AB0  D002               	goto	l486
  3937  000AB2                     l485:
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;inc\CANlib.h: 1018: else
  3941                           ;inc\CANlib.h: 1019: RXF4SIDLbits.SID0 = 0x00;
  3942  000AB2  010F               	movlb	15	; () banked
  3943  000AB4  9B11               	bcf	17,5,b	;volatile
  3944  000AB6                     l486:
  3945                           
  3946                           ; BSR set to: 15
  3947                           ;inc\CANlib.h: 1021: if (filter & 0x00080000)
  3948  000AB6  0100               	movlb	0	; () banked
  3949  000AB8  A794               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  3950  000ABA  D003               	goto	l487
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;inc\CANlib.h: 1022: RXF4SIDLbits.SID1 = 0x01;
  3954  000ABC  010F               	movlb	15	; () banked
  3955  000ABE  8D11               	bsf	17,6,b	;volatile
  3956  000AC0  D002               	goto	l488
  3957  000AC2                     l487:
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;inc\CANlib.h: 1023: else
  3961                           ;inc\CANlib.h: 1024: RXF4SIDLbits.SID1 = 0x00;
  3962  000AC2  010F               	movlb	15	; () banked
  3963  000AC4  9D11               	bcf	17,6,b	;volatile
  3964  000AC6                     l488:
  3965                           
  3966                           ; BSR set to: 15
  3967                           ;inc\CANlib.h: 1026: if (filter & 0x00100000)
  3968  000AC6  0100               	movlb	0	; () banked
  3969  000AC8  A994               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  3970  000ACA  D003               	goto	l489
  3971                           
  3972                           ; BSR set to: 0
  3973                           ;inc\CANlib.h: 1027: RXF4SIDLbits.SID2 = 0x01 ;
  3974  000ACC  010F               	movlb	15	; () banked
  3975  000ACE  8F11               	bsf	17,7,b	;volatile
  3976  000AD0  D002               	goto	l3817
  3977  000AD2                     l489:
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;inc\CANlib.h: 1028: else
  3981                           ;inc\CANlib.h: 1029: RXF4SIDLbits.SID2 = 0x00 ;
  3982  000AD2  010F               	movlb	15	; () banked
  3983  000AD4  9F11               	bcf	17,7,b	;volatile
  3984  000AD6                     l3817:
  3985                           
  3986                           ; BSR set to: 15
  3987                           ;inc\CANlib.h: 1031: tamp = (filter >> 21);
  3988  000AD6  C092  F097         	movff	CANSetFilter@filter,??_CANSetFilter
  3989  000ADA  C093  F098         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3990  000ADE  C094  F099         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3991  000AE2  C095  F09A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3992  000AE6  0E16               	movlw	22
  3993  000AE8  D006               	goto	u4960
  3994  000AEA                     u4965:
  3995  000AEA  0100               	movlb	0	; () banked
  3996  000AEC  90D8               	bcf	status,0,c
  3997  000AEE  339A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3998  000AF0  3399               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3999  000AF2  3398               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4000  000AF4  3397               	rrcf	??_CANSetFilter& (0+255),f,b
  4001  000AF6                     u4960:
  4002  000AF6  2EE8               	decfsz	wreg,f,c
  4003  000AF8  D7F8               	goto	u4965
  4004  000AFA  C097  F09C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4005  000AFE  C098  F09D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4006  000B02  C099  F09E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4007  000B06  C09A  F09F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;inc\CANlib.h: 1032: tamp = tamp & 0x000000FF;
  4011  000B0A  0100               	movlb	0	; () banked
  4012  000B0C  519C               	movf	CANSetFilter@tamp& (0+255),w,b
  4013  000B0E  0100               	movlb	0	; () banked
  4014  000B10  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  4015  000B12  6B9D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4016  000B14  6B9E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4017  000B16  6B9F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;inc\CANlib.h: 1033: RXF4SIDH = (unsigned char) tamp;
  4021  000B18  C09C  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4022  000B1C                     l3823:
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;inc\CANlib.h: 1034: }
  4026                           ;inc\CANlib.h: 1036: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  4027  000B1C  0E05               	movlw	5
  4028  000B1E  0100               	movlb	0	; () banked
  4029  000B20  199B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4030  000B22  A4D8               	btfss	status,2,c
  4031  000B24  0012               	return	
  4032                           
  4033                           ; BSR set to: 0
  4034  000B26  0EF7               	movlw	247
  4035  000B28  0100               	movlb	0	; () banked
  4036  000B2A  1996               	xorwf	CANSetFilter@type& (0+255),w,b
  4037  000B2C  A4D8               	btfss	status,2,c
  4038  000B2E  0012               	return	
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;inc\CANlib.h: 1037: {
  4042                           ;inc\CANlib.h: 1038: RXF5SIDLbits.EXIDEN = 0x01;
  4043  000B30  010F               	movlb	15	; () banked
  4044  000B32  8715               	bsf	21,3,b	;volatile
  4045                           
  4046                           ; BSR set to: 15
  4047                           ;inc\CANlib.h: 1040: tamp = filter & 0x000000FF;
  4048  000B34  0100               	movlb	0	; () banked
  4049  000B36  5192               	movf	CANSetFilter@filter& (0+255),w,b
  4050  000B38  0100               	movlb	0	; () banked
  4051  000B3A  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  4052  000B3C  6B9D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4053  000B3E  6B9E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4054  000B40  6B9F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;inc\CANlib.h: 1041: RXF5EIDL = (unsigned char) tamp;
  4058  000B42  C09C  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;inc\CANlib.h: 1043: tamp = filter & 0x0000FF00;
  4062  000B46  0E00               	movlw	0
  4063  000B48  0100               	movlb	0	; () banked
  4064  000B4A  1592               	andwf	CANSetFilter@filter& (0+255),w,b
  4065  000B4C  0100               	movlb	0	; () banked
  4066  000B4E  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  4067  000B50  0EFF               	movlw	255
  4068  000B52  0100               	movlb	0	; () banked
  4069  000B54  1593               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4070  000B56  0100               	movlb	0	; () banked
  4071  000B58  6F9D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4072  000B5A  0E00               	movlw	0
  4073  000B5C  0100               	movlb	0	; () banked
  4074  000B5E  1594               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4075  000B60  0100               	movlb	0	; () banked
  4076  000B62  6F9E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4077  000B64  0E00               	movlw	0
  4078  000B66  0100               	movlb	0	; () banked
  4079  000B68  1595               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4080  000B6A  0100               	movlb	0	; () banked
  4081  000B6C  6F9F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;inc\CANlib.h: 1044: tamp = tamp >> 8;
  4085  000B6E  C09C  F097         	movff	CANSetFilter@tamp,??_CANSetFilter
  4086  000B72  C09D  F098         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4087  000B76  C09E  F099         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4088  000B7A  C09F  F09A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4089  000B7E  C098  F097         	movff	??_CANSetFilter+1,??_CANSetFilter
  4090  000B82  C099  F098         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4091  000B86  C09A  F099         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4092  000B8A  0100               	movlb	0	; () banked
  4093  000B8C  6B9A               	clrf	(??_CANSetFilter+3)& (0+255),b
  4094  000B8E  C097  F09C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4095  000B92  C098  F09D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4096  000B96  C099  F09E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4097  000B9A  C09A  F09F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;inc\CANlib.h: 1045: RXF5EIDH = (unsigned char) tamp;
  4101  000B9E  C09C  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;inc\CANlib.h: 1047: if (filter & 0x00010000)
  4105  000BA2  0100               	movlb	0	; () banked
  4106  000BA4  A194               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4107  000BA6  D003               	goto	l492
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;inc\CANlib.h: 1048: RXF5SIDLbits.EID16 = 0x01;
  4111  000BA8  010F               	movlb	15	; () banked
  4112  000BAA  8115               	bsf	21,0,b	;volatile
  4113  000BAC  D002               	goto	l493
  4114  000BAE                     l492:
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;inc\CANlib.h: 1049: else
  4118                           ;inc\CANlib.h: 1050: RXF5SIDLbits.EID16 = 0x00;
  4119  000BAE  010F               	movlb	15	; () banked
  4120  000BB0  9115               	bcf	21,0,b	;volatile
  4121  000BB2                     l493:
  4122                           
  4123                           ; BSR set to: 15
  4124                           ;inc\CANlib.h: 1052: if (filter & 0x00020000)
  4125  000BB2  0100               	movlb	0	; () banked
  4126  000BB4  A394               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4127  000BB6  D003               	goto	l494
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;inc\CANlib.h: 1053: RXF5SIDLbits.EID17 = 0x01;
  4131  000BB8  010F               	movlb	15	; () banked
  4132  000BBA  8315               	bsf	21,1,b	;volatile
  4133  000BBC  D002               	goto	l495
  4134  000BBE                     l494:
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;inc\CANlib.h: 1054: else
  4138                           ;inc\CANlib.h: 1055: RXF5SIDLbits.EID17 = 0x00;
  4139  000BBE  010F               	movlb	15	; () banked
  4140  000BC0  9315               	bcf	21,1,b	;volatile
  4141  000BC2                     l495:
  4142                           
  4143                           ; BSR set to: 15
  4144                           ;inc\CANlib.h: 1057: if (filter & 0x00040000)
  4145  000BC2  0100               	movlb	0	; () banked
  4146  000BC4  A594               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4147  000BC6  D003               	goto	l496
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;inc\CANlib.h: 1058: RXF5SIDLbits.SID0 = 0x01;
  4151  000BC8  010F               	movlb	15	; () banked
  4152  000BCA  8B15               	bsf	21,5,b	;volatile
  4153  000BCC  D002               	goto	l497
  4154  000BCE                     l496:
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;inc\CANlib.h: 1059: else
  4158                           ;inc\CANlib.h: 1060: RXF5SIDLbits.SID0 = 0x00;
  4159  000BCE  010F               	movlb	15	; () banked
  4160  000BD0  9B15               	bcf	21,5,b	;volatile
  4161  000BD2                     l497:
  4162                           
  4163                           ; BSR set to: 15
  4164                           ;inc\CANlib.h: 1062: if (filter & 0x00080000)
  4165  000BD2  0100               	movlb	0	; () banked
  4166  000BD4  A794               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4167  000BD6  D003               	goto	l498
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;inc\CANlib.h: 1063: RXF5SIDLbits.SID1 = 0x01;
  4171  000BD8  010F               	movlb	15	; () banked
  4172  000BDA  8D15               	bsf	21,6,b	;volatile
  4173  000BDC  D002               	goto	l499
  4174  000BDE                     l498:
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;inc\CANlib.h: 1064: else
  4178                           ;inc\CANlib.h: 1065: RXF5SIDLbits.SID1 = 0x00;
  4179  000BDE  010F               	movlb	15	; () banked
  4180  000BE0  9D15               	bcf	21,6,b	;volatile
  4181  000BE2                     l499:
  4182                           
  4183                           ; BSR set to: 15
  4184                           ;inc\CANlib.h: 1067: if (filter & 0x00100000)
  4185  000BE2  0100               	movlb	0	; () banked
  4186  000BE4  A994               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4187  000BE6  D003               	goto	l500
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;inc\CANlib.h: 1068: RXF5SIDLbits.SID2 = 0x01 ;
  4191  000BE8  010F               	movlb	15	; () banked
  4192  000BEA  8F15               	bsf	21,7,b	;volatile
  4193  000BEC  D002               	goto	l3851
  4194  000BEE                     l500:
  4195                           
  4196                           ; BSR set to: 0
  4197                           ;inc\CANlib.h: 1069: else
  4198                           ;inc\CANlib.h: 1070: RXF5SIDLbits.SID2 = 0x00 ;
  4199  000BEE  010F               	movlb	15	; () banked
  4200  000BF0  9F15               	bcf	21,7,b	;volatile
  4201  000BF2                     l3851:
  4202                           
  4203                           ; BSR set to: 15
  4204                           ;inc\CANlib.h: 1072: tamp = (filter >> 21);
  4205  000BF2  C092  F097         	movff	CANSetFilter@filter,??_CANSetFilter
  4206  000BF6  C093  F098         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4207  000BFA  C094  F099         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4208  000BFE  C095  F09A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4209  000C02  0E16               	movlw	22
  4210  000C04  D006               	goto	u5040
  4211  000C06                     u5045:
  4212  000C06  0100               	movlb	0	; () banked
  4213  000C08  90D8               	bcf	status,0,c
  4214  000C0A  339A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4215  000C0C  3399               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4216  000C0E  3398               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4217  000C10  3397               	rrcf	??_CANSetFilter& (0+255),f,b
  4218  000C12                     u5040:
  4219  000C12  2EE8               	decfsz	wreg,f,c
  4220  000C14  D7F8               	goto	u5045
  4221  000C16  C097  F09C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4222  000C1A  C098  F09D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4223  000C1E  C099  F09E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4224  000C22  C09A  F09F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;inc\CANlib.h: 1073: tamp = tamp & 0x000000FF;
  4228  000C26  0100               	movlb	0	; () banked
  4229  000C28  519C               	movf	CANSetFilter@tamp& (0+255),w,b
  4230  000C2A  0100               	movlb	0	; () banked
  4231  000C2C  6F9C               	movwf	CANSetFilter@tamp& (0+255),b
  4232  000C2E  6B9D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4233  000C30  6B9E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4234  000C32  6B9F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4235                           
  4236                           ; BSR set to: 0
  4237                           ;inc\CANlib.h: 1074: RXF5SIDH = (unsigned char) tamp;
  4238  000C34  C09C  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4239  000C38  0012               	return	
  4240  000C3A                     __end_of_CANSetFilter:
  4241                           	opt stack 0
  4242                           tblptru	equ	0xFF8
  4243                           tblptrh	equ	0xFF7
  4244                           tblptrl	equ	0xFF6
  4245                           tablat	equ	0xFF5
  4246                           intcon	equ	0xFF2
  4247                           postinc0	equ	0xFEE
  4248                           wreg	equ	0xFE8
  4249                           indf2	equ	0xFDF
  4250                           fsr2h	equ	0xFDA
  4251                           fsr2l	equ	0xFD9
  4252                           status	equ	0xFD8
  4253                           
  4254 ;; *************** function _CANOperationMode *****************
  4255 ;; Defined at:
  4256 ;;		line 206 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;  mode            1    wreg     enum E16700
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;  mode            1   29[COMRAM] enum E16700
  4261 ;; Return value:  Size  Location     Type
  4262 ;;                  1    wreg      void 
  4263 ;; Registers used:
  4264 ;;		wreg, status,2, status,0
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4270 ;;      Params:         0       0       0       0
  4271 ;;      Locals:         1       0       0       0
  4272 ;;      Temps:          0       0       0       0
  4273 ;;      Totals:         1       0       0       0
  4274 ;;Total ram usage:        1 bytes
  4275 ;; Hardware stack levels used:    1
  4276 ;; Hardware stack levels required when called:    3
  4277 ;; This function calls:
  4278 ;;		Nothing
  4279 ;; This function is called by:
  4280 ;;		_CANInitialize
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284                           	psect	text8
  4285  0020FA                     __ptext8:
  4286                           	opt stack 0
  4287  0020FA                     _CANOperationMode:
  4288                           	opt stack 25
  4289                           
  4290                           ; BSR set to: 0
  4291                           ;incstack = 0
  4292                           ;CANOperationMode@mode stored from wreg
  4293  0020FA  6E3E               	movwf	CANOperationMode@mode,c
  4294                           
  4295                           ;inc\CANlib.h: 208: CANCON = mode;
  4296  0020FC  C03E  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  4297  002100                     l3447:
  4298  002100  506E               	movf	3950,w,c	;volatile
  4299  002102  0BE0               	andlw	224
  4300  002104  183E               	xorwf	CANOperationMode@mode,w,c
  4301  002106  B4D8               	btfsc	status,2,c
  4302  002108  0012               	return	
  4303  00210A  D7FA               	goto	l3447
  4304  00210C                     __end_of_CANOperationMode:
  4305                           	opt stack 0
  4306                           tblptru	equ	0xFF8
  4307                           tblptrh	equ	0xFF7
  4308                           tblptrl	equ	0xFF6
  4309                           tablat	equ	0xFF5
  4310                           intcon	equ	0xFF2
  4311                           postinc0	equ	0xFEE
  4312                           wreg	equ	0xFE8
  4313                           indf2	equ	0xFDF
  4314                           fsr2h	equ	0xFDA
  4315                           fsr2l	equ	0xFD9
  4316                           status	equ	0xFD8
  4317                           
  4318 ;; *************** function _can_interpreter *****************
  4319 ;; Defined at:
  4320 ;;		line 106 in file "CanToSerial.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;		None
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;		None
  4325 ;; Return value:  Size  Location     Type
  4326 ;;                  1    wreg      void 
  4327 ;; Registers used:
  4328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4334 ;;      Params:         0       0       0       0
  4335 ;;      Locals:         0       0       0       0
  4336 ;;      Temps:          0       0       0       0
  4337 ;;      Totals:         0       0       0       0
  4338 ;;Total ram usage:        0 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; Hardware stack levels required when called:    4
  4341 ;; This function calls:
  4342 ;;		_CANsendMessage
  4343 ;; This function is called by:
  4344 ;;		_main
  4345 ;; This function uses a non-reentrant model
  4346 ;;
  4347                           
  4348                           	psect	text9
  4349  001FEA                     __ptext9:
  4350                           	opt stack 0
  4351  001FEA                     _can_interpreter:
  4352                           	opt stack 26
  4353                           
  4354                           ;CanToSerial.c: 107: if (id == 0b00000000000000000000000000010) {
  4355                           
  4356                           ;incstack = 0
  4357  001FEA  0E02               	movlw	2
  4358  001FEC  1809               	xorwf	_id,w,c
  4359  001FEE  100A               	iorwf	_id+1,w,c
  4360  001FF0  100B               	iorwf	_id+2,w,c
  4361  001FF2  100C               	iorwf	_id+3,w,c
  4362  001FF4  A4D8               	btfss	status,2,c
  4363  001FF6  0012               	return	
  4364                           
  4365                           ;CanToSerial.c: 109: CANsendMessage(id, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRAM
      +                          E & CAN_TX_PRIORITY_0);
  4366  001FF8  C009  F092         	movff	_id,CANsendMessage@identifier
  4367  001FFC  C00A  F093         	movff	_id+1,CANsendMessage@identifier+1
  4368  002000  C00B  F094         	movff	_id+2,CANsendMessage@identifier+2
  4369  002004  C00C  F095         	movff	_id+3,CANsendMessage@identifier+3
  4370  002008  0E82               	movlw	low _data
  4371  00200A  0100               	movlb	0	; () banked
  4372  00200C  6F96               	movwf	CANsendMessage@data& (0+255),b
  4373  00200E  0E00               	movlw	high _data
  4374  002010  0100               	movlb	0	; () banked
  4375  002012  6F97               	movwf	(CANsendMessage@data+1)& (0+255),b
  4376  002014  0E08               	movlw	8
  4377  002016  0100               	movlb	0	; () banked
  4378  002018  6F98               	movwf	CANsendMessage@dataLength& (0+255),b
  4379  00201A  0EBC               	movlw	188
  4380  00201C  0100               	movlb	0	; () banked
  4381  00201E  6F99               	movwf	CANsendMessage@flags& (0+255),b
  4382  002020  EC1D  F006         	call	_CANsendMessage	;wreg free
  4383                           
  4384                           ;CanToSerial.c: 111: } else {
  4385  002024  0012               	return	
  4386  002026                     __end_of_can_interpreter:
  4387                           	opt stack 0
  4388                           tblptru	equ	0xFF8
  4389                           tblptrh	equ	0xFF7
  4390                           tblptrl	equ	0xFF6
  4391                           tablat	equ	0xFF5
  4392                           intcon	equ	0xFF2
  4393                           postinc0	equ	0xFEE
  4394                           wreg	equ	0xFE8
  4395                           indf2	equ	0xFDF
  4396                           fsr2h	equ	0xFDA
  4397                           fsr2l	equ	0xFD9
  4398                           status	equ	0xFD8
  4399                           
  4400 ;; *************** function _CANsendMessage *****************
  4401 ;; Defined at:
  4402 ;;		line 293 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;  identifier      4    0[BANK0 ] unsigned long 
  4405 ;;  data            2    4[BANK0 ] PTR unsigned char 
  4406 ;;		 -> data(8), analogic_brake(8), set_speed(8), set_steering(8), 
  4407 ;;  dataLength      1    6[BANK0 ] unsigned char 
  4408 ;;  flags           1    7[BANK0 ] enum E16728
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;  tamp            4   12[BANK0 ] unsigned long 
  4411 ;; Return value:  Size  Location     Type
  4412 ;;                  1    wreg      void 
  4413 ;; Registers used:
  4414 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4415 ;; Tracked objects:
  4416 ;;		On entry : 0/0
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4420 ;;      Params:         0       8       0       0
  4421 ;;      Locals:         0       4       0       0
  4422 ;;      Temps:          0       4       0       0
  4423 ;;      Totals:         0      16       0       0
  4424 ;;Total ram usage:       16 bytes
  4425 ;; Hardware stack levels used:    1
  4426 ;; Hardware stack levels required when called:    3
  4427 ;; This function calls:
  4428 ;;		Nothing
  4429 ;; This function is called by:
  4430 ;;		_main
  4431 ;;		_can_interpreter
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435                           	psect	text10
  4436  000C3A                     __ptext10:
  4437                           	opt stack 0
  4438  000C3A                     _CANsendMessage:
  4439                           	opt stack 26
  4440                           
  4441                           ;inc\CANlib.h: 295: unsigned long tamp;
  4442                           ;inc\CANlib.h: 297: if (TXB0CONbits.TXREQ == 0)
  4443                           
  4444                           ;incstack = 0
  4445  000C3A  010F               	movlb	15	; () banked
  4446  000C3C  B740               	btfsc	64,3,b	;volatile
  4447  000C3E  D13F               	goto	l337
  4448                           
  4449                           ; BSR set to: 15
  4450                           ;inc\CANlib.h: 298: { TXB0DLC = dataLength;
  4451  000C40  C098  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  4452                           
  4453                           ;inc\CANlib.h: 299: if (0b01000000 & flags)
  4454  000C44  0100               	movlb	0	; () banked
  4455  000C46  AD99               	btfss	CANsendMessage@flags& (0+255),6,b
  4456  000C48  D003               	goto	l338
  4457                           
  4458                           ; BSR set to: 0
  4459                           ;inc\CANlib.h: 300: TXB0DLCbits.TXRTR = 0x01;
  4460  000C4A  010F               	movlb	15	; () banked
  4461  000C4C  8D45               	bsf	69,6,b	;volatile
  4462  000C4E  D002               	goto	l339
  4463  000C50                     l338:
  4464                           
  4465                           ; BSR set to: 0
  4466                           ;inc\CANlib.h: 301: else
  4467                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x00;
  4468  000C50  010F               	movlb	15	; () banked
  4469  000C52  9D45               	bcf	69,6,b	;volatile
  4470  000C54                     l339:
  4471                           
  4472                           ; BSR set to: 15
  4473                           ;inc\CANlib.h: 304: if (CAN_TX_FRAME_MASK & flags)
  4474  000C54  0100               	movlb	0	; () banked
  4475  000C56  A799               	btfss	CANsendMessage@flags& (0+255),3,b
  4476  000C58  D079               	goto	l340
  4477                           
  4478                           ; BSR set to: 0
  4479                           ;inc\CANlib.h: 305: {
  4480                           ;inc\CANlib.h: 307: tamp = identifier & 0x000000FF;
  4481  000C5A  0100               	movlb	0	; () banked
  4482  000C5C  5192               	movf	CANsendMessage@identifier& (0+255),w,b
  4483  000C5E  0100               	movlb	0	; () banked
  4484  000C60  6F9E               	movwf	CANsendMessage@tamp& (0+255),b
  4485  000C62  6B9F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4486  000C64  6BA0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4487  000C66  6BA1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;inc\CANlib.h: 308: TXB0EIDL = (unsigned char) tamp;
  4491  000C68  C09E  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  4492                           
  4493                           ; BSR set to: 0
  4494                           ;inc\CANlib.h: 310: tamp = identifier & 0x0000FF00;
  4495  000C6C  0E00               	movlw	0
  4496  000C6E  0100               	movlb	0	; () banked
  4497  000C70  1592               	andwf	CANsendMessage@identifier& (0+255),w,b
  4498  000C72  0100               	movlb	0	; () banked
  4499  000C74  6F9E               	movwf	CANsendMessage@tamp& (0+255),b
  4500  000C76  0EFF               	movlw	255
  4501  000C78  0100               	movlb	0	; () banked
  4502  000C7A  1593               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4503  000C7C  0100               	movlb	0	; () banked
  4504  000C7E  6F9F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4505  000C80  0E00               	movlw	0
  4506  000C82  0100               	movlb	0	; () banked
  4507  000C84  1594               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4508  000C86  0100               	movlb	0	; () banked
  4509  000C88  6FA0               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4510  000C8A  0E00               	movlw	0
  4511  000C8C  0100               	movlb	0	; () banked
  4512  000C8E  1595               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4513  000C90  0100               	movlb	0	; () banked
  4514  000C92  6FA1               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;inc\CANlib.h: 311: tamp = tamp >> 8;
  4518  000C94  C09E  F09A         	movff	CANsendMessage@tamp,??_CANsendMessage
  4519  000C98  C09F  F09B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4520  000C9C  C0A0  F09C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4521  000CA0  C0A1  F09D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4522  000CA4  C09B  F09A         	movff	??_CANsendMessage+1,??_CANsendMessage
  4523  000CA8  C09C  F09B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  4524  000CAC  C09D  F09C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  4525  000CB0  0100               	movlb	0	; () banked
  4526  000CB2  6B9D               	clrf	(??_CANsendMessage+3)& (0+255),b
  4527  000CB4  C09A  F09E         	movff	??_CANsendMessage,CANsendMessage@tamp
  4528  000CB8  C09B  F09F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4529  000CBC  C09C  F0A0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4530  000CC0  C09D  F0A1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;inc\CANlib.h: 312: TXB0EIDH = (unsigned char) tamp;
  4534  000CC4  C09E  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  4535                           
  4536                           ; BSR set to: 0
  4537                           ;inc\CANlib.h: 314: TXB0SIDL = 0x00;
  4538  000CC8  0E00               	movlw	0
  4539  000CCA  010F               	movlb	15	; () banked
  4540  000CCC  6F42               	movwf	66,b	;volatile
  4541                           
  4542                           ; BSR set to: 15
  4543                           ;inc\CANlib.h: 315: TXB0SIDLbits.EXIDE = 0x01;
  4544  000CCE  010F               	movlb	15	; () banked
  4545  000CD0  8742               	bsf	66,3,b	;volatile
  4546                           
  4547                           ; BSR set to: 15
  4548                           ;inc\CANlib.h: 317: if (identifier & 0x00010000)
  4549  000CD2  0100               	movlb	0	; () banked
  4550  000CD4  A194               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  4551  000CD6  D002               	goto	l341
  4552                           
  4553                           ; BSR set to: 0
  4554                           ;inc\CANlib.h: 318: TXB0SIDLbits.EID16 = 0x01;
  4555  000CD8  010F               	movlb	15	; () banked
  4556  000CDA  8142               	bsf	66,0,b	;volatile
  4557  000CDC                     l341:
  4558                           
  4559                           ;inc\CANlib.h: 319: if (identifier & 0x00020000)
  4560  000CDC  0100               	movlb	0	; () banked
  4561  000CDE  A394               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  4562  000CE0  D002               	goto	l342
  4563                           
  4564                           ; BSR set to: 0
  4565                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID17 = 0x01;
  4566  000CE2  010F               	movlb	15	; () banked
  4567  000CE4  8342               	bsf	66,1,b	;volatile
  4568  000CE6                     l342:
  4569                           
  4570                           ;inc\CANlib.h: 321: if (identifier & 0x00040000)
  4571  000CE6  0100               	movlb	0	; () banked
  4572  000CE8  A594               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  4573  000CEA  D002               	goto	l343
  4574                           
  4575                           ; BSR set to: 0
  4576                           ;inc\CANlib.h: 322: TXB0SIDLbits.SID0 = 0x01;
  4577  000CEC  010F               	movlb	15	; () banked
  4578  000CEE  8B42               	bsf	66,5,b	;volatile
  4579  000CF0                     l343:
  4580                           
  4581                           ;inc\CANlib.h: 323: if (identifier & 0x00080000)
  4582  000CF0  0100               	movlb	0	; () banked
  4583  000CF2  A794               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  4584  000CF4  D002               	goto	l344
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID1 = 0x01;
  4588  000CF6  010F               	movlb	15	; () banked
  4589  000CF8  8D42               	bsf	66,6,b	;volatile
  4590  000CFA                     l344:
  4591                           
  4592                           ;inc\CANlib.h: 325: if (identifier & 0x00100000)
  4593  000CFA  0100               	movlb	0	; () banked
  4594  000CFC  A994               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  4595  000CFE  D002               	goto	l3941
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID2 = 0x01;
  4599  000D00  010F               	movlb	15	; () banked
  4600  000D02  8F42               	bsf	66,7,b	;volatile
  4601  000D04                     l3941:
  4602                           
  4603                           ;inc\CANlib.h: 328: tamp = (identifier >> 21);
  4604  000D04  C092  F09A         	movff	CANsendMessage@identifier,??_CANsendMessage
  4605  000D08  C093  F09B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4606  000D0C  C094  F09C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4607  000D10  C095  F09D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4608  000D14  0E16               	movlw	22
  4609  000D16  D006               	goto	u5170
  4610  000D18                     u5175:
  4611  000D18  0100               	movlb	0	; () banked
  4612  000D1A  90D8               	bcf	status,0,c
  4613  000D1C  339D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4614  000D1E  339C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4615  000D20  339B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4616  000D22  339A               	rrcf	??_CANsendMessage& (0+255),f,b
  4617  000D24                     u5170:
  4618  000D24  2EE8               	decfsz	wreg,f,c
  4619  000D26  D7F8               	goto	u5175
  4620  000D28  C09A  F09E         	movff	??_CANsendMessage,CANsendMessage@tamp
  4621  000D2C  C09B  F09F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4622  000D30  C09C  F0A0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4623  000D34  C09D  F0A1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4624                           
  4625                           ; BSR set to: 0
  4626                           ;inc\CANlib.h: 329: tamp = tamp & 0x000000FF;
  4627  000D38  0100               	movlb	0	; () banked
  4628  000D3A  519E               	movf	CANsendMessage@tamp& (0+255),w,b
  4629  000D3C  0100               	movlb	0	; () banked
  4630  000D3E  6F9E               	movwf	CANsendMessage@tamp& (0+255),b
  4631  000D40  6B9F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4632  000D42  6BA0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4633  000D44  6BA1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4634                           
  4635                           ; BSR set to: 0
  4636                           ;inc\CANlib.h: 330: TXB0SIDH = (unsigned char) tamp;
  4637  000D46  C09E  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  4638                           
  4639                           ;inc\CANlib.h: 331: }
  4640  000D4A  D059               	goto	l3961
  4641  000D4C                     l340:
  4642                           
  4643                           ; BSR set to: 0
  4644                           ;inc\CANlib.h: 333: else
  4645                           ;inc\CANlib.h: 335: {
  4646                           ;inc\CANlib.h: 336: TXB0SIDLbits.EXIDE = 0x00;
  4647  000D4C  010F               	movlb	15	; () banked
  4648  000D4E  9742               	bcf	66,3,b	;volatile
  4649                           
  4650                           ; BSR set to: 15
  4651                           ;inc\CANlib.h: 338: tamp = (identifier >> 3);
  4652  000D50  C092  F09A         	movff	CANsendMessage@identifier,??_CANsendMessage
  4653  000D54  C093  F09B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4654  000D58  C094  F09C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4655  000D5C  C095  F09D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4656  000D60  0E04               	movlw	4
  4657  000D62  D006               	goto	u5180
  4658  000D64                     u5185:
  4659  000D64  0100               	movlb	0	; () banked
  4660  000D66  90D8               	bcf	status,0,c
  4661  000D68  339D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4662  000D6A  339C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4663  000D6C  339B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4664  000D6E  339A               	rrcf	??_CANsendMessage& (0+255),f,b
  4665  000D70                     u5180:
  4666  000D70  2EE8               	decfsz	wreg,f,c
  4667  000D72  D7F8               	goto	u5185
  4668  000D74  C09A  F09E         	movff	??_CANsendMessage,CANsendMessage@tamp
  4669  000D78  C09B  F09F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4670  000D7C  C09C  F0A0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4671  000D80  C09D  F0A1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;inc\CANlib.h: 339: tamp = tamp & 0x000000FF;
  4675  000D84  0100               	movlb	0	; () banked
  4676  000D86  519E               	movf	CANsendMessage@tamp& (0+255),w,b
  4677  000D88  0100               	movlb	0	; () banked
  4678  000D8A  6F9E               	movwf	CANsendMessage@tamp& (0+255),b
  4679  000D8C  6B9F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4680  000D8E  6BA0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4681  000D90  6BA1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4682                           
  4683                           ; BSR set to: 0
  4684                           ;inc\CANlib.h: 340: TXB0SIDH = (unsigned char) tamp;
  4685  000D92  C09E  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;inc\CANlib.h: 342: tamp = identifier & 0x00000007;
  4689  000D96  0E07               	movlw	7
  4690  000D98  0100               	movlb	0	; () banked
  4691  000D9A  1592               	andwf	CANsendMessage@identifier& (0+255),w,b
  4692  000D9C  0100               	movlb	0	; () banked
  4693  000D9E  6F9E               	movwf	CANsendMessage@tamp& (0+255),b
  4694  000DA0  0E00               	movlw	0
  4695  000DA2  0100               	movlb	0	; () banked
  4696  000DA4  1593               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4697  000DA6  0100               	movlb	0	; () banked
  4698  000DA8  6F9F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4699  000DAA  0E00               	movlw	0
  4700  000DAC  0100               	movlb	0	; () banked
  4701  000DAE  1594               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4702  000DB0  0100               	movlb	0	; () banked
  4703  000DB2  6FA0               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4704  000DB4  0E00               	movlw	0
  4705  000DB6  0100               	movlb	0	; () banked
  4706  000DB8  1595               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4707  000DBA  0100               	movlb	0	; () banked
  4708  000DBC  6FA1               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;inc\CANlib.h: 343: tamp = tamp << 5;
  4712  000DBE  C09E  F09A         	movff	CANsendMessage@tamp,??_CANsendMessage
  4713  000DC2  C09F  F09B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4714  000DC6  C0A0  F09C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4715  000DCA  C0A1  F09D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4716  000DCE  0E05               	movlw	5
  4717  000DD0                     u5195:
  4718  000DD0  90D8               	bcf	status,0,c
  4719  000DD2  0100               	movlb	0	; () banked
  4720  000DD4  379A               	rlcf	??_CANsendMessage& (0+255),f,b
  4721  000DD6  379B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  4722  000DD8  379C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  4723  000DDA  379D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  4724  000DDC  2EE8               	decfsz	wreg,f,c
  4725  000DDE  D7F8               	goto	u5195
  4726  000DE0  C09A  F09E         	movff	??_CANsendMessage,CANsendMessage@tamp
  4727  000DE4  C09B  F09F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4728  000DE8  C09C  F0A0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4729  000DEC  C09D  F0A1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;inc\CANlib.h: 344: TXB0SIDL = TXB0SIDL & 0b00011111;
  4733  000DF0  010F               	movlb	15	; () banked
  4734  000DF2  5142               	movf	66,w,b	;volatile
  4735  000DF4  0B1F               	andlw	31
  4736  000DF6  010F               	movlb	15	; () banked
  4737  000DF8  6F42               	movwf	66,b	;volatile
  4738                           
  4739                           ; BSR set to: 15
  4740                           ;inc\CANlib.h: 345: TXB0SIDL = (unsigned char) tamp;
  4741  000DFA  C09E  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  4742  000DFE                     l3961:
  4743                           
  4744                           ;inc\CANlib.h: 346: }
  4745                           ;inc\CANlib.h: 348: if (0b00000001 & flags)
  4746  000DFE  0100               	movlb	0	; () banked
  4747  000E00  A199               	btfss	CANsendMessage@flags& (0+255),0,b
  4748  000E02  D003               	goto	l347
  4749                           
  4750                           ; BSR set to: 0
  4751                           ;inc\CANlib.h: 349: TXB0CONbits.TXPRI0 = 0x01;
  4752  000E04  010F               	movlb	15	; () banked
  4753  000E06  8140               	bsf	64,0,b	;volatile
  4754  000E08  D002               	goto	l348
  4755  000E0A                     l347:
  4756                           
  4757                           ; BSR set to: 0
  4758                           ;inc\CANlib.h: 350: else
  4759                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x00;
  4760  000E0A  010F               	movlb	15	; () banked
  4761  000E0C  9140               	bcf	64,0,b	;volatile
  4762  000E0E                     l348:
  4763                           
  4764                           ; BSR set to: 15
  4765                           ;inc\CANlib.h: 352: if (0b00000010 & flags)
  4766  000E0E  0100               	movlb	0	; () banked
  4767  000E10  A399               	btfss	CANsendMessage@flags& (0+255),1,b
  4768  000E12  D003               	goto	l349
  4769                           
  4770                           ; BSR set to: 0
  4771                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI1 = 0x01;
  4772  000E14  010F               	movlb	15	; () banked
  4773  000E16  8340               	bsf	64,1,b	;volatile
  4774  000E18  D002               	goto	l3967
  4775  000E1A                     l349:
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;inc\CANlib.h: 354: else
  4779                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x00;
  4780  000E1A  010F               	movlb	15	; () banked
  4781  000E1C  9340               	bcf	64,1,b	;volatile
  4782  000E1E                     l3967:
  4783                           
  4784                           ; BSR set to: 15
  4785                           ;inc\CANlib.h: 357: TXB0D0 = data[0];
  4786  000E1E  C096  FFD9         	movff	CANsendMessage@data,fsr2l
  4787  000E22  C097  FFDA         	movff	CANsendMessage@data+1,fsr2h
  4788  000E26  50DF               	movf	indf2,w,c
  4789  000E28  010F               	movlb	15	; () banked
  4790  000E2A  6F46               	movwf	70,b	;volatile
  4791                           
  4792                           ; BSR set to: 15
  4793                           ;inc\CANlib.h: 358: TXB0D1 = data[1];
  4794  000E2C  0100               	movlb	0	; () banked
  4795  000E2E  EE20 F001          	lfsr	2,1
  4796  000E32  5196               	movf	CANsendMessage@data& (0+255),w,b
  4797  000E34  26D9               	addwf	fsr2l,f,c
  4798  000E36  5197               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4799  000E38  22DA               	addwfc	fsr2h,f,c
  4800  000E3A  50DF               	movf	indf2,w,c
  4801  000E3C  010F               	movlb	15	; () banked
  4802  000E3E  6F47               	movwf	71,b	;volatile
  4803                           
  4804                           ; BSR set to: 15
  4805                           ;inc\CANlib.h: 359: TXB0D2 = data[2];
  4806  000E40  0100               	movlb	0	; () banked
  4807  000E42  EE20 F002          	lfsr	2,2
  4808  000E46  5196               	movf	CANsendMessage@data& (0+255),w,b
  4809  000E48  26D9               	addwf	fsr2l,f,c
  4810  000E4A  5197               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4811  000E4C  22DA               	addwfc	fsr2h,f,c
  4812  000E4E  50DF               	movf	indf2,w,c
  4813  000E50  010F               	movlb	15	; () banked
  4814  000E52  6F48               	movwf	72,b	;volatile
  4815                           
  4816                           ; BSR set to: 15
  4817                           ;inc\CANlib.h: 360: TXB0D3 = data[3];
  4818  000E54  0100               	movlb	0	; () banked
  4819  000E56  EE20 F003          	lfsr	2,3
  4820  000E5A  5196               	movf	CANsendMessage@data& (0+255),w,b
  4821  000E5C  26D9               	addwf	fsr2l,f,c
  4822  000E5E  5197               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4823  000E60  22DA               	addwfc	fsr2h,f,c
  4824  000E62  50DF               	movf	indf2,w,c
  4825  000E64  010F               	movlb	15	; () banked
  4826  000E66  6F49               	movwf	73,b	;volatile
  4827                           
  4828                           ; BSR set to: 15
  4829                           ;inc\CANlib.h: 361: TXB0D4 = data[4];
  4830  000E68  0100               	movlb	0	; () banked
  4831  000E6A  EE20 F004          	lfsr	2,4
  4832  000E6E  5196               	movf	CANsendMessage@data& (0+255),w,b
  4833  000E70  26D9               	addwf	fsr2l,f,c
  4834  000E72  5197               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4835  000E74  22DA               	addwfc	fsr2h,f,c
  4836  000E76  50DF               	movf	indf2,w,c
  4837  000E78  010F               	movlb	15	; () banked
  4838  000E7A  6F4A               	movwf	74,b	;volatile
  4839                           
  4840                           ; BSR set to: 15
  4841                           ;inc\CANlib.h: 362: TXB0D5 = data[5];
  4842  000E7C  0100               	movlb	0	; () banked
  4843  000E7E  EE20 F005          	lfsr	2,5
  4844  000E82  5196               	movf	CANsendMessage@data& (0+255),w,b
  4845  000E84  26D9               	addwf	fsr2l,f,c
  4846  000E86  5197               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4847  000E88  22DA               	addwfc	fsr2h,f,c
  4848  000E8A  50DF               	movf	indf2,w,c
  4849  000E8C  010F               	movlb	15	; () banked
  4850  000E8E  6F4B               	movwf	75,b	;volatile
  4851                           
  4852                           ; BSR set to: 15
  4853                           ;inc\CANlib.h: 363: TXB0D6 = data[6];
  4854  000E90  0100               	movlb	0	; () banked
  4855  000E92  EE20 F006          	lfsr	2,6
  4856  000E96  5196               	movf	CANsendMessage@data& (0+255),w,b
  4857  000E98  26D9               	addwf	fsr2l,f,c
  4858  000E9A  5197               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4859  000E9C  22DA               	addwfc	fsr2h,f,c
  4860  000E9E  50DF               	movf	indf2,w,c
  4861  000EA0  010F               	movlb	15	; () banked
  4862  000EA2  6F4C               	movwf	76,b	;volatile
  4863                           
  4864                           ; BSR set to: 15
  4865                           ;inc\CANlib.h: 364: TXB0D7 = data[7];
  4866  000EA4  0100               	movlb	0	; () banked
  4867  000EA6  EE20 F007          	lfsr	2,7
  4868  000EAA  5196               	movf	CANsendMessage@data& (0+255),w,b
  4869  000EAC  26D9               	addwf	fsr2l,f,c
  4870  000EAE  5197               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4871  000EB0  22DA               	addwfc	fsr2h,f,c
  4872  000EB2  50DF               	movf	indf2,w,c
  4873  000EB4  010F               	movlb	15	; () banked
  4874  000EB6  6F4D               	movwf	77,b	;volatile
  4875                           
  4876                           ; BSR set to: 15
  4877                           ;inc\CANlib.h: 366: TXB0CONbits.TXREQ = 0x01;
  4878  000EB8  010F               	movlb	15	; () banked
  4879  000EBA  8740               	bsf	64,3,b	;volatile
  4880                           
  4881                           ; BSR set to: 15
  4882                           ;inc\CANlib.h: 367: return;
  4883  000EBC  0012               	return	
  4884  000EBE                     l337:
  4885                           
  4886                           ; BSR set to: 15
  4887                           ;inc\CANlib.h: 368: }
  4888                           ;inc\CANlib.h: 372: if (TXB1CONbits.TXREQ == 0)
  4889  000EBE  010F               	movlb	15	; () banked
  4890  000EC0  B730               	btfsc	48,3,b	;volatile
  4891  000EC2  D13F               	goto	l352
  4892                           
  4893                           ; BSR set to: 15
  4894                           ;inc\CANlib.h: 373: { TXB1DLC = dataLength;
  4895  000EC4  C098  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  4896                           
  4897                           ;inc\CANlib.h: 375: if (0b01000000 & flags)
  4898  000EC8  0100               	movlb	0	; () banked
  4899  000ECA  AD99               	btfss	CANsendMessage@flags& (0+255),6,b
  4900  000ECC  D003               	goto	l353
  4901                           
  4902                           ; BSR set to: 0
  4903                           ;inc\CANlib.h: 376: TXB1DLCbits.TXRTR = 0x01;
  4904  000ECE  010F               	movlb	15	; () banked
  4905  000ED0  8D35               	bsf	53,6,b	;volatile
  4906  000ED2  D002               	goto	l354
  4907  000ED4                     l353:
  4908                           
  4909                           ; BSR set to: 0
  4910                           ;inc\CANlib.h: 377: else
  4911                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x00;
  4912  000ED4  010F               	movlb	15	; () banked
  4913  000ED6  9D35               	bcf	53,6,b	;volatile
  4914  000ED8                     l354:
  4915                           
  4916                           ; BSR set to: 15
  4917                           ;inc\CANlib.h: 380: if (CAN_TX_FRAME_MASK & flags)
  4918  000ED8  0100               	movlb	0	; () banked
  4919  000EDA  A799               	btfss	CANsendMessage@flags& (0+255),3,b
  4920  000EDC  D079               	goto	l355
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;inc\CANlib.h: 381: {
  4924                           ;inc\CANlib.h: 382: tamp = identifier & 0x000000FF;
  4925  000EDE  0100               	movlb	0	; () banked
  4926  000EE0  5192               	movf	CANsendMessage@identifier& (0+255),w,b
  4927  000EE2  0100               	movlb	0	; () banked
  4928  000EE4  6F9E               	movwf	CANsendMessage@tamp& (0+255),b
  4929  000EE6  6B9F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4930  000EE8  6BA0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4931  000EEA  6BA1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4932                           
  4933                           ; BSR set to: 0
  4934                           ;inc\CANlib.h: 383: TXB1EIDL = (unsigned char) tamp;
  4935  000EEC  C09E  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;inc\CANlib.h: 385: tamp = identifier & 0x0000FF00;
  4939  000EF0  0E00               	movlw	0
  4940  000EF2  0100               	movlb	0	; () banked
  4941  000EF4  1592               	andwf	CANsendMessage@identifier& (0+255),w,b
  4942  000EF6  0100               	movlb	0	; () banked
  4943  000EF8  6F9E               	movwf	CANsendMessage@tamp& (0+255),b
  4944  000EFA  0EFF               	movlw	255
  4945  000EFC  0100               	movlb	0	; () banked
  4946  000EFE  1593               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4947  000F00  0100               	movlb	0	; () banked
  4948  000F02  6F9F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4949  000F04  0E00               	movlw	0
  4950  000F06  0100               	movlb	0	; () banked
  4951  000F08  1594               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4952  000F0A  0100               	movlb	0	; () banked
  4953  000F0C  6FA0               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4954  000F0E  0E00               	movlw	0
  4955  000F10  0100               	movlb	0	; () banked
  4956  000F12  1595               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4957  000F14  0100               	movlb	0	; () banked
  4958  000F16  6FA1               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;inc\CANlib.h: 386: tamp = tamp >> 8;
  4962  000F18  C09E  F09A         	movff	CANsendMessage@tamp,??_CANsendMessage
  4963  000F1C  C09F  F09B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4964  000F20  C0A0  F09C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4965  000F24  C0A1  F09D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4966  000F28  C09B  F09A         	movff	??_CANsendMessage+1,??_CANsendMessage
  4967  000F2C  C09C  F09B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  4968  000F30  C09D  F09C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  4969  000F34  0100               	movlb	0	; () banked
  4970  000F36  6B9D               	clrf	(??_CANsendMessage+3)& (0+255),b
  4971  000F38  C09A  F09E         	movff	??_CANsendMessage,CANsendMessage@tamp
  4972  000F3C  C09B  F09F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4973  000F40  C09C  F0A0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4974  000F44  C09D  F0A1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4975                           
  4976                           ; BSR set to: 0
  4977                           ;inc\CANlib.h: 387: TXB1EIDH = (unsigned char) tamp;
  4978  000F48  C09E  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  4979                           
  4980                           ; BSR set to: 0
  4981                           ;inc\CANlib.h: 389: TXB1SIDL = 0x00;
  4982  000F4C  0E00               	movlw	0
  4983  000F4E  010F               	movlb	15	; () banked
  4984  000F50  6F32               	movwf	50,b	;volatile
  4985                           
  4986                           ; BSR set to: 15
  4987                           ;inc\CANlib.h: 390: TXB1SIDLbits.EXIDE = 0x01;
  4988  000F52  010F               	movlb	15	; () banked
  4989  000F54  8732               	bsf	50,3,b	;volatile
  4990                           
  4991                           ; BSR set to: 15
  4992                           ;inc\CANlib.h: 392: if (identifier & 0x00010000)
  4993  000F56  0100               	movlb	0	; () banked
  4994  000F58  A194               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  4995  000F5A  D002               	goto	l356
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;inc\CANlib.h: 393: TXB1SIDLbits.EID16 = 0x01;
  4999  000F5C  010F               	movlb	15	; () banked
  5000  000F5E  8132               	bsf	50,0,b	;volatile
  5001  000F60                     l356:
  5002                           
  5003                           ;inc\CANlib.h: 394: if (identifier & 0x00020000)
  5004  000F60  0100               	movlb	0	; () banked
  5005  000F62  A394               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  5006  000F64  D002               	goto	l357
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID17 = 0x01;
  5010  000F66  010F               	movlb	15	; () banked
  5011  000F68  8332               	bsf	50,1,b	;volatile
  5012  000F6A                     l357:
  5013                           
  5014                           ;inc\CANlib.h: 396: if (identifier & 0x00040000)
  5015  000F6A  0100               	movlb	0	; () banked
  5016  000F6C  A594               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  5017  000F6E  D002               	goto	l358
  5018                           
  5019                           ; BSR set to: 0
  5020                           ;inc\CANlib.h: 397: TXB1SIDLbits.SID0 = 0x01;
  5021  000F70  010F               	movlb	15	; () banked
  5022  000F72  8B32               	bsf	50,5,b	;volatile
  5023  000F74                     l358:
  5024                           
  5025                           ;inc\CANlib.h: 398: if (identifier & 0x00080000)
  5026  000F74  0100               	movlb	0	; () banked
  5027  000F76  A794               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  5028  000F78  D002               	goto	l359
  5029                           
  5030                           ; BSR set to: 0
  5031                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID1 = 0x01;
  5032  000F7A  010F               	movlb	15	; () banked
  5033  000F7C  8D32               	bsf	50,6,b	;volatile
  5034  000F7E                     l359:
  5035                           
  5036                           ;inc\CANlib.h: 400: if (identifier & 0x00100000)
  5037  000F7E  0100               	movlb	0	; () banked
  5038  000F80  A994               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  5039  000F82  D002               	goto	l4017
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID2 = 0x01;
  5043  000F84  010F               	movlb	15	; () banked
  5044  000F86  8F32               	bsf	50,7,b	;volatile
  5045  000F88                     l4017:
  5046                           
  5047                           ;inc\CANlib.h: 403: tamp = (identifier >> 21);
  5048  000F88  C092  F09A         	movff	CANsendMessage@identifier,??_CANsendMessage
  5049  000F8C  C093  F09B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5050  000F90  C094  F09C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5051  000F94  C095  F09D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5052  000F98  0E16               	movlw	22
  5053  000F9A  D006               	goto	u5300
  5054  000F9C                     u5305:
  5055  000F9C  0100               	movlb	0	; () banked
  5056  000F9E  90D8               	bcf	status,0,c
  5057  000FA0  339D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5058  000FA2  339C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5059  000FA4  339B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5060  000FA6  339A               	rrcf	??_CANsendMessage& (0+255),f,b
  5061  000FA8                     u5300:
  5062  000FA8  2EE8               	decfsz	wreg,f,c
  5063  000FAA  D7F8               	goto	u5305
  5064  000FAC  C09A  F09E         	movff	??_CANsendMessage,CANsendMessage@tamp
  5065  000FB0  C09B  F09F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5066  000FB4  C09C  F0A0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5067  000FB8  C09D  F0A1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;inc\CANlib.h: 404: tamp = tamp & 0x000000FF;
  5071  000FBC  0100               	movlb	0	; () banked
  5072  000FBE  519E               	movf	CANsendMessage@tamp& (0+255),w,b
  5073  000FC0  0100               	movlb	0	; () banked
  5074  000FC2  6F9E               	movwf	CANsendMessage@tamp& (0+255),b
  5075  000FC4  6B9F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5076  000FC6  6BA0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5077  000FC8  6BA1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5078                           
  5079                           ; BSR set to: 0
  5080                           ;inc\CANlib.h: 405: TXB1SIDH = (unsigned char) tamp;
  5081  000FCA  C09E  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  5082                           
  5083                           ;inc\CANlib.h: 406: }
  5084  000FCE  D059               	goto	l4037
  5085  000FD0                     l355:
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;inc\CANlib.h: 408: else
  5089                           ;inc\CANlib.h: 410: {
  5090                           ;inc\CANlib.h: 411: TXB1SIDLbits.EXIDE = 0x00;
  5091  000FD0  010F               	movlb	15	; () banked
  5092  000FD2  9732               	bcf	50,3,b	;volatile
  5093                           
  5094                           ; BSR set to: 15
  5095                           ;inc\CANlib.h: 413: tamp = (identifier >> 3);
  5096  000FD4  C092  F09A         	movff	CANsendMessage@identifier,??_CANsendMessage
  5097  000FD8  C093  F09B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5098  000FDC  C094  F09C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5099  000FE0  C095  F09D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5100  000FE4  0E04               	movlw	4
  5101  000FE6  D006               	goto	u5310
  5102  000FE8                     u5315:
  5103  000FE8  0100               	movlb	0	; () banked
  5104  000FEA  90D8               	bcf	status,0,c
  5105  000FEC  339D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5106  000FEE  339C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5107  000FF0  339B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5108  000FF2  339A               	rrcf	??_CANsendMessage& (0+255),f,b
  5109  000FF4                     u5310:
  5110  000FF4  2EE8               	decfsz	wreg,f,c
  5111  000FF6  D7F8               	goto	u5315
  5112  000FF8  C09A  F09E         	movff	??_CANsendMessage,CANsendMessage@tamp
  5113  000FFC  C09B  F09F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5114  001000  C09C  F0A0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5115  001004  C09D  F0A1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5116                           
  5117                           ; BSR set to: 0
  5118                           ;inc\CANlib.h: 414: tamp = tamp & 0x000000FF;
  5119  001008  0100               	movlb	0	; () banked
  5120  00100A  519E               	movf	CANsendMessage@tamp& (0+255),w,b
  5121  00100C  0100               	movlb	0	; () banked
  5122  00100E  6F9E               	movwf	CANsendMessage@tamp& (0+255),b
  5123  001010  6B9F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5124  001012  6BA0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5125  001014  6BA1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;inc\CANlib.h: 415: TXB1SIDH = (unsigned char) tamp;
  5129  001016  C09E  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  5130                           
  5131                           ; BSR set to: 0
  5132                           ;inc\CANlib.h: 417: tamp = identifier & 0x00000007;
  5133  00101A  0E07               	movlw	7
  5134  00101C  0100               	movlb	0	; () banked
  5135  00101E  1592               	andwf	CANsendMessage@identifier& (0+255),w,b
  5136  001020  0100               	movlb	0	; () banked
  5137  001022  6F9E               	movwf	CANsendMessage@tamp& (0+255),b
  5138  001024  0E00               	movlw	0
  5139  001026  0100               	movlb	0	; () banked
  5140  001028  1593               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5141  00102A  0100               	movlb	0	; () banked
  5142  00102C  6F9F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5143  00102E  0E00               	movlw	0
  5144  001030  0100               	movlb	0	; () banked
  5145  001032  1594               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5146  001034  0100               	movlb	0	; () banked
  5147  001036  6FA0               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5148  001038  0E00               	movlw	0
  5149  00103A  0100               	movlb	0	; () banked
  5150  00103C  1595               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5151  00103E  0100               	movlb	0	; () banked
  5152  001040  6FA1               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;inc\CANlib.h: 418: tamp = tamp << 5;
  5156  001042  C09E  F09A         	movff	CANsendMessage@tamp,??_CANsendMessage
  5157  001046  C09F  F09B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5158  00104A  C0A0  F09C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5159  00104E  C0A1  F09D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5160  001052  0E05               	movlw	5
  5161  001054                     u5325:
  5162  001054  90D8               	bcf	status,0,c
  5163  001056  0100               	movlb	0	; () banked
  5164  001058  379A               	rlcf	??_CANsendMessage& (0+255),f,b
  5165  00105A  379B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  5166  00105C  379C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  5167  00105E  379D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  5168  001060  2EE8               	decfsz	wreg,f,c
  5169  001062  D7F8               	goto	u5325
  5170  001064  C09A  F09E         	movff	??_CANsendMessage,CANsendMessage@tamp
  5171  001068  C09B  F09F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5172  00106C  C09C  F0A0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5173  001070  C09D  F0A1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;inc\CANlib.h: 419: TXB1SIDL = TXB1SIDL & 0b00011111;
  5177  001074  010F               	movlb	15	; () banked
  5178  001076  5132               	movf	50,w,b	;volatile
  5179  001078  0B1F               	andlw	31
  5180  00107A  010F               	movlb	15	; () banked
  5181  00107C  6F32               	movwf	50,b	;volatile
  5182                           
  5183                           ; BSR set to: 15
  5184                           ;inc\CANlib.h: 420: TXB1SIDL = (unsigned char) tamp;
  5185  00107E  C09E  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  5186  001082                     l4037:
  5187                           
  5188                           ;inc\CANlib.h: 421: }
  5189                           ;inc\CANlib.h: 423: if (0b00000001 & flags)
  5190  001082  0100               	movlb	0	; () banked
  5191  001084  A199               	btfss	CANsendMessage@flags& (0+255),0,b
  5192  001086  D003               	goto	l362
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;inc\CANlib.h: 424: TXB1CONbits.TXPRI0 = 0x01;
  5196  001088  010F               	movlb	15	; () banked
  5197  00108A  8130               	bsf	48,0,b	;volatile
  5198  00108C  D002               	goto	l363
  5199  00108E                     l362:
  5200                           
  5201                           ; BSR set to: 0
  5202                           ;inc\CANlib.h: 425: else
  5203                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x00;
  5204  00108E  010F               	movlb	15	; () banked
  5205  001090  9130               	bcf	48,0,b	;volatile
  5206  001092                     l363:
  5207                           
  5208                           ; BSR set to: 15
  5209                           ;inc\CANlib.h: 427: if (0b00000010 & flags)
  5210  001092  0100               	movlb	0	; () banked
  5211  001094  A399               	btfss	CANsendMessage@flags& (0+255),1,b
  5212  001096  D003               	goto	l364
  5213                           
  5214                           ; BSR set to: 0
  5215                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI1 = 0x01;
  5216  001098  010F               	movlb	15	; () banked
  5217  00109A  8330               	bsf	48,1,b	;volatile
  5218  00109C  D002               	goto	l4043
  5219  00109E                     l364:
  5220                           
  5221                           ; BSR set to: 0
  5222                           ;inc\CANlib.h: 429: else
  5223                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x00;
  5224  00109E  010F               	movlb	15	; () banked
  5225  0010A0  9330               	bcf	48,1,b	;volatile
  5226  0010A2                     l4043:
  5227                           
  5228                           ; BSR set to: 15
  5229                           ;inc\CANlib.h: 432: TXB1D0 = data[0];
  5230  0010A2  C096  FFD9         	movff	CANsendMessage@data,fsr2l
  5231  0010A6  C097  FFDA         	movff	CANsendMessage@data+1,fsr2h
  5232  0010AA  50DF               	movf	indf2,w,c
  5233  0010AC  010F               	movlb	15	; () banked
  5234  0010AE  6F36               	movwf	54,b	;volatile
  5235                           
  5236                           ; BSR set to: 15
  5237                           ;inc\CANlib.h: 433: TXB1D1 = data[1];
  5238  0010B0  0100               	movlb	0	; () banked
  5239  0010B2  EE20 F001          	lfsr	2,1
  5240  0010B6  5196               	movf	CANsendMessage@data& (0+255),w,b
  5241  0010B8  26D9               	addwf	fsr2l,f,c
  5242  0010BA  5197               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5243  0010BC  22DA               	addwfc	fsr2h,f,c
  5244  0010BE  50DF               	movf	indf2,w,c
  5245  0010C0  010F               	movlb	15	; () banked
  5246  0010C2  6F37               	movwf	55,b	;volatile
  5247                           
  5248                           ; BSR set to: 15
  5249                           ;inc\CANlib.h: 434: TXB1D2 = data[2];
  5250  0010C4  0100               	movlb	0	; () banked
  5251  0010C6  EE20 F002          	lfsr	2,2
  5252  0010CA  5196               	movf	CANsendMessage@data& (0+255),w,b
  5253  0010CC  26D9               	addwf	fsr2l,f,c
  5254  0010CE  5197               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5255  0010D0  22DA               	addwfc	fsr2h,f,c
  5256  0010D2  50DF               	movf	indf2,w,c
  5257  0010D4  010F               	movlb	15	; () banked
  5258  0010D6  6F38               	movwf	56,b	;volatile
  5259                           
  5260                           ; BSR set to: 15
  5261                           ;inc\CANlib.h: 435: TXB1D3 = data[3];
  5262  0010D8  0100               	movlb	0	; () banked
  5263  0010DA  EE20 F003          	lfsr	2,3
  5264  0010DE  5196               	movf	CANsendMessage@data& (0+255),w,b
  5265  0010E0  26D9               	addwf	fsr2l,f,c
  5266  0010E2  5197               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5267  0010E4  22DA               	addwfc	fsr2h,f,c
  5268  0010E6  50DF               	movf	indf2,w,c
  5269  0010E8  010F               	movlb	15	; () banked
  5270  0010EA  6F39               	movwf	57,b	;volatile
  5271                           
  5272                           ; BSR set to: 15
  5273                           ;inc\CANlib.h: 436: TXB1D4 = data[4];
  5274  0010EC  0100               	movlb	0	; () banked
  5275  0010EE  EE20 F004          	lfsr	2,4
  5276  0010F2  5196               	movf	CANsendMessage@data& (0+255),w,b
  5277  0010F4  26D9               	addwf	fsr2l,f,c
  5278  0010F6  5197               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5279  0010F8  22DA               	addwfc	fsr2h,f,c
  5280  0010FA  50DF               	movf	indf2,w,c
  5281  0010FC  010F               	movlb	15	; () banked
  5282  0010FE  6F3A               	movwf	58,b	;volatile
  5283                           
  5284                           ; BSR set to: 15
  5285                           ;inc\CANlib.h: 437: TXB1D5 = data[5];
  5286  001100  0100               	movlb	0	; () banked
  5287  001102  EE20 F005          	lfsr	2,5
  5288  001106  5196               	movf	CANsendMessage@data& (0+255),w,b
  5289  001108  26D9               	addwf	fsr2l,f,c
  5290  00110A  5197               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5291  00110C  22DA               	addwfc	fsr2h,f,c
  5292  00110E  50DF               	movf	indf2,w,c
  5293  001110  010F               	movlb	15	; () banked
  5294  001112  6F3B               	movwf	59,b	;volatile
  5295                           
  5296                           ; BSR set to: 15
  5297                           ;inc\CANlib.h: 438: TXB1D6 = data[6];
  5298  001114  0100               	movlb	0	; () banked
  5299  001116  EE20 F006          	lfsr	2,6
  5300  00111A  5196               	movf	CANsendMessage@data& (0+255),w,b
  5301  00111C  26D9               	addwf	fsr2l,f,c
  5302  00111E  5197               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5303  001120  22DA               	addwfc	fsr2h,f,c
  5304  001122  50DF               	movf	indf2,w,c
  5305  001124  010F               	movlb	15	; () banked
  5306  001126  6F3C               	movwf	60,b	;volatile
  5307                           
  5308                           ; BSR set to: 15
  5309                           ;inc\CANlib.h: 439: TXB1D7 = data[7];
  5310  001128  0100               	movlb	0	; () banked
  5311  00112A  EE20 F007          	lfsr	2,7
  5312  00112E  5196               	movf	CANsendMessage@data& (0+255),w,b
  5313  001130  26D9               	addwf	fsr2l,f,c
  5314  001132  5197               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5315  001134  22DA               	addwfc	fsr2h,f,c
  5316  001136  50DF               	movf	indf2,w,c
  5317  001138  010F               	movlb	15	; () banked
  5318  00113A  6F3D               	movwf	61,b	;volatile
  5319                           
  5320                           ; BSR set to: 15
  5321                           ;inc\CANlib.h: 441: TXB1CONbits.TXREQ = 0x01;
  5322  00113C  010F               	movlb	15	; () banked
  5323  00113E  8730               	bsf	48,3,b	;volatile
  5324                           
  5325                           ; BSR set to: 15
  5326                           ;inc\CANlib.h: 443: return;
  5327  001140  0012               	return	
  5328  001142                     l352:
  5329                           
  5330                           ; BSR set to: 15
  5331                           ;inc\CANlib.h: 444: }
  5332                           ;inc\CANlib.h: 448: if (TXB2CONbits.TXREQ == 0)
  5333  001142  010F               	movlb	15	; () banked
  5334  001144  B720               	btfsc	32,3,b	;volatile
  5335  001146  0012               	return	
  5336                           
  5337                           ; BSR set to: 15
  5338                           ;inc\CANlib.h: 449: { TXB2DLC = dataLength;
  5339  001148  C098  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  5340                           
  5341                           ;inc\CANlib.h: 451: if (0b01000000 & flags)
  5342  00114C  0100               	movlb	0	; () banked
  5343  00114E  AD99               	btfss	CANsendMessage@flags& (0+255),6,b
  5344  001150  D003               	goto	l367
  5345                           
  5346                           ; BSR set to: 0
  5347                           ;inc\CANlib.h: 452: TXB2DLCbits.TXRTR = 0x01;
  5348  001152  010F               	movlb	15	; () banked
  5349  001154  8D25               	bsf	37,6,b	;volatile
  5350  001156  D002               	goto	l368
  5351  001158                     l367:
  5352                           
  5353                           ; BSR set to: 0
  5354                           ;inc\CANlib.h: 453: else
  5355                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x00;
  5356  001158  010F               	movlb	15	; () banked
  5357  00115A  9D25               	bcf	37,6,b	;volatile
  5358  00115C                     l368:
  5359                           
  5360                           ; BSR set to: 15
  5361                           ;inc\CANlib.h: 456: if (CAN_TX_FRAME_MASK & flags)
  5362  00115C  0100               	movlb	0	; () banked
  5363  00115E  A799               	btfss	CANsendMessage@flags& (0+255),3,b
  5364  001160  D079               	goto	l369
  5365                           
  5366                           ; BSR set to: 0
  5367                           ;inc\CANlib.h: 457: {
  5368                           ;inc\CANlib.h: 458: tamp = identifier & 0x000000FF;
  5369  001162  0100               	movlb	0	; () banked
  5370  001164  5192               	movf	CANsendMessage@identifier& (0+255),w,b
  5371  001166  0100               	movlb	0	; () banked
  5372  001168  6F9E               	movwf	CANsendMessage@tamp& (0+255),b
  5373  00116A  6B9F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5374  00116C  6BA0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5375  00116E  6BA1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5376                           
  5377                           ; BSR set to: 0
  5378                           ;inc\CANlib.h: 459: TXB2EIDL = (unsigned char) tamp;
  5379  001170  C09E  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  5380                           
  5381                           ; BSR set to: 0
  5382                           ;inc\CANlib.h: 461: tamp = identifier & 0x0000FF00;
  5383  001174  0E00               	movlw	0
  5384  001176  0100               	movlb	0	; () banked
  5385  001178  1592               	andwf	CANsendMessage@identifier& (0+255),w,b
  5386  00117A  0100               	movlb	0	; () banked
  5387  00117C  6F9E               	movwf	CANsendMessage@tamp& (0+255),b
  5388  00117E  0EFF               	movlw	255
  5389  001180  0100               	movlb	0	; () banked
  5390  001182  1593               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5391  001184  0100               	movlb	0	; () banked
  5392  001186  6F9F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5393  001188  0E00               	movlw	0
  5394  00118A  0100               	movlb	0	; () banked
  5395  00118C  1594               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5396  00118E  0100               	movlb	0	; () banked
  5397  001190  6FA0               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5398  001192  0E00               	movlw	0
  5399  001194  0100               	movlb	0	; () banked
  5400  001196  1595               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5401  001198  0100               	movlb	0	; () banked
  5402  00119A  6FA1               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5403                           
  5404                           ; BSR set to: 0
  5405                           ;inc\CANlib.h: 462: tamp = tamp >> 8;
  5406  00119C  C09E  F09A         	movff	CANsendMessage@tamp,??_CANsendMessage
  5407  0011A0  C09F  F09B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5408  0011A4  C0A0  F09C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5409  0011A8  C0A1  F09D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5410  0011AC  C09B  F09A         	movff	??_CANsendMessage+1,??_CANsendMessage
  5411  0011B0  C09C  F09B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  5412  0011B4  C09D  F09C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  5413  0011B8  0100               	movlb	0	; () banked
  5414  0011BA  6B9D               	clrf	(??_CANsendMessage+3)& (0+255),b
  5415  0011BC  C09A  F09E         	movff	??_CANsendMessage,CANsendMessage@tamp
  5416  0011C0  C09B  F09F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5417  0011C4  C09C  F0A0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5418  0011C8  C09D  F0A1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5419                           
  5420                           ; BSR set to: 0
  5421                           ;inc\CANlib.h: 463: TXB2EIDH = (unsigned char) tamp;
  5422  0011CC  C09E  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;inc\CANlib.h: 465: TXB2SIDL = 0x00;
  5426  0011D0  0E00               	movlw	0
  5427  0011D2  010F               	movlb	15	; () banked
  5428  0011D4  6F22               	movwf	34,b	;volatile
  5429                           
  5430                           ; BSR set to: 15
  5431                           ;inc\CANlib.h: 466: TXB2SIDLbits.EXIDE = 0x01;
  5432  0011D6  010F               	movlb	15	; () banked
  5433  0011D8  8722               	bsf	34,3,b	;volatile
  5434                           
  5435                           ; BSR set to: 15
  5436                           ;inc\CANlib.h: 468: if (identifier & 0x00010000)
  5437  0011DA  0100               	movlb	0	; () banked
  5438  0011DC  A194               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  5439  0011DE  D002               	goto	l370
  5440                           
  5441                           ; BSR set to: 0
  5442                           ;inc\CANlib.h: 469: TXB2SIDLbits.EID16 = 0x01;
  5443  0011E0  010F               	movlb	15	; () banked
  5444  0011E2  8122               	bsf	34,0,b	;volatile
  5445  0011E4                     l370:
  5446                           
  5447                           ;inc\CANlib.h: 470: if (identifier & 0x00020000)
  5448  0011E4  0100               	movlb	0	; () banked
  5449  0011E6  A394               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  5450  0011E8  D002               	goto	l371
  5451                           
  5452                           ; BSR set to: 0
  5453                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID17 = 0x01;
  5454  0011EA  010F               	movlb	15	; () banked
  5455  0011EC  8322               	bsf	34,1,b	;volatile
  5456  0011EE                     l371:
  5457                           
  5458                           ;inc\CANlib.h: 472: if (identifier & 0x00040000)
  5459  0011EE  0100               	movlb	0	; () banked
  5460  0011F0  A594               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  5461  0011F2  D002               	goto	l372
  5462                           
  5463                           ; BSR set to: 0
  5464                           ;inc\CANlib.h: 473: TXB2SIDLbits.SID0 = 0x01;
  5465  0011F4  010F               	movlb	15	; () banked
  5466  0011F6  8B22               	bsf	34,5,b	;volatile
  5467  0011F8                     l372:
  5468                           
  5469                           ;inc\CANlib.h: 474: if (identifier & 0x00080000)
  5470  0011F8  0100               	movlb	0	; () banked
  5471  0011FA  A794               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  5472  0011FC  D002               	goto	l373
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID1 = 0x01;
  5476  0011FE  010F               	movlb	15	; () banked
  5477  001200  8D22               	bsf	34,6,b	;volatile
  5478  001202                     l373:
  5479                           
  5480                           ;inc\CANlib.h: 476: if (identifier & 0x00100000)
  5481  001202  0100               	movlb	0	; () banked
  5482  001204  A994               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  5483  001206  D002               	goto	l4093
  5484                           
  5485                           ; BSR set to: 0
  5486                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID2 = 0x01;
  5487  001208  010F               	movlb	15	; () banked
  5488  00120A  8F22               	bsf	34,7,b	;volatile
  5489  00120C                     l4093:
  5490                           
  5491                           ;inc\CANlib.h: 479: tamp = (identifier >> 21);
  5492  00120C  C092  F09A         	movff	CANsendMessage@identifier,??_CANsendMessage
  5493  001210  C093  F09B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5494  001214  C094  F09C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5495  001218  C095  F09D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5496  00121C  0E16               	movlw	22
  5497  00121E  D006               	goto	u5430
  5498  001220                     u5435:
  5499  001220  0100               	movlb	0	; () banked
  5500  001222  90D8               	bcf	status,0,c
  5501  001224  339D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5502  001226  339C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5503  001228  339B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5504  00122A  339A               	rrcf	??_CANsendMessage& (0+255),f,b
  5505  00122C                     u5430:
  5506  00122C  2EE8               	decfsz	wreg,f,c
  5507  00122E  D7F8               	goto	u5435
  5508  001230  C09A  F09E         	movff	??_CANsendMessage,CANsendMessage@tamp
  5509  001234  C09B  F09F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5510  001238  C09C  F0A0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5511  00123C  C09D  F0A1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;inc\CANlib.h: 480: tamp = tamp & 0x000000FF;
  5515  001240  0100               	movlb	0	; () banked
  5516  001242  519E               	movf	CANsendMessage@tamp& (0+255),w,b
  5517  001244  0100               	movlb	0	; () banked
  5518  001246  6F9E               	movwf	CANsendMessage@tamp& (0+255),b
  5519  001248  6B9F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5520  00124A  6BA0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5521  00124C  6BA1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;inc\CANlib.h: 481: TXB2SIDH = (unsigned char) tamp;
  5525  00124E  C09E  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  5526                           
  5527                           ;inc\CANlib.h: 482: }
  5528  001252  D059               	goto	l4113
  5529  001254                     l369:
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;inc\CANlib.h: 484: else
  5533                           ;inc\CANlib.h: 486: {
  5534                           ;inc\CANlib.h: 487: TXB2SIDLbits.EXIDE = 0x00;
  5535  001254  010F               	movlb	15	; () banked
  5536  001256  9722               	bcf	34,3,b	;volatile
  5537                           
  5538                           ; BSR set to: 15
  5539                           ;inc\CANlib.h: 489: tamp = (identifier >> 3);
  5540  001258  C092  F09A         	movff	CANsendMessage@identifier,??_CANsendMessage
  5541  00125C  C093  F09B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5542  001260  C094  F09C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5543  001264  C095  F09D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5544  001268  0E04               	movlw	4
  5545  00126A  D006               	goto	u5440
  5546  00126C                     u5445:
  5547  00126C  0100               	movlb	0	; () banked
  5548  00126E  90D8               	bcf	status,0,c
  5549  001270  339D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5550  001272  339C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5551  001274  339B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5552  001276  339A               	rrcf	??_CANsendMessage& (0+255),f,b
  5553  001278                     u5440:
  5554  001278  2EE8               	decfsz	wreg,f,c
  5555  00127A  D7F8               	goto	u5445
  5556  00127C  C09A  F09E         	movff	??_CANsendMessage,CANsendMessage@tamp
  5557  001280  C09B  F09F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5558  001284  C09C  F0A0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5559  001288  C09D  F0A1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5560                           
  5561                           ; BSR set to: 0
  5562                           ;inc\CANlib.h: 490: tamp = tamp & 0x000000FF;
  5563  00128C  0100               	movlb	0	; () banked
  5564  00128E  519E               	movf	CANsendMessage@tamp& (0+255),w,b
  5565  001290  0100               	movlb	0	; () banked
  5566  001292  6F9E               	movwf	CANsendMessage@tamp& (0+255),b
  5567  001294  6B9F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5568  001296  6BA0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5569  001298  6BA1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;inc\CANlib.h: 491: TXB2SIDH = (unsigned char) tamp;
  5573  00129A  C09E  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  5574                           
  5575                           ; BSR set to: 0
  5576                           ;inc\CANlib.h: 493: tamp = identifier & 0x00000007;
  5577  00129E  0E07               	movlw	7
  5578  0012A0  0100               	movlb	0	; () banked
  5579  0012A2  1592               	andwf	CANsendMessage@identifier& (0+255),w,b
  5580  0012A4  0100               	movlb	0	; () banked
  5581  0012A6  6F9E               	movwf	CANsendMessage@tamp& (0+255),b
  5582  0012A8  0E00               	movlw	0
  5583  0012AA  0100               	movlb	0	; () banked
  5584  0012AC  1593               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5585  0012AE  0100               	movlb	0	; () banked
  5586  0012B0  6F9F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5587  0012B2  0E00               	movlw	0
  5588  0012B4  0100               	movlb	0	; () banked
  5589  0012B6  1594               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5590  0012B8  0100               	movlb	0	; () banked
  5591  0012BA  6FA0               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5592  0012BC  0E00               	movlw	0
  5593  0012BE  0100               	movlb	0	; () banked
  5594  0012C0  1595               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5595  0012C2  0100               	movlb	0	; () banked
  5596  0012C4  6FA1               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5597                           
  5598                           ; BSR set to: 0
  5599                           ;inc\CANlib.h: 494: tamp = tamp << 5;
  5600  0012C6  C09E  F09A         	movff	CANsendMessage@tamp,??_CANsendMessage
  5601  0012CA  C09F  F09B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5602  0012CE  C0A0  F09C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5603  0012D2  C0A1  F09D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5604  0012D6  0E05               	movlw	5
  5605  0012D8                     u5455:
  5606  0012D8  90D8               	bcf	status,0,c
  5607  0012DA  0100               	movlb	0	; () banked
  5608  0012DC  379A               	rlcf	??_CANsendMessage& (0+255),f,b
  5609  0012DE  379B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  5610  0012E0  379C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  5611  0012E2  379D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  5612  0012E4  2EE8               	decfsz	wreg,f,c
  5613  0012E6  D7F8               	goto	u5455
  5614  0012E8  C09A  F09E         	movff	??_CANsendMessage,CANsendMessage@tamp
  5615  0012EC  C09B  F09F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5616  0012F0  C09C  F0A0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5617  0012F4  C09D  F0A1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5618                           
  5619                           ; BSR set to: 0
  5620                           ;inc\CANlib.h: 495: TXB2SIDL = TXB2SIDL & 0b00011111;
  5621  0012F8  010F               	movlb	15	; () banked
  5622  0012FA  5122               	movf	34,w,b	;volatile
  5623  0012FC  0B1F               	andlw	31
  5624  0012FE  010F               	movlb	15	; () banked
  5625  001300  6F22               	movwf	34,b	;volatile
  5626                           
  5627                           ; BSR set to: 15
  5628                           ;inc\CANlib.h: 496: TXB2SIDL = (unsigned char) tamp;
  5629  001302  C09E  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  5630  001306                     l4113:
  5631                           
  5632                           ;inc\CANlib.h: 497: }
  5633                           ;inc\CANlib.h: 499: if (0b00000001 & flags)
  5634  001306  0100               	movlb	0	; () banked
  5635  001308  A199               	btfss	CANsendMessage@flags& (0+255),0,b
  5636  00130A  D003               	goto	l376
  5637                           
  5638                           ; BSR set to: 0
  5639                           ;inc\CANlib.h: 500: TXB2CONbits.TXPRI0 = 0x01;
  5640  00130C  010F               	movlb	15	; () banked
  5641  00130E  8120               	bsf	32,0,b	;volatile
  5642  001310  D002               	goto	l377
  5643  001312                     l376:
  5644                           
  5645                           ; BSR set to: 0
  5646                           ;inc\CANlib.h: 501: else
  5647                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x00;
  5648  001312  010F               	movlb	15	; () banked
  5649  001314  9120               	bcf	32,0,b	;volatile
  5650  001316                     l377:
  5651                           
  5652                           ; BSR set to: 15
  5653                           ;inc\CANlib.h: 503: if (0b00000010 & flags)
  5654  001316  0100               	movlb	0	; () banked
  5655  001318  A399               	btfss	CANsendMessage@flags& (0+255),1,b
  5656  00131A  D003               	goto	l378
  5657                           
  5658                           ; BSR set to: 0
  5659                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI1 = 0x01;
  5660  00131C  010F               	movlb	15	; () banked
  5661  00131E  8320               	bsf	32,1,b	;volatile
  5662  001320  D002               	goto	l4119
  5663  001322                     l378:
  5664                           
  5665                           ; BSR set to: 0
  5666                           ;inc\CANlib.h: 505: else
  5667                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x00;
  5668  001322  010F               	movlb	15	; () banked
  5669  001324  9320               	bcf	32,1,b	;volatile
  5670  001326                     l4119:
  5671                           
  5672                           ; BSR set to: 15
  5673                           ;inc\CANlib.h: 508: TXB2D0 = data[0];
  5674  001326  C096  FFD9         	movff	CANsendMessage@data,fsr2l
  5675  00132A  C097  FFDA         	movff	CANsendMessage@data+1,fsr2h
  5676  00132E  50DF               	movf	indf2,w,c
  5677  001330  010F               	movlb	15	; () banked
  5678  001332  6F26               	movwf	38,b	;volatile
  5679                           
  5680                           ; BSR set to: 15
  5681                           ;inc\CANlib.h: 509: TXB2D1 = data[1];
  5682  001334  0100               	movlb	0	; () banked
  5683  001336  EE20 F001          	lfsr	2,1
  5684  00133A  5196               	movf	CANsendMessage@data& (0+255),w,b
  5685  00133C  26D9               	addwf	fsr2l,f,c
  5686  00133E  5197               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5687  001340  22DA               	addwfc	fsr2h,f,c
  5688  001342  50DF               	movf	indf2,w,c
  5689  001344  010F               	movlb	15	; () banked
  5690  001346  6F27               	movwf	39,b	;volatile
  5691                           
  5692                           ; BSR set to: 15
  5693                           ;inc\CANlib.h: 510: TXB2D2 = data[2];
  5694  001348  0100               	movlb	0	; () banked
  5695  00134A  EE20 F002          	lfsr	2,2
  5696  00134E  5196               	movf	CANsendMessage@data& (0+255),w,b
  5697  001350  26D9               	addwf	fsr2l,f,c
  5698  001352  5197               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5699  001354  22DA               	addwfc	fsr2h,f,c
  5700  001356  50DF               	movf	indf2,w,c
  5701  001358  010F               	movlb	15	; () banked
  5702  00135A  6F28               	movwf	40,b	;volatile
  5703                           
  5704                           ; BSR set to: 15
  5705                           ;inc\CANlib.h: 511: TXB2D3 = data[3];
  5706  00135C  0100               	movlb	0	; () banked
  5707  00135E  EE20 F003          	lfsr	2,3
  5708  001362  5196               	movf	CANsendMessage@data& (0+255),w,b
  5709  001364  26D9               	addwf	fsr2l,f,c
  5710  001366  5197               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5711  001368  22DA               	addwfc	fsr2h,f,c
  5712  00136A  50DF               	movf	indf2,w,c
  5713  00136C  010F               	movlb	15	; () banked
  5714  00136E  6F29               	movwf	41,b	;volatile
  5715                           
  5716                           ; BSR set to: 15
  5717                           ;inc\CANlib.h: 512: TXB2D4 = data[4];
  5718  001370  0100               	movlb	0	; () banked
  5719  001372  EE20 F004          	lfsr	2,4
  5720  001376  5196               	movf	CANsendMessage@data& (0+255),w,b
  5721  001378  26D9               	addwf	fsr2l,f,c
  5722  00137A  5197               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5723  00137C  22DA               	addwfc	fsr2h,f,c
  5724  00137E  50DF               	movf	indf2,w,c
  5725  001380  010F               	movlb	15	; () banked
  5726  001382  6F2A               	movwf	42,b	;volatile
  5727                           
  5728                           ; BSR set to: 15
  5729                           ;inc\CANlib.h: 513: TXB2D5 = data[5];
  5730  001384  0100               	movlb	0	; () banked
  5731  001386  EE20 F005          	lfsr	2,5
  5732  00138A  5196               	movf	CANsendMessage@data& (0+255),w,b
  5733  00138C  26D9               	addwf	fsr2l,f,c
  5734  00138E  5197               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5735  001390  22DA               	addwfc	fsr2h,f,c
  5736  001392  50DF               	movf	indf2,w,c
  5737  001394  010F               	movlb	15	; () banked
  5738  001396  6F2B               	movwf	43,b	;volatile
  5739                           
  5740                           ; BSR set to: 15
  5741                           ;inc\CANlib.h: 514: TXB2D6 = data[6];
  5742  001398  0100               	movlb	0	; () banked
  5743  00139A  EE20 F006          	lfsr	2,6
  5744  00139E  5196               	movf	CANsendMessage@data& (0+255),w,b
  5745  0013A0  26D9               	addwf	fsr2l,f,c
  5746  0013A2  5197               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5747  0013A4  22DA               	addwfc	fsr2h,f,c
  5748  0013A6  50DF               	movf	indf2,w,c
  5749  0013A8  010F               	movlb	15	; () banked
  5750  0013AA  6F2C               	movwf	44,b	;volatile
  5751                           
  5752                           ; BSR set to: 15
  5753                           ;inc\CANlib.h: 515: TXB2D7 = data[7];
  5754  0013AC  0100               	movlb	0	; () banked
  5755  0013AE  EE20 F007          	lfsr	2,7
  5756  0013B2  5196               	movf	CANsendMessage@data& (0+255),w,b
  5757  0013B4  26D9               	addwf	fsr2l,f,c
  5758  0013B6  5197               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5759  0013B8  22DA               	addwfc	fsr2h,f,c
  5760  0013BA  50DF               	movf	indf2,w,c
  5761  0013BC  010F               	movlb	15	; () banked
  5762  0013BE  6F2D               	movwf	45,b	;volatile
  5763                           
  5764                           ; BSR set to: 15
  5765                           ;inc\CANlib.h: 517: TXB2CONbits.TXREQ = 0x01;
  5766  0013C0  010F               	movlb	15	; () banked
  5767  0013C2  8720               	bsf	32,3,b	;volatile
  5768                           
  5769                           ; BSR set to: 15
  5770                           ;inc\CANlib.h: 519: return;
  5771  0013C4  0012               	return	
  5772  0013C6                     __end_of_CANsendMessage:
  5773                           	opt stack 0
  5774                           tblptru	equ	0xFF8
  5775                           tblptrh	equ	0xFF7
  5776                           tblptrl	equ	0xFF6
  5777                           tablat	equ	0xFF5
  5778                           intcon	equ	0xFF2
  5779                           postinc0	equ	0xFEE
  5780                           wreg	equ	0xFE8
  5781                           indf2	equ	0xFDF
  5782                           fsr2h	equ	0xFDA
  5783                           fsr2l	equ	0xFD9
  5784                           status	equ	0xFD8
  5785                           
  5786 ;; *************** function _ISR_bassa *****************
  5787 ;; Defined at:
  5788 ;;		line 52 in file "CanToSerial.c"
  5789 ;; Parameters:    Size  Location     Type
  5790 ;;		None
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;		None
  5793 ;; Return value:  Size  Location     Type
  5794 ;;                  1    wreg      void 
  5795 ;; Registers used:
  5796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5802 ;;      Params:         0       0       0       0
  5803 ;;      Locals:         0       0       0       0
  5804 ;;      Temps:         17       0       0       0
  5805 ;;      Totals:        17       0       0       0
  5806 ;;Total ram usage:       17 bytes
  5807 ;; Hardware stack levels used:    1
  5808 ;; Hardware stack levels required when called:    2
  5809 ;; This function calls:
  5810 ;;		_CANisRxReady
  5811 ;;		_CANreceiveMessage
  5812 ;;		_getsUSART
  5813 ;; This function is called by:
  5814 ;;		Interrupt level 1
  5815 ;; This function uses a non-reentrant model
  5816 ;;
  5817                           
  5818                           	psect	intcodelo
  5819  000018                     __pintcodelo:
  5820                           	opt stack 0
  5821  000018                     _ISR_bassa:
  5822                           	opt stack 25
  5823                           
  5824                           ; BSR set to: 15
  5825                           ;incstack = 0
  5826  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  5827  00001A  CFD8 F02D          	movff	status,??_ISR_bassa
  5828  00001E  CFE8 F02E          	movff	wreg,??_ISR_bassa+1
  5829  000022  CFE0 F02F          	movff	bsr,??_ISR_bassa+2
  5830  000026  CFFA F030          	movff	pclath,??_ISR_bassa+3
  5831  00002A  CFFB F031          	movff	pclatu,??_ISR_bassa+4
  5832  00002E  CFE9 F032          	movff	fsr0l,??_ISR_bassa+5
  5833  000032  CFEA F033          	movff	fsr0h,??_ISR_bassa+6
  5834  000036  CFE1 F034          	movff	fsr1l,??_ISR_bassa+7
  5835  00003A  CFE2 F035          	movff	fsr1h,??_ISR_bassa+8
  5836  00003E  CFD9 F036          	movff	fsr2l,??_ISR_bassa+9
  5837  000042  CFDA F037          	movff	fsr2h,??_ISR_bassa+10
  5838  000046  CFF3 F038          	movff	prodl,??_ISR_bassa+11
  5839  00004A  CFF4 F039          	movff	prodh,??_ISR_bassa+12
  5840  00004E  CFF6 F03A          	movff	tblptrl,??_ISR_bassa+13
  5841  000052  CFF7 F03B          	movff	tblptrh,??_ISR_bassa+14
  5842  000056  CFF8 F03C          	movff	tblptru,??_ISR_bassa+15
  5843  00005A  CFF5 F03D          	movff	tablat,??_ISR_bassa+16
  5844                           
  5845                           ;CanToSerial.c: 53: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  5846  00005E  A0A4               	btfss	4004,0,c	;volatile
  5847  000060  B2A4               	btfsc	4004,1,c	;volatile
  5848  000062  D001               	goto	i1l3375
  5849  000064  D01C               	goto	i1l3389
  5850  000066                     i1l3375:
  5851                           
  5852                           ;CanToSerial.c: 54: if (CANisRxReady()) {
  5853  000066  EC69  F010         	call	_CANisRxReady	;wreg free
  5854  00006A  0900               	iorlw	0
  5855  00006C  B4D8               	btfsc	status,2,c
  5856  00006E  D015               	goto	i1l3385
  5857                           
  5858                           ;CanToSerial.c: 55: CANreceiveMessage(&msg);
  5859  000070  0E60               	movlw	low _msg
  5860  000072  6E21               	movwf	CANreceiveMessage@msg,c
  5861  000074  0E00               	movlw	high _msg
  5862  000076  6E22               	movwf	CANreceiveMessage@msg+1,c
  5863  000078  ECE3  F009         	call	_CANreceiveMessage	;wreg free
  5864                           
  5865                           ;CanToSerial.c: 56: RTR_Flag = msg.RTR;
  5866  00007C  0100               	movlb	0	; () banked
  5867  00007E  A16E               	btfss	(_msg+14)& (0+255),0,b
  5868  000080  D002               	goto	i1u397_20
  5869  000082  8040               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
  5870  000084  D001               	goto	i1l3381
  5871  000086                     i1u397_20:
  5872  000086  9040               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
  5873  000088                     i1l3381:
  5874                           
  5875                           ;CanToSerial.c: 57: id = msg.identifier;
  5876  000088  C060  F009         	movff	_msg,_id
  5877  00008C  C061  F00A         	movff	_msg+1,_id+1
  5878  000090  C062  F00B         	movff	_msg+2,_id+2
  5879  000094  C063  F00C         	movff	_msg+3,_id+3
  5880                           
  5881                           ;CanToSerial.c: 58: newMessageCan = 1;
  5882  000098  8440               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  5883  00009A                     i1l3385:
  5884                           
  5885                           ;CanToSerial.c: 59: }
  5886                           ;CanToSerial.c: 60: PIR3bits.RXB0IF = 0;
  5887  00009A  90A4               	bcf	4004,0,c	;volatile
  5888                           
  5889                           ;CanToSerial.c: 61: PIR3bits.RXB1IF = 0;
  5890  00009C  92A4               	bcf	4004,1,c	;volatile
  5891  00009E                     i1l3389:
  5892                           
  5893                           ;CanToSerial.c: 62: }
  5894                           ;CanToSerial.c: 63: if (PIR1bits.RC1IF == 1) {
  5895  00009E  AA9E               	btfss	3998,5,c	;volatile
  5896  0000A0  D023               	goto	i1l594
  5897                           
  5898                           ;CanToSerial.c: 64: getsUSART((char*) USART_Rx, 7);
  5899  0000A2  0E1A               	movlw	low _USART_Rx
  5900  0000A4  6E22               	movwf	getsUSART@buffer,c
  5901  0000A6  0E00               	movlw	high _USART_Rx
  5902  0000A8  6E23               	movwf	getsUSART@buffer+1,c
  5903  0000AA  0E07               	movlw	7
  5904  0000AC  6E24               	movwf	getsUSART@len,c
  5905  0000AE  EC30  F010         	call	_getsUSART	;wreg free
  5906                           
  5907                           ;CanToSerial.c: 65: if ((USART_Rx[0] == 0xAA)&&(USART_Rx[6] == 0xAA)) {
  5908  0000B2  0EAA               	movlw	170
  5909  0000B4  181A               	xorwf	_USART_Rx,w,c
  5910  0000B6  A4D8               	btfss	status,2,c
  5911  0000B8  D016               	goto	i1l593
  5912  0000BA  0EAA               	movlw	170
  5913  0000BC  1820               	xorwf	_USART_Rx+6,w,c
  5914  0000BE  A4D8               	btfss	status,2,c
  5915  0000C0  D012               	goto	i1l593
  5916                           
  5917                           ;CanToSerial.c: 67: set_steering_old = set_steering[0];
  5918  0000C2  C08A  F011         	movff	_set_steering,_set_steering_old	;volatile
  5919                           
  5920                           ;CanToSerial.c: 68: set_speed_old[0] = set_speed[0];
  5921  0000C6  C012  F001         	movff	_set_speed,_set_speed_old	;volatile
  5922                           
  5923                           ;CanToSerial.c: 69: set_speed_old[1] = set_speed[1];
  5924  0000CA  C013  F002         	movff	_set_speed+1,_set_speed_old+1	;volatile
  5925                           
  5926                           ;CanToSerial.c: 70: analogic_brake_old = analogic_brake[0];
  5927  0000CE  C07A  F010         	movff	_analogic_brake,_analogic_brake_old	;volatile
  5928                           
  5929                           ;CanToSerial.c: 72: set_speed[2] = USART_Rx[1];
  5930  0000D2  C01B  F014         	movff	_USART_Rx+1,_set_speed+2
  5931                           
  5932                           ;CanToSerial.c: 73: set_speed[0] = USART_Rx[2];
  5933  0000D6  C01C  F012         	movff	_USART_Rx+2,_set_speed
  5934                           
  5935                           ;CanToSerial.c: 74: set_speed[1] = USART_Rx[3];
  5936  0000DA  C01D  F013         	movff	_USART_Rx+3,_set_speed+1
  5937                           
  5938                           ;CanToSerial.c: 75: set_steering[0] = USART_Rx[4];
  5939  0000DE  C01E  F08A         	movff	_USART_Rx+4,_set_steering
  5940                           
  5941                           ;CanToSerial.c: 76: analogic_brake[0] = USART_Rx[5];
  5942  0000E2  C01F  F07A         	movff	_USART_Rx+5,_analogic_brake
  5943  0000E6                     i1l593:
  5944                           
  5945                           ;CanToSerial.c: 77: }
  5946                           ;CanToSerial.c: 78: PIR1bits.RC1IF = 0;
  5947  0000E6  9A9E               	bcf	3998,5,c	;volatile
  5948  0000E8                     i1l594:
  5949  0000E8  C03D  FFF5         	movff	??_ISR_bassa+16,tablat
  5950  0000EC  C03C  FFF8         	movff	??_ISR_bassa+15,tblptru
  5951  0000F0  C03B  FFF7         	movff	??_ISR_bassa+14,tblptrh
  5952  0000F4  C03A  FFF6         	movff	??_ISR_bassa+13,tblptrl
  5953  0000F8  C039  FFF4         	movff	??_ISR_bassa+12,prodh
  5954  0000FC  C038  FFF3         	movff	??_ISR_bassa+11,prodl
  5955  000100  C037  FFDA         	movff	??_ISR_bassa+10,fsr2h
  5956  000104  C036  FFD9         	movff	??_ISR_bassa+9,fsr2l
  5957  000108  C035  FFE2         	movff	??_ISR_bassa+8,fsr1h
  5958  00010C  C034  FFE1         	movff	??_ISR_bassa+7,fsr1l
  5959  000110  C033  FFEA         	movff	??_ISR_bassa+6,fsr0h
  5960  000114  C032  FFE9         	movff	??_ISR_bassa+5,fsr0l
  5961  000118  C031  FFFB         	movff	??_ISR_bassa+4,pclatu
  5962  00011C  C030  FFFA         	movff	??_ISR_bassa+3,pclath
  5963  000120  C02F  FFE0         	movff	??_ISR_bassa+2,bsr
  5964  000124  C02E  FFE8         	movff	??_ISR_bassa+1,wreg
  5965  000128  C02D  FFD8         	movff	??_ISR_bassa,status
  5966  00012C  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  5967  00012E  0010               	retfie	
  5968  000130                     __end_of_ISR_bassa:
  5969                           	opt stack 0
  5970                           pclatu	equ	0xFFB
  5971                           pclath	equ	0xFFA
  5972                           tblptru	equ	0xFF8
  5973                           tblptrh	equ	0xFF7
  5974                           tblptrl	equ	0xFF6
  5975                           tablat	equ	0xFF5
  5976                           prodh	equ	0xFF4
  5977                           prodl	equ	0xFF3
  5978                           intcon	equ	0xFF2
  5979                           postinc0	equ	0xFEE
  5980                           fsr0h	equ	0xFEA
  5981                           fsr0l	equ	0xFE9
  5982                           wreg	equ	0xFE8
  5983                           fsr1h	equ	0xFE2
  5984                           fsr1l	equ	0xFE1
  5985                           bsr	equ	0xFE0
  5986                           indf2	equ	0xFDF
  5987                           fsr2h	equ	0xFDA
  5988                           fsr2l	equ	0xFD9
  5989                           status	equ	0xFD8
  5990                           
  5991 ;; *************** function _getsUSART *****************
  5992 ;; Defined at:
  5993 ;;		line 14 in file "sources\pic18\plib\USART\ugets.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;  buffer          2    1[COMRAM] PTR unsigned char 
  5996 ;;		 -> USART_Rx(7), 
  5997 ;;  len             1    3[COMRAM] unsigned char 
  5998 ;; Auto vars:     Size  Location     Type
  5999 ;;  i               1    5[COMRAM] unsigned char 
  6000 ;;  data            1    4[COMRAM] unsigned char 
  6001 ;; Return value:  Size  Location     Type
  6002 ;;                  1    wreg      void 
  6003 ;; Registers used:
  6004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6005 ;; Tracked objects:
  6006 ;;		On entry : 0/0
  6007 ;;		On exit  : 0/0
  6008 ;;		Unchanged: 0/0
  6009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6010 ;;      Params:         3       0       0       0
  6011 ;;      Locals:         2       0       0       0
  6012 ;;      Temps:          0       0       0       0
  6013 ;;      Totals:         5       0       0       0
  6014 ;;Total ram usage:        5 bytes
  6015 ;; Hardware stack levels used:    1
  6016 ;; Hardware stack levels required when called:    1
  6017 ;; This function calls:
  6018 ;;		_ReadUSART
  6019 ;; This function is called by:
  6020 ;;		_ISR_bassa
  6021 ;; This function uses a non-reentrant model
  6022 ;;
  6023                           
  6024                           	psect	text12
  6025  002060                     __ptext12:
  6026                           	opt stack 0
  6027  002060                     _getsUSART:
  6028                           	opt stack 25
  6029                           
  6030                           ;incstack = 0
  6031  002060  0E00               	movlw	0
  6032  002062  6E26               	movwf	getsUSART@i,c
  6033  002064  D00E               	goto	i1l3329
  6034  002066                     i1l622:
  6035  002066  AA9E               	btfss	3998,5,c	;volatile
  6036  002068  D7FE               	goto	i1l622
  6037  00206A  EC5A  F010         	call	_ReadUSART	;wreg free
  6038  00206E  6E25               	movwf	getsUSART@data,c
  6039  002070  C022  FFD9         	movff	getsUSART@buffer,fsr2l
  6040  002074  C023  FFDA         	movff	getsUSART@buffer+1,fsr2h
  6041  002078  C025  FFDF         	movff	getsUSART@data,indf2
  6042  00207C  4A22               	infsnz	getsUSART@buffer,f,c
  6043  00207E  2A23               	incf	getsUSART@buffer+1,f,c
  6044  002080  2A26               	incf	getsUSART@i,f,c
  6045  002082                     i1l3329:
  6046  002082  5024               	movf	getsUSART@len,w,c
  6047  002084  5C26               	subwf	getsUSART@i,w,c
  6048  002086  B0D8               	btfsc	status,0,c
  6049  002088  0012               	return	
  6050  00208A  D7ED               	goto	i1l622
  6051  00208C                     __end_of_getsUSART:
  6052                           	opt stack 0
  6053                           pclatu	equ	0xFFB
  6054                           pclath	equ	0xFFA
  6055                           tblptru	equ	0xFF8
  6056                           tblptrh	equ	0xFF7
  6057                           tblptrl	equ	0xFF6
  6058                           tablat	equ	0xFF5
  6059                           prodh	equ	0xFF4
  6060                           prodl	equ	0xFF3
  6061                           intcon	equ	0xFF2
  6062                           postinc0	equ	0xFEE
  6063                           fsr0h	equ	0xFEA
  6064                           fsr0l	equ	0xFE9
  6065                           wreg	equ	0xFE8
  6066                           fsr1h	equ	0xFE2
  6067                           fsr1l	equ	0xFE1
  6068                           bsr	equ	0xFE0
  6069                           indf2	equ	0xFDF
  6070                           fsr2h	equ	0xFDA
  6071                           fsr2l	equ	0xFD9
  6072                           status	equ	0xFD8
  6073                           
  6074 ;; *************** function _ReadUSART *****************
  6075 ;; Defined at:
  6076 ;;		line 15 in file "sources\pic18\plib\USART\uread.c"
  6077 ;; Parameters:    Size  Location     Type
  6078 ;;		None
  6079 ;; Auto vars:     Size  Location     Type
  6080 ;;  data            1    0[COMRAM] unsigned char 
  6081 ;; Return value:  Size  Location     Type
  6082 ;;                  1    wreg      unsigned char 
  6083 ;; Registers used:
  6084 ;;		wreg, status,2, status,0
  6085 ;; Tracked objects:
  6086 ;;		On entry : 0/0
  6087 ;;		On exit  : 0/0
  6088 ;;		Unchanged: 0/0
  6089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6090 ;;      Params:         0       0       0       0
  6091 ;;      Locals:         1       0       0       0
  6092 ;;      Temps:          0       0       0       0
  6093 ;;      Totals:         1       0       0       0
  6094 ;;Total ram usage:        1 bytes
  6095 ;; Hardware stack levels used:    1
  6096 ;; This function calls:
  6097 ;;		Nothing
  6098 ;; This function is called by:
  6099 ;;		_getsUSART
  6100 ;; This function uses a non-reentrant model
  6101 ;;
  6102                           
  6103                           	psect	text13
  6104  0020B4                     __ptext13:
  6105                           	opt stack 0
  6106  0020B4                     _ReadUSART:
  6107                           	opt stack 25
  6108                           
  6109                           ;incstack = 0
  6110  0020B4  0EF2               	movlw	242
  6111  0020B6  160F               	andwf	_USART_Status,f,c
  6112  0020B8  ACAB               	btfss	4011,6,c	;volatile
  6113  0020BA  D003               	goto	i1l680
  6114  0020BC  900F               	bcf	_USART_Status,0,c
  6115  0020BE  B0AB               	btfsc	4011,0,c	;volatile
  6116  0020C0  800F               	bsf	_USART_Status,0,c
  6117  0020C2                     i1l680:
  6118  0020C2  B4AB               	btfsc	4011,2,c	;volatile
  6119  0020C4  840F               	bsf	_USART_Status,2,c
  6120  0020C6  B2AB               	btfsc	4011,1,c	;volatile
  6121  0020C8  860F               	bsf	_USART_Status,3,c
  6122  0020CA  CFAE F021          	movff	4014,ReadUSART@data	;volatile
  6123  0020CE  5021               	movf	ReadUSART@data,w,c
  6124  0020D0  0012               	return	
  6125  0020D2                     __end_of_ReadUSART:
  6126                           	opt stack 0
  6127                           pclatu	equ	0xFFB
  6128                           pclath	equ	0xFFA
  6129                           tblptru	equ	0xFF8
  6130                           tblptrh	equ	0xFF7
  6131                           tblptrl	equ	0xFF6
  6132                           tablat	equ	0xFF5
  6133                           prodh	equ	0xFF4
  6134                           prodl	equ	0xFF3
  6135                           intcon	equ	0xFF2
  6136                           postinc0	equ	0xFEE
  6137                           fsr0h	equ	0xFEA
  6138                           fsr0l	equ	0xFE9
  6139                           wreg	equ	0xFE8
  6140                           fsr1h	equ	0xFE2
  6141                           fsr1l	equ	0xFE1
  6142                           bsr	equ	0xFE0
  6143                           indf2	equ	0xFDF
  6144                           fsr2h	equ	0xFDA
  6145                           fsr2l	equ	0xFD9
  6146                           status	equ	0xFD8
  6147                           
  6148 ;; *************** function _CANreceiveMessage *****************
  6149 ;; Defined at:
  6150 ;;		line 527 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;  msg             2    0[COMRAM] PTR struct .
  6153 ;;		 -> msg(15), 
  6154 ;; Auto vars:     Size  Location     Type
  6155 ;;  tamp            1   11[COMRAM] unsigned char 
  6156 ;;  error           1   10[COMRAM] unsigned char 
  6157 ;; Return value:  Size  Location     Type
  6158 ;;                  1    wreg      unsigned char 
  6159 ;; Registers used:
  6160 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6161 ;; Tracked objects:
  6162 ;;		On entry : 0/0
  6163 ;;		On exit  : 0/0
  6164 ;;		Unchanged: 0/0
  6165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6166 ;;      Params:         2       0       0       0
  6167 ;;      Locals:         2       0       0       0
  6168 ;;      Temps:          8       0       0       0
  6169 ;;      Totals:        12       0       0       0
  6170 ;;Total ram usage:       12 bytes
  6171 ;; Hardware stack levels used:    1
  6172 ;; This function calls:
  6173 ;;		Nothing
  6174 ;; This function is called by:
  6175 ;;		_ISR_bassa
  6176 ;; This function uses a non-reentrant model
  6177 ;;
  6178                           
  6179                           	psect	text14
  6180  0013C6                     __ptext14:
  6181                           	opt stack 0
  6182  0013C6                     _CANreceiveMessage:
  6183                           	opt stack 26
  6184                           
  6185                           ;inc\CANlib.h: 529: BYTE tamp;
  6186                           ;inc\CANlib.h: 530: BYTE error = 0;
  6187                           
  6188                           ;incstack = 0
  6189  0013C6  0E00               	movlw	0
  6190  0013C8  6E2B               	movwf	CANreceiveMessage@error,c
  6191                           
  6192                           ;inc\CANlib.h: 532: if (COMSTATbits.RXB0OVFL == 0x01)
  6193  0013CA  BE74               	btfsc	3956,7,c	;volatile
  6194                           
  6195                           ;inc\CANlib.h: 533: error |= CAN_RX_BUFFER_1_OVFL;
  6196  0013CC  802B               	bsf	CANreceiveMessage@error,0,c
  6197                           
  6198                           ;inc\CANlib.h: 535: if (COMSTATbits.RXB1OVFL == 0x01)
  6199  0013CE  BC74               	btfsc	3956,6,c	;volatile
  6200                           
  6201                           ;inc\CANlib.h: 536: error |= CAN_RX_BUFFER_2_OVFL;
  6202  0013D0  822B               	bsf	CANreceiveMessage@error,1,c
  6203                           
  6204                           ;inc\CANlib.h: 539: if (RXB1CONbits.RXFUL ==0x01)
  6205  0013D2  010F               	movlb	15	; () banked
  6206  0013D4  AF50               	btfss	80,7,b	;volatile
  6207  0013D6  D143               	goto	i1l384
  6208                           
  6209                           ; BSR set to: 15
  6210                           ;inc\CANlib.h: 540: {
  6211                           ;inc\CANlib.h: 541: msg->identifier = 0;
  6212  0013D8  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6213  0013DC  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6214  0013E0  6ADE               	clrf	postinc2,c
  6215  0013E2  6ADE               	clrf	postinc2,c
  6216  0013E4  6ADE               	clrf	postinc2,c
  6217  0013E6  6ADD               	clrf	postdec2,c
  6218                           
  6219                           ; BSR set to: 15
  6220                           ;inc\CANlib.h: 542: msg->data[0] =RXB1D0;
  6221  0013E8  EE20 F004          	lfsr	2,4
  6222  0013EC  5021               	movf	CANreceiveMessage@msg,w,c
  6223  0013EE  26D9               	addwf	fsr2l,f,c
  6224  0013F0  5022               	movf	CANreceiveMessage@msg+1,w,c
  6225  0013F2  22DA               	addwfc	fsr2h,f,c
  6226  0013F4  CF56 FFDF          	movff	3926,indf2	;volatile
  6227                           
  6228                           ; BSR set to: 15
  6229                           ;inc\CANlib.h: 543: msg->data[1] =RXB1D1;
  6230  0013F8  EE20 F005          	lfsr	2,5
  6231  0013FC  5021               	movf	CANreceiveMessage@msg,w,c
  6232  0013FE  26D9               	addwf	fsr2l,f,c
  6233  001400  5022               	movf	CANreceiveMessage@msg+1,w,c
  6234  001402  22DA               	addwfc	fsr2h,f,c
  6235  001404  CF57 FFDF          	movff	3927,indf2	;volatile
  6236                           
  6237                           ; BSR set to: 15
  6238                           ;inc\CANlib.h: 544: msg->data[2] =RXB1D2;
  6239  001408  EE20 F006          	lfsr	2,6
  6240  00140C  5021               	movf	CANreceiveMessage@msg,w,c
  6241  00140E  26D9               	addwf	fsr2l,f,c
  6242  001410  5022               	movf	CANreceiveMessage@msg+1,w,c
  6243  001412  22DA               	addwfc	fsr2h,f,c
  6244  001414  CF58 FFDF          	movff	3928,indf2	;volatile
  6245                           
  6246                           ; BSR set to: 15
  6247                           ;inc\CANlib.h: 545: msg->data[3] =RXB1D3;
  6248  001418  EE20 F007          	lfsr	2,7
  6249  00141C  5021               	movf	CANreceiveMessage@msg,w,c
  6250  00141E  26D9               	addwf	fsr2l,f,c
  6251  001420  5022               	movf	CANreceiveMessage@msg+1,w,c
  6252  001422  22DA               	addwfc	fsr2h,f,c
  6253  001424  CF59 FFDF          	movff	3929,indf2	;volatile
  6254                           
  6255                           ; BSR set to: 15
  6256                           ;inc\CANlib.h: 546: msg->data[4] =RXB1D4;
  6257  001428  EE20 F008          	lfsr	2,8
  6258  00142C  5021               	movf	CANreceiveMessage@msg,w,c
  6259  00142E  26D9               	addwf	fsr2l,f,c
  6260  001430  5022               	movf	CANreceiveMessage@msg+1,w,c
  6261  001432  22DA               	addwfc	fsr2h,f,c
  6262  001434  CF5A FFDF          	movff	3930,indf2	;volatile
  6263                           
  6264                           ; BSR set to: 15
  6265                           ;inc\CANlib.h: 547: msg->data[5] =RXB1D5;
  6266  001438  EE20 F009          	lfsr	2,9
  6267  00143C  5021               	movf	CANreceiveMessage@msg,w,c
  6268  00143E  26D9               	addwf	fsr2l,f,c
  6269  001440  5022               	movf	CANreceiveMessage@msg+1,w,c
  6270  001442  22DA               	addwfc	fsr2h,f,c
  6271  001444  CF5B FFDF          	movff	3931,indf2	;volatile
  6272                           
  6273                           ; BSR set to: 15
  6274                           ;inc\CANlib.h: 548: msg->data[6] =RXB1D6;
  6275  001448  EE20 F00A          	lfsr	2,10
  6276  00144C  5021               	movf	CANreceiveMessage@msg,w,c
  6277  00144E  26D9               	addwf	fsr2l,f,c
  6278  001450  5022               	movf	CANreceiveMessage@msg+1,w,c
  6279  001452  22DA               	addwfc	fsr2h,f,c
  6280  001454  CF5C FFDF          	movff	3932,indf2	;volatile
  6281                           
  6282                           ; BSR set to: 15
  6283                           ;inc\CANlib.h: 549: msg->data[7] =RXB1D7;
  6284  001458  EE20 F00B          	lfsr	2,11
  6285  00145C  5021               	movf	CANreceiveMessage@msg,w,c
  6286  00145E  26D9               	addwf	fsr2l,f,c
  6287  001460  5022               	movf	CANreceiveMessage@msg+1,w,c
  6288  001462  22DA               	addwfc	fsr2h,f,c
  6289  001464  CF5D FFDF          	movff	3933,indf2	;volatile
  6290                           
  6291                           ; BSR set to: 15
  6292                           ;inc\CANlib.h: 551: msg->RTR = RXB1DLCbits.RXRTR;
  6293  001468  EE20 F00E          	lfsr	2,14
  6294  00146C  5021               	movf	CANreceiveMessage@msg,w,c
  6295  00146E  26D9               	addwf	fsr2l,f,c
  6296  001470  5022               	movf	CANreceiveMessage@msg+1,w,c
  6297  001472  22DA               	addwfc	fsr2h,f,c
  6298  001474  010F               	movlb	15	; () banked
  6299  001476  AD55               	btfss	85,6,b	;volatile
  6300  001478  D002               	goto	i1u366_20
  6301  00147A  0E01               	movlw	1
  6302  00147C  D001               	goto	i1u366_26
  6303  00147E                     i1u366_20:
  6304  00147E  0E00               	movlw	0
  6305  001480                     i1u366_26:
  6306  001480  6EDF               	movwf	indf2,c
  6307                           
  6308                           ; BSR set to: 15
  6309                           ;inc\CANlib.h: 553: msg->length = RXB1DLC & 0x0F;
  6310  001482  EE20 F00D          	lfsr	2,13
  6311  001486  5021               	movf	CANreceiveMessage@msg,w,c
  6312  001488  26D9               	addwf	fsr2l,f,c
  6313  00148A  5022               	movf	CANreceiveMessage@msg+1,w,c
  6314  00148C  22DA               	addwfc	fsr2h,f,c
  6315  00148E  010F               	movlb	15	; () banked
  6316  001490  5155               	movf	85,w,b	;volatile
  6317  001492  0B0F               	andlw	15
  6318  001494  6EDF               	movwf	indf2,c
  6319                           
  6320                           ; BSR set to: 15
  6321                           ;inc\CANlib.h: 555: msg->type = RXB1SIDLbits.EXID;
  6322  001496  EE20 F00C          	lfsr	2,12
  6323  00149A  5021               	movf	CANreceiveMessage@msg,w,c
  6324  00149C  26D9               	addwf	fsr2l,f,c
  6325  00149E  5022               	movf	CANreceiveMessage@msg+1,w,c
  6326  0014A0  22DA               	addwfc	fsr2h,f,c
  6327  0014A2  010F               	movlb	15	; () banked
  6328  0014A4  A752               	btfss	82,3,b	;volatile
  6329  0014A6  D002               	goto	i1u367_20
  6330  0014A8  0E01               	movlw	1
  6331  0014AA  D001               	goto	i1u367_26
  6332  0014AC                     i1u367_20:
  6333  0014AC  0E00               	movlw	0
  6334  0014AE                     i1u367_26:
  6335  0014AE  6EDF               	movwf	indf2,c
  6336                           
  6337                           ; BSR set to: 15
  6338                           ;inc\CANlib.h: 557: if (RXB1SIDLbits.EXID == 0)
  6339  0014B0  010F               	movlb	15	; () banked
  6340  0014B2  B752               	btfsc	82,3,b	;volatile
  6341  0014B4  D044               	goto	i1l3217
  6342                           
  6343                           ; BSR set to: 15
  6344                           ;inc\CANlib.h: 558: {
  6345                           ;inc\CANlib.h: 559: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  6346  0014B6  CF51 F023          	movff	3921,??_CANreceiveMessage	;volatile
  6347  0014BA  6A24               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  6348  0014BC  6A25               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  6349  0014BE  6A26               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  6350  0014C0  0E03               	movlw	3
  6351  0014C2                     i1u369_25:
  6352  0014C2  90D8               	bcf	status,0,c
  6353  0014C4  3623               	rlcf	??_CANreceiveMessage,f,c
  6354  0014C6  3624               	rlcf	??_CANreceiveMessage+1,f,c
  6355  0014C8  3625               	rlcf	??_CANreceiveMessage+2,f,c
  6356  0014CA  3626               	rlcf	??_CANreceiveMessage+3,f,c
  6357  0014CC  2EE8               	decfsz	wreg,f,c
  6358  0014CE  D7F9               	goto	i1u369_25
  6359  0014D0  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6360  0014D4  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6361  0014D8  C023  FFDE         	movff	??_CANreceiveMessage,postinc2
  6362  0014DC  C024  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  6363  0014E0  C025  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  6364  0014E4  C026  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  6365                           
  6366                           ; BSR set to: 15
  6367                           ;inc\CANlib.h: 560: tamp = (RXB1SIDL >> 5 ) & 0x07;
  6368  0014E8  010F               	movlb	15	; () banked
  6369  0014EA  3952               	swapf	82,w,b	;volatile
  6370  0014EC  42E8               	rrncf	wreg,f,c
  6371  0014EE  0B07               	andlw	7
  6372  0014F0  0B07               	andlw	7
  6373  0014F2  6E2C               	movwf	CANreceiveMessage@tamp,c
  6374                           
  6375                           ; BSR set to: 15
  6376                           ;inc\CANlib.h: 561: msg->identifier = msg->identifier + tamp;
  6377  0014F4  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6378  0014F8  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6379  0014FC  CFDE F023          	movff	postinc2,??_CANreceiveMessage
  6380  001500  CFDE F024          	movff	postinc2,??_CANreceiveMessage+1
  6381  001504  CFDE F025          	movff	postinc2,??_CANreceiveMessage+2
  6382  001508  CFDE F026          	movff	postinc2,??_CANreceiveMessage+3
  6383  00150C  502C               	movf	CANreceiveMessage@tamp,w,c
  6384  00150E  2423               	addwf	??_CANreceiveMessage,w,c
  6385  001510  6E27               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  6386  001512  0E00               	movlw	0
  6387  001514  2024               	addwfc	??_CANreceiveMessage+1,w,c
  6388  001516  6E28               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  6389  001518  0E00               	movlw	0
  6390  00151A  2025               	addwfc	??_CANreceiveMessage+2,w,c
  6391  00151C  6E29               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  6392  00151E  0E00               	movlw	0
  6393  001520  2026               	addwfc	??_CANreceiveMessage+3,w,c
  6394  001522  6E2A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  6395  001524  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6396  001528  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6397  00152C  C027  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  6398  001530  C028  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  6399  001534  C029  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  6400  001538  C02A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  6401                           
  6402                           ;inc\CANlib.h: 562: }
  6403  00153C  D08D               	goto	i1l3243
  6404  00153E                     i1l3217:
  6405                           
  6406                           ; BSR set to: 15
  6407                           ;inc\CANlib.h: 563: else
  6408                           ;inc\CANlib.h: 564: {
  6409                           ;inc\CANlib.h: 565: msg->identifier = (unsigned long) RXB1EIDL;
  6410  00153E  CF54 F023          	movff	3924,??_CANreceiveMessage	;volatile
  6411  001542  6A24               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  6412  001544  6A25               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  6413  001546  6A26               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  6414  001548  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6415  00154C  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6416  001550  C023  FFDE         	movff	??_CANreceiveMessage,postinc2
  6417  001554  C024  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  6418  001558  C025  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  6419  00155C  C026  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  6420                           
  6421                           ; BSR set to: 15
  6422                           ;inc\CANlib.h: 566: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  6423  001560  CF53 F023          	movff	3923,??_CANreceiveMessage	;volatile
  6424  001564  6A24               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  6425  001566  6A25               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  6426  001568  6A26               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  6427  00156A  C025  F026         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  6428  00156E  C024  F025         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  6429  001572  C023  F024         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  6430  001576  6A23               	clrf	??_CANreceiveMessage,c
  6431  001578  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6432  00157C  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6433  001580  5023               	movf	??_CANreceiveMessage,w,c
  6434  001582  26DE               	addwf	postinc2,f,c
  6435  001584  5024               	movf	??_CANreceiveMessage+1,w,c
  6436  001586  22DE               	addwfc	postinc2,f,c
  6437  001588  5025               	movf	??_CANreceiveMessage+2,w,c
  6438  00158A  22DE               	addwfc	postinc2,f,c
  6439  00158C  5026               	movf	??_CANreceiveMessage+3,w,c
  6440  00158E  22DE               	addwfc	postinc2,f,c
  6441                           
  6442                           ; BSR set to: 15
  6443                           ;inc\CANlib.h: 568: if (RXB1SIDLbits.EID16)
  6444  001590  010F               	movlb	15	; () banked
  6445  001592  A152               	btfss	82,0,b	;volatile
  6446  001594  D00C               	goto	i1l3225
  6447                           
  6448                           ; BSR set to: 15
  6449                           ;inc\CANlib.h: 569: msg->identifier |= 0x00010000;
  6450  001596  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6451  00159A  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6452  00159E  0E00               	movlw	0
  6453  0015A0  12DE               	iorwf	postinc2,f,c
  6454  0015A2  0E00               	movlw	0
  6455  0015A4  12DE               	iorwf	postinc2,f,c
  6456  0015A6  0E01               	movlw	1
  6457  0015A8  12DE               	iorwf	postinc2,f,c
  6458  0015AA  0E00               	movlw	0
  6459  0015AC  12DE               	iorwf	postinc2,f,c
  6460  0015AE                     i1l3225:
  6461                           
  6462                           ; BSR set to: 15
  6463                           ;inc\CANlib.h: 570: if (RXB1SIDLbits.EID17)
  6464  0015AE  010F               	movlb	15	; () banked
  6465  0015B0  A352               	btfss	82,1,b	;volatile
  6466  0015B2  D00C               	goto	i1l3229
  6467                           
  6468                           ; BSR set to: 15
  6469                           ;inc\CANlib.h: 571: msg->identifier |= 0x00020000;
  6470  0015B4  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6471  0015B8  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6472  0015BC  0E00               	movlw	0
  6473  0015BE  12DE               	iorwf	postinc2,f,c
  6474  0015C0  0E00               	movlw	0
  6475  0015C2  12DE               	iorwf	postinc2,f,c
  6476  0015C4  0E02               	movlw	2
  6477  0015C6  12DE               	iorwf	postinc2,f,c
  6478  0015C8  0E00               	movlw	0
  6479  0015CA  12DE               	iorwf	postinc2,f,c
  6480  0015CC                     i1l3229:
  6481                           
  6482                           ; BSR set to: 15
  6483                           ;inc\CANlib.h: 572: if (RXB1SIDLbits.SID0)
  6484  0015CC  010F               	movlb	15	; () banked
  6485  0015CE  AB52               	btfss	82,5,b	;volatile
  6486  0015D0  D00C               	goto	i1l3233
  6487                           
  6488                           ; BSR set to: 15
  6489                           ;inc\CANlib.h: 573: msg->identifier |= 0x00040000;
  6490  0015D2  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6491  0015D6  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6492  0015DA  0E00               	movlw	0
  6493  0015DC  12DE               	iorwf	postinc2,f,c
  6494  0015DE  0E00               	movlw	0
  6495  0015E0  12DE               	iorwf	postinc2,f,c
  6496  0015E2  0E04               	movlw	4
  6497  0015E4  12DE               	iorwf	postinc2,f,c
  6498  0015E6  0E00               	movlw	0
  6499  0015E8  12DE               	iorwf	postinc2,f,c
  6500  0015EA                     i1l3233:
  6501                           
  6502                           ; BSR set to: 15
  6503                           ;inc\CANlib.h: 574: if (RXB1SIDLbits.SID1)
  6504  0015EA  010F               	movlb	15	; () banked
  6505  0015EC  AD52               	btfss	82,6,b	;volatile
  6506  0015EE  D00C               	goto	i1l3237
  6507                           
  6508                           ; BSR set to: 15
  6509                           ;inc\CANlib.h: 575: msg->identifier |= 0x00080000;
  6510  0015F0  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6511  0015F4  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6512  0015F8  0E00               	movlw	0
  6513  0015FA  12DE               	iorwf	postinc2,f,c
  6514  0015FC  0E00               	movlw	0
  6515  0015FE  12DE               	iorwf	postinc2,f,c
  6516  001600  0E08               	movlw	8
  6517  001602  12DE               	iorwf	postinc2,f,c
  6518  001604  0E00               	movlw	0
  6519  001606  12DE               	iorwf	postinc2,f,c
  6520  001608                     i1l3237:
  6521                           
  6522                           ; BSR set to: 15
  6523                           ;inc\CANlib.h: 576: if (RXB1SIDLbits.SID2)
  6524  001608  010F               	movlb	15	; () banked
  6525  00160A  AF52               	btfss	82,7,b	;volatile
  6526  00160C  D00C               	goto	i1l3241
  6527                           
  6528                           ; BSR set to: 15
  6529                           ;inc\CANlib.h: 577: msg->identifier |= 0x00100000;
  6530  00160E  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6531  001612  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6532  001616  0E00               	movlw	0
  6533  001618  12DE               	iorwf	postinc2,f,c
  6534  00161A  0E00               	movlw	0
  6535  00161C  12DE               	iorwf	postinc2,f,c
  6536  00161E  0E10               	movlw	16
  6537  001620  12DE               	iorwf	postinc2,f,c
  6538  001622  0E00               	movlw	0
  6539  001624  12DE               	iorwf	postinc2,f,c
  6540  001626                     i1l3241:
  6541                           
  6542                           ; BSR set to: 15
  6543                           ;inc\CANlib.h: 579: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  6544  001626  CF51 F023          	movff	3921,??_CANreceiveMessage	;volatile
  6545  00162A  6A24               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  6546  00162C  6A25               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  6547  00162E  6A26               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  6548  001630  0E15               	movlw	21
  6549  001632                     i1u375_25:
  6550  001632  90D8               	bcf	status,0,c
  6551  001634  3623               	rlcf	??_CANreceiveMessage,f,c
  6552  001636  3624               	rlcf	??_CANreceiveMessage+1,f,c
  6553  001638  3625               	rlcf	??_CANreceiveMessage+2,f,c
  6554  00163A  3626               	rlcf	??_CANreceiveMessage+3,f,c
  6555  00163C  2EE8               	decfsz	wreg,f,c
  6556  00163E  D7F9               	goto	i1u375_25
  6557  001640  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6558  001644  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6559  001648  5023               	movf	??_CANreceiveMessage,w,c
  6560  00164A  12DE               	iorwf	postinc2,f,c
  6561  00164C  5024               	movf	??_CANreceiveMessage+1,w,c
  6562  00164E  12DE               	iorwf	postinc2,f,c
  6563  001650  5025               	movf	??_CANreceiveMessage+2,w,c
  6564  001652  12DE               	iorwf	postinc2,f,c
  6565  001654  5026               	movf	??_CANreceiveMessage+3,w,c
  6566  001656  12DE               	iorwf	postinc2,f,c
  6567  001658                     i1l3243:
  6568                           
  6569                           ; BSR set to: 15
  6570                           ;inc\CANlib.h: 580: }
  6571                           ;inc\CANlib.h: 582: RXB1CONbits.RXFUL = 0x00;
  6572  001658  010F               	movlb	15	; () banked
  6573  00165A  9F50               	bcf	80,7,b	;volatile
  6574                           
  6575                           ; BSR set to: 15
  6576                           ;inc\CANlib.h: 583: return (error);
  6577                           ;	Return value of _CANreceiveMessage is never used
  6578  00165C  0012               	return	
  6579  00165E                     i1l384:
  6580                           
  6581                           ; BSR set to: 15
  6582                           ;inc\CANlib.h: 584: }
  6583                           ;inc\CANlib.h: 586: if (RXB0CONbits.RXFUL ==0x01)
  6584  00165E  AE60               	btfss	3936,7,c	;volatile
  6585  001660  0012               	return	
  6586                           
  6587                           ; BSR set to: 15
  6588                           ;inc\CANlib.h: 587: {
  6589                           ;inc\CANlib.h: 588: msg->identifier = 0;
  6590  001662  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6591  001666  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6592  00166A  6ADE               	clrf	postinc2,c
  6593  00166C  6ADE               	clrf	postinc2,c
  6594  00166E  6ADE               	clrf	postinc2,c
  6595  001670  6ADD               	clrf	postdec2,c
  6596                           
  6597                           ; BSR set to: 15
  6598                           ;inc\CANlib.h: 589: msg->data[0] =RXB0D0;
  6599  001672  EE20 F004          	lfsr	2,4
  6600  001676  5021               	movf	CANreceiveMessage@msg,w,c
  6601  001678  26D9               	addwf	fsr2l,f,c
  6602  00167A  5022               	movf	CANreceiveMessage@msg+1,w,c
  6603  00167C  22DA               	addwfc	fsr2h,f,c
  6604  00167E  CF66 FFDF          	movff	3942,indf2	;volatile
  6605                           
  6606                           ; BSR set to: 15
  6607                           ;inc\CANlib.h: 590: msg->data[1] =RXB0D1;
  6608  001682  EE20 F005          	lfsr	2,5
  6609  001686  5021               	movf	CANreceiveMessage@msg,w,c
  6610  001688  26D9               	addwf	fsr2l,f,c
  6611  00168A  5022               	movf	CANreceiveMessage@msg+1,w,c
  6612  00168C  22DA               	addwfc	fsr2h,f,c
  6613  00168E  CF67 FFDF          	movff	3943,indf2	;volatile
  6614                           
  6615                           ; BSR set to: 15
  6616                           ;inc\CANlib.h: 591: msg->data[2] =RXB0D2;
  6617  001692  EE20 F006          	lfsr	2,6
  6618  001696  5021               	movf	CANreceiveMessage@msg,w,c
  6619  001698  26D9               	addwf	fsr2l,f,c
  6620  00169A  5022               	movf	CANreceiveMessage@msg+1,w,c
  6621  00169C  22DA               	addwfc	fsr2h,f,c
  6622  00169E  CF68 FFDF          	movff	3944,indf2	;volatile
  6623                           
  6624                           ; BSR set to: 15
  6625                           ;inc\CANlib.h: 592: msg->data[3] =RXB0D3;
  6626  0016A2  EE20 F007          	lfsr	2,7
  6627  0016A6  5021               	movf	CANreceiveMessage@msg,w,c
  6628  0016A8  26D9               	addwf	fsr2l,f,c
  6629  0016AA  5022               	movf	CANreceiveMessage@msg+1,w,c
  6630  0016AC  22DA               	addwfc	fsr2h,f,c
  6631  0016AE  CF69 FFDF          	movff	3945,indf2	;volatile
  6632                           
  6633                           ; BSR set to: 15
  6634                           ;inc\CANlib.h: 593: msg->data[4] =RXB0D4;
  6635  0016B2  EE20 F008          	lfsr	2,8
  6636  0016B6  5021               	movf	CANreceiveMessage@msg,w,c
  6637  0016B8  26D9               	addwf	fsr2l,f,c
  6638  0016BA  5022               	movf	CANreceiveMessage@msg+1,w,c
  6639  0016BC  22DA               	addwfc	fsr2h,f,c
  6640  0016BE  CF6A FFDF          	movff	3946,indf2	;volatile
  6641                           
  6642                           ; BSR set to: 15
  6643                           ;inc\CANlib.h: 594: msg->data[5] =RXB0D5;
  6644  0016C2  EE20 F009          	lfsr	2,9
  6645  0016C6  5021               	movf	CANreceiveMessage@msg,w,c
  6646  0016C8  26D9               	addwf	fsr2l,f,c
  6647  0016CA  5022               	movf	CANreceiveMessage@msg+1,w,c
  6648  0016CC  22DA               	addwfc	fsr2h,f,c
  6649  0016CE  CF6B FFDF          	movff	3947,indf2	;volatile
  6650                           
  6651                           ; BSR set to: 15
  6652                           ;inc\CANlib.h: 595: msg->data[6] =RXB0D6;
  6653  0016D2  EE20 F00A          	lfsr	2,10
  6654  0016D6  5021               	movf	CANreceiveMessage@msg,w,c
  6655  0016D8  26D9               	addwf	fsr2l,f,c
  6656  0016DA  5022               	movf	CANreceiveMessage@msg+1,w,c
  6657  0016DC  22DA               	addwfc	fsr2h,f,c
  6658  0016DE  CF6C FFDF          	movff	3948,indf2	;volatile
  6659                           
  6660                           ; BSR set to: 15
  6661                           ;inc\CANlib.h: 596: msg->data[7] =RXB0D7;
  6662  0016E2  EE20 F00B          	lfsr	2,11
  6663  0016E6  5021               	movf	CANreceiveMessage@msg,w,c
  6664  0016E8  26D9               	addwf	fsr2l,f,c
  6665  0016EA  5022               	movf	CANreceiveMessage@msg+1,w,c
  6666  0016EC  22DA               	addwfc	fsr2h,f,c
  6667  0016EE  CF6D FFDF          	movff	3949,indf2	;volatile
  6668                           
  6669                           ; BSR set to: 15
  6670                           ;inc\CANlib.h: 598: msg->RTR = RXB0DLCbits.RXRTR;
  6671  0016F2  EE20 F00E          	lfsr	2,14
  6672  0016F6  5021               	movf	CANreceiveMessage@msg,w,c
  6673  0016F8  26D9               	addwf	fsr2l,f,c
  6674  0016FA  5022               	movf	CANreceiveMessage@msg+1,w,c
  6675  0016FC  22DA               	addwfc	fsr2h,f,c
  6676  0016FE  AC65               	btfss	3941,6,c	;volatile
  6677  001700  D002               	goto	i1u377_20
  6678  001702  0E01               	movlw	1
  6679  001704  D001               	goto	i1u377_26
  6680  001706                     i1u377_20:
  6681  001706  0E00               	movlw	0
  6682  001708                     i1u377_26:
  6683  001708  6EDF               	movwf	indf2,c
  6684                           
  6685                           ; BSR set to: 15
  6686                           ;inc\CANlib.h: 600: msg->length = RXB0DLC & 0x0F;
  6687  00170A  EE20 F00D          	lfsr	2,13
  6688  00170E  5021               	movf	CANreceiveMessage@msg,w,c
  6689  001710  26D9               	addwf	fsr2l,f,c
  6690  001712  5022               	movf	CANreceiveMessage@msg+1,w,c
  6691  001714  22DA               	addwfc	fsr2h,f,c
  6692  001716  5065               	movf	3941,w,c	;volatile
  6693  001718  0B0F               	andlw	15
  6694  00171A  6EDF               	movwf	indf2,c
  6695                           
  6696                           ; BSR set to: 15
  6697                           ;inc\CANlib.h: 602: msg->type = RXB0SIDLbits.EXID;
  6698  00171C  EE20 F00C          	lfsr	2,12
  6699  001720  5021               	movf	CANreceiveMessage@msg,w,c
  6700  001722  26D9               	addwf	fsr2l,f,c
  6701  001724  5022               	movf	CANreceiveMessage@msg+1,w,c
  6702  001726  22DA               	addwfc	fsr2h,f,c
  6703  001728  A662               	btfss	3938,3,c	;volatile
  6704  00172A  D002               	goto	i1u378_20
  6705  00172C  0E01               	movlw	1
  6706  00172E  D001               	goto	i1u378_26
  6707  001730                     i1u378_20:
  6708  001730  0E00               	movlw	0
  6709  001732                     i1u378_26:
  6710  001732  6EDF               	movwf	indf2,c
  6711                           
  6712                           ; BSR set to: 15
  6713                           ;inc\CANlib.h: 604: if (RXB0SIDLbits.EXID == 0)
  6714  001734  B662               	btfsc	3938,3,c	;volatile
  6715  001736  D043               	goto	i1l3279
  6716                           
  6717                           ; BSR set to: 15
  6718                           ;inc\CANlib.h: 605: {
  6719                           ;inc\CANlib.h: 606: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  6720  001738  CF61 F023          	movff	3937,??_CANreceiveMessage	;volatile
  6721  00173C  6A24               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  6722  00173E  6A25               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  6723  001740  6A26               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  6724  001742  0E03               	movlw	3
  6725  001744                     i1u380_25:
  6726  001744  90D8               	bcf	status,0,c
  6727  001746  3623               	rlcf	??_CANreceiveMessage,f,c
  6728  001748  3624               	rlcf	??_CANreceiveMessage+1,f,c
  6729  00174A  3625               	rlcf	??_CANreceiveMessage+2,f,c
  6730  00174C  3626               	rlcf	??_CANreceiveMessage+3,f,c
  6731  00174E  2EE8               	decfsz	wreg,f,c
  6732  001750  D7F9               	goto	i1u380_25
  6733  001752  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6734  001756  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6735  00175A  C023  FFDE         	movff	??_CANreceiveMessage,postinc2
  6736  00175E  C024  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  6737  001762  C025  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  6738  001766  C026  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  6739                           
  6740                           ; BSR set to: 15
  6741                           ;inc\CANlib.h: 607: tamp = (RXB0SIDL >> 5 ) & 0x07;
  6742  00176A  3862               	swapf	3938,w,c	;volatile
  6743  00176C  42E8               	rrncf	wreg,f,c
  6744  00176E  0B07               	andlw	7
  6745  001770  0B07               	andlw	7
  6746  001772  6E2C               	movwf	CANreceiveMessage@tamp,c
  6747                           
  6748                           ; BSR set to: 15
  6749                           ;inc\CANlib.h: 608: msg->identifier = msg->identifier + tamp;
  6750  001774  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6751  001778  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6752  00177C  CFDE F023          	movff	postinc2,??_CANreceiveMessage
  6753  001780  CFDE F024          	movff	postinc2,??_CANreceiveMessage+1
  6754  001784  CFDE F025          	movff	postinc2,??_CANreceiveMessage+2
  6755  001788  CFDE F026          	movff	postinc2,??_CANreceiveMessage+3
  6756  00178C  502C               	movf	CANreceiveMessage@tamp,w,c
  6757  00178E  2423               	addwf	??_CANreceiveMessage,w,c
  6758  001790  6E27               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  6759  001792  0E00               	movlw	0
  6760  001794  2024               	addwfc	??_CANreceiveMessage+1,w,c
  6761  001796  6E28               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  6762  001798  0E00               	movlw	0
  6763  00179A  2025               	addwfc	??_CANreceiveMessage+2,w,c
  6764  00179C  6E29               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  6765  00179E  0E00               	movlw	0
  6766  0017A0  2026               	addwfc	??_CANreceiveMessage+3,w,c
  6767  0017A2  6E2A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  6768  0017A4  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6769  0017A8  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6770  0017AC  C027  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  6771  0017B0  C028  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  6772  0017B4  C029  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  6773  0017B8  C02A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  6774                           
  6775                           ;inc\CANlib.h: 609: }
  6776  0017BC  D088               	goto	i1l3305
  6777  0017BE                     i1l3279:
  6778                           
  6779                           ; BSR set to: 15
  6780                           ;inc\CANlib.h: 610: else
  6781                           ;inc\CANlib.h: 611: {
  6782                           ;inc\CANlib.h: 612: msg->identifier = (unsigned long) RXB0EIDL;
  6783  0017BE  CF64 F023          	movff	3940,??_CANreceiveMessage	;volatile
  6784  0017C2  6A24               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  6785  0017C4  6A25               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  6786  0017C6  6A26               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  6787  0017C8  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6788  0017CC  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6789  0017D0  C023  FFDE         	movff	??_CANreceiveMessage,postinc2
  6790  0017D4  C024  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  6791  0017D8  C025  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  6792  0017DC  C026  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  6793                           
  6794                           ; BSR set to: 15
  6795                           ;inc\CANlib.h: 613: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  6796  0017E0  CF63 F023          	movff	3939,??_CANreceiveMessage	;volatile
  6797  0017E4  6A24               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  6798  0017E6  6A25               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  6799  0017E8  6A26               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  6800  0017EA  C025  F026         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  6801  0017EE  C024  F025         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  6802  0017F2  C023  F024         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  6803  0017F6  6A23               	clrf	??_CANreceiveMessage,c
  6804  0017F8  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6805  0017FC  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6806  001800  5023               	movf	??_CANreceiveMessage,w,c
  6807  001802  26DE               	addwf	postinc2,f,c
  6808  001804  5024               	movf	??_CANreceiveMessage+1,w,c
  6809  001806  22DE               	addwfc	postinc2,f,c
  6810  001808  5025               	movf	??_CANreceiveMessage+2,w,c
  6811  00180A  22DE               	addwfc	postinc2,f,c
  6812  00180C  5026               	movf	??_CANreceiveMessage+3,w,c
  6813  00180E  22DE               	addwfc	postinc2,f,c
  6814                           
  6815                           ; BSR set to: 15
  6816                           ;inc\CANlib.h: 615: if (RXB0SIDLbits.EID16)
  6817  001810  A062               	btfss	3938,0,c	;volatile
  6818  001812  D00C               	goto	i1l3287
  6819                           
  6820                           ; BSR set to: 15
  6821                           ;inc\CANlib.h: 616: msg->identifier |= 0x00010000;
  6822  001814  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6823  001818  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6824  00181C  0E00               	movlw	0
  6825  00181E  12DE               	iorwf	postinc2,f,c
  6826  001820  0E00               	movlw	0
  6827  001822  12DE               	iorwf	postinc2,f,c
  6828  001824  0E01               	movlw	1
  6829  001826  12DE               	iorwf	postinc2,f,c
  6830  001828  0E00               	movlw	0
  6831  00182A  12DE               	iorwf	postinc2,f,c
  6832  00182C                     i1l3287:
  6833                           
  6834                           ; BSR set to: 15
  6835                           ;inc\CANlib.h: 617: if (RXB0SIDLbits.EID17)
  6836  00182C  A262               	btfss	3938,1,c	;volatile
  6837  00182E  D00C               	goto	i1l3291
  6838                           
  6839                           ; BSR set to: 15
  6840                           ;inc\CANlib.h: 618: msg->identifier |= 0x00020000;
  6841  001830  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6842  001834  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6843  001838  0E00               	movlw	0
  6844  00183A  12DE               	iorwf	postinc2,f,c
  6845  00183C  0E00               	movlw	0
  6846  00183E  12DE               	iorwf	postinc2,f,c
  6847  001840  0E02               	movlw	2
  6848  001842  12DE               	iorwf	postinc2,f,c
  6849  001844  0E00               	movlw	0
  6850  001846  12DE               	iorwf	postinc2,f,c
  6851  001848                     i1l3291:
  6852                           
  6853                           ; BSR set to: 15
  6854                           ;inc\CANlib.h: 619: if (RXB0SIDLbits.SID0)
  6855  001848  AA62               	btfss	3938,5,c	;volatile
  6856  00184A  D00C               	goto	i1l3295
  6857                           
  6858                           ; BSR set to: 15
  6859                           ;inc\CANlib.h: 620: msg->identifier |= 0x00040000;
  6860  00184C  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6861  001850  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6862  001854  0E00               	movlw	0
  6863  001856  12DE               	iorwf	postinc2,f,c
  6864  001858  0E00               	movlw	0
  6865  00185A  12DE               	iorwf	postinc2,f,c
  6866  00185C  0E04               	movlw	4
  6867  00185E  12DE               	iorwf	postinc2,f,c
  6868  001860  0E00               	movlw	0
  6869  001862  12DE               	iorwf	postinc2,f,c
  6870  001864                     i1l3295:
  6871                           
  6872                           ; BSR set to: 15
  6873                           ;inc\CANlib.h: 621: if (RXB0SIDLbits.SID1)
  6874  001864  AC62               	btfss	3938,6,c	;volatile
  6875  001866  D00C               	goto	i1l3299
  6876                           
  6877                           ; BSR set to: 15
  6878                           ;inc\CANlib.h: 622: msg->identifier |= 0x00080000;
  6879  001868  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6880  00186C  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6881  001870  0E00               	movlw	0
  6882  001872  12DE               	iorwf	postinc2,f,c
  6883  001874  0E00               	movlw	0
  6884  001876  12DE               	iorwf	postinc2,f,c
  6885  001878  0E08               	movlw	8
  6886  00187A  12DE               	iorwf	postinc2,f,c
  6887  00187C  0E00               	movlw	0
  6888  00187E  12DE               	iorwf	postinc2,f,c
  6889  001880                     i1l3299:
  6890                           
  6891                           ; BSR set to: 15
  6892                           ;inc\CANlib.h: 623: if (RXB0SIDLbits.SID2)
  6893  001880  AE62               	btfss	3938,7,c	;volatile
  6894  001882  D00C               	goto	i1l3303
  6895                           
  6896                           ; BSR set to: 15
  6897                           ;inc\CANlib.h: 624: msg->identifier |= 0x00100000;
  6898  001884  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6899  001888  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6900  00188C  0E00               	movlw	0
  6901  00188E  12DE               	iorwf	postinc2,f,c
  6902  001890  0E00               	movlw	0
  6903  001892  12DE               	iorwf	postinc2,f,c
  6904  001894  0E10               	movlw	16
  6905  001896  12DE               	iorwf	postinc2,f,c
  6906  001898  0E00               	movlw	0
  6907  00189A  12DE               	iorwf	postinc2,f,c
  6908  00189C                     i1l3303:
  6909                           
  6910                           ; BSR set to: 15
  6911                           ;inc\CANlib.h: 626: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  6912  00189C  CF61 F023          	movff	3937,??_CANreceiveMessage	;volatile
  6913  0018A0  6A24               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  6914  0018A2  6A25               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  6915  0018A4  6A26               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  6916  0018A6  0E15               	movlw	21
  6917  0018A8                     i1u386_25:
  6918  0018A8  90D8               	bcf	status,0,c
  6919  0018AA  3623               	rlcf	??_CANreceiveMessage,f,c
  6920  0018AC  3624               	rlcf	??_CANreceiveMessage+1,f,c
  6921  0018AE  3625               	rlcf	??_CANreceiveMessage+2,f,c
  6922  0018B0  3626               	rlcf	??_CANreceiveMessage+3,f,c
  6923  0018B2  2EE8               	decfsz	wreg,f,c
  6924  0018B4  D7F9               	goto	i1u386_25
  6925  0018B6  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6926  0018BA  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6927  0018BE  5023               	movf	??_CANreceiveMessage,w,c
  6928  0018C0  12DE               	iorwf	postinc2,f,c
  6929  0018C2  5024               	movf	??_CANreceiveMessage+1,w,c
  6930  0018C4  12DE               	iorwf	postinc2,f,c
  6931  0018C6  5025               	movf	??_CANreceiveMessage+2,w,c
  6932  0018C8  12DE               	iorwf	postinc2,f,c
  6933  0018CA  5026               	movf	??_CANreceiveMessage+3,w,c
  6934  0018CC  12DE               	iorwf	postinc2,f,c
  6935  0018CE                     i1l3305:
  6936                           
  6937                           ; BSR set to: 15
  6938                           ;inc\CANlib.h: 628: }
  6939                           ;inc\CANlib.h: 629: RXB0CONbits.RXFUL = 0x00;
  6940  0018CE  9E60               	bcf	3936,7,c	;volatile
  6941                           
  6942                           ; BSR set to: 15
  6943                           ;inc\CANlib.h: 631: return (error);
  6944                           ;	Return value of _CANreceiveMessage is never used
  6945  0018D0  0012               	return	
  6946  0018D2                     __end_of_CANreceiveMessage:
  6947                           	opt stack 0
  6948                           pclatu	equ	0xFFB
  6949                           pclath	equ	0xFFA
  6950                           tblptru	equ	0xFF8
  6951                           tblptrh	equ	0xFF7
  6952                           tblptrl	equ	0xFF6
  6953                           tablat	equ	0xFF5
  6954                           prodh	equ	0xFF4
  6955                           prodl	equ	0xFF3
  6956                           intcon	equ	0xFF2
  6957                           postinc0	equ	0xFEE
  6958                           fsr0h	equ	0xFEA
  6959                           fsr0l	equ	0xFE9
  6960                           wreg	equ	0xFE8
  6961                           fsr1h	equ	0xFE2
  6962                           fsr1l	equ	0xFE1
  6963                           bsr	equ	0xFE0
  6964                           indf2	equ	0xFDF
  6965                           postinc2	equ	0xFDE
  6966                           postdec2	equ	0xFDD
  6967                           fsr2h	equ	0xFDA
  6968                           fsr2l	equ	0xFD9
  6969                           status	equ	0xFD8
  6970                           
  6971 ;; *************** function _CANisRxReady *****************
  6972 ;; Defined at:
  6973 ;;		line 1162 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6974 ;; Parameters:    Size  Location     Type
  6975 ;;		None
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;		None
  6978 ;; Return value:  Size  Location     Type
  6979 ;;                  1    wreg      unsigned char 
  6980 ;; Registers used:
  6981 ;;		wreg, status,2
  6982 ;; Tracked objects:
  6983 ;;		On entry : 0/0
  6984 ;;		On exit  : 0/0
  6985 ;;		Unchanged: 0/0
  6986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6987 ;;      Params:         0       0       0       0
  6988 ;;      Locals:         1       0       0       0
  6989 ;;      Temps:          0       0       0       0
  6990 ;;      Totals:         1       0       0       0
  6991 ;;Total ram usage:        1 bytes
  6992 ;; Hardware stack levels used:    1
  6993 ;; This function calls:
  6994 ;;		Nothing
  6995 ;; This function is called by:
  6996 ;;		_ISR_bassa
  6997 ;; This function uses a non-reentrant model
  6998 ;;
  6999                           
  7000                           	psect	text15
  7001  0020D2                     __ptext15:
  7002                           	opt stack 0
  7003  0020D2                     _CANisRxReady:
  7004                           	opt stack 26
  7005                           
  7006                           ;inc\CANlib.h: 1164: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  7007                           
  7008                           ; BSR set to: 15
  7009                           ;incstack = 0
  7010  0020D2  0E01               	movlw	1
  7011  0020D4  6E21               	movwf	_CANisRxReady$2719,c
  7012  0020D6  BE60               	btfsc	3936,7,c	;volatile
  7013  0020D8  D005               	goto	i1l535
  7014  0020DA  010F               	movlb	15	; () banked
  7015  0020DC  BF50               	btfsc	80,7,b	;volatile
  7016  0020DE  D002               	goto	i1l535
  7017                           
  7018                           ; BSR set to: 15
  7019  0020E0  0E00               	movlw	0
  7020  0020E2  6E21               	movwf	_CANisRxReady$2719,c
  7021  0020E4                     i1l535:
  7022  0020E4  5021               	movf	_CANisRxReady$2719,w,c
  7023  0020E6  0012               	return	
  7024  0020E8                     __end_of_CANisRxReady:
  7025                           	opt stack 0
  7026  0000                     pclatu	equ	0xFFB
  7027                           pclath	equ	0xFFA
  7028                           tblptru	equ	0xFF8
  7029                           tblptrh	equ	0xFF7
  7030                           tblptrl	equ	0xFF6
  7031                           tablat	equ	0xFF5
  7032                           prodh	equ	0xFF4
  7033                           prodl	equ	0xFF3
  7034                           intcon	equ	0xFF2
  7035                           postinc0	equ	0xFEE
  7036                           fsr0h	equ	0xFEA
  7037                           fsr0l	equ	0xFE9
  7038                           wreg	equ	0xFE8
  7039                           fsr1h	equ	0xFE2
  7040                           fsr1l	equ	0xFE1
  7041                           bsr	equ	0xFE0
  7042                           indf2	equ	0xFDF
  7043                           postinc2	equ	0xFDE
  7044                           postdec2	equ	0xFDD
  7045                           fsr2h	equ	0xFDA
  7046                           fsr2l	equ	0xFD9
  7047                           status	equ	0xFD8
  7048                           pclatu	equ	0xFFB
  7049                           pclath	equ	0xFFA
  7050                           tblptru	equ	0xFF8
  7051                           tblptrh	equ	0xFF7
  7052                           tblptrl	equ	0xFF6
  7053                           tablat	equ	0xFF5
  7054                           prodh	equ	0xFF4
  7055                           prodl	equ	0xFF3
  7056                           intcon	equ	0xFF2
  7057                           postinc0	equ	0xFEE
  7058                           fsr0h	equ	0xFEA
  7059                           fsr0l	equ	0xFE9
  7060                           wreg	equ	0xFE8
  7061                           fsr1h	equ	0xFE2
  7062                           fsr1l	equ	0xFE1
  7063                           bsr	equ	0xFE0
  7064                           indf2	equ	0xFDF
  7065                           postinc2	equ	0xFDE
  7066                           postdec2	equ	0xFDD
  7067                           fsr2h	equ	0xFDA
  7068                           fsr2l	equ	0xFD9
  7069                           status	equ	0xFD8
  7070                           
  7071                           	psect	rparam
  7072  0000                     pclatu	equ	0xFFB
  7073                           pclath	equ	0xFFA
  7074                           tblptru	equ	0xFF8
  7075                           tblptrh	equ	0xFF7
  7076                           tblptrl	equ	0xFF6
  7077                           tablat	equ	0xFF5
  7078                           prodh	equ	0xFF4
  7079                           prodl	equ	0xFF3
  7080                           intcon	equ	0xFF2
  7081                           postinc0	equ	0xFEE
  7082                           fsr0h	equ	0xFEA
  7083                           fsr0l	equ	0xFE9
  7084                           wreg	equ	0xFE8
  7085                           fsr1h	equ	0xFE2
  7086                           fsr1l	equ	0xFE1
  7087                           bsr	equ	0xFE0
  7088                           indf2	equ	0xFDF
  7089                           postinc2	equ	0xFDE
  7090                           postdec2	equ	0xFDD
  7091                           fsr2h	equ	0xFDA
  7092                           fsr2l	equ	0xFD9
  7093                           status	equ	0xFD8
  7094                           
  7095                           	psect	temp
  7096  000042                     btemp:
  7097                           	opt stack 0
  7098  000042                     	ds	1
  7099  0000                     int$flags	set	btemp
  7100                           pclatu	equ	0xFFB
  7101                           pclath	equ	0xFFA
  7102                           tblptru	equ	0xFF8
  7103                           tblptrh	equ	0xFF7
  7104                           tblptrl	equ	0xFF6
  7105                           tablat	equ	0xFF5
  7106                           prodh	equ	0xFF4
  7107                           prodl	equ	0xFF3
  7108                           intcon	equ	0xFF2
  7109                           postinc0	equ	0xFEE
  7110                           fsr0h	equ	0xFEA
  7111                           fsr0l	equ	0xFE9
  7112                           wreg	equ	0xFE8
  7113                           fsr1h	equ	0xFE2
  7114                           fsr1l	equ	0xFE1
  7115                           bsr	equ	0xFE0
  7116                           indf2	equ	0xFDF
  7117                           postinc2	equ	0xFDE
  7118                           postdec2	equ	0xFDD
  7119                           fsr2h	equ	0xFDA
  7120                           fsr2l	equ	0xFD9
  7121                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         82
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      65
    BANK0           160     26      76
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    putsUSART@data	PTR unsigned char  size(2) Largest target is 11
		 -> USART_Tx(BANK0[11]), 

    getsUSART@buffer	PTR unsigned char  size(2) Largest target is 7
		 -> USART_Rx(COMRAM[7]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data(BANK0[8]), analogic_brake(BANK0[8]), set_speed(COMRAM[8]), set_steering(BANK0[8]), 


Critical Paths under _main in COMRAM

    _putsUSART->_WriteUSART
    _configurazione_iniziale->_OpenUSART
    _CANInitialize->_CANOperationMode

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage
    _getsUSART->_ReadUSART

Critical Paths under _main in BANK0

    _configurazione_iniziale->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _can_interpreter->_CANsendMessage

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   17338
                     _CANsendMessage
                    _can_interpreter
            _configurazione_iniziale
                          _putsUSART
 ---------------------------------------------------------------------------------
 (1) _putsUSART                                            2     0      2     161
                                              0 BANK0      2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      22
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    8599
                      _CANInitialize
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     387
                                             29 COMRAM     2     0      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                             14 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                              0 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                              0 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      0     0      0    4289
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4289
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           17    17      0    1404
                                             12 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
                          _getsUSART
 ---------------------------------------------------------------------------------
 (5) _getsUSART                                            5     2      3     243
                                              1 COMRAM     5     2      3
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (6) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANsendMessage
   _can_interpreter
     _CANsendMessage
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _OpenUSART
   _putsUSART
     _WriteUSART

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   _getsUSART
     _ReadUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     1A      4C       4       47.5%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     1F      41       1       69.1%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8D       9        0.0%
DATA                 0      0      8D      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Feb 27 19:12:04 2016

            __end_of_CANSetFilter 0C3A                                _id 0009  
                              bsr 000FE0                       __CFG_BORV$3 000000  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                     __CFG_OSC$HS 000000                       __CFG_LVP$ON 000000  
                             l410 1AEC                               l411 1AF0  
                             l340 0D4C                               l500 0BEE  
                             l420 1BF8                               l412 1AFC  
                             l332 1D2C                               l341 0CDC  
                             l421 1C04                               l413 1B00  
                             l333 1D36                               l342 0CE6  
                             l422 1C08                               l414 1B0C  
                             l406 1ACC                               l343 0CF0  
                             l423 1C14                               l407 1AD0  
                             l352 1142                               l344 0CFA  
                             l440 0638                               l424 1C18  
                             l408 1ADC                               l353 0ED4  
                             l337 0EBE                               l441 0644  
                             l425 1C24                               l417 1BE4  
                             l409 1AE0                               l370 11E4  
                             l362 108E                               l354 0ED8  
                             l338 0C50                               l450 074E  
                             l442 0648                               l418 1BE8  
                             l371 11EE                               l363 1092  
                             l355 0FD0                               l347 0E0A  
                             l339 0C54                               l451 0752  
                             l443 0654                               l419 1BF4  
                             l372 11F8                               l364 109E  
                             l356 0F60                               l348 0E0E  
                             l460 085E                               l452 075E  
                             l444 0658                               l373 1202  
                             l357 0F6A                               l349 0E1A  
                             l461 086A                               l453 0762  
                             l445 0664                               l437 0624  
                             l358 0F74                               l470 0976  
                             l462 086E                               l454 076E  
                             l438 0628                               l367 1158  
                             l359 0F7E                               l471 097A  
                             l463 087A                               l455 0772  
                             l439 0634                               l376 1312  
                             l368 115C                               l472 0986  
                             l464 087E                               l456 077E  
                             l448 073E                               l377 1316  
                             l369 1254                               l481 0A92  
                             l473 098A                               l465 088A  
                             l449 0742                               l378 1322  
                             l482 0A96                               l474 0996  
                             l466 088E                               l650 1F36  
                             l483 0AA2                               l475 099A  
                             l467 089A                               l459 085A  
                             l492 0BAE                               l484 0AA6  
                             l476 09A6                               l493 0BB2  
                             l485 0AB2                               l477 09AA  
                             l494 0BBE                               l486 0AB6  
                             l478 09B6                               l654 1F50  
                             l495 0BC2                               l487 0AC2  
                             l655 1F52                               l496 0BCE  
                             l488 0AC6                               l656 1F5E  
                             l497 0BD2                               l489 0AD2  
                             l657 1F60                               l498 0BDE  
                             l499 0BE2                               l667 208C  
                    getsUSART@len 0024                      __CFG_CPB$OFF 000000  
                    __CFG_CPD$OFF 000000                               _dir 0201  
                             _msg 0060                               wreg 000FE8  
                    __CFG_WDT$OFF 000000                              l4113 1306  
                            l4017 0F88                              l4043 10A2  
                            l3171 20F4                              l4037 1082  
                            l4119 1326                              l4231 1E3A  
                            l3513 1B56                              l3507 1B10  
                            l4243 1E90                              l4093 120C  
                            l4157 1F38                              l4149 1F26  
                            l4253 1F06                              l4237 1E54  
                            l3447 2100                              l3721 07C8  
                            l3617 041E                              l3481 1A40  
                            l3465 198A                              l4249 1ECE  
                            l3715 0782                              l3635 04D8  
                            l3563 01F2                              l3539 1C28  
                            l3653 0592                              l3581 02AA  
                            l3901 1D42                              l3823 0B1C  
                            l3903 1D86                              l3817 0AD6  
                            l3681 0668                              l3851 0BF2  
                            l3755 08E4                              l3941 0D04  
                            l3749 089E                              l3783 09BA  
                            l3687 06AE                              l3599 0364  
                            l3961 0DFE                              l3789 0A00  
                            l3967 0E1E                              l3895 1D24  
                            l3897 1D3A                     getsUSART@data 0025  
                            _LATA 000F89                              _LATB 000F8A  
                            _LATC 000F8B                              u4110 1906  
                            u4115 18FA                              u4125 1966  
                            u4150 19BC                              _PIE1 000F9D  
                            u5040 0C12                              u4320 1C48  
                            u4240 1B30                              u4155 19B0  
                            u5300 0FA8                              u5045 0C06  
                            u4405 0286                              u4325 1C3C  
                            u4245 1B24                              u4165 1A1C  
                            u5310 0FF4                              u4510 0454  
                            u4430 02E0                              u4350 016E  
                            u5305 0F9C                              u5170 0D24  
                            u5315 0FE8                              u4515 0448  
                            u4435 02D4                              u4355 0162  
                            u5180 0D70                              u5325 1054  
                            u4525 04B4                              u4445 0340  
                            u4365 01CE                              u5430 122C  
                            u4550 050E                              u4470 039A  
                            u4390 0226                              u5175 0D18  
                            u5440 1278                              u4800 08BE  
                            u4720 07A2                              u4640 0688  
                            u5185 0D64                              u5435 1220  
                            u5195 0DD0                              u4555 0502  
                            u4475 038E                              u4395 021A  
                            u5445 126C                              u4805 08B2  
                            u4725 0796                              u4645 067C  
                            u4565 056E                              u4485 03FA  
                            u5455 12D8                              u4960 0AF6  
                            u4880 09DA                              u4965 0AEA  
                            u4885 09CE               __size_of_CANSetMask 039E  
                            _data 0082                              _main 1E36  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              btemp 0042  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 0130  
                   __CFG_IESO$OFF 000000                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000010                  _CANOperationMode 20FA  
      __size_of_CANreceiveMessage 050C                             ?_main 0021  
                           i1l622 2066                             i1l535 20E4  
                           i1l384 165E                             i1l680 20C2  
                           i1l593 00E6                             i1l594 00E8  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _SPBRG 000FAF                 _CANisRxReady$2719 0021  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TXREG 000FAD  
                           _TXSTA 000FAC                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
              __size_of_ISR_bassa 0118                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
              CANInitialize@flags 00A4                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                  __CFG_EBTRB$OFF 000000                    __pbitbssCOMRAM 0200  
            __end_of_CANisRxReady 20E8                             tablat 000FF5  
                           status 000FD8                    __CFG_PBADEN$ON 000000  
                  WriteUSART@data 003E                   __initialization 2026  
                    __end_of_main 1F0A                            ??_main 0040  
                   __activetblptr 000002                            _CANCON 000F6F  
                 __CFG_BBSIZ$1024 000000                   getsUSART@buffer 0022  
                          i1l3303 189C                            i1l3305 18CE  
                          i1l3241 1626                            i1l3233 15EA  
                          i1l3225 15AE                            i1l3217 153E  
                          i1l3243 1658                            i1l3237 1608  
                          i1l3229 15CC                            i1l3329 2082  
                          i1l3291 1848                            i1l3381 0088  
                          i1l3295 1864                            i1l3287 182C  
                          i1l3279 17BE                            i1l3375 0066  
                          i1l3385 009A                            i1l3299 1880  
                          i1l3389 009E                __size_of_ReadUSART 001E  
                 _newMessageUsart 0203                            _RXB0D0 000F66  
                          _RXB0D1 000F67                            _RXB0D2 000F68  
                          _RXB0D3 000F69                            _RXB0D4 000F6A  
                          _RXB1D0 000F56                            _RXB0D5 000F6B  
                          _RXB1D1 000F57                            _RXB0D6 000F6C  
                          _RXB1D2 000F58                            _RXB0D7 000F6D  
                          _RXB1D3 000F59                            _RXB1D4 000F5A  
                          _RXB1D5 000F5B                            _RXB1D6 000F5C  
                          _RXB1D7 000F5D                            _TXB0D0 000F46  
                          _TXB0D1 000F47                            _TXB0D2 000F48  
                          _TXB0D3 000F49                            _TXB1D0 000F36  
                          _TXB0D4 000F4A                            _TXB1D1 000F37  
                          _TXB0D5 000F4B                            _SPBRGH 000FB0  
                          _TXB1D2 000F38                            _TXB0D6 000F4C  
                          _TXB1D3 000F39                            _TXB0D7 000F4D  
                          _TXB2D0 000F26                            _TXB1D4 000F3A  
                          _TXB2D1 000F27                            _TXB1D5 000F3B  
                          _TXB2D2 000F28                            _TXB1D6 000F3C  
                          _TXB2D3 000F29                            _TXB1D7 000F3D  
                          _TXB2D4 000F2A                            _TXB2D5 000F2B  
                          _TXB2D6 000F2C                            _TXB2D7 000F2D  
              CANsendMessage@data 0096                CANsendMessage@tamp 009E  
           __size_of_CANSetFilter 0B06                    __CFG_XINST$OFF 000000  
               __end_of_ISR_bassa 0130                __size_of_OpenUSART 0072  
                  __CFG_STVREN$ON 000000                      ??_CANSetMask 0097  
                          clear_0 202C                            clear_1 203A  
        ?_configurazione_iniziale 0021                   __CFG_BOREN$BOHW 000000  
                    __pdataCOMRAM 0041                            tblptrh 000FF7  
                  _analogic_brake 007A                            tblptrl 000FF6  
                          tblptru 000FF8                      _CANSetFilter 0134  
                      __accesstop 0060           __end_of__initialization 2052  
              __end_of_CANSetMask 1C70                     ___rparam_used 000001  
                      _WriteUSART 20E8                    __pcstackCOMRAM 0021  
               __end_of_ReadUSART 20D2             CANSetFilter@numBuffer 009B  
                   _newMessageCan 0202             __size_of_CANisRxReady 0016  
              __size_of_getsUSART 002C                     ReadUSART@data 0021  
               __end_of_OpenUSART 1F7C          __end_of_CANOperationMode 210C  
                      __pbssBANK0 0060                  _set_steering_old 0011  
         __size_of_CANsendMessage 078C          __size_of_can_interpreter 003C  
                   putsUSART@data 0092                      _CANisRxReady 20D2  
                         _CANSTAT 000F6E                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
          __size_of_CANInitialize 01C6                           _RXB0DLC 000F65  
                         _RXB1DLC 000F55                           _RXB0CON 000F60  
                         _RXB1CON 000F50                           _TXB0DLC 000F45  
                         _TXB1DLC 000F35                           _TXB2DLC 000F25  
              __size_of_putsUSART 0028               CANsendMessage@flags 0099  
                         __Hparam 0000                           __Lparam 0000  
               __end_of_getsUSART 208C                       ?_WriteUSART 0021  
            CANInitialize@propSeg 00A9                           __pcinit 2026  
                         __ramtop 0300                           __ptext0 1E36  
                         __ptext1 208C                           __ptext2 20E8  
                         __ptext3 1F7C                           __ptext4 1F0A  
                         __ptext5 1C70                           __ptext6 18D2  
                         __ptext7 0134                           __ptext8 20FA  
                         __ptext9 1FEA            CANreceiveMessage@error 002B  
            end_of_initialization 2052                     __Lmediumconst 0000  
                   _CANInitialize 1C70                         _RCSTAbits 000FAB  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE                 __end_of_putsUSART 20B4  
                       _ISR_bassa 0018                 ??_can_interpreter 003E  
                  CANSetMask@mask 0092                    CANSetMask@tamp 009C  
                  CANSetMask@type 0096                         _TRISCbits 000F94  
                      getsUSART@i 0026               __size_of_WriteUSART 0012  
__size_of_configurazione_iniziale 006E           _clock_counter_reference 000D  
                  _CANsendMessage 0C3A                  CANInitialize@BRP 00A3  
                CANInitialize@SJW 00A2                         _TXSTAbits 000FAC  
                  ?_CANInitialize 00A0                        ?_ISR_bassa 0021  
                   __pidataCOMRAM 210C               start_initialization 2026  
                       _ReadUSART 20B4               CANSetMask@numBuffer 009B  
          __end_of_CANsendMessage 13C6                 ?_CANOperationMode 0021  
                       _OpenUSART 1F0A                ??_CANOperationMode 003E  
      CANInitialize@FilterConfig1 00AA        CANInitialize@FilterConfig2 00AB  
                __CFG_LPT1OSC$OFF 000000            CANInitialize@phaseSeg1 00A0  
          CANInitialize@phaseSeg2 00A1                       __pbssCOMRAM 0001  
                      ?_ReadUSART 0021                     __pcstackBANK0 0092  
                     _BRGCON2bits 000F71                       _BRGCON3bits 000F72  
                 ?_CANsendMessage 0092                   ??_CANInitialize 00A5  
                      ?_OpenUSART 003E                CANSetFilter@filter 0092  
                    ??_WriteUSART 003E                       ??_ISR_bassa 002D  
                       _getsUSART 2060                       __pintcodelo 0018  
                     _COMSTATbits 000F74           _configurazione_iniziale 1F7C  
              __end_of_WriteUSART 20FA             CANreceiveMessage@tamp 002C  
                 _can_interpreter 1FEA                          _IPR1bits 000F9F  
              _analogic_brake_old 0010      _delay_quartz_frequency_value 0041  
                        _PIE1bits 000F9D                          _IPR3bits 000FA5  
                        _PIE3bits 000FA3                          i1u380_25 1744  
                        i1u366_20 147E                          i1u366_26 1480  
                        i1u367_20 14AC                          i1u375_25 1632  
                        i1u367_26 14AE                          i1u377_20 1706  
                        i1u369_25 14C2                          i1u377_26 1708  
                        i1u378_20 1730                          i1u386_25 18A8  
                        i1u378_26 1732                          i1u397_20 0086  
                        _PIR1bits 000F9E                          _PIR3bits 000FA4  
                        _RXB0EIDH 000F63                          _RXB0EIDL 000F64  
                        _RXB1EIDH 000F53                          _RXB1EIDL 000F54  
                       _set_speed 0012                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000                          _RXB0SIDH 000F61  
                        _RXB0SIDL 000F62                          _RXF0EIDH 000F02  
                        _RXB1SIDH 000F51                          _RXF0EIDL 000F03  
                        _RXB1SIDL 000F52                          _RXF1EIDH 000F06  
                        _RXF1EIDL 000F07                          _RXF2EIDH 000F0A  
                        _RXF2EIDL 000F0B                          _RXF3EIDH 000F0E  
                        _RXF3EIDL 000F0F                          _RXF4EIDH 000F12  
                        _RXF4EIDL 000F13                          _RXF5EIDH 000F16  
                        _RXF5EIDL 000F17                          _RXF0SIDH 000F00  
                        _RXF0SIDL 000F01                          _TXB0EIDH 000F43  
                        _RXF1SIDH 000F04                          _TXB0EIDL 000F44  
                        _RXF1SIDL 000F05                          _TXB1EIDH 000F33  
                        _RXF2SIDH 000F08                          _TXB1EIDL 000F34  
                        _RXF2SIDL 000F09                          _TXB2EIDH 000F23  
                        _RXF3SIDH 000F0C                          _TXB2EIDL 000F24  
                        _RXF3SIDL 000F0D                          _RXF4SIDH 000F10  
                        _RXF4SIDL 000F11                          _RXF5SIDH 000F14  
                        _RXF5SIDL 000F15                          _RXM0EIDH 000F1A  
                        _RXM0EIDL 000F1B                          _TXB0SIDH 000F41  
                        _RXM1EIDH 000F1E                          _TXB0SIDL 000F42  
                        _RXM1EIDL 000F1F                          _TXB1SIDH 000F31  
                        _TXB1SIDL 000F32                          _TXB2SIDH 000F21  
                        _TXB2SIDL 000F22                          _RXM0SIDH 000F18  
                        _RXM0SIDL 000F19                          _RXM1SIDH 000F1C  
                        _RXM1SIDL 000F1D                        ?_getsUSART 0022  
                        _RXERRCNT 000F75                          _USART_Rx 001A  
                        _USART_Tx 006F                          _TXERRCNT 000F76  
                       _putsUSART 208C                          _RTR_Flag 0200  
                     ??_ReadUSART 0021                     ?_CANSetFilter 0092  
                   _set_speed_old 0001                        _CANCONbits 000F6F  
                     ??_OpenUSART 0040                   OpenUSART@config 0092  
                        __Hrparam 0000                      _RXB0SIDLbits 000F62  
                        __Lrparam 0000                      _RXB1SIDLbits 000F52  
                      _CANSetMask 18D2                        ?_putsUSART 0092  
       ??_configurazione_iniziale 0040                      _RXF0SIDLbits 000F01  
                    _RXF1SIDLbits 000F05                    ??_CANSetFilter 0097  
                        __ptext10 0C3A                          __ptext12 2060  
                        __ptext13 20B4                          __ptext14 13C6  
                        __ptext15 20D2                      _RXF2SIDLbits 000F09  
         __end_of_can_interpreter 2026                      _RXF3SIDLbits 000F0D  
                    _RXF4SIDLbits 000F11                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 0098                     __size_of_main 00D4  
            CANreceiveMessage@msg 0021                      _TXB0SIDLbits 000F42  
                    _TXB1SIDLbits 000F32                      _TXB2SIDLbits 000F22  
                        int$flags 0042         __size_of_CANOperationMode 0012  
                   ?_CANisRxReady 0021                       ??_getsUSART 0025  
                     _RXB0DLCbits 000F65                       _RXB1DLCbits 000F55  
                    _RXM0SIDLbits 000F19                       _RXB0CONbits 000F60  
                     _RXB1CONbits 000F50                 _CANreceiveMessage 13C6  
                    _RXM1SIDLbits 000F1D                        _INTCONbits 000FF2  
                    _set_steering 008A                  ??_CANsendMessage 009A  
                  OpenUSART@spbrg 003E                ?_CANreceiveMessage 0021  
        CANsendMessage@identifier 0092                          intlevel1 0000  
                CANSetFilter@tamp 009C                  CANSetFilter@type 0096  
             ??_CANreceiveMessage 0023                       _TXB0DLCbits 000F45  
                     _TXB1DLCbits 000F35                       _TXB0CONbits 000F40  
                     _TXB2DLCbits 000F25   __end_of_configurazione_iniziale 1FEA  
                     _TXB1CONbits 000F30                       _TXB2CONbits 000F20  
            CANOperationMode@mode 003E                    ??_CANisRxReady 0021  
                     ?_CANSetMask 0092         __end_of_CANreceiveMessage 18D2  
                     ??_putsUSART 003F                  ?_can_interpreter 0021  
           __end_of_CANInitialize 1E36                      _USART_Status 000F  
