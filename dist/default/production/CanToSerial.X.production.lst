

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sun Feb 28 18:20:31 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33  0000                     
    34                           	psect	idataCOMRAM
    35  0023A0                     __pidataCOMRAM:
    36                           	opt stack 0
    37                           
    38                           ;initializer for _delay_quartz_frequency_value
    39  0023A0  14                 	db	20
    40                           
    41                           ;initializer for _SerialOutput
    42  0023A1  AA                 	db	170
    43  0023A2  00                 	db	0
    44  0023A3  00                 	db	0
    45  0023A4  00                 	db	0
    46  0023A5  00                 	db	0
    47  0023A6  00                 	db	0
    48  0023A7  AA                 	db	170
    49  0000                     _RXB1CON	set	3920
    50  0000                     _RXB1CONbits	set	3920
    51  0000                     _RXB1D0	set	3926
    52  0000                     _RXB1D1	set	3927
    53  0000                     _RXB1D2	set	3928
    54  0000                     _RXB1D3	set	3929
    55  0000                     _RXB1D4	set	3930
    56  0000                     _RXB1D5	set	3931
    57  0000                     _RXB1D6	set	3932
    58  0000                     _RXB1D7	set	3933
    59  0000                     _RXB1DLC	set	3925
    60  0000                     _RXB1DLCbits	set	3925
    61  0000                     _RXB1EIDH	set	3923
    62  0000                     _RXB1EIDL	set	3924
    63  0000                     _RXB1SIDH	set	3921
    64  0000                     _RXB1SIDL	set	3922
    65  0000                     _RXB1SIDLbits	set	3922
    66  0000                     _RXF0EIDH	set	3842
    67  0000                     _RXF0EIDL	set	3843
    68  0000                     _RXF0SIDH	set	3840
    69  0000                     _RXF0SIDL	set	3841
    70  0000                     _RXF0SIDLbits	set	3841
    71  0000                     _RXF1EIDH	set	3846
    72  0000                     _RXF1EIDL	set	3847
    73  0000                     _RXF1SIDH	set	3844
    74  0000                     _RXF1SIDL	set	3845
    75  0000                     _RXF1SIDLbits	set	3845
    76  0000                     _RXF2EIDH	set	3850
    77  0000                     _RXF2EIDL	set	3851
    78  0000                     _RXF2SIDH	set	3848
    79  0000                     _RXF2SIDL	set	3849
    80  0000                     _RXF2SIDLbits	set	3849
    81  0000                     _RXF3EIDH	set	3854
    82  0000                     _RXF3EIDL	set	3855
    83  0000                     _RXF3SIDH	set	3852
    84  0000                     _RXF3SIDL	set	3853
    85  0000                     _RXF3SIDLbits	set	3853
    86  0000                     _RXF4EIDH	set	3858
    87  0000                     _RXF4EIDL	set	3859
    88  0000                     _RXF4SIDH	set	3856
    89  0000                     _RXF4SIDL	set	3857
    90  0000                     _RXF4SIDLbits	set	3857
    91  0000                     _RXF5EIDH	set	3862
    92  0000                     _RXF5EIDL	set	3863
    93  0000                     _RXF5SIDH	set	3860
    94  0000                     _RXF5SIDL	set	3861
    95  0000                     _RXF5SIDLbits	set	3861
    96  0000                     _RXM0EIDH	set	3866
    97  0000                     _RXM0EIDL	set	3867
    98  0000                     _RXM0SIDH	set	3864
    99  0000                     _RXM0SIDL	set	3865
   100  0000                     _RXM0SIDLbits	set	3865
   101  0000                     _RXM1EIDH	set	3870
   102  0000                     _RXM1EIDL	set	3871
   103  0000                     _RXM1SIDH	set	3868
   104  0000                     _RXM1SIDL	set	3869
   105  0000                     _RXM1SIDLbits	set	3869
   106  0000                     _TXB0CONbits	set	3904
   107  0000                     _TXB0D0	set	3910
   108  0000                     _TXB0D1	set	3911
   109  0000                     _TXB0D2	set	3912
   110  0000                     _TXB0D3	set	3913
   111  0000                     _TXB0D4	set	3914
   112  0000                     _TXB0D5	set	3915
   113  0000                     _TXB0D6	set	3916
   114  0000                     _TXB0D7	set	3917
   115  0000                     _TXB0DLC	set	3909
   116  0000                     _TXB0DLCbits	set	3909
   117  0000                     _TXB0EIDH	set	3907
   118  0000                     _TXB0EIDL	set	3908
   119  0000                     _TXB0SIDH	set	3905
   120  0000                     _TXB0SIDL	set	3906
   121  0000                     _TXB0SIDLbits	set	3906
   122  0000                     _TXB1CONbits	set	3888
   123  0000                     _TXB1D0	set	3894
   124  0000                     _TXB1D1	set	3895
   125  0000                     _TXB1D2	set	3896
   126  0000                     _TXB1D3	set	3897
   127  0000                     _TXB1D4	set	3898
   128  0000                     _TXB1D5	set	3899
   129  0000                     _TXB1D6	set	3900
   130  0000                     _TXB1D7	set	3901
   131  0000                     _TXB1DLC	set	3893
   132  0000                     _TXB1DLCbits	set	3893
   133  0000                     _TXB1EIDH	set	3891
   134  0000                     _TXB1EIDL	set	3892
   135  0000                     _TXB1SIDH	set	3889
   136  0000                     _TXB1SIDL	set	3890
   137  0000                     _TXB1SIDLbits	set	3890
   138  0000                     _TXB2CONbits	set	3872
   139  0000                     _TXB2D0	set	3878
   140  0000                     _TXB2D1	set	3879
   141  0000                     _TXB2D2	set	3880
   142  0000                     _TXB2D3	set	3881
   143  0000                     _TXB2D4	set	3882
   144  0000                     _TXB2D5	set	3883
   145  0000                     _TXB2D6	set	3884
   146  0000                     _TXB2D7	set	3885
   147  0000                     _TXB2DLC	set	3877
   148  0000                     _TXB2DLCbits	set	3877
   149  0000                     _TXB2EIDH	set	3875
   150  0000                     _TXB2EIDL	set	3876
   151  0000                     _TXB2SIDH	set	3873
   152  0000                     _TXB2SIDL	set	3874
   153  0000                     _TXB2SIDLbits	set	3874
   154  0000                     _BRGCON1	set	3952
   155  0000                     _BRGCON2	set	3953
   156  0000                     _BRGCON2bits	set	3953
   157  0000                     _BRGCON3	set	3954
   158  0000                     _BRGCON3bits	set	3954
   159  0000                     _CANCON	set	3951
   160  0000                     _CANCONbits	set	3951
   161  0000                     _CANSTAT	set	3950
   162  0000                     _COMSTATbits	set	3956
   163  0000                     _INTCONbits	set	4082
   164  0000                     _IPR1bits	set	3999
   165  0000                     _IPR2bits	set	4002
   166  0000                     _IPR3bits	set	4005
   167  0000                     _LATA	set	3977
   168  0000                     _LATB	set	3978
   169  0000                     _LATC	set	3979
   170  0000                     _PIE1	set	3997
   171  0000                     _PIE1bits	set	3997
   172  0000                     _PIE3bits	set	4003
   173  0000                     _PIR1bits	set	3998
   174  0000                     _PIR2bits	set	4001
   175  0000                     _PIR3bits	set	4004
   176  0000                     _PORTCbits	set	3970
   177  0000                     _PORTDbits	set	3971
   178  0000                     _RCONbits	set	4048
   179  0000                     _RCREG	set	4014
   180  0000                     _RCSTA	set	4011
   181  0000                     _RCSTAbits	set	4011
   182  0000                     _RXB0CON	set	3936
   183  0000                     _RXB0CONbits	set	3936
   184  0000                     _RXB0D0	set	3942
   185  0000                     _RXB0D1	set	3943
   186  0000                     _RXB0D2	set	3944
   187  0000                     _RXB0D3	set	3945
   188  0000                     _RXB0D4	set	3946
   189  0000                     _RXB0D5	set	3947
   190  0000                     _RXB0D6	set	3948
   191  0000                     _RXB0D7	set	3949
   192  0000                     _RXB0DLC	set	3941
   193  0000                     _RXB0DLCbits	set	3941
   194  0000                     _RXB0EIDH	set	3939
   195  0000                     _RXB0EIDL	set	3940
   196  0000                     _RXB0SIDH	set	3937
   197  0000                     _RXB0SIDL	set	3938
   198  0000                     _RXB0SIDLbits	set	3938
   199  0000                     _RXERRCNT	set	3957
   200  0000                     _SPBRG	set	4015
   201  0000                     _SPBRGH	set	4016
   202  0000                     _T3CON	set	4017
   203  0000                     _TMR3H	set	4019
   204  0000                     _TMR3L	set	4018
   205  0000                     _TRISA	set	3986
   206  0000                     _TRISB	set	3987
   207  0000                     _TRISC	set	3988
   208  0000                     _TRISCbits	set	3988
   209  0000                     _TXERRCNT	set	3958
   210  0000                     _TXREG	set	4013
   211  0000                     _TXSTA	set	4012
   212  0000                     _TXSTAbits	set	4012
   213                           
   214                           ; #config settings
   215  0000                     
   216                           	psect	cinit
   217  00228E                     __pcinit:
   218                           	opt stack 0
   219  00228E                     start_initialization:
   220                           	opt stack 0
   221  00228E                     __initialization:
   222                           	opt stack 0
   223                           
   224                           ; Clear objects allocated to BANK0 (62 bytes)
   225  00228E  EE00  F060         	lfsr	0,__pbssBANK0
   226  002292  0E3E               	movlw	62
   227  002294                     clear_0:
   228  002294  6AEE               	clrf	postinc0,c
   229  002296  06E8               	decf	wreg,f,c
   230  002298  E1FD               	bnz	clear_0
   231                           
   232                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   233  00229A  6A3F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   234                           
   235                           ; Clear objects allocated to COMRAM (21 bytes)
   236  00229C  EE00  F022         	lfsr	0,__pbssCOMRAM
   237  0022A0  0E15               	movlw	21
   238  0022A2                     clear_1:
   239  0022A2  6AEE               	clrf	postinc0,c
   240  0022A4  06E8               	decf	wreg,f,c
   241  0022A6  E1FD               	bnz	clear_1
   242                           
   243                           ; Initialize objects allocated to COMRAM (8 bytes)
   244                           ; load TBLPTR registers with __pidataCOMRAM
   245  0022A8  0EA0               	movlw	low __pidataCOMRAM
   246  0022AA  6EF6               	movwf	tblptrl,c
   247  0022AC  0E23               	movlw	high __pidataCOMRAM
   248  0022AE  6EF7               	movwf	tblptrh,c
   249  0022B0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   250  0022B2  6EF8               	movwf	tblptru,c
   251  0022B4  EE00  F037         	lfsr	0,__pdataCOMRAM
   252  0022B8  EE10 F008          	lfsr	1,8
   253  0022BC                     copy_data0:
   254  0022BC  0009               	tblrd		*+
   255  0022BE  CFF5 FFEE          	movff	tablat,postinc0
   256  0022C2  50E5               	movf	postdec1,w,c
   257  0022C4  50E1               	movf	fsr1l,w,c
   258  0022C6  E1FA               	bnz	copy_data0
   259  0022C8                     end_of_initialization:
   260                           	opt stack 0
   261  0022C8                     __end_of__initialization:
   262                           	opt stack 0
   263  0022C8  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   264  0022CA  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   265  0022CC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   266  0022CE  6EF8               	movwf	tblptru,c
   267  0022D0  0100               	movlb	0
   268  0022D2  EF4D  F010         	goto	_main	;jump to C main() function
   269                           tblptru	equ	0xFF8
   270                           tblptrh	equ	0xFF7
   271                           tblptrl	equ	0xFF6
   272                           tablat	equ	0xFF5
   273                           postinc0	equ	0xFEE
   274                           wreg	equ	0xFE8
   275                           postdec1	equ	0xFE5
   276                           fsr1l	equ	0xFE1
   277                           
   278                           	psect	bitbssCOMRAM
   279  0001F8                     __pbitbssCOMRAM:
   280                           	opt stack 0
   281  0001F8                     _RTR_Flag:
   282                           	opt stack 0
   283  0001F8                     	ds	1
   284  0001F9                     _dir:
   285                           	opt stack 0
   286  0001F9                     	ds	1
   287  0001FA                     _newMessageCan:
   288                           	opt stack 0
   289  0001FA                     	ds	1
   290  0001FB                     _newMessageUsart:
   291                           	opt stack 0
   292  0001FB                     	ds	1
   293                           tblptru	equ	0xFF8
   294                           tblptrh	equ	0xFF7
   295                           tblptrl	equ	0xFF6
   296                           tablat	equ	0xFF5
   297                           postinc0	equ	0xFEE
   298                           wreg	equ	0xFE8
   299                           postdec1	equ	0xFE5
   300                           fsr1l	equ	0xFE1
   301                           
   302                           	psect	bssCOMRAM
   303  000022                     __pbssCOMRAM:
   304                           	opt stack 0
   305  000022                     _id:
   306                           	opt stack 0
   307  000022                     	ds	4
   308  000026                     _previousTimeCounter:
   309                           	opt stack 0
   310  000026                     	ds	4
   311  00002A                     _timeCounter:
   312                           	opt stack 0
   313  00002A                     	ds	4
   314  00002E                     _clock_counter_reference:
   315                           	opt stack 0
   316  00002E                     	ds	2
   317  000030                     _left_speed:
   318                           	opt stack 0
   319  000030                     	ds	2
   320  000032                     _right_speed:
   321                           	opt stack 0
   322  000032                     	ds	2
   323  000034                     _USART_Status:
   324                           	opt stack 0
   325  000034                     	ds	1
   326  000035                     _analogic_brake_old:
   327                           	opt stack 0
   328  000035                     	ds	1
   329  000036                     _set_steering_old:
   330                           	opt stack 0
   331  000036                     	ds	1
   332                           tblptru	equ	0xFF8
   333                           tblptrh	equ	0xFF7
   334                           tblptrl	equ	0xFF6
   335                           tablat	equ	0xFF5
   336                           postinc0	equ	0xFEE
   337                           wreg	equ	0xFE8
   338                           postdec1	equ	0xFE5
   339                           fsr1l	equ	0xFE1
   340                           
   341                           	psect	dataCOMRAM
   342  000037                     __pdataCOMRAM:
   343                           	opt stack 0
   344  000037                     _delay_quartz_frequency_value:
   345                           	opt stack 0
   346  000037                     	ds	1
   347  000038                     _SerialOutput:
   348                           	opt stack 0
   349  000038                     	ds	7
   350                           tblptru	equ	0xFF8
   351                           tblptrh	equ	0xFF7
   352                           tblptrl	equ	0xFF6
   353                           tablat	equ	0xFF5
   354                           postinc0	equ	0xFEE
   355                           wreg	equ	0xFE8
   356                           postdec1	equ	0xFE5
   357                           fsr1l	equ	0xFE1
   358                           
   359                           	psect	bssBANK0
   360  000060                     __pbssBANK0:
   361                           	opt stack 0
   362  000060                     _set_speed_old:
   363                           	opt stack 0
   364  000060                     	ds	8
   365  000068                     _msg:
   366                           	opt stack 0
   367  000068                     	ds	15
   368  000077                     _analogic_brake:
   369                           	opt stack 0
   370  000077                     	ds	8
   371  00007F                     _data:
   372                           	opt stack 0
   373  00007F                     	ds	8
   374  000087                     _set_speed:
   375                           	opt stack 0
   376  000087                     	ds	8
   377  00008F                     _set_steering:
   378                           	opt stack 0
   379  00008F                     	ds	8
   380  000097                     _USART_Rx:
   381                           	opt stack 0
   382  000097                     	ds	7
   383                           tblptru	equ	0xFF8
   384                           tblptrh	equ	0xFF7
   385                           tblptrl	equ	0xFF6
   386                           tablat	equ	0xFF5
   387                           postinc0	equ	0xFEE
   388                           wreg	equ	0xFE8
   389                           postdec1	equ	0xFE5
   390                           fsr1l	equ	0xFE1
   391                           
   392                           	psect	cstackBANK0
   393  00009E                     __pcstackBANK0:
   394                           	opt stack 0
   395  00009E                     OpenUSART@config:
   396                           	opt stack 0
   397  00009E                     putsUSART@data:
   398                           	opt stack 0
   399  00009E                     CANsendMessage@identifier:
   400                           	opt stack 0
   401  00009E                     CANSetMask@mask:
   402                           	opt stack 0
   403  00009E                     CANSetFilter@filter:
   404                           	opt stack 0
   405                           
   406                           ; 4 bytes @ 0x0
   407  00009E                     	ds	4
   408  0000A2                     CANSetMask@type:
   409                           	opt stack 0
   410  0000A2                     CANSetFilter@type:
   411                           	opt stack 0
   412  0000A2                     CANsendMessage@data:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0x4
   416  0000A2                     	ds	1
   417  0000A3                     ??_CANSetMask:
   418  0000A3                     ??_CANSetFilter:
   419                           
   420                           ; 1 bytes @ 0x5
   421  0000A3                     	ds	1
   422  0000A4                     CANsendMessage@dataLength:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0x6
   426  0000A4                     	ds	1
   427  0000A5                     CANsendMessage@flags:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x7
   431  0000A5                     	ds	1
   432  0000A6                     ??_CANsendMessage:
   433                           
   434                           ; 1 bytes @ 0x8
   435  0000A6                     	ds	1
   436  0000A7                     CANSetMask@numBuffer:
   437                           	opt stack 0
   438  0000A7                     CANSetFilter@numBuffer:
   439                           	opt stack 0
   440                           
   441                           ; 1 bytes @ 0x9
   442  0000A7                     	ds	1
   443  0000A8                     CANSetMask@tamp:
   444                           	opt stack 0
   445  0000A8                     CANSetFilter@tamp:
   446                           	opt stack 0
   447                           
   448                           ; 4 bytes @ 0xA
   449  0000A8                     	ds	2
   450  0000AA                     CANsendMessage@tamp:
   451                           	opt stack 0
   452                           
   453                           ; 4 bytes @ 0xC
   454  0000AA                     	ds	2
   455  0000AC                     CANInitialize@phaseSeg1:
   456                           	opt stack 0
   457                           
   458                           ; 1 bytes @ 0xE
   459  0000AC                     	ds	1
   460  0000AD                     CANInitialize@phaseSeg2:
   461                           	opt stack 0
   462                           
   463                           ; 1 bytes @ 0xF
   464  0000AD                     	ds	1
   465  0000AE                     ??_can_interpreter:
   466  0000AE                     CANInitialize@SJW:
   467                           	opt stack 0
   468                           
   469                           ; 1 bytes @ 0x10
   470  0000AE                     	ds	1
   471  0000AF                     CANInitialize@BRP:
   472                           	opt stack 0
   473                           
   474                           ; 1 bytes @ 0x11
   475  0000AF                     	ds	1
   476  0000B0                     CANInitialize@flags:
   477                           	opt stack 0
   478                           
   479                           ; 1 bytes @ 0x12
   480  0000B0                     	ds	1
   481  0000B1                     ??_CANInitialize:
   482                           
   483                           ; 1 bytes @ 0x13
   484  0000B1                     	ds	4
   485  0000B5                     CANInitialize@propSeg:
   486                           	opt stack 0
   487                           
   488                           ; 1 bytes @ 0x17
   489  0000B5                     	ds	1
   490  0000B6                     CANInitialize@FilterConfig1:
   491                           	opt stack 0
   492                           
   493                           ; 1 bytes @ 0x18
   494  0000B6                     	ds	1
   495  0000B7                     CANInitialize@FilterConfig2:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x19
   499  0000B7                     	ds	1
   500  0000B8                     ??_main:
   501                           
   502                           ; 1 bytes @ 0x1A
   503  0000B8                     	ds	1
   504                           tblptru	equ	0xFF8
   505                           tblptrh	equ	0xFF7
   506                           tblptrl	equ	0xFF6
   507                           tablat	equ	0xFF5
   508                           postinc0	equ	0xFEE
   509                           wreg	equ	0xFE8
   510                           postdec1	equ	0xFE5
   511                           fsr1l	equ	0xFE1
   512                           
   513                           	psect	cstackCOMRAM
   514  000001                     __pcstackCOMRAM:
   515                           	opt stack 0
   516  000001                     _CANisRxReady$2929:
   517                           	opt stack 0
   518  000001                     ReadUSART@data:
   519                           	opt stack 0
   520  000001                     CANreceiveMessage@msg:
   521                           	opt stack 0
   522                           
   523                           ; 2 bytes @ 0x0
   524  000001                     	ds	1
   525  000002                     getsUSART@buffer:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x1
   529  000002                     	ds	1
   530  000003                     ??_CANreceiveMessage:
   531                           
   532                           ; 1 bytes @ 0x2
   533  000003                     	ds	1
   534  000004                     getsUSART@len:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x3
   538  000004                     	ds	1
   539  000005                     getsUSART@data:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x4
   543  000005                     	ds	1
   544  000006                     getsUSART@i:
   545                           	opt stack 0
   546                           
   547                           ; 1 bytes @ 0x5
   548  000006                     	ds	5
   549  00000B                     CANreceiveMessage@error:
   550                           	opt stack 0
   551                           
   552                           ; 1 bytes @ 0xA
   553  00000B                     	ds	1
   554  00000C                     CANreceiveMessage@tamp:
   555                           	opt stack 0
   556                           
   557                           ; 1 bytes @ 0xB
   558  00000C                     	ds	1
   559  00000D                     ??_ISR_bassa:
   560                           
   561                           ; 1 bytes @ 0xC
   562  00000D                     	ds	18
   563  00001F                     ISR_bassa@i:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0x1E
   567  00001F                     	ds	1
   568  000020                     CANOperationMode@mode:
   569                           	opt stack 0
   570  000020                     _CANisTxReady$2927:
   571                           	opt stack 0
   572  000020                     WriteUSART@data:
   573                           	opt stack 0
   574  000020                     OpenUSART@spbrg:
   575                           	opt stack 0
   576                           
   577                           ; 2 bytes @ 0x1F
   578  000020                     	ds	1
   579  000021                     
   580                           ; 1 bytes @ 0x20
   581  000021                     	ds	1
   582  000022                     tblptru	equ	0xFF8
   583                           tblptrh	equ	0xFF7
   584                           tblptrl	equ	0xFF6
   585                           tablat	equ	0xFF5
   586                           postinc0	equ	0xFEE
   587                           wreg	equ	0xFE8
   588                           postdec1	equ	0xFE5
   589                           fsr1l	equ	0xFE1
   590                           
   591                           ; 1 bytes @ 0x21
   592 ;;
   593 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   594 ;;
   595 ;; *************** function _main *****************
   596 ;; Defined at:
   597 ;;		line 107 in file "CanToSerial.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;		None
   600 ;; Auto vars:     Size  Location     Type
   601 ;;		None
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      void 
   604 ;; Registers used:
   605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   611 ;;      Params:         0       0       0       0
   612 ;;      Locals:         0       0       0       0
   613 ;;      Temps:          0       1       0       0
   614 ;;      Totals:         0       1       0       0
   615 ;;Total ram usage:        1 bytes
   616 ;; Hardware stack levels required when called:    6
   617 ;; This function calls:
   618 ;;		_CANsendMessage
   619 ;;		_can_interpreter
   620 ;;		_configurazione_iniziale
   621 ;;		_putsUSART
   622 ;; This function is called by:
   623 ;;		Startup code after reset
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           	psect	text0
   628  00209A                     __ptext0:
   629                           	opt stack 0
   630  00209A                     _main:
   631                           	opt stack 25
   632                           
   633                           ;CanToSerial.c: 108: configurazione_iniziale();
   634                           
   635                           ;incstack = 0
   636  00209A  ECCF  F010         	call	_configurazione_iniziale	;wreg free
   637  00209E                     l4477:
   638                           
   639                           ;CanToSerial.c: 110: if (newMessageCan == 1) {
   640  00209E  A43F               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
   641  0020A0  D00B               	goto	l4483
   642                           
   643                           ;CanToSerial.c: 111: can_interpreter();
   644  0020A2  EC7D  F00E         	call	_can_interpreter	;wreg free
   645                           
   646                           ;CanToSerial.c: 112: putsUSART((char *) SerialOutput);
   647  0020A6  0E38               	movlw	low _SerialOutput
   648  0020A8  0100               	movlb	0	; () banked
   649  0020AA  6F9E               	movwf	putsUSART@data& (0+255),b
   650  0020AC  0E00               	movlw	high _SerialOutput
   651  0020AE  0100               	movlb	0	; () banked
   652  0020B0  6F9F               	movwf	(putsUSART@data+1)& (0+255),b
   653  0020B2  EC81  F011         	call	_putsUSART	;wreg free
   654                           
   655                           ;CanToSerial.c: 113: newMessageCan = 0;
   656  0020B6  943F               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
   657  0020B8                     l4483:
   658                           
   659                           ;CanToSerial.c: 114: }
   660                           ;CanToSerial.c: 115: if (newMessageUsart == 1) {
   661  0020B8  A63F               	btfss	_newMessageUsart/(0+8),_newMessageUsart& (0+7),c	;volatile
   662  0020BA  D7F1               	goto	l4477
   663                           
   664                           ;CanToSerial.c: 116: PORTDbits.RD2 = ~PORTDbits.RD2;
   665  0020BC  A483               	btfss	3971,2,c	;volatile
   666  0020BE  D002               	goto	u6200
   667  0020C0  0E01               	movlw	1
   668  0020C2  D001               	goto	u6206
   669  0020C4                     u6200:
   670  0020C4  0E00               	movlw	0
   671  0020C6                     u6206:
   672  0020C6  0AFF               	xorlw	255
   673  0020C8  0100               	movlb	0	; () banked
   674  0020CA  6FB8               	movwf	??_main& (0+255),b
   675  0020CC  0100               	movlb	0	; () banked
   676  0020CE  47B8               	rlncf	??_main& (0+255),f,b
   677  0020D0  47B8               	rlncf	??_main& (0+255),f,b
   678  0020D2  5083               	movf	3971,w,c	;volatile
   679  0020D4  0100               	movlb	0	; () banked
   680  0020D6  19B8               	xorwf	??_main& (0+255),w,b
   681  0020D8  0BFB               	andlw	-5
   682  0020DA  19B8               	xorwf	??_main& (0+255),w,b
   683  0020DC  6E83               	movwf	3971,c	;volatile
   684                           
   685                           ;CanToSerial.c: 117: if (set_steering_old != set_steering[0]) {
   686  0020DE  5036               	movf	_set_steering_old,w,c	;volatile
   687  0020E0  0100               	movlb	0	; () banked
   688  0020E2  198F               	xorwf	_set_steering& (0+255),w,b
   689  0020E4  B4D8               	btfsc	status,2,c
   690  0020E6  D017               	goto	l4489
   691                           
   692                           ; BSR set to: 0
   693                           ;CanToSerial.c: 118: CANsendMessage(0b00000000000000000000000000101, set_steering, 8, CA
      +                          N_CONFIG_STD_MSG & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
   694  0020E8  0E05               	movlw	5
   695  0020EA  0100               	movlb	0	; () banked
   696  0020EC  6F9E               	movwf	CANsendMessage@identifier& (0+255),b
   697  0020EE  0E00               	movlw	0
   698  0020F0  6F9F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   699  0020F2  0E00               	movlw	0
   700  0020F4  6FA0               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   701  0020F6  0E00               	movlw	0
   702  0020F8  6FA1               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   703  0020FA  0E8F               	movlw	low _set_steering
   704  0020FC  0100               	movlb	0	; () banked
   705  0020FE  6FA2               	movwf	CANsendMessage@data& (0+255),b
   706  002100  0E00               	movlw	high _set_steering
   707  002102  0100               	movlb	0	; () banked
   708  002104  6FA3               	movwf	(CANsendMessage@data+1)& (0+255),b
   709  002106  0E08               	movlw	8
   710  002108  0100               	movlb	0	; () banked
   711  00210A  6FA4               	movwf	CANsendMessage@dataLength& (0+255),b
   712  00210C  0EBC               	movlw	188
   713  00210E  0100               	movlb	0	; () banked
   714  002110  6FA5               	movwf	CANsendMessage@flags& (0+255),b
   715  002112  EC62  F006         	call	_CANsendMessage	;wreg free
   716  002116                     l4489:
   717                           
   718                           ;CanToSerial.c: 119: }
   719                           ;CanToSerial.c: 120: if ((set_speed_old[0] != set_speed[0])&&(set_speed_old[1] != set_sp
      +                          eed[1])) {
   720  002116  0100               	movlb	0	; () banked
   721  002118  5187               	movf	_set_speed& (0+255),w,b
   722  00211A  0100               	movlb	0	; () banked
   723  00211C  1960               	xorwf	_set_speed_old& (0+255),w,b	;volatile
   724  00211E  B4D8               	btfsc	status,2,c
   725  002120  D01D               	goto	l4495
   726                           
   727                           ; BSR set to: 0
   728  002122  0100               	movlb	0	; () banked
   729  002124  5188               	movf	(_set_speed+1)& (0+255),w,b
   730  002126  0100               	movlb	0	; () banked
   731  002128  1961               	xorwf	(_set_speed_old+1)& (0+255),w,b	;volatile
   732  00212A  B4D8               	btfsc	status,2,c
   733  00212C  D017               	goto	l4495
   734                           
   735                           ; BSR set to: 0
   736                           ;CanToSerial.c: 121: CANsendMessage(0b00000000000000000000000000011, set_speed, 8, CAN_C
      +                          ONFIG_STD_MSG & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
   737  00212E  0E03               	movlw	3
   738  002130  0100               	movlb	0	; () banked
   739  002132  6F9E               	movwf	CANsendMessage@identifier& (0+255),b
   740  002134  0E00               	movlw	0
   741  002136  6F9F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   742  002138  0E00               	movlw	0
   743  00213A  6FA0               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   744  00213C  0E00               	movlw	0
   745  00213E  6FA1               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   746  002140  0E87               	movlw	low _set_speed
   747  002142  0100               	movlb	0	; () banked
   748  002144  6FA2               	movwf	CANsendMessage@data& (0+255),b
   749  002146  0E00               	movlw	high _set_speed
   750  002148  0100               	movlb	0	; () banked
   751  00214A  6FA3               	movwf	(CANsendMessage@data+1)& (0+255),b
   752  00214C  0E08               	movlw	8
   753  00214E  0100               	movlb	0	; () banked
   754  002150  6FA4               	movwf	CANsendMessage@dataLength& (0+255),b
   755  002152  0EBC               	movlw	188
   756  002154  0100               	movlb	0	; () banked
   757  002156  6FA5               	movwf	CANsendMessage@flags& (0+255),b
   758  002158  EC62  F006         	call	_CANsendMessage	;wreg free
   759  00215C                     l4495:
   760                           
   761                           ;CanToSerial.c: 122: }
   762                           ;CanToSerial.c: 123: if (analogic_brake_old != analogic_brake[0]) {
   763  00215C  5035               	movf	_analogic_brake_old,w,c	;volatile
   764  00215E  0100               	movlb	0	; () banked
   765  002160  1977               	xorwf	_analogic_brake& (0+255),w,b
   766  002162  B4D8               	btfsc	status,2,c
   767  002164  D01A               	goto	l4501
   768                           
   769                           ; BSR set to: 0
   770                           ;CanToSerial.c: 124: analogic_brake[1] = 0x01;
   771  002166  0E01               	movlw	1
   772  002168  0100               	movlb	0	; () banked
   773  00216A  6F78               	movwf	(_analogic_brake+1)& (0+255),b
   774                           
   775                           ; BSR set to: 0
   776                           ;CanToSerial.c: 125: CANsendMessage(0b00000000000000000000000000100, analogic_brake, 8, 
      +                          CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
   777  00216C  0E04               	movlw	4
   778  00216E  0100               	movlb	0	; () banked
   779  002170  6F9E               	movwf	CANsendMessage@identifier& (0+255),b
   780  002172  0E00               	movlw	0
   781  002174  6F9F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   782  002176  0E00               	movlw	0
   783  002178  6FA0               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   784  00217A  0E00               	movlw	0
   785  00217C  6FA1               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   786  00217E  0E77               	movlw	low _analogic_brake
   787  002180  0100               	movlb	0	; () banked
   788  002182  6FA2               	movwf	CANsendMessage@data& (0+255),b
   789  002184  0E00               	movlw	high _analogic_brake
   790  002186  0100               	movlb	0	; () banked
   791  002188  6FA3               	movwf	(CANsendMessage@data+1)& (0+255),b
   792  00218A  0E08               	movlw	8
   793  00218C  0100               	movlb	0	; () banked
   794  00218E  6FA4               	movwf	CANsendMessage@dataLength& (0+255),b
   795  002190  0EBC               	movlw	188
   796  002192  0100               	movlb	0	; () banked
   797  002194  6FA5               	movwf	CANsendMessage@flags& (0+255),b
   798  002196  EC62  F006         	call	_CANsendMessage	;wreg free
   799  00219A                     l4501:
   800                           
   801                           ;CanToSerial.c: 126: }
   802                           ;CanToSerial.c: 127: newMessageUsart = 0;
   803  00219A  963F               	bcf	_newMessageUsart/(0+8),_newMessageUsart& (0+7),c	;volatile
   804  00219C  D780               	goto	l4477
   805  00219E                     __end_of_main:
   806                           	opt stack 0
   807                           tblptru	equ	0xFF8
   808                           tblptrh	equ	0xFF7
   809                           tblptrl	equ	0xFF6
   810                           tablat	equ	0xFF5
   811                           postinc0	equ	0xFEE
   812                           wreg	equ	0xFE8
   813                           postdec1	equ	0xFE5
   814                           fsr1l	equ	0xFE1
   815                           status	equ	0xFD8
   816                           
   817 ;; *************** function _putsUSART *****************
   818 ;; Defined at:
   819 ;;		line 14 in file "sources\pic18\plib\USART\uputs.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;  data            2    0[BANK0 ] PTR unsigned char 
   822 ;;		 -> SerialOutput(7), 
   823 ;; Auto vars:     Size  Location     Type
   824 ;;		None
   825 ;; Return value:  Size  Location     Type
   826 ;;                  1    wreg      void 
   827 ;; Registers used:
   828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   834 ;;      Params:         0       2       0       0
   835 ;;      Locals:         0       0       0       0
   836 ;;      Temps:          0       0       0       0
   837 ;;      Totals:         0       2       0       0
   838 ;;Total ram usage:        2 bytes
   839 ;; Hardware stack levels used:    1
   840 ;; Hardware stack levels required when called:    4
   841 ;; This function calls:
   842 ;;		_WriteUSART
   843 ;; This function is called by:
   844 ;;		_main
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           	psect	text1
   849  002302                     __ptext1:
   850                           	opt stack 0
   851  002302                     _putsUSART:
   852                           	opt stack 26
   853  002302                     l701:
   854  002302  A2AC               	btfss	4012,1,c	;volatile
   855  002304  D7FE               	goto	l701
   856  002306  C09E  FFD9         	movff	putsUSART@data,fsr2l
   857  00230A  C09F  FFDA         	movff	putsUSART@data+1,fsr2h
   858  00230E  50DF               	movf	indf2,w,c
   859  002310  ECBE  F011         	call	_WriteUSART
   860  002314  C09E  FFD9         	movff	putsUSART@data,fsr2l
   861  002318  C09F  FFDA         	movff	putsUSART@data+1,fsr2h
   862  00231C  0100               	movlb	0	; () banked
   863  00231E  4B9E               	infsnz	putsUSART@data& (0+255),f,b
   864  002320  2B9F               	incf	(putsUSART@data+1)& (0+255),f,b
   865  002322  50DF               	movf	indf2,w,c
   866  002324  B4D8               	btfsc	status,2,c
   867  002326  0012               	return	
   868  002328  D7EC               	goto	l701
   869  00232A                     __end_of_putsUSART:
   870                           	opt stack 0
   871                           tblptru	equ	0xFF8
   872                           tblptrh	equ	0xFF7
   873                           tblptrl	equ	0xFF6
   874                           tablat	equ	0xFF5
   875                           postinc0	equ	0xFEE
   876                           wreg	equ	0xFE8
   877                           postdec1	equ	0xFE5
   878                           fsr1l	equ	0xFE1
   879                           indf2	equ	0xFDF
   880                           fsr2h	equ	0xFDA
   881                           fsr2l	equ	0xFD9
   882                           status	equ	0xFD8
   883                           
   884 ;; *************** function _WriteUSART *****************
   885 ;; Defined at:
   886 ;;		line 13 in file "sources\pic18\plib\USART\uwrite.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;  data            1    wreg     unsigned char 
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  data            1   31[COMRAM] unsigned char 
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      void 
   893 ;; Registers used:
   894 ;;		wreg
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   900 ;;      Params:         0       0       0       0
   901 ;;      Locals:         1       0       0       0
   902 ;;      Temps:          0       0       0       0
   903 ;;      Totals:         1       0       0       0
   904 ;;Total ram usage:        1 bytes
   905 ;; Hardware stack levels used:    1
   906 ;; Hardware stack levels required when called:    3
   907 ;; This function calls:
   908 ;;		Nothing
   909 ;; This function is called by:
   910 ;;		_putsUSART
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           	psect	text2
   915  00237C                     __ptext2:
   916                           	opt stack 0
   917  00237C                     _WriteUSART:
   918                           	opt stack 26
   919                           
   920                           ; BSR set to: 0
   921                           ;incstack = 0
   922                           ;WriteUSART@data stored from wreg
   923  00237C  6E20               	movwf	WriteUSART@data,c
   924  00237E  ACAC               	btfss	4012,6,c	;volatile
   925  002380  D003               	goto	l3293
   926  002382  90AC               	bcf	4012,0,c	;volatile
   927  002384  B234               	btfsc	_USART_Status,1,c
   928  002386  80AC               	bsf	4012,0,c	;volatile
   929  002388                     l3293:
   930  002388  C020  FFAD         	movff	WriteUSART@data,4013	;volatile
   931  00238C  0012               	return		;funcret
   932  00238E                     __end_of_WriteUSART:
   933                           	opt stack 0
   934                           tblptru	equ	0xFF8
   935                           tblptrh	equ	0xFF7
   936                           tblptrl	equ	0xFF6
   937                           tablat	equ	0xFF5
   938                           postinc0	equ	0xFEE
   939                           wreg	equ	0xFE8
   940                           postdec1	equ	0xFE5
   941                           fsr1l	equ	0xFE1
   942                           indf2	equ	0xFDF
   943                           fsr2h	equ	0xFDA
   944                           fsr2l	equ	0xFD9
   945                           status	equ	0xFD8
   946                           
   947 ;; *************** function _configurazione_iniziale *****************
   948 ;; Defined at:
   949 ;;		line 171 in file "CanToSerial.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, status,2, status,0, cstack
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   963 ;;      Params:         0       0       0       0
   964 ;;      Locals:         0       0       0       0
   965 ;;      Temps:          0       0       0       0
   966 ;;      Totals:         0       0       0       0
   967 ;;Total ram usage:        0 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; Hardware stack levels required when called:    5
   970 ;; This function calls:
   971 ;;		_CANInitialize
   972 ;;		_OpenUSART
   973 ;; This function is called by:
   974 ;;		_main
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           	psect	text3
   979  00219E                     __ptext3:
   980                           	opt stack 0
   981  00219E                     _configurazione_iniziale:
   982                           	opt stack 25
   983                           
   984                           ;CanToSerial.c: 172: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
   985                           
   986                           ;incstack = 0
   987  00219E  0E4F               	movlw	79
   988  0021A0  16AB               	andwf	4011,f,c	;volatile
   989  0021A2  9AAC               	bcf	4012,5,c	;volatile
   990  0021A4  0ECF               	movlw	207
   991  0021A6  169D               	andwf	3997,f,c	;volatile
   992                           
   993                           ;CanToSerial.c: 174: RCONbits.IPEN = 1;
   994  0021A8  8ED0               	bsf	4048,7,c	;volatile
   995                           
   996                           ;CanToSerial.c: 175: PIR3bits.RXB1IF = 0;
   997  0021AA  92A4               	bcf	4004,1,c	;volatile
   998                           
   999                           ;CanToSerial.c: 176: PIR3bits.RXB0IF = 0;
  1000  0021AC  90A4               	bcf	4004,0,c	;volatile
  1001                           
  1002                           ;CanToSerial.c: 177: PIR1bits.RC1IF = 0;
  1003  0021AE  9A9E               	bcf	3998,5,c	;volatile
  1004                           
  1005                           ;CanToSerial.c: 179: IPR3bits.RXB1IP = 0;
  1006  0021B0  92A5               	bcf	4005,1,c	;volatile
  1007                           
  1008                           ;CanToSerial.c: 180: IPR3bits.RXB0IP = 0;
  1009  0021B2  90A5               	bcf	4005,0,c	;volatile
  1010                           
  1011                           ;CanToSerial.c: 181: IPR1bits.RC1IP = 0;
  1012  0021B4  9A9F               	bcf	3999,5,c	;volatile
  1013                           
  1014                           ;CanToSerial.c: 183: PIE3bits.RXB1IE = 1;
  1015  0021B6  82A3               	bsf	4003,1,c	;volatile
  1016                           
  1017                           ;CanToSerial.c: 184: PIE3bits.RXB0IE = 1;
  1018  0021B8  80A3               	bsf	4003,0,c	;volatile
  1019                           
  1020                           ;CanToSerial.c: 185: PIE1bits.RC1IE = 1;
  1021  0021BA  8A9D               	bsf	3997,5,c	;volatile
  1022                           
  1023                           ;CanToSerial.c: 187: INTCONbits.GIEH = 1;
  1024  0021BC  8EF2               	bsf	intcon,7,c	;volatile
  1025                           
  1026                           ;CanToSerial.c: 188: INTCONbits.GIEL = 1;
  1027  0021BE  8CF2               	bsf	intcon,6,c	;volatile
  1028                           
  1029                           ;CanToSerial.c: 192: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFI
      +                          G_SAMPLE_ONCE &
  1030                           ;CanToSerial.c: 193: CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  1031  0021C0  0E06               	movlw	6
  1032  0021C2  0100               	movlb	0	; () banked
  1033  0021C4  6FAC               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1034  0021C6  0E05               	movlw	5
  1035  0021C8  0100               	movlb	0	; () banked
  1036  0021CA  6FAD               	movwf	CANInitialize@phaseSeg2& (0+255),b
  1037  0021CC  0E01               	movlw	1
  1038  0021CE  0100               	movlb	0	; () banked
  1039  0021D0  6FAE               	movwf	CANInitialize@SJW& (0+255),b
  1040  0021D2  0E03               	movlw	3
  1041  0021D4  0100               	movlb	0	; () banked
  1042  0021D6  6FAF               	movwf	CANInitialize@BRP& (0+255),b
  1043  0021D8  0E9D               	movlw	157
  1044  0021DA  0100               	movlb	0	; () banked
  1045  0021DC  6FB0               	movwf	CANInitialize@flags& (0+255),b
  1046  0021DE  0E04               	movlw	4
  1047  0021E0  EC6A  F00F         	call	_CANInitialize
  1048                           
  1049                           ;CanToSerial.c: 195: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101
  1050                           ;CanToSerial.c: 196: & 0b11111111 & 0b11111111, 103);
  1051  0021E4  0E00               	movlw	0
  1052  0021E6  6E21               	movwf	OpenUSART@spbrg+1,c
  1053  0021E8  0E67               	movlw	103
  1054  0021EA  6E20               	movwf	OpenUSART@spbrg,c
  1055  0021EC  0E7C               	movlw	124
  1056  0021EE  EC0E  F011         	call	_OpenUSART
  1057                           
  1058                           ;CanToSerial.c: 200: LATA = 0x00;
  1059  0021F2  0E00               	movlw	0
  1060  0021F4  6E89               	movwf	3977,c	;volatile
  1061                           
  1062                           ;CanToSerial.c: 201: TRISA = 0b01111101;
  1063  0021F6  0E7D               	movlw	125
  1064  0021F8  6E92               	movwf	3986,c	;volatile
  1065                           
  1066                           ;CanToSerial.c: 203: LATB = 0x00;
  1067  0021FA  0E00               	movlw	0
  1068  0021FC  6E8A               	movwf	3978,c	;volatile
  1069                           
  1070                           ;CanToSerial.c: 204: TRISB = 0b11111011;
  1071  0021FE  0EFB               	movlw	251
  1072  002200  6E93               	movwf	3987,c	;volatile
  1073                           
  1074                           ;CanToSerial.c: 206: LATC = 0x00;
  1075  002202  0E00               	movlw	0
  1076  002204  6E8B               	movwf	3979,c	;volatile
  1077                           
  1078                           ;CanToSerial.c: 207: TRISC = 0b10111111;
  1079  002206  0EBF               	movlw	191
  1080  002208  6E94               	movwf	3988,c	;volatile
  1081                           
  1082                           ;CanToSerial.c: 210: T3CON = 0x01;
  1083  00220A  0E01               	movlw	1
  1084  00220C  6EB1               	movwf	4017,c	;volatile
  1085                           
  1086                           ;CanToSerial.c: 211: PIR2bits.TMR3IF = 0;
  1087  00220E  92A1               	bcf	4001,1,c	;volatile
  1088                           
  1089                           ;CanToSerial.c: 212: IPR2bits.TMR3IP = 0;
  1090  002210  92A2               	bcf	4002,1,c	;volatile
  1091                           
  1092                           ;CanToSerial.c: 213: TMR3H = 0x63;
  1093  002212  0E63               	movlw	99
  1094  002214  6EB3               	movwf	4019,c	;volatile
  1095                           
  1096                           ;CanToSerial.c: 214: TMR3L = 0xC0;
  1097  002216  0EC0               	movlw	192
  1098  002218  6EB2               	movwf	4018,c	;volatile
  1099  00221A  0012               	return		;funcret
  1100  00221C                     __end_of_configurazione_iniziale:
  1101                           	opt stack 0
  1102                           tblptru	equ	0xFF8
  1103                           tblptrh	equ	0xFF7
  1104                           tblptrl	equ	0xFF6
  1105                           tablat	equ	0xFF5
  1106                           intcon	equ	0xFF2
  1107                           postinc0	equ	0xFEE
  1108                           wreg	equ	0xFE8
  1109                           postdec1	equ	0xFE5
  1110                           fsr1l	equ	0xFE1
  1111                           indf2	equ	0xFDF
  1112                           fsr2h	equ	0xFDA
  1113                           fsr2l	equ	0xFD9
  1114                           status	equ	0xFD8
  1115                           
  1116 ;; *************** function _OpenUSART *****************
  1117 ;; Defined at:
  1118 ;;		line 73 in file "sources\pic18\plib\USART\uopen.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;  config          1    wreg     unsigned char 
  1121 ;;  spbrg           2   31[COMRAM] unsigned int 
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;  config          1    0[BANK0 ] unsigned char 
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  1    wreg      void 
  1126 ;; Registers used:
  1127 ;;		wreg, status,2
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1133 ;;      Params:         2       0       0       0
  1134 ;;      Locals:         0       1       0       0
  1135 ;;      Temps:          0       0       0       0
  1136 ;;      Totals:         2       1       0       0
  1137 ;;Total ram usage:        3 bytes
  1138 ;; Hardware stack levels used:    1
  1139 ;; Hardware stack levels required when called:    3
  1140 ;; This function calls:
  1141 ;;		Nothing
  1142 ;; This function is called by:
  1143 ;;		_configurazione_iniziale
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           	psect	text4
  1148  00221C                     __ptext4:
  1149                           	opt stack 0
  1150  00221C                     _OpenUSART:
  1151                           	opt stack 26
  1152                           
  1153                           ;incstack = 0
  1154                           ;OpenUSART@config stored from wreg
  1155  00221C  0100               	movlb	0	; () banked
  1156  00221E  6F9E               	movwf	OpenUSART@config& (0+255),b
  1157  002220  0E00               	movlw	0
  1158  002222  6EAC               	movwf	4012,c	;volatile
  1159  002224  0E00               	movlw	0
  1160  002226  6EAB               	movwf	4011,c	;volatile
  1161  002228  0100               	movlb	0	; () banked
  1162  00222A  B19E               	btfsc	OpenUSART@config& (0+255),0,b
  1163                           
  1164                           ; BSR set to: 0
  1165  00222C  88AC               	bsf	4012,4,c	;volatile
  1166                           
  1167                           ; BSR set to: 0
  1168                           
  1169                           ; BSR set to: 0
  1170  00222E  0100               	movlb	0	; () banked
  1171  002230  A39E               	btfss	OpenUSART@config& (0+255),1,b
  1172  002232  D002               	goto	l4343
  1173                           
  1174                           ; BSR set to: 0
  1175  002234  8CAC               	bsf	4012,6,c	;volatile
  1176  002236  8CAB               	bsf	4011,6,c	;volatile
  1177  002238                     l4343:
  1178                           
  1179                           ; BSR set to: 0
  1180  002238  0100               	movlb	0	; () banked
  1181  00223A  B59E               	btfsc	OpenUSART@config& (0+255),2,b
  1182                           
  1183                           ; BSR set to: 0
  1184  00223C  8EAC               	bsf	4012,7,c	;volatile
  1185                           
  1186                           ; BSR set to: 0
  1187                           
  1188                           ; BSR set to: 0
  1189  00223E  0100               	movlb	0	; () banked
  1190  002240  A79E               	btfss	OpenUSART@config& (0+255),3,b
  1191  002242  D002               	goto	l684
  1192                           
  1193                           ; BSR set to: 0
  1194  002244  88AB               	bsf	4011,4,c	;volatile
  1195  002246  D001               	goto	l4351
  1196  002248                     l684:
  1197                           
  1198                           ; BSR set to: 0
  1199  002248  8AAB               	bsf	4011,5,c	;volatile
  1200  00224A                     l4351:
  1201                           
  1202                           ; BSR set to: 0
  1203  00224A  0100               	movlb	0	; () banked
  1204  00224C  B99E               	btfsc	OpenUSART@config& (0+255),4,b
  1205                           
  1206                           ; BSR set to: 0
  1207  00224E  84AC               	bsf	4012,2,c	;volatile
  1208                           
  1209                           ; BSR set to: 0
  1210  002250  989E               	bcf	3998,4,c	;volatile
  1211                           
  1212                           ; BSR set to: 0
  1213  002252  0100               	movlb	0	; () banked
  1214  002254  BB9E               	btfsc	OpenUSART@config& (0+255),5,b
  1215                           
  1216                           ; BSR set to: 0
  1217  002256  86AB               	bsf	4011,3,c	;volatile
  1218                           
  1219                           ; BSR set to: 0
  1220                           
  1221                           ; BSR set to: 0
  1222  002258  0100               	movlb	0	; () banked
  1223  00225A  AD9E               	btfss	OpenUSART@config& (0+255),6,b
  1224  00225C  D002               	goto	l688
  1225                           
  1226                           ; BSR set to: 0
  1227  00225E  8A9D               	bsf	3997,5,c	;volatile
  1228  002260  D001               	goto	l689
  1229  002262                     l688:
  1230                           
  1231                           ; BSR set to: 0
  1232  002262  9A9D               	bcf	3997,5,c	;volatile
  1233  002264                     l689:
  1234                           
  1235                           ; BSR set to: 0
  1236  002264  9A9E               	bcf	3998,5,c	;volatile
  1237                           
  1238                           ; BSR set to: 0
  1239  002266  0100               	movlb	0	; () banked
  1240  002268  AF9E               	btfss	OpenUSART@config& (0+255),7,b
  1241  00226A  D002               	goto	l690
  1242                           
  1243                           ; BSR set to: 0
  1244  00226C  889D               	bsf	3997,4,c	;volatile
  1245  00226E  D001               	goto	l691
  1246  002270                     l690:
  1247                           
  1248                           ; BSR set to: 0
  1249  002270  989D               	bcf	3997,4,c	;volatile
  1250  002272                     l691:
  1251                           
  1252                           ; BSR set to: 0
  1253  002272  C020  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  1254                           
  1255                           ; BSR set to: 0
  1256  002276  5021               	movf	OpenUSART@spbrg+1,w,c
  1257  002278  6EB0               	movwf	4016,c	;volatile
  1258                           
  1259                           ; BSR set to: 0
  1260  00227A  8AAC               	bsf	4012,5,c	;volatile
  1261                           
  1262                           ; BSR set to: 0
  1263  00227C  8EAB               	bsf	4011,7,c	;volatile
  1264                           
  1265                           ; BSR set to: 0
  1266  00227E  9C94               	bcf	3988,6,c	;volatile
  1267                           
  1268                           ; BSR set to: 0
  1269  002280  8E94               	bsf	3988,7,c	;volatile
  1270                           
  1271                           ; BSR set to: 0
  1272  002282  A8AC               	btfss	4012,4,c	;volatile
  1273  002284  0012               	return	
  1274                           
  1275                           ; BSR set to: 0
  1276  002286  BEAC               	btfsc	4012,7,c	;volatile
  1277  002288  0012               	return	
  1278                           
  1279                           ; BSR set to: 0
  1280  00228A  8C94               	bsf	3988,6,c	;volatile
  1281  00228C  0012               	return	
  1282  00228E                     __end_of_OpenUSART:
  1283                           	opt stack 0
  1284                           tblptru	equ	0xFF8
  1285                           tblptrh	equ	0xFF7
  1286                           tblptrl	equ	0xFF6
  1287                           tablat	equ	0xFF5
  1288                           intcon	equ	0xFF2
  1289                           postinc0	equ	0xFEE
  1290                           wreg	equ	0xFE8
  1291                           postdec1	equ	0xFE5
  1292                           fsr1l	equ	0xFE1
  1293                           indf2	equ	0xFDF
  1294                           fsr2h	equ	0xFDA
  1295                           fsr2l	equ	0xFD9
  1296                           status	equ	0xFD8
  1297                           
  1298 ;; *************** function _CANInitialize *****************
  1299 ;; Defined at:
  1300 ;;		line 218 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;  propSeg         1    wreg     unsigned char 
  1303 ;;  phaseSeg1       1   14[BANK0 ] unsigned char 
  1304 ;;  phaseSeg2       1   15[BANK0 ] unsigned char 
  1305 ;;  SJW             1   16[BANK0 ] unsigned char 
  1306 ;;  BRP             1   17[BANK0 ] unsigned char 
  1307 ;;  flags           1   18[BANK0 ] enum E16706
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;  propSeg         1   23[BANK0 ] unsigned char 
  1310 ;;  FilterConfig    1   25[BANK0 ] unsigned char 
  1311 ;;  FilterConfig    1   24[BANK0 ] unsigned char 
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, status,2, status,0, cstack
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1321 ;;      Params:         0       5       0       0
  1322 ;;      Locals:         0       3       0       0
  1323 ;;      Temps:          0       4       0       0
  1324 ;;      Totals:         0      12       0       0
  1325 ;;Total ram usage:       12 bytes
  1326 ;; Hardware stack levels used:    1
  1327 ;; Hardware stack levels required when called:    4
  1328 ;; This function calls:
  1329 ;;		_CANOperationMode
  1330 ;;		_CANSetFilter
  1331 ;;		_CANSetMask
  1332 ;; This function is called by:
  1333 ;;		_configurazione_iniziale
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text5
  1338  001ED4                     __ptext5:
  1339                           	opt stack 0
  1340  001ED4                     _CANInitialize:
  1341                           	opt stack 25
  1342                           
  1343                           ; BSR set to: 0
  1344                           ;incstack = 0
  1345                           ;CANInitialize@propSeg stored from wreg
  1346  001ED4  0100               	movlb	0	; () banked
  1347  001ED6  6FB5               	movwf	CANInitialize@propSeg& (0+255),b
  1348                           
  1349                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  1350                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  1351                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  1352  001ED8  0E80               	movlw	128
  1353  001EDA  ECC7  F011         	call	_CANOperationMode
  1354                           
  1355                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  1356  001EDE  0E00               	movlw	0
  1357  001EE0  6E70               	movwf	3952,c	;volatile
  1358                           
  1359                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  1360  001EE2  0E00               	movlw	0
  1361  001EE4  6E71               	movwf	3953,c	;volatile
  1362                           
  1363                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  1364  001EE6  0E00               	movlw	0
  1365  001EE8  6E72               	movwf	3954,c	;volatile
  1366                           
  1367                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  1368  001EEA  0100               	movlb	0	; () banked
  1369  001EEC  41AE               	rrncf	CANInitialize@SJW& (0+255),w,b
  1370  001EEE  42E8               	rrncf	wreg,f,c
  1371  001EF0  0BC0               	andlw	192
  1372  001EF2  0100               	movlb	0	; () banked
  1373  001EF4  6FAE               	movwf	CANInitialize@SJW& (0+255),b
  1374                           
  1375                           ; BSR set to: 0
  1376                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  1377  001EF6  0100               	movlb	0	; () banked
  1378  001EF8  51AE               	movf	CANInitialize@SJW& (0+255),w,b
  1379  001EFA  1270               	iorwf	3952,f,c	;volatile
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  1383  001EFC  0100               	movlb	0	; () banked
  1384  001EFE  51AF               	movf	CANInitialize@BRP& (0+255),w,b
  1385  001F00  1270               	iorwf	3952,f,c	;volatile
  1386                           
  1387                           ; BSR set to: 0
  1388                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  1389  001F02  0100               	movlb	0	; () banked
  1390  001F04  51B5               	movf	CANInitialize@propSeg& (0+255),w,b
  1391  001F06  1271               	iorwf	3953,f,c	;volatile
  1392                           
  1393                           ; BSR set to: 0
  1394                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  1395  001F08  0100               	movlb	0	; () banked
  1396  001F0A  39AC               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  1397  001F0C  42E8               	rrncf	wreg,f,c
  1398  001F0E  0BF8               	andlw	248
  1399  001F10  0100               	movlb	0	; () banked
  1400  001F12  6FAC               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  1404  001F14  0100               	movlb	0	; () banked
  1405  001F16  51AC               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  1406  001F18  1271               	iorwf	3953,f,c	;volatile
  1407                           
  1408                           ; BSR set to: 0
  1409                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  1410  001F1A  0100               	movlb	0	; () banked
  1411  001F1C  A5B0               	btfss	CANInitialize@flags& (0+255),2,b
  1412                           
  1413                           ; BSR set to: 0
  1414                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  1415  001F1E  8C71               	bsf	3953,6,c	;volatile
  1416                           
  1417                           ; BSR set to: 0
  1418                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  1419  001F20  0100               	movlb	0	; () banked
  1420  001F22  B1B0               	btfsc	CANInitialize@flags& (0+255),0,b
  1421                           
  1422                           ; BSR set to: 0
  1423                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  1424  001F24  8E71               	bsf	3953,7,c	;volatile
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  1428                           
  1429                           ; BSR set to: 0
  1430  001F26  0100               	movlb	0	; () banked
  1431  001F28  51AD               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  1432  001F2A  1272               	iorwf	3954,f,c	;volatile
  1433                           
  1434                           ; BSR set to: 0
  1435                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  1436  001F2C  0100               	movlb	0	; () banked
  1437  001F2E  B3B0               	btfsc	CANInitialize@flags& (0+255),1,b
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  1441  001F30  8C72               	bsf	3954,6,c	;volatile
  1442                           
  1443                           ; BSR set to: 0
  1444                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  1445                           
  1446                           ; BSR set to: 0
  1447  001F32  0100               	movlb	0	; () banked
  1448  001F34  51B0               	movf	CANInitialize@flags& (0+255),w,b
  1449  001F36  0B60               	andlw	96
  1450  001F38  6E60               	movwf	3936,c	;volatile
  1451                           
  1452                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  1453  001F3A  0100               	movlb	0	; () banked
  1454  001F3C  51B0               	movf	CANInitialize@flags& (0+255),w,b
  1455  001F3E  0B10               	andlw	16
  1456  001F40  0AFF               	xorlw	255
  1457  001F42  B4D8               	btfsc	status,2,c
  1458                           
  1459                           ; BSR set to: 0
  1460                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  1461  001F44  8460               	bsf	3936,2,c	;volatile
  1462                           
  1463                           ; BSR set to: 0
  1464                           ;inc\CANlib.h: 254: RXB1CON = RXB0CON;
  1465  001F46  CF60 FF50          	movff	3936,3920	;volatile
  1466                           
  1467                           ; BSR set to: 0
  1468                           ;inc\CANlib.h: 258: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  1469  001F4A  0E00               	movlw	0
  1470  001F4C  0100               	movlb	0	; () banked
  1471  001F4E  6F9E               	movwf	CANSetMask@mask& (0+255),b
  1472  001F50  0E00               	movlw	0
  1473  001F52  6F9F               	movwf	(CANSetMask@mask+1)& (0+255),b
  1474  001F54  0E00               	movlw	0
  1475  001F56  6FA0               	movwf	(CANSetMask@mask+2)& (0+255),b
  1476  001F58  0E00               	movlw	0
  1477  001F5A  6FA1               	movwf	(CANSetMask@mask+3)& (0+255),b
  1478  001F5C  0EF7               	movlw	247
  1479  001F5E  0100               	movlb	0	; () banked
  1480  001F60  6FA2               	movwf	CANSetMask@type& (0+255),b
  1481  001F62  0E01               	movlw	1
  1482  001F64  ECAE  F00C         	call	_CANSetMask
  1483                           
  1484                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  1485  001F68  0E00               	movlw	0
  1486  001F6A  0100               	movlb	0	; () banked
  1487  001F6C  6F9E               	movwf	CANSetMask@mask& (0+255),b
  1488  001F6E  0E00               	movlw	0
  1489  001F70  6F9F               	movwf	(CANSetMask@mask+1)& (0+255),b
  1490  001F72  0E00               	movlw	0
  1491  001F74  6FA0               	movwf	(CANSetMask@mask+2)& (0+255),b
  1492  001F76  0E00               	movlw	0
  1493  001F78  6FA1               	movwf	(CANSetMask@mask+3)& (0+255),b
  1494  001F7A  0EF7               	movlw	247
  1495  001F7C  0100               	movlb	0	; () banked
  1496  001F7E  6FA2               	movwf	CANSetMask@type& (0+255),b
  1497  001F80  0E02               	movlw	2
  1498  001F82  ECAE  F00C         	call	_CANSetMask
  1499                           
  1500                           ;inc\CANlib.h: 262: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  1501  001F86  D00F               	goto	l4095
  1502  001F88                     l4089:
  1503                           
  1504                           ;inc\CANlib.h: 265: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  1505  001F88  0EF7               	movlw	247
  1506  001F8A  0100               	movlb	0	; () banked
  1507  001F8C  6FB6               	movwf	CANInitialize@FilterConfig1& (0+255),b
  1508  001F8E  D007               	goto	l4091
  1509  001F90                     l346:
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;inc\CANlib.h: 270: FilterConfig1 = CAN_CONFIG_STD_MSG;
  1513  001F90  0100               	movlb	0	; () banked
  1514  001F92  69B6               	setf	CANInitialize@FilterConfig1& (0+255),b
  1515                           
  1516                           ;inc\CANlib.h: 271: FilterConfig2 = CAN_CONFIG_STD_MSG;
  1517  001F94  0100               	movlb	0	; () banked
  1518  001F96  69B7               	setf	CANInitialize@FilterConfig2& (0+255),b
  1519                           
  1520                           ;inc\CANlib.h: 272: break;
  1521  001F98  D028               	goto	l4097
  1522  001F9A                     l347:
  1523                           
  1524                           ; BSR set to: 0
  1525                           ;inc\CANlib.h: 274: FilterConfig1 = CAN_CONFIG_STD_MSG;
  1526  001F9A  0100               	movlb	0	; () banked
  1527  001F9C  69B6               	setf	CANInitialize@FilterConfig1& (0+255),b
  1528  001F9E                     l4091:
  1529                           
  1530                           ; BSR set to: 0
  1531                           ;inc\CANlib.h: 275: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  1532  001F9E  0EF7               	movlw	247
  1533  001FA0  0100               	movlb	0	; () banked
  1534  001FA2  6FB7               	movwf	CANInitialize@FilterConfig2& (0+255),b
  1535                           
  1536                           ; BSR set to: 0
  1537                           ;inc\CANlib.h: 277: }
  1538                           
  1539                           ;inc\CANlib.h: 276: break;
  1540  001FA4  D022               	goto	l4097
  1541  001FA6                     l4095:
  1542  001FA6  0E9F               	movlw	159
  1543  001FA8  0100               	movlb	0	; () banked
  1544  001FAA  6FB1               	movwf	??_CANInitialize& (0+255),b
  1545  001FAC  0EFF               	movlw	255
  1546  001FAE  0100               	movlb	0	; () banked
  1547  001FB0  6FB2               	movwf	(??_CANInitialize+1)& (0+255),b
  1548  001FB2  0100               	movlb	0	; () banked
  1549  001FB4  51B0               	movf	CANInitialize@flags& (0+255),w,b
  1550  001FB6  0B60               	andlw	96
  1551  001FB8  0100               	movlb	0	; () banked
  1552  001FBA  6FB3               	movwf	(??_CANInitialize+2)& (0+255),b
  1553  001FBC  6BB4               	clrf	(??_CANInitialize+3)& (0+255),b
  1554  001FBE  0100               	movlb	0	; () banked
  1555  001FC0  51B1               	movf	??_CANInitialize& (0+255),w,b
  1556  001FC2  0100               	movlb	0	; () banked
  1557  001FC4  13B3               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  1558  001FC6  0100               	movlb	0	; () banked
  1559  001FC8  51B2               	movf	(??_CANInitialize+1)& (0+255),w,b
  1560  001FCA  0100               	movlb	0	; () banked
  1561  001FCC  13B4               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  1562                           
  1563                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1564                           ; Switch size 1, requested type "space"
  1565                           ; Number of cases is 1, Range of values is 0 to 0
  1566                           ; switch strategies available:
  1567                           ; Name         Instructions Cycles
  1568                           ; simple_byte            4     3 (average)
  1569                           ;	Chosen strategy is simple_byte
  1570  001FCE  0100               	movlb	0	; () banked
  1571  001FD0  51B4               	movf	(??_CANInitialize+3)& (0+255),w,b
  1572  001FD2  0A00               	xorlw	0	; case 0
  1573  001FD4  A4D8               	btfss	status,2,c
  1574  001FD6  D7E1               	goto	l347
  1575                           
  1576                           ; BSR set to: 0
  1577                           ; Switch size 1, requested type "space"
  1578                           ; Number of cases is 2, Range of values is 191 to 223
  1579                           ; switch strategies available:
  1580                           ; Name         Instructions Cycles
  1581                           ; simple_byte            7     4 (average)
  1582                           ;	Chosen strategy is simple_byte
  1583  001FD8  0100               	movlb	0	; () banked
  1584  001FDA  51B3               	movf	(??_CANInitialize+2)& (0+255),w,b
  1585  001FDC  0ABF               	xorlw	191	; case 191
  1586  001FDE  B4D8               	btfsc	status,2,c
  1587  001FE0  D7D7               	goto	l346
  1588  001FE2  0A60               	xorlw	96	; case 223
  1589  001FE4  B4D8               	btfsc	status,2,c
  1590  001FE6  D7D0               	goto	l4089
  1591  001FE8  D7D8               	goto	l347
  1592  001FEA                     l4097:
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;inc\CANlib.h: 279: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  1596  001FEA  0E00               	movlw	0
  1597  001FEC  0100               	movlb	0	; () banked
  1598  001FEE  6F9E               	movwf	CANSetFilter@filter& (0+255),b
  1599  001FF0  0E00               	movlw	0
  1600  001FF2  6F9F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  1601  001FF4  0E00               	movlw	0
  1602  001FF6  6FA0               	movwf	(CANSetFilter@filter+2)& (0+255),b
  1603  001FF8  0E00               	movlw	0
  1604  001FFA  6FA1               	movwf	(CANSetFilter@filter+3)& (0+255),b
  1605  001FFC  C0B6  F0A2         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  1606  002000  0E00               	movlw	0
  1607  002002  ECDF  F000         	call	_CANSetFilter
  1608                           
  1609                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  1610  002006  0E00               	movlw	0
  1611  002008  0100               	movlb	0	; () banked
  1612  00200A  6F9E               	movwf	CANSetFilter@filter& (0+255),b
  1613  00200C  0E00               	movlw	0
  1614  00200E  6F9F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  1615  002010  0E00               	movlw	0
  1616  002012  6FA0               	movwf	(CANSetFilter@filter+2)& (0+255),b
  1617  002014  0E00               	movlw	0
  1618  002016  6FA1               	movwf	(CANSetFilter@filter+3)& (0+255),b
  1619  002018  C0B6  F0A2         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  1620  00201C  0E01               	movlw	1
  1621  00201E  ECDF  F000         	call	_CANSetFilter
  1622                           
  1623                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  1624  002022  0E00               	movlw	0
  1625  002024  0100               	movlb	0	; () banked
  1626  002026  6F9E               	movwf	CANSetFilter@filter& (0+255),b
  1627  002028  0E00               	movlw	0
  1628  00202A  6F9F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  1629  00202C  0E00               	movlw	0
  1630  00202E  6FA0               	movwf	(CANSetFilter@filter+2)& (0+255),b
  1631  002030  0E00               	movlw	0
  1632  002032  6FA1               	movwf	(CANSetFilter@filter+3)& (0+255),b
  1633  002034  C0B7  F0A2         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  1634  002038  0E02               	movlw	2
  1635  00203A  ECDF  F000         	call	_CANSetFilter
  1636                           
  1637                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  1638  00203E  0E00               	movlw	0
  1639  002040  0100               	movlb	0	; () banked
  1640  002042  6F9E               	movwf	CANSetFilter@filter& (0+255),b
  1641  002044  0E00               	movlw	0
  1642  002046  6F9F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  1643  002048  0E00               	movlw	0
  1644  00204A  6FA0               	movwf	(CANSetFilter@filter+2)& (0+255),b
  1645  00204C  0E00               	movlw	0
  1646  00204E  6FA1               	movwf	(CANSetFilter@filter+3)& (0+255),b
  1647  002050  C0B7  F0A2         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  1648  002054  0E03               	movlw	3
  1649  002056  ECDF  F000         	call	_CANSetFilter
  1650                           
  1651                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  1652  00205A  0E00               	movlw	0
  1653  00205C  0100               	movlb	0	; () banked
  1654  00205E  6F9E               	movwf	CANSetFilter@filter& (0+255),b
  1655  002060  0E00               	movlw	0
  1656  002062  6F9F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  1657  002064  0E00               	movlw	0
  1658  002066  6FA0               	movwf	(CANSetFilter@filter+2)& (0+255),b
  1659  002068  0E00               	movlw	0
  1660  00206A  6FA1               	movwf	(CANSetFilter@filter+3)& (0+255),b
  1661  00206C  C0B7  F0A2         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  1662  002070  0E04               	movlw	4
  1663  002072  ECDF  F000         	call	_CANSetFilter
  1664                           
  1665                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  1666  002076  0E00               	movlw	0
  1667  002078  0100               	movlb	0	; () banked
  1668  00207A  6F9E               	movwf	CANSetFilter@filter& (0+255),b
  1669  00207C  0E00               	movlw	0
  1670  00207E  6F9F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  1671  002080  0E00               	movlw	0
  1672  002082  6FA0               	movwf	(CANSetFilter@filter+2)& (0+255),b
  1673  002084  0E00               	movlw	0
  1674  002086  6FA1               	movwf	(CANSetFilter@filter+3)& (0+255),b
  1675  002088  C0B7  F0A2         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  1676  00208C  0E05               	movlw	5
  1677  00208E  ECDF  F000         	call	_CANSetFilter
  1678                           
  1679                           ;inc\CANlib.h: 286: CANOperationMode(CAN_OP_MODE_NORMAL);
  1680  002092  0E00               	movlw	0
  1681  002094  ECC7  F011         	call	_CANOperationMode
  1682  002098  0012               	return		;funcret
  1683  00209A                     __end_of_CANInitialize:
  1684                           	opt stack 0
  1685                           tblptru	equ	0xFF8
  1686                           tblptrh	equ	0xFF7
  1687                           tblptrl	equ	0xFF6
  1688                           tablat	equ	0xFF5
  1689                           intcon	equ	0xFF2
  1690                           postinc0	equ	0xFEE
  1691                           wreg	equ	0xFE8
  1692                           postdec1	equ	0xFE5
  1693                           fsr1l	equ	0xFE1
  1694                           indf2	equ	0xFDF
  1695                           fsr2h	equ	0xFDA
  1696                           fsr2l	equ	0xFD9
  1697                           status	equ	0xFD8
  1698                           
  1699 ;; *************** function _CANSetMask *****************
  1700 ;; Defined at:
  1701 ;;		line 639 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;  numBuffer       1    wreg     enum E16740
  1704 ;;  mask            4    0[BANK0 ] unsigned long 
  1705 ;;  type            1    4[BANK0 ] enum E16706
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;  numBuffer       1    9[BANK0 ] enum E16740
  1708 ;;  tamp            4   10[BANK0 ] unsigned long 
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2, status,0
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1718 ;;      Params:         0       5       0       0
  1719 ;;      Locals:         0       5       0       0
  1720 ;;      Temps:          0       4       0       0
  1721 ;;      Totals:         0      14       0       0
  1722 ;;Total ram usage:       14 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; Hardware stack levels required when called:    3
  1725 ;; This function calls:
  1726 ;;		Nothing
  1727 ;; This function is called by:
  1728 ;;		_CANInitialize
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text6
  1733  00195C                     __ptext6:
  1734                           	opt stack 0
  1735  00195C                     _CANSetMask:
  1736                           	opt stack 25
  1737                           
  1738                           ;incstack = 0
  1739                           ;CANSetMask@numBuffer stored from wreg
  1740  00195C  0100               	movlb	0	; () banked
  1741  00195E  6FA7               	movwf	CANSetMask@numBuffer& (0+255),b
  1742                           
  1743                           ;inc\CANlib.h: 642: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  1744  001960  0100               	movlb	0	; () banked
  1745  001962  05A7               	decf	CANSetMask@numBuffer& (0+255),w,b
  1746  001964  A4D8               	btfss	status,2,c
  1747  001966  D056               	goto	l3659
  1748                           
  1749                           ; BSR set to: 0
  1750  001968  0100               	movlb	0	; () banked
  1751  00196A  29A2               	incf	CANSetMask@type& (0+255),w,b
  1752  00196C  A4D8               	btfss	status,2,c
  1753  00196E  D052               	goto	l3659
  1754                           
  1755                           ; BSR set to: 0
  1756                           ;inc\CANlib.h: 643: {
  1757                           ;inc\CANlib.h: 644: tamp = (mask >> 3);
  1758  001970  C09E  F0A3         	movff	CANSetMask@mask,??_CANSetMask
  1759  001974  C09F  F0A4         	movff	CANSetMask@mask+1,??_CANSetMask+1
  1760  001978  C0A0  F0A5         	movff	CANSetMask@mask+2,??_CANSetMask+2
  1761  00197C  C0A1  F0A6         	movff	CANSetMask@mask+3,??_CANSetMask+3
  1762  001980  0E04               	movlw	4
  1763  001982  D006               	goto	u4540
  1764  001984                     u4545:
  1765  001984  0100               	movlb	0	; () banked
  1766  001986  90D8               	bcf	status,0,c
  1767  001988  33A6               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  1768  00198A  33A5               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  1769  00198C  33A4               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  1770  00198E  33A3               	rrcf	??_CANSetMask& (0+255),f,b
  1771  001990                     u4540:
  1772  001990  2EE8               	decfsz	wreg,f,c
  1773  001992  D7F8               	goto	u4545
  1774  001994  C0A3  F0A8         	movff	??_CANSetMask,CANSetMask@tamp
  1775  001998  C0A4  F0A9         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1776  00199C  C0A5  F0AA         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1777  0019A0  C0A6  F0AB         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1778                           
  1779                           ; BSR set to: 0
  1780                           ;inc\CANlib.h: 645: tamp = tamp & 0x000000FF;
  1781  0019A4  0100               	movlb	0	; () banked
  1782  0019A6  51A8               	movf	CANSetMask@tamp& (0+255),w,b
  1783  0019A8  0100               	movlb	0	; () banked
  1784  0019AA  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  1785  0019AC  6BA9               	clrf	(CANSetMask@tamp+1)& (0+255),b
  1786  0019AE  6BAA               	clrf	(CANSetMask@tamp+2)& (0+255),b
  1787  0019B0  6BAB               	clrf	(CANSetMask@tamp+3)& (0+255),b
  1788                           
  1789                           ; BSR set to: 0
  1790                           ;inc\CANlib.h: 646: RXM0SIDH = (unsigned char) tamp;
  1791  0019B2  C0A8  FF18         	movff	CANSetMask@tamp,3864	;volatile
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;inc\CANlib.h: 648: tamp = mask & 0x00000007;
  1795  0019B6  0E07               	movlw	7
  1796  0019B8  0100               	movlb	0	; () banked
  1797  0019BA  159E               	andwf	CANSetMask@mask& (0+255),w,b
  1798  0019BC  0100               	movlb	0	; () banked
  1799  0019BE  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  1800  0019C0  0E00               	movlw	0
  1801  0019C2  0100               	movlb	0	; () banked
  1802  0019C4  159F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  1803  0019C6  0100               	movlb	0	; () banked
  1804  0019C8  6FA9               	movwf	(CANSetMask@tamp+1)& (0+255),b
  1805  0019CA  0E00               	movlw	0
  1806  0019CC  0100               	movlb	0	; () banked
  1807  0019CE  15A0               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  1808  0019D0  0100               	movlb	0	; () banked
  1809  0019D2  6FAA               	movwf	(CANSetMask@tamp+2)& (0+255),b
  1810  0019D4  0E00               	movlw	0
  1811  0019D6  0100               	movlb	0	; () banked
  1812  0019D8  15A1               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  1813  0019DA  0100               	movlb	0	; () banked
  1814  0019DC  6FAB               	movwf	(CANSetMask@tamp+3)& (0+255),b
  1815                           
  1816                           ; BSR set to: 0
  1817                           ;inc\CANlib.h: 649: tamp = tamp << 5;
  1818  0019DE  C0A8  F0A3         	movff	CANSetMask@tamp,??_CANSetMask
  1819  0019E2  C0A9  F0A4         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  1820  0019E6  C0AA  F0A5         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  1821  0019EA  C0AB  F0A6         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  1822  0019EE  0E05               	movlw	5
  1823  0019F0                     u4555:
  1824  0019F0  90D8               	bcf	status,0,c
  1825  0019F2  0100               	movlb	0	; () banked
  1826  0019F4  37A3               	rlcf	??_CANSetMask& (0+255),f,b
  1827  0019F6  37A4               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  1828  0019F8  37A5               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  1829  0019FA  37A6               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  1830  0019FC  2EE8               	decfsz	wreg,f,c
  1831  0019FE  D7F8               	goto	u4555
  1832  001A00  C0A3  F0A8         	movff	??_CANSetMask,CANSetMask@tamp
  1833  001A04  C0A4  F0A9         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1834  001A08  C0A5  F0AA         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1835  001A0C  C0A6  F0AB         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1836                           
  1837                           ; BSR set to: 0
  1838                           ;inc\CANlib.h: 650: RXM0SIDL = (unsigned char) tamp;
  1839  001A10  C0A8  FF19         	movff	CANSetMask@tamp,3865	;volatile
  1840  001A14                     l3659:
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;inc\CANlib.h: 651: }
  1844                           ;inc\CANlib.h: 653: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  1845  001A14  0E02               	movlw	2
  1846  001A16  0100               	movlb	0	; () banked
  1847  001A18  19A7               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  1848  001A1A  A4D8               	btfss	status,2,c
  1849  001A1C  D056               	goto	l3675
  1850                           
  1851                           ; BSR set to: 0
  1852  001A1E  0100               	movlb	0	; () banked
  1853  001A20  29A2               	incf	CANSetMask@type& (0+255),w,b
  1854  001A22  A4D8               	btfss	status,2,c
  1855  001A24  D052               	goto	l3675
  1856                           
  1857                           ; BSR set to: 0
  1858                           ;inc\CANlib.h: 654: {
  1859                           ;inc\CANlib.h: 655: tamp = (mask >> 3);
  1860  001A26  C09E  F0A3         	movff	CANSetMask@mask,??_CANSetMask
  1861  001A2A  C09F  F0A4         	movff	CANSetMask@mask+1,??_CANSetMask+1
  1862  001A2E  C0A0  F0A5         	movff	CANSetMask@mask+2,??_CANSetMask+2
  1863  001A32  C0A1  F0A6         	movff	CANSetMask@mask+3,??_CANSetMask+3
  1864  001A36  0E04               	movlw	4
  1865  001A38  D006               	goto	u4580
  1866  001A3A                     u4585:
  1867  001A3A  0100               	movlb	0	; () banked
  1868  001A3C  90D8               	bcf	status,0,c
  1869  001A3E  33A6               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  1870  001A40  33A5               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  1871  001A42  33A4               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  1872  001A44  33A3               	rrcf	??_CANSetMask& (0+255),f,b
  1873  001A46                     u4580:
  1874  001A46  2EE8               	decfsz	wreg,f,c
  1875  001A48  D7F8               	goto	u4585
  1876  001A4A  C0A3  F0A8         	movff	??_CANSetMask,CANSetMask@tamp
  1877  001A4E  C0A4  F0A9         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1878  001A52  C0A5  F0AA         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1879  001A56  C0A6  F0AB         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;inc\CANlib.h: 656: tamp = tamp & 0x000000FF;
  1883  001A5A  0100               	movlb	0	; () banked
  1884  001A5C  51A8               	movf	CANSetMask@tamp& (0+255),w,b
  1885  001A5E  0100               	movlb	0	; () banked
  1886  001A60  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  1887  001A62  6BA9               	clrf	(CANSetMask@tamp+1)& (0+255),b
  1888  001A64  6BAA               	clrf	(CANSetMask@tamp+2)& (0+255),b
  1889  001A66  6BAB               	clrf	(CANSetMask@tamp+3)& (0+255),b
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;inc\CANlib.h: 657: RXM1SIDH = (unsigned char) tamp;
  1893  001A68  C0A8  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  1894                           
  1895                           ; BSR set to: 0
  1896                           ;inc\CANlib.h: 659: tamp = mask & 0x00000007;
  1897  001A6C  0E07               	movlw	7
  1898  001A6E  0100               	movlb	0	; () banked
  1899  001A70  159E               	andwf	CANSetMask@mask& (0+255),w,b
  1900  001A72  0100               	movlb	0	; () banked
  1901  001A74  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  1902  001A76  0E00               	movlw	0
  1903  001A78  0100               	movlb	0	; () banked
  1904  001A7A  159F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  1905  001A7C  0100               	movlb	0	; () banked
  1906  001A7E  6FA9               	movwf	(CANSetMask@tamp+1)& (0+255),b
  1907  001A80  0E00               	movlw	0
  1908  001A82  0100               	movlb	0	; () banked
  1909  001A84  15A0               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  1910  001A86  0100               	movlb	0	; () banked
  1911  001A88  6FAA               	movwf	(CANSetMask@tamp+2)& (0+255),b
  1912  001A8A  0E00               	movlw	0
  1913  001A8C  0100               	movlb	0	; () banked
  1914  001A8E  15A1               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  1915  001A90  0100               	movlb	0	; () banked
  1916  001A92  6FAB               	movwf	(CANSetMask@tamp+3)& (0+255),b
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;inc\CANlib.h: 660: tamp = tamp << 5;
  1920  001A94  C0A8  F0A3         	movff	CANSetMask@tamp,??_CANSetMask
  1921  001A98  C0A9  F0A4         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  1922  001A9C  C0AA  F0A5         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  1923  001AA0  C0AB  F0A6         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  1924  001AA4  0E05               	movlw	5
  1925  001AA6                     u4595:
  1926  001AA6  90D8               	bcf	status,0,c
  1927  001AA8  0100               	movlb	0	; () banked
  1928  001AAA  37A3               	rlcf	??_CANSetMask& (0+255),f,b
  1929  001AAC  37A4               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  1930  001AAE  37A5               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  1931  001AB0  37A6               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  1932  001AB2  2EE8               	decfsz	wreg,f,c
  1933  001AB4  D7F8               	goto	u4595
  1934  001AB6  C0A3  F0A8         	movff	??_CANSetMask,CANSetMask@tamp
  1935  001ABA  C0A4  F0A9         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1936  001ABE  C0A5  F0AA         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1937  001AC2  C0A6  F0AB         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;inc\CANlib.h: 661: RXM1SIDL = (unsigned char) tamp;
  1941  001AC6  C0A8  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  1942  001ACA                     l3675:
  1943                           
  1944                           ; BSR set to: 0
  1945                           ;inc\CANlib.h: 662: }
  1946                           ;inc\CANlib.h: 664: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  1947  001ACA  0100               	movlb	0	; () banked
  1948  001ACC  05A7               	decf	CANSetMask@numBuffer& (0+255),w,b
  1949  001ACE  A4D8               	btfss	status,2,c
  1950  001AD0  D087               	goto	l3707
  1951                           
  1952                           ; BSR set to: 0
  1953  001AD2  0EF7               	movlw	247
  1954  001AD4  0100               	movlb	0	; () banked
  1955  001AD6  19A2               	xorwf	CANSetMask@type& (0+255),w,b
  1956  001AD8  A4D8               	btfss	status,2,c
  1957  001ADA  D082               	goto	l3707
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;inc\CANlib.h: 665: {
  1961                           ;inc\CANlib.h: 666: tamp = mask & 0x000000FF;
  1962  001ADC  0100               	movlb	0	; () banked
  1963  001ADE  519E               	movf	CANSetMask@mask& (0+255),w,b
  1964  001AE0  0100               	movlb	0	; () banked
  1965  001AE2  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  1966  001AE4  6BA9               	clrf	(CANSetMask@tamp+1)& (0+255),b
  1967  001AE6  6BAA               	clrf	(CANSetMask@tamp+2)& (0+255),b
  1968  001AE8  6BAB               	clrf	(CANSetMask@tamp+3)& (0+255),b
  1969                           
  1970                           ; BSR set to: 0
  1971                           ;inc\CANlib.h: 667: RXM0EIDL = (unsigned char) tamp;
  1972  001AEA  C0A8  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;inc\CANlib.h: 669: tamp = mask & 0x0000FF00;
  1976  001AEE  0E00               	movlw	0
  1977  001AF0  0100               	movlb	0	; () banked
  1978  001AF2  159E               	andwf	CANSetMask@mask& (0+255),w,b
  1979  001AF4  0100               	movlb	0	; () banked
  1980  001AF6  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  1981  001AF8  0EFF               	movlw	255
  1982  001AFA  0100               	movlb	0	; () banked
  1983  001AFC  159F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  1984  001AFE  0100               	movlb	0	; () banked
  1985  001B00  6FA9               	movwf	(CANSetMask@tamp+1)& (0+255),b
  1986  001B02  0E00               	movlw	0
  1987  001B04  0100               	movlb	0	; () banked
  1988  001B06  15A0               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  1989  001B08  0100               	movlb	0	; () banked
  1990  001B0A  6FAA               	movwf	(CANSetMask@tamp+2)& (0+255),b
  1991  001B0C  0E00               	movlw	0
  1992  001B0E  0100               	movlb	0	; () banked
  1993  001B10  15A1               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  1994  001B12  0100               	movlb	0	; () banked
  1995  001B14  6FAB               	movwf	(CANSetMask@tamp+3)& (0+255),b
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;inc\CANlib.h: 670: tamp = tamp >> 8;
  1999  001B16  C0A8  F0A3         	movff	CANSetMask@tamp,??_CANSetMask
  2000  001B1A  C0A9  F0A4         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2001  001B1E  C0AA  F0A5         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2002  001B22  C0AB  F0A6         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2003  001B26  C0A4  F0A3         	movff	??_CANSetMask+1,??_CANSetMask
  2004  001B2A  C0A5  F0A4         	movff	??_CANSetMask+2,??_CANSetMask+1
  2005  001B2E  C0A6  F0A5         	movff	??_CANSetMask+3,??_CANSetMask+2
  2006  001B32  0100               	movlb	0	; () banked
  2007  001B34  6BA6               	clrf	(??_CANSetMask+3)& (0+255),b
  2008  001B36  C0A3  F0A8         	movff	??_CANSetMask,CANSetMask@tamp
  2009  001B3A  C0A4  F0A9         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2010  001B3E  C0A5  F0AA         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2011  001B42  C0A6  F0AB         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2012                           
  2013                           ; BSR set to: 0
  2014                           ;inc\CANlib.h: 671: RXM0EIDH = (unsigned char) tamp;
  2015  001B46  C0A8  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;inc\CANlib.h: 673: if (mask & 0x00010000)
  2019  001B4A  0100               	movlb	0	; () banked
  2020  001B4C  A1A0               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  2021  001B4E  D003               	goto	l420
  2022                           
  2023                           ; BSR set to: 0
  2024                           ;inc\CANlib.h: 674: RXM0SIDLbits.EID16 = 0x01;
  2025  001B50  010F               	movlb	15	; () banked
  2026  001B52  8119               	bsf	25,0,b	;volatile
  2027  001B54  D002               	goto	l421
  2028  001B56                     l420:
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;inc\CANlib.h: 675: else
  2032                           ;inc\CANlib.h: 676: RXM0SIDLbits.EID16 = 0x00;
  2033  001B56  010F               	movlb	15	; () banked
  2034  001B58  9119               	bcf	25,0,b	;volatile
  2035  001B5A                     l421:
  2036                           
  2037                           ; BSR set to: 15
  2038                           ;inc\CANlib.h: 678: if (mask & 0x00020000)
  2039  001B5A  0100               	movlb	0	; () banked
  2040  001B5C  A3A0               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  2041  001B5E  D003               	goto	l422
  2042                           
  2043                           ; BSR set to: 0
  2044                           ;inc\CANlib.h: 679: RXM0SIDLbits.EID17 = 0x01;
  2045  001B60  010F               	movlb	15	; () banked
  2046  001B62  8319               	bsf	25,1,b	;volatile
  2047  001B64  D002               	goto	l423
  2048  001B66                     l422:
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;inc\CANlib.h: 680: else
  2052                           ;inc\CANlib.h: 681: RXM0SIDLbits.EID17 = 0x00;
  2053  001B66  010F               	movlb	15	; () banked
  2054  001B68  9319               	bcf	25,1,b	;volatile
  2055  001B6A                     l423:
  2056                           
  2057                           ; BSR set to: 15
  2058                           ;inc\CANlib.h: 683: if (mask & 0x00040000)
  2059  001B6A  0100               	movlb	0	; () banked
  2060  001B6C  A5A0               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  2061  001B6E  D003               	goto	l424
  2062                           
  2063                           ; BSR set to: 0
  2064                           ;inc\CANlib.h: 684: RXM0SIDLbits.SID0 = 0x01;
  2065  001B70  010F               	movlb	15	; () banked
  2066  001B72  8B19               	bsf	25,5,b	;volatile
  2067  001B74  D002               	goto	l425
  2068  001B76                     l424:
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;inc\CANlib.h: 685: else
  2072                           ;inc\CANlib.h: 686: RXM0SIDLbits.SID0 = 0x00;
  2073  001B76  010F               	movlb	15	; () banked
  2074  001B78  9B19               	bcf	25,5,b	;volatile
  2075  001B7A                     l425:
  2076                           
  2077                           ; BSR set to: 15
  2078                           ;inc\CANlib.h: 688: if (mask & 0x00080000)
  2079  001B7A  0100               	movlb	0	; () banked
  2080  001B7C  A7A0               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  2081  001B7E  D003               	goto	l426
  2082                           
  2083                           ; BSR set to: 0
  2084                           ;inc\CANlib.h: 689: RXM0SIDLbits.SID1 = 0x01;
  2085  001B80  010F               	movlb	15	; () banked
  2086  001B82  8D19               	bsf	25,6,b	;volatile
  2087  001B84  D002               	goto	l427
  2088  001B86                     l426:
  2089                           
  2090                           ; BSR set to: 0
  2091                           ;inc\CANlib.h: 690: else
  2092                           ;inc\CANlib.h: 691: RXM0SIDLbits.SID1 = 0x00;
  2093  001B86  010F               	movlb	15	; () banked
  2094  001B88  9D19               	bcf	25,6,b	;volatile
  2095  001B8A                     l427:
  2096                           
  2097                           ; BSR set to: 15
  2098                           ;inc\CANlib.h: 693: if (mask & 0x00100000)
  2099  001B8A  0100               	movlb	0	; () banked
  2100  001B8C  A9A0               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  2101  001B8E  D003               	goto	l428
  2102                           
  2103                           ; BSR set to: 0
  2104                           ;inc\CANlib.h: 694: RXM0SIDLbits.SID2 = 0x01 ;
  2105  001B90  010F               	movlb	15	; () banked
  2106  001B92  8F19               	bsf	25,7,b	;volatile
  2107  001B94  D002               	goto	l3701
  2108  001B96                     l428:
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;inc\CANlib.h: 695: else
  2112                           ;inc\CANlib.h: 696: RXM0SIDLbits.SID2 = 0x00 ;
  2113  001B96  010F               	movlb	15	; () banked
  2114  001B98  9F19               	bcf	25,7,b	;volatile
  2115  001B9A                     l3701:
  2116                           
  2117                           ; BSR set to: 15
  2118                           ;inc\CANlib.h: 698: tamp = (mask >> 21);
  2119  001B9A  C09E  F0A3         	movff	CANSetMask@mask,??_CANSetMask
  2120  001B9E  C09F  F0A4         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2121  001BA2  C0A0  F0A5         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2122  001BA6  C0A1  F0A6         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2123  001BAA  0E16               	movlw	22
  2124  001BAC  D006               	goto	u4670
  2125  001BAE                     u4675:
  2126  001BAE  0100               	movlb	0	; () banked
  2127  001BB0  90D8               	bcf	status,0,c
  2128  001BB2  33A6               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2129  001BB4  33A5               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2130  001BB6  33A4               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2131  001BB8  33A3               	rrcf	??_CANSetMask& (0+255),f,b
  2132  001BBA                     u4670:
  2133  001BBA  2EE8               	decfsz	wreg,f,c
  2134  001BBC  D7F8               	goto	u4675
  2135  001BBE  C0A3  F0A8         	movff	??_CANSetMask,CANSetMask@tamp
  2136  001BC2  C0A4  F0A9         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2137  001BC6  C0A5  F0AA         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2138  001BCA  C0A6  F0AB         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;inc\CANlib.h: 699: tamp = tamp & 0x000000FF;
  2142  001BCE  0100               	movlb	0	; () banked
  2143  001BD0  51A8               	movf	CANSetMask@tamp& (0+255),w,b
  2144  001BD2  0100               	movlb	0	; () banked
  2145  001BD4  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  2146  001BD6  6BA9               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2147  001BD8  6BAA               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2148  001BDA  6BAB               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;inc\CANlib.h: 700: RXM0SIDH = (unsigned char) tamp;
  2152  001BDC  C0A8  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2153  001BE0                     l3707:
  2154                           
  2155                           ; BSR set to: 0
  2156                           ;inc\CANlib.h: 701: }
  2157                           ;inc\CANlib.h: 703: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  2158  001BE0  0E02               	movlw	2
  2159  001BE2  0100               	movlb	0	; () banked
  2160  001BE4  19A7               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2161  001BE6  A4D8               	btfss	status,2,c
  2162  001BE8  0012               	return	
  2163                           
  2164                           ; BSR set to: 0
  2165  001BEA  0EF7               	movlw	247
  2166  001BEC  0100               	movlb	0	; () banked
  2167  001BEE  19A2               	xorwf	CANSetMask@type& (0+255),w,b
  2168  001BF0  A4D8               	btfss	status,2,c
  2169  001BF2  0012               	return	
  2170                           
  2171                           ; BSR set to: 0
  2172                           ;inc\CANlib.h: 704: {
  2173                           ;inc\CANlib.h: 705: tamp = mask & 0x000000FF;
  2174  001BF4  0100               	movlb	0	; () banked
  2175  001BF6  519E               	movf	CANSetMask@mask& (0+255),w,b
  2176  001BF8  0100               	movlb	0	; () banked
  2177  001BFA  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  2178  001BFC  6BA9               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2179  001BFE  6BAA               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2180  001C00  6BAB               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2181                           
  2182                           ; BSR set to: 0
  2183                           ;inc\CANlib.h: 706: RXM1EIDL = (unsigned char) tamp;
  2184  001C02  C0A8  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;inc\CANlib.h: 708: tamp = mask & 0x0000FF00;
  2188  001C06  0E00               	movlw	0
  2189  001C08  0100               	movlb	0	; () banked
  2190  001C0A  159E               	andwf	CANSetMask@mask& (0+255),w,b
  2191  001C0C  0100               	movlb	0	; () banked
  2192  001C0E  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  2193  001C10  0EFF               	movlw	255
  2194  001C12  0100               	movlb	0	; () banked
  2195  001C14  159F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2196  001C16  0100               	movlb	0	; () banked
  2197  001C18  6FA9               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2198  001C1A  0E00               	movlw	0
  2199  001C1C  0100               	movlb	0	; () banked
  2200  001C1E  15A0               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2201  001C20  0100               	movlb	0	; () banked
  2202  001C22  6FAA               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2203  001C24  0E00               	movlw	0
  2204  001C26  0100               	movlb	0	; () banked
  2205  001C28  15A1               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2206  001C2A  0100               	movlb	0	; () banked
  2207  001C2C  6FAB               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2208                           
  2209                           ; BSR set to: 0
  2210                           ;inc\CANlib.h: 709: tamp = tamp >> 8;
  2211  001C2E  C0A8  F0A3         	movff	CANSetMask@tamp,??_CANSetMask
  2212  001C32  C0A9  F0A4         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2213  001C36  C0AA  F0A5         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2214  001C3A  C0AB  F0A6         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2215  001C3E  C0A4  F0A3         	movff	??_CANSetMask+1,??_CANSetMask
  2216  001C42  C0A5  F0A4         	movff	??_CANSetMask+2,??_CANSetMask+1
  2217  001C46  C0A6  F0A5         	movff	??_CANSetMask+3,??_CANSetMask+2
  2218  001C4A  0100               	movlb	0	; () banked
  2219  001C4C  6BA6               	clrf	(??_CANSetMask+3)& (0+255),b
  2220  001C4E  C0A3  F0A8         	movff	??_CANSetMask,CANSetMask@tamp
  2221  001C52  C0A4  F0A9         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2222  001C56  C0A5  F0AA         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2223  001C5A  C0A6  F0AB         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2224                           
  2225                           ; BSR set to: 0
  2226                           ;inc\CANlib.h: 710: RXM1EIDH = (unsigned char) tamp;
  2227  001C5E  C0A8  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;inc\CANlib.h: 712: if (mask & 0x00010000)
  2231  001C62  0100               	movlb	0	; () banked
  2232  001C64  A1A0               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  2233  001C66  D003               	goto	l431
  2234                           
  2235                           ; BSR set to: 0
  2236                           ;inc\CANlib.h: 713: RXM1SIDLbits.EID16 = 0x01;
  2237  001C68  010F               	movlb	15	; () banked
  2238  001C6A  811D               	bsf	29,0,b	;volatile
  2239  001C6C  D002               	goto	l432
  2240  001C6E                     l431:
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;inc\CANlib.h: 714: else
  2244                           ;inc\CANlib.h: 715: RXM1SIDLbits.EID16 = 0x00;
  2245  001C6E  010F               	movlb	15	; () banked
  2246  001C70  911D               	bcf	29,0,b	;volatile
  2247  001C72                     l432:
  2248                           
  2249                           ; BSR set to: 15
  2250                           ;inc\CANlib.h: 717: if (mask & 0x00020000)
  2251  001C72  0100               	movlb	0	; () banked
  2252  001C74  A3A0               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  2253  001C76  D003               	goto	l433
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;inc\CANlib.h: 718: RXM1SIDLbits.EID17 = 0x01;
  2257  001C78  010F               	movlb	15	; () banked
  2258  001C7A  831D               	bsf	29,1,b	;volatile
  2259  001C7C  D002               	goto	l434
  2260  001C7E                     l433:
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;inc\CANlib.h: 719: else
  2264                           ;inc\CANlib.h: 720: RXM1SIDLbits.EID17 = 0x00;
  2265  001C7E  010F               	movlb	15	; () banked
  2266  001C80  931D               	bcf	29,1,b	;volatile
  2267  001C82                     l434:
  2268                           
  2269                           ; BSR set to: 15
  2270                           ;inc\CANlib.h: 722: if (mask & 0x00040000)
  2271  001C82  0100               	movlb	0	; () banked
  2272  001C84  A5A0               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  2273  001C86  D003               	goto	l435
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;inc\CANlib.h: 723: RXM1SIDLbits.SID0 = 0x01;
  2277  001C88  010F               	movlb	15	; () banked
  2278  001C8A  8B1D               	bsf	29,5,b	;volatile
  2279  001C8C  D002               	goto	l436
  2280  001C8E                     l435:
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;inc\CANlib.h: 724: else
  2284                           ;inc\CANlib.h: 725: RXM1SIDLbits.SID0 = 0x00;
  2285  001C8E  010F               	movlb	15	; () banked
  2286  001C90  9B1D               	bcf	29,5,b	;volatile
  2287  001C92                     l436:
  2288                           
  2289                           ; BSR set to: 15
  2290                           ;inc\CANlib.h: 727: if (mask & 0x00080000)
  2291  001C92  0100               	movlb	0	; () banked
  2292  001C94  A7A0               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  2293  001C96  D003               	goto	l437
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;inc\CANlib.h: 728: RXM1SIDLbits.SID1 = 0x01;
  2297  001C98  010F               	movlb	15	; () banked
  2298  001C9A  8D1D               	bsf	29,6,b	;volatile
  2299  001C9C  D002               	goto	l438
  2300  001C9E                     l437:
  2301                           
  2302                           ; BSR set to: 0
  2303                           ;inc\CANlib.h: 729: else
  2304                           ;inc\CANlib.h: 730: RXM1SIDLbits.SID1 = 0x00;
  2305  001C9E  010F               	movlb	15	; () banked
  2306  001CA0  9D1D               	bcf	29,6,b	;volatile
  2307  001CA2                     l438:
  2308                           
  2309                           ; BSR set to: 15
  2310                           ;inc\CANlib.h: 732: if (mask & 0x00100000)
  2311  001CA2  0100               	movlb	0	; () banked
  2312  001CA4  A9A0               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  2313  001CA6  D003               	goto	l439
  2314                           
  2315                           ; BSR set to: 0
  2316                           ;inc\CANlib.h: 733: RXM1SIDLbits.SID2 = 0x01 ;
  2317  001CA8  010F               	movlb	15	; () banked
  2318  001CAA  8F1D               	bsf	29,7,b	;volatile
  2319  001CAC  D002               	goto	l3733
  2320  001CAE                     l439:
  2321                           
  2322                           ; BSR set to: 0
  2323                           ;inc\CANlib.h: 734: else
  2324                           ;inc\CANlib.h: 735: RXM1SIDLbits.SID2 = 0x00 ;
  2325  001CAE  010F               	movlb	15	; () banked
  2326  001CB0  9F1D               	bcf	29,7,b	;volatile
  2327  001CB2                     l3733:
  2328                           
  2329                           ; BSR set to: 15
  2330                           ;inc\CANlib.h: 737: tamp = (mask >> 21);
  2331  001CB2  C09E  F0A3         	movff	CANSetMask@mask,??_CANSetMask
  2332  001CB6  C09F  F0A4         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2333  001CBA  C0A0  F0A5         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2334  001CBE  C0A1  F0A6         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2335  001CC2  0E16               	movlw	22
  2336  001CC4  D006               	goto	u4750
  2337  001CC6                     u4755:
  2338  001CC6  0100               	movlb	0	; () banked
  2339  001CC8  90D8               	bcf	status,0,c
  2340  001CCA  33A6               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2341  001CCC  33A5               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2342  001CCE  33A4               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2343  001CD0  33A3               	rrcf	??_CANSetMask& (0+255),f,b
  2344  001CD2                     u4750:
  2345  001CD2  2EE8               	decfsz	wreg,f,c
  2346  001CD4  D7F8               	goto	u4755
  2347  001CD6  C0A3  F0A8         	movff	??_CANSetMask,CANSetMask@tamp
  2348  001CDA  C0A4  F0A9         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2349  001CDE  C0A5  F0AA         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2350  001CE2  C0A6  F0AB         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;inc\CANlib.h: 738: tamp = tamp & 0x000000FF;
  2354  001CE6  0100               	movlb	0	; () banked
  2355  001CE8  51A8               	movf	CANSetMask@tamp& (0+255),w,b
  2356  001CEA  0100               	movlb	0	; () banked
  2357  001CEC  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  2358  001CEE  6BA9               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2359  001CF0  6BAA               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2360  001CF2  6BAB               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;inc\CANlib.h: 739: RXM1SIDH = (unsigned char) tamp;
  2364  001CF4  C0A8  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2365  001CF8  0012               	return	
  2366  001CFA                     __end_of_CANSetMask:
  2367                           	opt stack 0
  2368                           tblptru	equ	0xFF8
  2369                           tblptrh	equ	0xFF7
  2370                           tblptrl	equ	0xFF6
  2371                           tablat	equ	0xFF5
  2372                           intcon	equ	0xFF2
  2373                           postinc0	equ	0xFEE
  2374                           wreg	equ	0xFE8
  2375                           postdec1	equ	0xFE5
  2376                           fsr1l	equ	0xFE1
  2377                           indf2	equ	0xFDF
  2378                           fsr2h	equ	0xFDA
  2379                           fsr2l	equ	0xFD9
  2380                           status	equ	0xFD8
  2381                           
  2382 ;; *************** function _CANSetFilter *****************
  2383 ;; Defined at:
  2384 ;;		line 747 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;  numBuffer       1    wreg     enum E16743
  2387 ;;  filter          4    0[BANK0 ] unsigned long 
  2388 ;;  type            1    4[BANK0 ] enum E16706
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  numBuffer       1    9[BANK0 ] enum E16743
  2391 ;;  tamp            4   10[BANK0 ] unsigned long 
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      void 
  2394 ;; Registers used:
  2395 ;;		wreg, status,2, status,0
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2401 ;;      Params:         0       5       0       0
  2402 ;;      Locals:         0       5       0       0
  2403 ;;      Temps:          0       4       0       0
  2404 ;;      Totals:         0      14       0       0
  2405 ;;Total ram usage:       14 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; Hardware stack levels required when called:    3
  2408 ;; This function calls:
  2409 ;;		Nothing
  2410 ;; This function is called by:
  2411 ;;		_CANInitialize
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           	psect	text7
  2416  0001BE                     __ptext7:
  2417                           	opt stack 0
  2418  0001BE                     _CANSetFilter:
  2419                           	opt stack 25
  2420                           
  2421                           ; BSR set to: 0
  2422                           ;incstack = 0
  2423                           ;CANSetFilter@numBuffer stored from wreg
  2424  0001BE  0100               	movlb	0	; () banked
  2425  0001C0  6FA7               	movwf	CANSetFilter@numBuffer& (0+255),b
  2426                           
  2427                           ;inc\CANlib.h: 749: unsigned long tamp;
  2428                           ;inc\CANlib.h: 751: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  2429  0001C2  0100               	movlb	0	; () banked
  2430  0001C4  51A7               	movf	CANSetFilter@numBuffer& (0+255),w,b
  2431  0001C6  0100               	movlb	0	; () banked
  2432  0001C8  A4D8               	btfss	status,2,c
  2433  0001CA  D058               	goto	l3757
  2434                           
  2435                           ; BSR set to: 0
  2436  0001CC  0100               	movlb	0	; () banked
  2437  0001CE  29A2               	incf	CANSetFilter@type& (0+255),w,b
  2438  0001D0  A4D8               	btfss	status,2,c
  2439  0001D2  D054               	goto	l3757
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;inc\CANlib.h: 752: {
  2443                           ;inc\CANlib.h: 753: RXF0SIDLbits.EXIDEN = 0x00;
  2444  0001D4  010F               	movlb	15	; () banked
  2445  0001D6  9701               	bcf	1,3,b	;volatile
  2446                           
  2447                           ; BSR set to: 15
  2448                           ;inc\CANlib.h: 755: tamp = (filter >> 3);
  2449  0001D8  C09E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  2450  0001DC  C09F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2451  0001E0  C0A0  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2452  0001E4  C0A1  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2453  0001E8  0E04               	movlw	4
  2454  0001EA  D006               	goto	u4780
  2455  0001EC                     u4785:
  2456  0001EC  0100               	movlb	0	; () banked
  2457  0001EE  90D8               	bcf	status,0,c
  2458  0001F0  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  2459  0001F2  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  2460  0001F4  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  2461  0001F6  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  2462  0001F8                     u4780:
  2463  0001F8  2EE8               	decfsz	wreg,f,c
  2464  0001FA  D7F8               	goto	u4785
  2465  0001FC  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  2466  000200  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2467  000204  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2468  000208  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;inc\CANlib.h: 756: tamp = tamp & 0x000000FF;
  2472  00020C  0100               	movlb	0	; () banked
  2473  00020E  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  2474  000210  0100               	movlb	0	; () banked
  2475  000212  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  2476  000214  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  2477  000216  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  2478  000218  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  2479                           
  2480                           ; BSR set to: 0
  2481                           ;inc\CANlib.h: 757: RXF0SIDH = (unsigned char) tamp;
  2482  00021A  C0A8  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  2483                           
  2484                           ; BSR set to: 0
  2485                           ;inc\CANlib.h: 759: tamp = filter & 0x00000007;
  2486  00021E  0E07               	movlw	7
  2487  000220  0100               	movlb	0	; () banked
  2488  000222  159E               	andwf	CANSetFilter@filter& (0+255),w,b
  2489  000224  0100               	movlb	0	; () banked
  2490  000226  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  2491  000228  0E00               	movlw	0
  2492  00022A  0100               	movlb	0	; () banked
  2493  00022C  159F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  2494  00022E  0100               	movlb	0	; () banked
  2495  000230  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  2496  000232  0E00               	movlw	0
  2497  000234  0100               	movlb	0	; () banked
  2498  000236  15A0               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  2499  000238  0100               	movlb	0	; () banked
  2500  00023A  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  2501  00023C  0E00               	movlw	0
  2502  00023E  0100               	movlb	0	; () banked
  2503  000240  15A1               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  2504  000242  0100               	movlb	0	; () banked
  2505  000244  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  2506                           
  2507                           ; BSR set to: 0
  2508                           ;inc\CANlib.h: 760: tamp = tamp << 5;
  2509  000246  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  2510  00024A  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2511  00024E  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2512  000252  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2513  000256  0E05               	movlw	5
  2514  000258                     u4795:
  2515  000258  90D8               	bcf	status,0,c
  2516  00025A  0100               	movlb	0	; () banked
  2517  00025C  37A3               	rlcf	??_CANSetFilter& (0+255),f,b
  2518  00025E  37A4               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  2519  000260  37A5               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  2520  000262  37A6               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  2521  000264  2EE8               	decfsz	wreg,f,c
  2522  000266  D7F8               	goto	u4795
  2523  000268  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  2524  00026C  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2525  000270  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2526  000274  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2527                           
  2528                           ; BSR set to: 0
  2529                           ;inc\CANlib.h: 761: RXF0SIDL = (unsigned char) tamp;
  2530  000278  C0A8  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  2531  00027C                     l3757:
  2532                           
  2533                           ; BSR set to: 0
  2534                           ;inc\CANlib.h: 762: }
  2535                           ;inc\CANlib.h: 764: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  2536  00027C  0100               	movlb	0	; () banked
  2537  00027E  05A7               	decf	CANSetFilter@numBuffer& (0+255),w,b
  2538  000280  A4D8               	btfss	status,2,c
  2539  000282  D058               	goto	l3775
  2540                           
  2541                           ; BSR set to: 0
  2542  000284  0100               	movlb	0	; () banked
  2543  000286  29A2               	incf	CANSetFilter@type& (0+255),w,b
  2544  000288  A4D8               	btfss	status,2,c
  2545  00028A  D054               	goto	l3775
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;inc\CANlib.h: 765: {
  2549                           ;inc\CANlib.h: 766: RXF1SIDLbits.EXIDEN = 0x00;
  2550  00028C  010F               	movlb	15	; () banked
  2551  00028E  9705               	bcf	5,3,b	;volatile
  2552                           
  2553                           ; BSR set to: 15
  2554                           ;inc\CANlib.h: 768: tamp = (filter >> 3);
  2555  000290  C09E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  2556  000294  C09F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2557  000298  C0A0  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2558  00029C  C0A1  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2559  0002A0  0E04               	movlw	4
  2560  0002A2  D006               	goto	u4820
  2561  0002A4                     u4825:
  2562  0002A4  0100               	movlb	0	; () banked
  2563  0002A6  90D8               	bcf	status,0,c
  2564  0002A8  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  2565  0002AA  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  2566  0002AC  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  2567  0002AE  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  2568  0002B0                     u4820:
  2569  0002B0  2EE8               	decfsz	wreg,f,c
  2570  0002B2  D7F8               	goto	u4825
  2571  0002B4  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  2572  0002B8  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2573  0002BC  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2574  0002C0  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2575                           
  2576                           ; BSR set to: 0
  2577                           ;inc\CANlib.h: 769: tamp = tamp & 0x000000FF;
  2578  0002C4  0100               	movlb	0	; () banked
  2579  0002C6  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  2580  0002C8  0100               	movlb	0	; () banked
  2581  0002CA  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  2582  0002CC  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  2583  0002CE  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  2584  0002D0  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  2585                           
  2586                           ; BSR set to: 0
  2587                           ;inc\CANlib.h: 770: RXF1SIDH = (unsigned char) tamp;
  2588  0002D2  C0A8  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;inc\CANlib.h: 772: tamp = filter & 0x00000007;
  2592  0002D6  0E07               	movlw	7
  2593  0002D8  0100               	movlb	0	; () banked
  2594  0002DA  159E               	andwf	CANSetFilter@filter& (0+255),w,b
  2595  0002DC  0100               	movlb	0	; () banked
  2596  0002DE  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  2597  0002E0  0E00               	movlw	0
  2598  0002E2  0100               	movlb	0	; () banked
  2599  0002E4  159F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  2600  0002E6  0100               	movlb	0	; () banked
  2601  0002E8  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  2602  0002EA  0E00               	movlw	0
  2603  0002EC  0100               	movlb	0	; () banked
  2604  0002EE  15A0               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  2605  0002F0  0100               	movlb	0	; () banked
  2606  0002F2  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  2607  0002F4  0E00               	movlw	0
  2608  0002F6  0100               	movlb	0	; () banked
  2609  0002F8  15A1               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  2610  0002FA  0100               	movlb	0	; () banked
  2611  0002FC  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;inc\CANlib.h: 773: tamp = tamp << 5;
  2615  0002FE  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  2616  000302  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2617  000306  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2618  00030A  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2619  00030E  0E05               	movlw	5
  2620  000310                     u4835:
  2621  000310  90D8               	bcf	status,0,c
  2622  000312  0100               	movlb	0	; () banked
  2623  000314  37A3               	rlcf	??_CANSetFilter& (0+255),f,b
  2624  000316  37A4               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  2625  000318  37A5               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  2626  00031A  37A6               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  2627  00031C  2EE8               	decfsz	wreg,f,c
  2628  00031E  D7F8               	goto	u4835
  2629  000320  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  2630  000324  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2631  000328  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2632  00032C  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2633                           
  2634                           ; BSR set to: 0
  2635                           ;inc\CANlib.h: 774: RXF1SIDL = (unsigned char) tamp;
  2636  000330  C0A8  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  2637  000334                     l3775:
  2638                           
  2639                           ; BSR set to: 0
  2640                           ;inc\CANlib.h: 775: }
  2641                           ;inc\CANlib.h: 777: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  2642  000334  0E02               	movlw	2
  2643  000336  0100               	movlb	0	; () banked
  2644  000338  19A7               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  2645  00033A  A4D8               	btfss	status,2,c
  2646  00033C  D058               	goto	l3793
  2647                           
  2648                           ; BSR set to: 0
  2649  00033E  0100               	movlb	0	; () banked
  2650  000340  29A2               	incf	CANSetFilter@type& (0+255),w,b
  2651  000342  A4D8               	btfss	status,2,c
  2652  000344  D054               	goto	l3793
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;inc\CANlib.h: 778: {
  2656                           ;inc\CANlib.h: 779: RXF2SIDLbits.EXIDEN = 0x00;
  2657  000346  010F               	movlb	15	; () banked
  2658  000348  9709               	bcf	9,3,b	;volatile
  2659                           
  2660                           ; BSR set to: 15
  2661                           ;inc\CANlib.h: 781: tamp = (filter >> 3);
  2662  00034A  C09E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  2663  00034E  C09F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2664  000352  C0A0  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2665  000356  C0A1  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2666  00035A  0E04               	movlw	4
  2667  00035C  D006               	goto	u4860
  2668  00035E                     u4865:
  2669  00035E  0100               	movlb	0	; () banked
  2670  000360  90D8               	bcf	status,0,c
  2671  000362  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  2672  000364  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  2673  000366  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  2674  000368  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  2675  00036A                     u4860:
  2676  00036A  2EE8               	decfsz	wreg,f,c
  2677  00036C  D7F8               	goto	u4865
  2678  00036E  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  2679  000372  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2680  000376  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2681  00037A  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2682                           
  2683                           ; BSR set to: 0
  2684                           ;inc\CANlib.h: 782: tamp = tamp & 0x000000FF;
  2685  00037E  0100               	movlb	0	; () banked
  2686  000380  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  2687  000382  0100               	movlb	0	; () banked
  2688  000384  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  2689  000386  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  2690  000388  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  2691  00038A  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;inc\CANlib.h: 783: RXF2SIDH = (unsigned char) tamp;
  2695  00038C  C0A8  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;inc\CANlib.h: 785: tamp = filter & 0x00000007;
  2699  000390  0E07               	movlw	7
  2700  000392  0100               	movlb	0	; () banked
  2701  000394  159E               	andwf	CANSetFilter@filter& (0+255),w,b
  2702  000396  0100               	movlb	0	; () banked
  2703  000398  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  2704  00039A  0E00               	movlw	0
  2705  00039C  0100               	movlb	0	; () banked
  2706  00039E  159F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  2707  0003A0  0100               	movlb	0	; () banked
  2708  0003A2  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  2709  0003A4  0E00               	movlw	0
  2710  0003A6  0100               	movlb	0	; () banked
  2711  0003A8  15A0               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  2712  0003AA  0100               	movlb	0	; () banked
  2713  0003AC  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  2714  0003AE  0E00               	movlw	0
  2715  0003B0  0100               	movlb	0	; () banked
  2716  0003B2  15A1               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  2717  0003B4  0100               	movlb	0	; () banked
  2718  0003B6  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;inc\CANlib.h: 786: tamp = tamp << 5;
  2722  0003B8  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  2723  0003BC  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2724  0003C0  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2725  0003C4  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2726  0003C8  0E05               	movlw	5
  2727  0003CA                     u4875:
  2728  0003CA  90D8               	bcf	status,0,c
  2729  0003CC  0100               	movlb	0	; () banked
  2730  0003CE  37A3               	rlcf	??_CANSetFilter& (0+255),f,b
  2731  0003D0  37A4               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  2732  0003D2  37A5               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  2733  0003D4  37A6               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  2734  0003D6  2EE8               	decfsz	wreg,f,c
  2735  0003D8  D7F8               	goto	u4875
  2736  0003DA  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  2737  0003DE  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2738  0003E2  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2739  0003E6  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;inc\CANlib.h: 787: RXF2SIDL = (unsigned char) tamp;
  2743  0003EA  C0A8  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  2744  0003EE                     l3793:
  2745                           
  2746                           ; BSR set to: 0
  2747                           ;inc\CANlib.h: 788: }
  2748                           ;inc\CANlib.h: 790: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  2749  0003EE  0E03               	movlw	3
  2750  0003F0  0100               	movlb	0	; () banked
  2751  0003F2  19A7               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  2752  0003F4  A4D8               	btfss	status,2,c
  2753  0003F6  D058               	goto	l3811
  2754                           
  2755                           ; BSR set to: 0
  2756  0003F8  0100               	movlb	0	; () banked
  2757  0003FA  29A2               	incf	CANSetFilter@type& (0+255),w,b
  2758  0003FC  A4D8               	btfss	status,2,c
  2759  0003FE  D054               	goto	l3811
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;inc\CANlib.h: 791: {
  2763                           ;inc\CANlib.h: 792: RXF3SIDLbits.EXIDEN = 0x00;
  2764  000400  010F               	movlb	15	; () banked
  2765  000402  970D               	bcf	13,3,b	;volatile
  2766                           
  2767                           ; BSR set to: 15
  2768                           ;inc\CANlib.h: 794: tamp = (filter >> 3);
  2769  000404  C09E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  2770  000408  C09F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2771  00040C  C0A0  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2772  000410  C0A1  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2773  000414  0E04               	movlw	4
  2774  000416  D006               	goto	u4900
  2775  000418                     u4905:
  2776  000418  0100               	movlb	0	; () banked
  2777  00041A  90D8               	bcf	status,0,c
  2778  00041C  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  2779  00041E  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  2780  000420  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  2781  000422  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  2782  000424                     u4900:
  2783  000424  2EE8               	decfsz	wreg,f,c
  2784  000426  D7F8               	goto	u4905
  2785  000428  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  2786  00042C  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2787  000430  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2788  000434  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2789                           
  2790                           ; BSR set to: 0
  2791                           ;inc\CANlib.h: 795: tamp = tamp & 0x000000FF;
  2792  000438  0100               	movlb	0	; () banked
  2793  00043A  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  2794  00043C  0100               	movlb	0	; () banked
  2795  00043E  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  2796  000440  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  2797  000442  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  2798  000444  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  2799                           
  2800                           ; BSR set to: 0
  2801                           ;inc\CANlib.h: 796: RXF3SIDH = (unsigned char) tamp;
  2802  000446  C0A8  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  2803                           
  2804                           ; BSR set to: 0
  2805                           ;inc\CANlib.h: 798: tamp = filter & 0x00000007;
  2806  00044A  0E07               	movlw	7
  2807  00044C  0100               	movlb	0	; () banked
  2808  00044E  159E               	andwf	CANSetFilter@filter& (0+255),w,b
  2809  000450  0100               	movlb	0	; () banked
  2810  000452  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  2811  000454  0E00               	movlw	0
  2812  000456  0100               	movlb	0	; () banked
  2813  000458  159F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  2814  00045A  0100               	movlb	0	; () banked
  2815  00045C  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  2816  00045E  0E00               	movlw	0
  2817  000460  0100               	movlb	0	; () banked
  2818  000462  15A0               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  2819  000464  0100               	movlb	0	; () banked
  2820  000466  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  2821  000468  0E00               	movlw	0
  2822  00046A  0100               	movlb	0	; () banked
  2823  00046C  15A1               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  2824  00046E  0100               	movlb	0	; () banked
  2825  000470  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  2826                           
  2827                           ; BSR set to: 0
  2828                           ;inc\CANlib.h: 799: tamp = tamp << 5;
  2829  000472  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  2830  000476  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2831  00047A  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2832  00047E  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2833  000482  0E05               	movlw	5
  2834  000484                     u4915:
  2835  000484  90D8               	bcf	status,0,c
  2836  000486  0100               	movlb	0	; () banked
  2837  000488  37A3               	rlcf	??_CANSetFilter& (0+255),f,b
  2838  00048A  37A4               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  2839  00048C  37A5               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  2840  00048E  37A6               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  2841  000490  2EE8               	decfsz	wreg,f,c
  2842  000492  D7F8               	goto	u4915
  2843  000494  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  2844  000498  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2845  00049C  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2846  0004A0  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2847                           
  2848                           ; BSR set to: 0
  2849                           ;inc\CANlib.h: 800: RXF3SIDL = (unsigned char) tamp;
  2850  0004A4  C0A8  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  2851  0004A8                     l3811:
  2852                           
  2853                           ; BSR set to: 0
  2854                           ;inc\CANlib.h: 801: }
  2855                           ;inc\CANlib.h: 803: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  2856  0004A8  0E04               	movlw	4
  2857  0004AA  0100               	movlb	0	; () banked
  2858  0004AC  19A7               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  2859  0004AE  A4D8               	btfss	status,2,c
  2860  0004B0  D058               	goto	l3829
  2861                           
  2862                           ; BSR set to: 0
  2863  0004B2  0100               	movlb	0	; () banked
  2864  0004B4  29A2               	incf	CANSetFilter@type& (0+255),w,b
  2865  0004B6  A4D8               	btfss	status,2,c
  2866  0004B8  D054               	goto	l3829
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;inc\CANlib.h: 804: {
  2870                           ;inc\CANlib.h: 805: RXF4SIDLbits.EXIDEN = 0x00;
  2871  0004BA  010F               	movlb	15	; () banked
  2872  0004BC  9711               	bcf	17,3,b	;volatile
  2873                           
  2874                           ; BSR set to: 15
  2875                           ;inc\CANlib.h: 807: tamp = (filter >> 3);
  2876  0004BE  C09E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  2877  0004C2  C09F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2878  0004C6  C0A0  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2879  0004CA  C0A1  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2880  0004CE  0E04               	movlw	4
  2881  0004D0  D006               	goto	u4940
  2882  0004D2                     u4945:
  2883  0004D2  0100               	movlb	0	; () banked
  2884  0004D4  90D8               	bcf	status,0,c
  2885  0004D6  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  2886  0004D8  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  2887  0004DA  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  2888  0004DC  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  2889  0004DE                     u4940:
  2890  0004DE  2EE8               	decfsz	wreg,f,c
  2891  0004E0  D7F8               	goto	u4945
  2892  0004E2  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  2893  0004E6  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2894  0004EA  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2895  0004EE  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2896                           
  2897                           ; BSR set to: 0
  2898                           ;inc\CANlib.h: 808: tamp = tamp & 0x000000FF;
  2899  0004F2  0100               	movlb	0	; () banked
  2900  0004F4  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  2901  0004F6  0100               	movlb	0	; () banked
  2902  0004F8  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  2903  0004FA  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  2904  0004FC  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  2905  0004FE  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  2906                           
  2907                           ; BSR set to: 0
  2908                           ;inc\CANlib.h: 809: RXF4SIDH = (unsigned char) tamp;
  2909  000500  C0A8  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;inc\CANlib.h: 811: tamp = filter & 0x00000007;
  2913  000504  0E07               	movlw	7
  2914  000506  0100               	movlb	0	; () banked
  2915  000508  159E               	andwf	CANSetFilter@filter& (0+255),w,b
  2916  00050A  0100               	movlb	0	; () banked
  2917  00050C  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  2918  00050E  0E00               	movlw	0
  2919  000510  0100               	movlb	0	; () banked
  2920  000512  159F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  2921  000514  0100               	movlb	0	; () banked
  2922  000516  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  2923  000518  0E00               	movlw	0
  2924  00051A  0100               	movlb	0	; () banked
  2925  00051C  15A0               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  2926  00051E  0100               	movlb	0	; () banked
  2927  000520  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  2928  000522  0E00               	movlw	0
  2929  000524  0100               	movlb	0	; () banked
  2930  000526  15A1               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  2931  000528  0100               	movlb	0	; () banked
  2932  00052A  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  2933                           
  2934                           ; BSR set to: 0
  2935                           ;inc\CANlib.h: 812: tamp = tamp << 5;
  2936  00052C  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  2937  000530  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2938  000534  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2939  000538  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2940  00053C  0E05               	movlw	5
  2941  00053E                     u4955:
  2942  00053E  90D8               	bcf	status,0,c
  2943  000540  0100               	movlb	0	; () banked
  2944  000542  37A3               	rlcf	??_CANSetFilter& (0+255),f,b
  2945  000544  37A4               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  2946  000546  37A5               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  2947  000548  37A6               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  2948  00054A  2EE8               	decfsz	wreg,f,c
  2949  00054C  D7F8               	goto	u4955
  2950  00054E  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  2951  000552  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2952  000556  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2953  00055A  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2954                           
  2955                           ; BSR set to: 0
  2956                           ;inc\CANlib.h: 813: RXF4SIDL = (unsigned char) tamp;
  2957  00055E  C0A8  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  2958  000562                     l3829:
  2959                           
  2960                           ; BSR set to: 0
  2961                           ;inc\CANlib.h: 814: }
  2962                           ;inc\CANlib.h: 816: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  2963  000562  0E05               	movlw	5
  2964  000564  0100               	movlb	0	; () banked
  2965  000566  19A7               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  2966  000568  A4D8               	btfss	status,2,c
  2967  00056A  D058               	goto	l3847
  2968                           
  2969                           ; BSR set to: 0
  2970  00056C  0100               	movlb	0	; () banked
  2971  00056E  29A2               	incf	CANSetFilter@type& (0+255),w,b
  2972  000570  A4D8               	btfss	status,2,c
  2973  000572  D054               	goto	l3847
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;inc\CANlib.h: 817: {
  2977                           ;inc\CANlib.h: 818: RXF5SIDLbits.EXIDEN = 0x00;
  2978  000574  010F               	movlb	15	; () banked
  2979  000576  9715               	bcf	21,3,b	;volatile
  2980                           
  2981                           ; BSR set to: 15
  2982                           ;inc\CANlib.h: 820: tamp = (filter >> 3);
  2983  000578  C09E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  2984  00057C  C09F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2985  000580  C0A0  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2986  000584  C0A1  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2987  000588  0E04               	movlw	4
  2988  00058A  D006               	goto	u4980
  2989  00058C                     u4985:
  2990  00058C  0100               	movlb	0	; () banked
  2991  00058E  90D8               	bcf	status,0,c
  2992  000590  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  2993  000592  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  2994  000594  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  2995  000596  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  2996  000598                     u4980:
  2997  000598  2EE8               	decfsz	wreg,f,c
  2998  00059A  D7F8               	goto	u4985
  2999  00059C  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3000  0005A0  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3001  0005A4  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3002  0005A8  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3003                           
  3004                           ; BSR set to: 0
  3005                           ;inc\CANlib.h: 821: tamp = tamp & 0x000000FF;
  3006  0005AC  0100               	movlb	0	; () banked
  3007  0005AE  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  3008  0005B0  0100               	movlb	0	; () banked
  3009  0005B2  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3010  0005B4  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3011  0005B6  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3012  0005B8  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;inc\CANlib.h: 822: RXF5SIDH = (unsigned char) tamp;
  3016  0005BA  C0A8  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  3017                           
  3018                           ; BSR set to: 0
  3019                           ;inc\CANlib.h: 824: tamp = filter & 0x00000007;
  3020  0005BE  0E07               	movlw	7
  3021  0005C0  0100               	movlb	0	; () banked
  3022  0005C2  159E               	andwf	CANSetFilter@filter& (0+255),w,b
  3023  0005C4  0100               	movlb	0	; () banked
  3024  0005C6  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3025  0005C8  0E00               	movlw	0
  3026  0005CA  0100               	movlb	0	; () banked
  3027  0005CC  159F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3028  0005CE  0100               	movlb	0	; () banked
  3029  0005D0  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3030  0005D2  0E00               	movlw	0
  3031  0005D4  0100               	movlb	0	; () banked
  3032  0005D6  15A0               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3033  0005D8  0100               	movlb	0	; () banked
  3034  0005DA  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3035  0005DC  0E00               	movlw	0
  3036  0005DE  0100               	movlb	0	; () banked
  3037  0005E0  15A1               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3038  0005E2  0100               	movlb	0	; () banked
  3039  0005E4  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;inc\CANlib.h: 825: tamp = tamp << 5;
  3043  0005E6  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  3044  0005EA  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3045  0005EE  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3046  0005F2  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3047  0005F6  0E05               	movlw	5
  3048  0005F8                     u4995:
  3049  0005F8  90D8               	bcf	status,0,c
  3050  0005FA  0100               	movlb	0	; () banked
  3051  0005FC  37A3               	rlcf	??_CANSetFilter& (0+255),f,b
  3052  0005FE  37A4               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3053  000600  37A5               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3054  000602  37A6               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3055  000604  2EE8               	decfsz	wreg,f,c
  3056  000606  D7F8               	goto	u4995
  3057  000608  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3058  00060C  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3059  000610  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3060  000614  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3061                           
  3062                           ; BSR set to: 0
  3063                           ;inc\CANlib.h: 826: RXF5SIDL = (unsigned char) tamp;
  3064  000618  C0A8  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  3065  00061C                     l3847:
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;inc\CANlib.h: 827: }
  3069                           ;inc\CANlib.h: 830: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  3070  00061C  0100               	movlb	0	; () banked
  3071  00061E  51A7               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3072  000620  0100               	movlb	0	; () banked
  3073  000622  A4D8               	btfss	status,2,c
  3074  000624  D089               	goto	l3881
  3075                           
  3076                           ; BSR set to: 0
  3077  000626  0EF7               	movlw	247
  3078  000628  0100               	movlb	0	; () banked
  3079  00062A  19A2               	xorwf	CANSetFilter@type& (0+255),w,b
  3080  00062C  A4D8               	btfss	status,2,c
  3081  00062E  D084               	goto	l3881
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;inc\CANlib.h: 831: {
  3085                           ;inc\CANlib.h: 832: RXF0SIDLbits.EXIDEN = 0x01;
  3086  000630  010F               	movlb	15	; () banked
  3087  000632  8701               	bsf	1,3,b	;volatile
  3088                           
  3089                           ; BSR set to: 15
  3090                           ;inc\CANlib.h: 834: tamp = filter & 0x000000FF;
  3091  000634  0100               	movlb	0	; () banked
  3092  000636  519E               	movf	CANSetFilter@filter& (0+255),w,b
  3093  000638  0100               	movlb	0	; () banked
  3094  00063A  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3095  00063C  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3096  00063E  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3097  000640  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;inc\CANlib.h: 835: RXF0EIDL = (unsigned char) tamp;
  3101  000642  C0A8  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  3102                           
  3103                           ; BSR set to: 0
  3104                           ;inc\CANlib.h: 837: tamp = filter & 0x0000FF00;
  3105  000646  0E00               	movlw	0
  3106  000648  0100               	movlb	0	; () banked
  3107  00064A  159E               	andwf	CANSetFilter@filter& (0+255),w,b
  3108  00064C  0100               	movlb	0	; () banked
  3109  00064E  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3110  000650  0EFF               	movlw	255
  3111  000652  0100               	movlb	0	; () banked
  3112  000654  159F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3113  000656  0100               	movlb	0	; () banked
  3114  000658  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3115  00065A  0E00               	movlw	0
  3116  00065C  0100               	movlb	0	; () banked
  3117  00065E  15A0               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3118  000660  0100               	movlb	0	; () banked
  3119  000662  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3120  000664  0E00               	movlw	0
  3121  000666  0100               	movlb	0	; () banked
  3122  000668  15A1               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3123  00066A  0100               	movlb	0	; () banked
  3124  00066C  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;inc\CANlib.h: 838: tamp = tamp >> 8;
  3128  00066E  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  3129  000672  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3130  000676  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3131  00067A  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3132  00067E  C0A4  F0A3         	movff	??_CANSetFilter+1,??_CANSetFilter
  3133  000682  C0A5  F0A4         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3134  000686  C0A6  F0A5         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3135  00068A  0100               	movlb	0	; () banked
  3136  00068C  6BA6               	clrf	(??_CANSetFilter+3)& (0+255),b
  3137  00068E  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3138  000692  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3139  000696  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3140  00069A  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;inc\CANlib.h: 839: RXF0EIDH = (unsigned char) tamp;
  3144  00069E  C0A8  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;inc\CANlib.h: 841: if (filter & 0x00010000)
  3148  0006A2  0100               	movlb	0	; () banked
  3149  0006A4  A1A0               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3150  0006A6  D003               	goto	l451
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;inc\CANlib.h: 842: RXF0SIDLbits.EID16 = 0x01;
  3154  0006A8  010F               	movlb	15	; () banked
  3155  0006AA  8101               	bsf	1,0,b	;volatile
  3156  0006AC  D002               	goto	l452
  3157  0006AE                     l451:
  3158                           
  3159                           ; BSR set to: 0
  3160                           ;inc\CANlib.h: 843: else
  3161                           ;inc\CANlib.h: 844: RXF0SIDLbits.EID16 = 0x00;
  3162  0006AE  010F               	movlb	15	; () banked
  3163  0006B0  9101               	bcf	1,0,b	;volatile
  3164  0006B2                     l452:
  3165                           
  3166                           ; BSR set to: 15
  3167                           ;inc\CANlib.h: 846: if (filter & 0x00020000)
  3168  0006B2  0100               	movlb	0	; () banked
  3169  0006B4  A3A0               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3170  0006B6  D003               	goto	l453
  3171                           
  3172                           ; BSR set to: 0
  3173                           ;inc\CANlib.h: 847: RXF0SIDLbits.EID17 = 0x01;
  3174  0006B8  010F               	movlb	15	; () banked
  3175  0006BA  8301               	bsf	1,1,b	;volatile
  3176  0006BC  D002               	goto	l454
  3177  0006BE                     l453:
  3178                           
  3179                           ; BSR set to: 0
  3180                           ;inc\CANlib.h: 848: else
  3181                           ;inc\CANlib.h: 849: RXF0SIDLbits.EID17 = 0x00;
  3182  0006BE  010F               	movlb	15	; () banked
  3183  0006C0  9301               	bcf	1,1,b	;volatile
  3184  0006C2                     l454:
  3185                           
  3186                           ; BSR set to: 15
  3187                           ;inc\CANlib.h: 851: if (filter & 0x00040000)
  3188  0006C2  0100               	movlb	0	; () banked
  3189  0006C4  A5A0               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3190  0006C6  D003               	goto	l455
  3191                           
  3192                           ; BSR set to: 0
  3193                           ;inc\CANlib.h: 852: RXF0SIDLbits.SID0 = 0x01;
  3194  0006C8  010F               	movlb	15	; () banked
  3195  0006CA  8B01               	bsf	1,5,b	;volatile
  3196  0006CC  D002               	goto	l456
  3197  0006CE                     l455:
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;inc\CANlib.h: 853: else
  3201                           ;inc\CANlib.h: 854: RXF0SIDLbits.SID0 = 0x00;
  3202  0006CE  010F               	movlb	15	; () banked
  3203  0006D0  9B01               	bcf	1,5,b	;volatile
  3204  0006D2                     l456:
  3205                           
  3206                           ; BSR set to: 15
  3207                           ;inc\CANlib.h: 856: if (filter & 0x00080000)
  3208  0006D2  0100               	movlb	0	; () banked
  3209  0006D4  A7A0               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  3210  0006D6  D003               	goto	l457
  3211                           
  3212                           ; BSR set to: 0
  3213                           ;inc\CANlib.h: 857: RXF0SIDLbits.SID1 = 0x01;
  3214  0006D8  010F               	movlb	15	; () banked
  3215  0006DA  8D01               	bsf	1,6,b	;volatile
  3216  0006DC  D002               	goto	l458
  3217  0006DE                     l457:
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;inc\CANlib.h: 858: else
  3221                           ;inc\CANlib.h: 859: RXF0SIDLbits.SID1 = 0x00;
  3222  0006DE  010F               	movlb	15	; () banked
  3223  0006E0  9D01               	bcf	1,6,b	;volatile
  3224  0006E2                     l458:
  3225                           
  3226                           ; BSR set to: 15
  3227                           ;inc\CANlib.h: 861: if (filter & 0x00100000)
  3228  0006E2  0100               	movlb	0	; () banked
  3229  0006E4  A9A0               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  3230  0006E6  D003               	goto	l459
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;inc\CANlib.h: 862: RXF0SIDLbits.SID2 = 0x01 ;
  3234  0006E8  010F               	movlb	15	; () banked
  3235  0006EA  8F01               	bsf	1,7,b	;volatile
  3236  0006EC  D002               	goto	l3875
  3237  0006EE                     l459:
  3238                           
  3239                           ; BSR set to: 0
  3240                           ;inc\CANlib.h: 863: else
  3241                           ;inc\CANlib.h: 864: RXF0SIDLbits.SID2 = 0x00 ;
  3242  0006EE  010F               	movlb	15	; () banked
  3243  0006F0  9F01               	bcf	1,7,b	;volatile
  3244  0006F2                     l3875:
  3245                           
  3246                           ; BSR set to: 15
  3247                           ;inc\CANlib.h: 866: tamp = (filter >> 21);
  3248  0006F2  C09E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  3249  0006F6  C09F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3250  0006FA  C0A0  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3251  0006FE  C0A1  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3252  000702  0E16               	movlw	22
  3253  000704  D006               	goto	u5070
  3254  000706                     u5075:
  3255  000706  0100               	movlb	0	; () banked
  3256  000708  90D8               	bcf	status,0,c
  3257  00070A  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3258  00070C  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3259  00070E  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3260  000710  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  3261  000712                     u5070:
  3262  000712  2EE8               	decfsz	wreg,f,c
  3263  000714  D7F8               	goto	u5075
  3264  000716  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3265  00071A  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3266  00071E  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3267  000722  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3268                           
  3269                           ; BSR set to: 0
  3270                           ;inc\CANlib.h: 867: tamp = tamp & 0x000000FF;
  3271  000726  0100               	movlb	0	; () banked
  3272  000728  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  3273  00072A  0100               	movlb	0	; () banked
  3274  00072C  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3275  00072E  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3276  000730  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3277  000732  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;inc\CANlib.h: 868: RXF0SIDH = (unsigned char) tamp;
  3281  000734  C0A8  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3282  000738                     l3881:
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;inc\CANlib.h: 869: }
  3286                           ;inc\CANlib.h: 871: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  3287  000738  0100               	movlb	0	; () banked
  3288  00073A  05A7               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3289  00073C  A4D8               	btfss	status,2,c
  3290  00073E  D089               	goto	l3915
  3291                           
  3292                           ; BSR set to: 0
  3293  000740  0EF7               	movlw	247
  3294  000742  0100               	movlb	0	; () banked
  3295  000744  19A2               	xorwf	CANSetFilter@type& (0+255),w,b
  3296  000746  A4D8               	btfss	status,2,c
  3297  000748  D084               	goto	l3915
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;inc\CANlib.h: 872: {
  3301                           ;inc\CANlib.h: 873: RXF1SIDLbits.EXIDEN = 0x01;
  3302  00074A  010F               	movlb	15	; () banked
  3303  00074C  8705               	bsf	5,3,b	;volatile
  3304                           
  3305                           ; BSR set to: 15
  3306                           ;inc\CANlib.h: 875: tamp = filter & 0x000000FF;
  3307  00074E  0100               	movlb	0	; () banked
  3308  000750  519E               	movf	CANSetFilter@filter& (0+255),w,b
  3309  000752  0100               	movlb	0	; () banked
  3310  000754  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3311  000756  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3312  000758  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3313  00075A  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;inc\CANlib.h: 876: RXF1EIDL = (unsigned char) tamp;
  3317  00075C  C0A8  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;inc\CANlib.h: 878: tamp = filter & 0x0000FF00;
  3321  000760  0E00               	movlw	0
  3322  000762  0100               	movlb	0	; () banked
  3323  000764  159E               	andwf	CANSetFilter@filter& (0+255),w,b
  3324  000766  0100               	movlb	0	; () banked
  3325  000768  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3326  00076A  0EFF               	movlw	255
  3327  00076C  0100               	movlb	0	; () banked
  3328  00076E  159F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3329  000770  0100               	movlb	0	; () banked
  3330  000772  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3331  000774  0E00               	movlw	0
  3332  000776  0100               	movlb	0	; () banked
  3333  000778  15A0               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3334  00077A  0100               	movlb	0	; () banked
  3335  00077C  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3336  00077E  0E00               	movlw	0
  3337  000780  0100               	movlb	0	; () banked
  3338  000782  15A1               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3339  000784  0100               	movlb	0	; () banked
  3340  000786  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;inc\CANlib.h: 879: tamp = tamp >> 8;
  3344  000788  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  3345  00078C  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3346  000790  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3347  000794  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3348  000798  C0A4  F0A3         	movff	??_CANSetFilter+1,??_CANSetFilter
  3349  00079C  C0A5  F0A4         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3350  0007A0  C0A6  F0A5         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3351  0007A4  0100               	movlb	0	; () banked
  3352  0007A6  6BA6               	clrf	(??_CANSetFilter+3)& (0+255),b
  3353  0007A8  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3354  0007AC  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3355  0007B0  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3356  0007B4  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;inc\CANlib.h: 880: RXF1EIDH = (unsigned char) tamp;
  3360  0007B8  C0A8  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  3361                           
  3362                           ; BSR set to: 0
  3363                           ;inc\CANlib.h: 882: if (filter & 0x00010000)
  3364  0007BC  0100               	movlb	0	; () banked
  3365  0007BE  A1A0               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3366  0007C0  D003               	goto	l462
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;inc\CANlib.h: 883: RXF1SIDLbits.EID16 = 0x01;
  3370  0007C2  010F               	movlb	15	; () banked
  3371  0007C4  8105               	bsf	5,0,b	;volatile
  3372  0007C6  D002               	goto	l463
  3373  0007C8                     l462:
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;inc\CANlib.h: 884: else
  3377                           ;inc\CANlib.h: 885: RXF1SIDLbits.EID16 = 0x00;
  3378  0007C8  010F               	movlb	15	; () banked
  3379  0007CA  9105               	bcf	5,0,b	;volatile
  3380  0007CC                     l463:
  3381                           
  3382                           ; BSR set to: 15
  3383                           ;inc\CANlib.h: 887: if (filter & 0x00020000)
  3384  0007CC  0100               	movlb	0	; () banked
  3385  0007CE  A3A0               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3386  0007D0  D003               	goto	l464
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;inc\CANlib.h: 888: RXF1SIDLbits.EID17 = 0x01;
  3390  0007D2  010F               	movlb	15	; () banked
  3391  0007D4  8305               	bsf	5,1,b	;volatile
  3392  0007D6  D002               	goto	l465
  3393  0007D8                     l464:
  3394                           
  3395                           ; BSR set to: 0
  3396                           ;inc\CANlib.h: 889: else
  3397                           ;inc\CANlib.h: 890: RXF1SIDLbits.EID17 = 0x00;
  3398  0007D8  010F               	movlb	15	; () banked
  3399  0007DA  9305               	bcf	5,1,b	;volatile
  3400  0007DC                     l465:
  3401                           
  3402                           ; BSR set to: 15
  3403                           ;inc\CANlib.h: 892: if (filter & 0x00040000)
  3404  0007DC  0100               	movlb	0	; () banked
  3405  0007DE  A5A0               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3406  0007E0  D003               	goto	l466
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;inc\CANlib.h: 893: RXF1SIDLbits.SID0 = 0x01;
  3410  0007E2  010F               	movlb	15	; () banked
  3411  0007E4  8B05               	bsf	5,5,b	;volatile
  3412  0007E6  D002               	goto	l467
  3413  0007E8                     l466:
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;inc\CANlib.h: 894: else
  3417                           ;inc\CANlib.h: 895: RXF1SIDLbits.SID0 = 0x00;
  3418  0007E8  010F               	movlb	15	; () banked
  3419  0007EA  9B05               	bcf	5,5,b	;volatile
  3420  0007EC                     l467:
  3421                           
  3422                           ; BSR set to: 15
  3423                           ;inc\CANlib.h: 897: if (filter & 0x00080000)
  3424  0007EC  0100               	movlb	0	; () banked
  3425  0007EE  A7A0               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  3426  0007F0  D003               	goto	l468
  3427                           
  3428                           ; BSR set to: 0
  3429                           ;inc\CANlib.h: 898: RXF1SIDLbits.SID1 = 0x01;
  3430  0007F2  010F               	movlb	15	; () banked
  3431  0007F4  8D05               	bsf	5,6,b	;volatile
  3432  0007F6  D002               	goto	l469
  3433  0007F8                     l468:
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;inc\CANlib.h: 899: else
  3437                           ;inc\CANlib.h: 900: RXF1SIDLbits.SID1 = 0x00;
  3438  0007F8  010F               	movlb	15	; () banked
  3439  0007FA  9D05               	bcf	5,6,b	;volatile
  3440  0007FC                     l469:
  3441                           
  3442                           ; BSR set to: 15
  3443                           ;inc\CANlib.h: 902: if (filter & 0x00100000)
  3444  0007FC  0100               	movlb	0	; () banked
  3445  0007FE  A9A0               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  3446  000800  D003               	goto	l470
  3447                           
  3448                           ; BSR set to: 0
  3449                           ;inc\CANlib.h: 903: RXF1SIDLbits.SID2 = 0x01 ;
  3450  000802  010F               	movlb	15	; () banked
  3451  000804  8F05               	bsf	5,7,b	;volatile
  3452  000806  D002               	goto	l3909
  3453  000808                     l470:
  3454                           
  3455                           ; BSR set to: 0
  3456                           ;inc\CANlib.h: 904: else
  3457                           ;inc\CANlib.h: 905: RXF1SIDLbits.SID2 = 0x00 ;
  3458  000808  010F               	movlb	15	; () banked
  3459  00080A  9F05               	bcf	5,7,b	;volatile
  3460  00080C                     l3909:
  3461                           
  3462                           ; BSR set to: 15
  3463                           ;inc\CANlib.h: 907: tamp = (filter >> 21);
  3464  00080C  C09E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  3465  000810  C09F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3466  000814  C0A0  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3467  000818  C0A1  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3468  00081C  0E16               	movlw	22
  3469  00081E  D006               	goto	u5150
  3470  000820                     u5155:
  3471  000820  0100               	movlb	0	; () banked
  3472  000822  90D8               	bcf	status,0,c
  3473  000824  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3474  000826  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3475  000828  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3476  00082A  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  3477  00082C                     u5150:
  3478  00082C  2EE8               	decfsz	wreg,f,c
  3479  00082E  D7F8               	goto	u5155
  3480  000830  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3481  000834  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3482  000838  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3483  00083C  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;inc\CANlib.h: 908: tamp = tamp & 0x000000FF;
  3487  000840  0100               	movlb	0	; () banked
  3488  000842  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  3489  000844  0100               	movlb	0	; () banked
  3490  000846  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3491  000848  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3492  00084A  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3493  00084C  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;inc\CANlib.h: 909: RXF1SIDH = (unsigned char) tamp;
  3497  00084E  C0A8  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3498  000852                     l3915:
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;inc\CANlib.h: 910: }
  3502                           ;inc\CANlib.h: 913: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  3503  000852  0E02               	movlw	2
  3504  000854  0100               	movlb	0	; () banked
  3505  000856  19A7               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3506  000858  A4D8               	btfss	status,2,c
  3507  00085A  D089               	goto	l3949
  3508                           
  3509                           ; BSR set to: 0
  3510  00085C  0EF7               	movlw	247
  3511  00085E  0100               	movlb	0	; () banked
  3512  000860  19A2               	xorwf	CANSetFilter@type& (0+255),w,b
  3513  000862  A4D8               	btfss	status,2,c
  3514  000864  D084               	goto	l3949
  3515                           
  3516                           ; BSR set to: 0
  3517                           ;inc\CANlib.h: 914: {
  3518                           ;inc\CANlib.h: 915: RXF2SIDLbits.EXIDEN = 0x01;
  3519  000866  010F               	movlb	15	; () banked
  3520  000868  8709               	bsf	9,3,b	;volatile
  3521                           
  3522                           ; BSR set to: 15
  3523                           ;inc\CANlib.h: 917: tamp = filter & 0x000000FF;
  3524  00086A  0100               	movlb	0	; () banked
  3525  00086C  519E               	movf	CANSetFilter@filter& (0+255),w,b
  3526  00086E  0100               	movlb	0	; () banked
  3527  000870  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3528  000872  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3529  000874  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3530  000876  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3531                           
  3532                           ; BSR set to: 0
  3533                           ;inc\CANlib.h: 918: RXF2EIDL = (unsigned char) tamp;
  3534  000878  C0A8  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;inc\CANlib.h: 920: tamp = filter & 0x0000FF00;
  3538  00087C  0E00               	movlw	0
  3539  00087E  0100               	movlb	0	; () banked
  3540  000880  159E               	andwf	CANSetFilter@filter& (0+255),w,b
  3541  000882  0100               	movlb	0	; () banked
  3542  000884  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3543  000886  0EFF               	movlw	255
  3544  000888  0100               	movlb	0	; () banked
  3545  00088A  159F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3546  00088C  0100               	movlb	0	; () banked
  3547  00088E  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3548  000890  0E00               	movlw	0
  3549  000892  0100               	movlb	0	; () banked
  3550  000894  15A0               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3551  000896  0100               	movlb	0	; () banked
  3552  000898  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3553  00089A  0E00               	movlw	0
  3554  00089C  0100               	movlb	0	; () banked
  3555  00089E  15A1               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3556  0008A0  0100               	movlb	0	; () banked
  3557  0008A2  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;inc\CANlib.h: 921: tamp = tamp >> 8;
  3561  0008A4  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  3562  0008A8  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3563  0008AC  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3564  0008B0  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3565  0008B4  C0A4  F0A3         	movff	??_CANSetFilter+1,??_CANSetFilter
  3566  0008B8  C0A5  F0A4         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3567  0008BC  C0A6  F0A5         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3568  0008C0  0100               	movlb	0	; () banked
  3569  0008C2  6BA6               	clrf	(??_CANSetFilter+3)& (0+255),b
  3570  0008C4  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3571  0008C8  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3572  0008CC  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3573  0008D0  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;inc\CANlib.h: 922: RXF2EIDH = (unsigned char) tamp;
  3577  0008D4  C0A8  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  3578                           
  3579                           ; BSR set to: 0
  3580                           ;inc\CANlib.h: 924: if (filter & 0x00010000)
  3581  0008D8  0100               	movlb	0	; () banked
  3582  0008DA  A1A0               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3583  0008DC  D003               	goto	l473
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;inc\CANlib.h: 925: RXF2SIDLbits.EID16 = 0x01;
  3587  0008DE  010F               	movlb	15	; () banked
  3588  0008E0  8109               	bsf	9,0,b	;volatile
  3589  0008E2  D002               	goto	l474
  3590  0008E4                     l473:
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;inc\CANlib.h: 926: else
  3594                           ;inc\CANlib.h: 927: RXF2SIDLbits.EID16 = 0x00;
  3595  0008E4  010F               	movlb	15	; () banked
  3596  0008E6  9109               	bcf	9,0,b	;volatile
  3597  0008E8                     l474:
  3598                           
  3599                           ; BSR set to: 15
  3600                           ;inc\CANlib.h: 929: if (filter & 0x00020000)
  3601  0008E8  0100               	movlb	0	; () banked
  3602  0008EA  A3A0               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3603  0008EC  D003               	goto	l475
  3604                           
  3605                           ; BSR set to: 0
  3606                           ;inc\CANlib.h: 930: RXF2SIDLbits.EID17 = 0x01;
  3607  0008EE  010F               	movlb	15	; () banked
  3608  0008F0  8309               	bsf	9,1,b	;volatile
  3609  0008F2  D002               	goto	l476
  3610  0008F4                     l475:
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;inc\CANlib.h: 931: else
  3614                           ;inc\CANlib.h: 932: RXF2SIDLbits.EID17 = 0x00;
  3615  0008F4  010F               	movlb	15	; () banked
  3616  0008F6  9309               	bcf	9,1,b	;volatile
  3617  0008F8                     l476:
  3618                           
  3619                           ; BSR set to: 15
  3620                           ;inc\CANlib.h: 934: if (filter & 0x00040000)
  3621  0008F8  0100               	movlb	0	; () banked
  3622  0008FA  A5A0               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3623  0008FC  D003               	goto	l477
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;inc\CANlib.h: 935: RXF2SIDLbits.SID0 = 0x01;
  3627  0008FE  010F               	movlb	15	; () banked
  3628  000900  8B09               	bsf	9,5,b	;volatile
  3629  000902  D002               	goto	l478
  3630  000904                     l477:
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;inc\CANlib.h: 936: else
  3634                           ;inc\CANlib.h: 937: RXF2SIDLbits.SID0 = 0x00;
  3635  000904  010F               	movlb	15	; () banked
  3636  000906  9B09               	bcf	9,5,b	;volatile
  3637  000908                     l478:
  3638                           
  3639                           ; BSR set to: 15
  3640                           ;inc\CANlib.h: 939: if (filter & 0x00080000)
  3641  000908  0100               	movlb	0	; () banked
  3642  00090A  A7A0               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  3643  00090C  D003               	goto	l479
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;inc\CANlib.h: 940: RXF2SIDLbits.SID1 = 0x01;
  3647  00090E  010F               	movlb	15	; () banked
  3648  000910  8D09               	bsf	9,6,b	;volatile
  3649  000912  D002               	goto	l480
  3650  000914                     l479:
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;inc\CANlib.h: 941: else
  3654                           ;inc\CANlib.h: 942: RXF2SIDLbits.SID1 = 0x00;
  3655  000914  010F               	movlb	15	; () banked
  3656  000916  9D09               	bcf	9,6,b	;volatile
  3657  000918                     l480:
  3658                           
  3659                           ; BSR set to: 15
  3660                           ;inc\CANlib.h: 944: if (filter & 0x00100000)
  3661  000918  0100               	movlb	0	; () banked
  3662  00091A  A9A0               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  3663  00091C  D003               	goto	l481
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;inc\CANlib.h: 945: RXF2SIDLbits.SID2 = 0x01 ;
  3667  00091E  010F               	movlb	15	; () banked
  3668  000920  8F09               	bsf	9,7,b	;volatile
  3669  000922  D002               	goto	l3943
  3670  000924                     l481:
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;inc\CANlib.h: 946: else
  3674                           ;inc\CANlib.h: 947: RXF2SIDLbits.SID2 = 0x00 ;
  3675  000924  010F               	movlb	15	; () banked
  3676  000926  9F09               	bcf	9,7,b	;volatile
  3677  000928                     l3943:
  3678                           
  3679                           ; BSR set to: 15
  3680                           ;inc\CANlib.h: 949: tamp = (filter >> 21);
  3681  000928  C09E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  3682  00092C  C09F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3683  000930  C0A0  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3684  000934  C0A1  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3685  000938  0E16               	movlw	22
  3686  00093A  D006               	goto	u5230
  3687  00093C                     u5235:
  3688  00093C  0100               	movlb	0	; () banked
  3689  00093E  90D8               	bcf	status,0,c
  3690  000940  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3691  000942  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3692  000944  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3693  000946  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  3694  000948                     u5230:
  3695  000948  2EE8               	decfsz	wreg,f,c
  3696  00094A  D7F8               	goto	u5235
  3697  00094C  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3698  000950  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3699  000954  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3700  000958  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;inc\CANlib.h: 950: tamp = tamp & 0x000000FF;
  3704  00095C  0100               	movlb	0	; () banked
  3705  00095E  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  3706  000960  0100               	movlb	0	; () banked
  3707  000962  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3708  000964  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3709  000966  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3710  000968  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;inc\CANlib.h: 951: RXF2SIDH = (unsigned char) tamp;
  3714  00096A  C0A8  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3715  00096E                     l3949:
  3716                           
  3717                           ; BSR set to: 0
  3718                           ;inc\CANlib.h: 952: }
  3719                           ;inc\CANlib.h: 954: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  3720  00096E  0E03               	movlw	3
  3721  000970  0100               	movlb	0	; () banked
  3722  000972  19A7               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3723  000974  A4D8               	btfss	status,2,c
  3724  000976  D089               	goto	l3983
  3725                           
  3726                           ; BSR set to: 0
  3727  000978  0EF7               	movlw	247
  3728  00097A  0100               	movlb	0	; () banked
  3729  00097C  19A2               	xorwf	CANSetFilter@type& (0+255),w,b
  3730  00097E  A4D8               	btfss	status,2,c
  3731  000980  D084               	goto	l3983
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;inc\CANlib.h: 955: {
  3735                           ;inc\CANlib.h: 956: RXF3SIDLbits.EXIDEN = 0x01;
  3736  000982  010F               	movlb	15	; () banked
  3737  000984  870D               	bsf	13,3,b	;volatile
  3738                           
  3739                           ; BSR set to: 15
  3740                           ;inc\CANlib.h: 958: tamp = filter & 0x000000FF;
  3741  000986  0100               	movlb	0	; () banked
  3742  000988  519E               	movf	CANSetFilter@filter& (0+255),w,b
  3743  00098A  0100               	movlb	0	; () banked
  3744  00098C  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3745  00098E  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3746  000990  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3747  000992  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;inc\CANlib.h: 959: RXF3EIDL = (unsigned char) tamp;
  3751  000994  C0A8  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;inc\CANlib.h: 961: tamp = filter & 0x0000FF00;
  3755  000998  0E00               	movlw	0
  3756  00099A  0100               	movlb	0	; () banked
  3757  00099C  159E               	andwf	CANSetFilter@filter& (0+255),w,b
  3758  00099E  0100               	movlb	0	; () banked
  3759  0009A0  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3760  0009A2  0EFF               	movlw	255
  3761  0009A4  0100               	movlb	0	; () banked
  3762  0009A6  159F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3763  0009A8  0100               	movlb	0	; () banked
  3764  0009AA  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3765  0009AC  0E00               	movlw	0
  3766  0009AE  0100               	movlb	0	; () banked
  3767  0009B0  15A0               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3768  0009B2  0100               	movlb	0	; () banked
  3769  0009B4  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3770  0009B6  0E00               	movlw	0
  3771  0009B8  0100               	movlb	0	; () banked
  3772  0009BA  15A1               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3773  0009BC  0100               	movlb	0	; () banked
  3774  0009BE  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;inc\CANlib.h: 962: tamp = tamp >> 8;
  3778  0009C0  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  3779  0009C4  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3780  0009C8  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3781  0009CC  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3782  0009D0  C0A4  F0A3         	movff	??_CANSetFilter+1,??_CANSetFilter
  3783  0009D4  C0A5  F0A4         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3784  0009D8  C0A6  F0A5         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3785  0009DC  0100               	movlb	0	; () banked
  3786  0009DE  6BA6               	clrf	(??_CANSetFilter+3)& (0+255),b
  3787  0009E0  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3788  0009E4  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3789  0009E8  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3790  0009EC  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;inc\CANlib.h: 963: RXF3EIDH = (unsigned char) tamp;
  3794  0009F0  C0A8  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;inc\CANlib.h: 965: if (filter & 0x00010000)
  3798  0009F4  0100               	movlb	0	; () banked
  3799  0009F6  A1A0               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3800  0009F8  D003               	goto	l484
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;inc\CANlib.h: 966: RXF3SIDLbits.EID16 = 0x01;
  3804  0009FA  010F               	movlb	15	; () banked
  3805  0009FC  810D               	bsf	13,0,b	;volatile
  3806  0009FE  D002               	goto	l485
  3807  000A00                     l484:
  3808                           
  3809                           ; BSR set to: 0
  3810                           ;inc\CANlib.h: 967: else
  3811                           ;inc\CANlib.h: 968: RXF3SIDLbits.EID16 = 0x00;
  3812  000A00  010F               	movlb	15	; () banked
  3813  000A02  910D               	bcf	13,0,b	;volatile
  3814  000A04                     l485:
  3815                           
  3816                           ; BSR set to: 15
  3817                           ;inc\CANlib.h: 970: if (filter & 0x00020000)
  3818  000A04  0100               	movlb	0	; () banked
  3819  000A06  A3A0               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3820  000A08  D003               	goto	l486
  3821                           
  3822                           ; BSR set to: 0
  3823                           ;inc\CANlib.h: 971: RXF3SIDLbits.EID17 = 0x01;
  3824  000A0A  010F               	movlb	15	; () banked
  3825  000A0C  830D               	bsf	13,1,b	;volatile
  3826  000A0E  D002               	goto	l487
  3827  000A10                     l486:
  3828                           
  3829                           ; BSR set to: 0
  3830                           ;inc\CANlib.h: 972: else
  3831                           ;inc\CANlib.h: 973: RXF3SIDLbits.EID17 = 0x00;
  3832  000A10  010F               	movlb	15	; () banked
  3833  000A12  930D               	bcf	13,1,b	;volatile
  3834  000A14                     l487:
  3835                           
  3836                           ; BSR set to: 15
  3837                           ;inc\CANlib.h: 975: if (filter & 0x00040000)
  3838  000A14  0100               	movlb	0	; () banked
  3839  000A16  A5A0               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3840  000A18  D003               	goto	l488
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;inc\CANlib.h: 976: RXF3SIDLbits.SID0 = 0x01;
  3844  000A1A  010F               	movlb	15	; () banked
  3845  000A1C  8B0D               	bsf	13,5,b	;volatile
  3846  000A1E  D002               	goto	l489
  3847  000A20                     l488:
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;inc\CANlib.h: 977: else
  3851                           ;inc\CANlib.h: 978: RXF3SIDLbits.SID0 = 0x00;
  3852  000A20  010F               	movlb	15	; () banked
  3853  000A22  9B0D               	bcf	13,5,b	;volatile
  3854  000A24                     l489:
  3855                           
  3856                           ; BSR set to: 15
  3857                           ;inc\CANlib.h: 980: if (filter & 0x00080000)
  3858  000A24  0100               	movlb	0	; () banked
  3859  000A26  A7A0               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  3860  000A28  D003               	goto	l490
  3861                           
  3862                           ; BSR set to: 0
  3863                           ;inc\CANlib.h: 981: RXF3SIDLbits.SID1 = 0x01;
  3864  000A2A  010F               	movlb	15	; () banked
  3865  000A2C  8D0D               	bsf	13,6,b	;volatile
  3866  000A2E  D002               	goto	l491
  3867  000A30                     l490:
  3868                           
  3869                           ; BSR set to: 0
  3870                           ;inc\CANlib.h: 982: else
  3871                           ;inc\CANlib.h: 983: RXF3SIDLbits.SID1 = 0x00;
  3872  000A30  010F               	movlb	15	; () banked
  3873  000A32  9D0D               	bcf	13,6,b	;volatile
  3874  000A34                     l491:
  3875                           
  3876                           ; BSR set to: 15
  3877                           ;inc\CANlib.h: 985: if (filter & 0x00100000)
  3878  000A34  0100               	movlb	0	; () banked
  3879  000A36  A9A0               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  3880  000A38  D003               	goto	l492
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;inc\CANlib.h: 986: RXF3SIDLbits.SID2 = 0x01 ;
  3884  000A3A  010F               	movlb	15	; () banked
  3885  000A3C  8F0D               	bsf	13,7,b	;volatile
  3886  000A3E  D002               	goto	l3977
  3887  000A40                     l492:
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;inc\CANlib.h: 987: else
  3891                           ;inc\CANlib.h: 988: RXF3SIDLbits.SID2 = 0x00 ;
  3892  000A40  010F               	movlb	15	; () banked
  3893  000A42  9F0D               	bcf	13,7,b	;volatile
  3894  000A44                     l3977:
  3895                           
  3896                           ; BSR set to: 15
  3897                           ;inc\CANlib.h: 990: tamp = (filter >> 21);
  3898  000A44  C09E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  3899  000A48  C09F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3900  000A4C  C0A0  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3901  000A50  C0A1  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3902  000A54  0E16               	movlw	22
  3903  000A56  D006               	goto	u5310
  3904  000A58                     u5315:
  3905  000A58  0100               	movlb	0	; () banked
  3906  000A5A  90D8               	bcf	status,0,c
  3907  000A5C  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3908  000A5E  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3909  000A60  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3910  000A62  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  3911  000A64                     u5310:
  3912  000A64  2EE8               	decfsz	wreg,f,c
  3913  000A66  D7F8               	goto	u5315
  3914  000A68  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3915  000A6C  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3916  000A70  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3917  000A74  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;inc\CANlib.h: 991: tamp = tamp & 0x000000FF;
  3921  000A78  0100               	movlb	0	; () banked
  3922  000A7A  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  3923  000A7C  0100               	movlb	0	; () banked
  3924  000A7E  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3925  000A80  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3926  000A82  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3927  000A84  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;inc\CANlib.h: 992: RXF3SIDH = (unsigned char) tamp;
  3931  000A86  C0A8  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  3932  000A8A                     l3983:
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;inc\CANlib.h: 993: }
  3936                           ;inc\CANlib.h: 995: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  3937  000A8A  0E04               	movlw	4
  3938  000A8C  0100               	movlb	0	; () banked
  3939  000A8E  19A7               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3940  000A90  A4D8               	btfss	status,2,c
  3941  000A92  D089               	goto	l4017
  3942                           
  3943                           ; BSR set to: 0
  3944  000A94  0EF7               	movlw	247
  3945  000A96  0100               	movlb	0	; () banked
  3946  000A98  19A2               	xorwf	CANSetFilter@type& (0+255),w,b
  3947  000A9A  A4D8               	btfss	status,2,c
  3948  000A9C  D084               	goto	l4017
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;inc\CANlib.h: 996: {
  3952                           ;inc\CANlib.h: 997: RXF4SIDLbits.EXIDEN = 0x01;
  3953  000A9E  010F               	movlb	15	; () banked
  3954  000AA0  8711               	bsf	17,3,b	;volatile
  3955                           
  3956                           ; BSR set to: 15
  3957                           ;inc\CANlib.h: 999: tamp = filter & 0x000000FF;
  3958  000AA2  0100               	movlb	0	; () banked
  3959  000AA4  519E               	movf	CANSetFilter@filter& (0+255),w,b
  3960  000AA6  0100               	movlb	0	; () banked
  3961  000AA8  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3962  000AAA  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3963  000AAC  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3964  000AAE  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;inc\CANlib.h: 1000: RXF4EIDL = (unsigned char) tamp;
  3968  000AB0  C0A8  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;inc\CANlib.h: 1002: tamp = filter & 0x0000FF00;
  3972  000AB4  0E00               	movlw	0
  3973  000AB6  0100               	movlb	0	; () banked
  3974  000AB8  159E               	andwf	CANSetFilter@filter& (0+255),w,b
  3975  000ABA  0100               	movlb	0	; () banked
  3976  000ABC  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3977  000ABE  0EFF               	movlw	255
  3978  000AC0  0100               	movlb	0	; () banked
  3979  000AC2  159F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3980  000AC4  0100               	movlb	0	; () banked
  3981  000AC6  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3982  000AC8  0E00               	movlw	0
  3983  000ACA  0100               	movlb	0	; () banked
  3984  000ACC  15A0               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3985  000ACE  0100               	movlb	0	; () banked
  3986  000AD0  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3987  000AD2  0E00               	movlw	0
  3988  000AD4  0100               	movlb	0	; () banked
  3989  000AD6  15A1               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3990  000AD8  0100               	movlb	0	; () banked
  3991  000ADA  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;inc\CANlib.h: 1003: tamp = tamp >> 8;
  3995  000ADC  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  3996  000AE0  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3997  000AE4  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3998  000AE8  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3999  000AEC  C0A4  F0A3         	movff	??_CANSetFilter+1,??_CANSetFilter
  4000  000AF0  C0A5  F0A4         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4001  000AF4  C0A6  F0A5         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4002  000AF8  0100               	movlb	0	; () banked
  4003  000AFA  6BA6               	clrf	(??_CANSetFilter+3)& (0+255),b
  4004  000AFC  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  4005  000B00  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4006  000B04  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4007  000B08  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;inc\CANlib.h: 1004: RXF4EIDH = (unsigned char) tamp;
  4011  000B0C  C0A8  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  4012                           
  4013                           ; BSR set to: 0
  4014                           ;inc\CANlib.h: 1006: if (filter & 0x00010000)
  4015  000B10  0100               	movlb	0	; () banked
  4016  000B12  A1A0               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4017  000B14  D003               	goto	l495
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;inc\CANlib.h: 1007: RXF4SIDLbits.EID16 = 0x01;
  4021  000B16  010F               	movlb	15	; () banked
  4022  000B18  8111               	bsf	17,0,b	;volatile
  4023  000B1A  D002               	goto	l496
  4024  000B1C                     l495:
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;inc\CANlib.h: 1008: else
  4028                           ;inc\CANlib.h: 1009: RXF4SIDLbits.EID16 = 0x00;
  4029  000B1C  010F               	movlb	15	; () banked
  4030  000B1E  9111               	bcf	17,0,b	;volatile
  4031  000B20                     l496:
  4032                           
  4033                           ; BSR set to: 15
  4034                           ;inc\CANlib.h: 1011: if (filter & 0x00020000)
  4035  000B20  0100               	movlb	0	; () banked
  4036  000B22  A3A0               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4037  000B24  D003               	goto	l497
  4038                           
  4039                           ; BSR set to: 0
  4040                           ;inc\CANlib.h: 1012: RXF4SIDLbits.EID17 = 0x01;
  4041  000B26  010F               	movlb	15	; () banked
  4042  000B28  8311               	bsf	17,1,b	;volatile
  4043  000B2A  D002               	goto	l498
  4044  000B2C                     l497:
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;inc\CANlib.h: 1013: else
  4048                           ;inc\CANlib.h: 1014: RXF4SIDLbits.EID17 = 0x00;
  4049  000B2C  010F               	movlb	15	; () banked
  4050  000B2E  9311               	bcf	17,1,b	;volatile
  4051  000B30                     l498:
  4052                           
  4053                           ; BSR set to: 15
  4054                           ;inc\CANlib.h: 1016: if (filter & 0x00040000)
  4055  000B30  0100               	movlb	0	; () banked
  4056  000B32  A5A0               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4057  000B34  D003               	goto	l499
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;inc\CANlib.h: 1017: RXF4SIDLbits.SID0 = 0x01;
  4061  000B36  010F               	movlb	15	; () banked
  4062  000B38  8B11               	bsf	17,5,b	;volatile
  4063  000B3A  D002               	goto	l500
  4064  000B3C                     l499:
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;inc\CANlib.h: 1018: else
  4068                           ;inc\CANlib.h: 1019: RXF4SIDLbits.SID0 = 0x00;
  4069  000B3C  010F               	movlb	15	; () banked
  4070  000B3E  9B11               	bcf	17,5,b	;volatile
  4071  000B40                     l500:
  4072                           
  4073                           ; BSR set to: 15
  4074                           ;inc\CANlib.h: 1021: if (filter & 0x00080000)
  4075  000B40  0100               	movlb	0	; () banked
  4076  000B42  A7A0               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4077  000B44  D003               	goto	l501
  4078                           
  4079                           ; BSR set to: 0
  4080                           ;inc\CANlib.h: 1022: RXF4SIDLbits.SID1 = 0x01;
  4081  000B46  010F               	movlb	15	; () banked
  4082  000B48  8D11               	bsf	17,6,b	;volatile
  4083  000B4A  D002               	goto	l502
  4084  000B4C                     l501:
  4085                           
  4086                           ; BSR set to: 0
  4087                           ;inc\CANlib.h: 1023: else
  4088                           ;inc\CANlib.h: 1024: RXF4SIDLbits.SID1 = 0x00;
  4089  000B4C  010F               	movlb	15	; () banked
  4090  000B4E  9D11               	bcf	17,6,b	;volatile
  4091  000B50                     l502:
  4092                           
  4093                           ; BSR set to: 15
  4094                           ;inc\CANlib.h: 1026: if (filter & 0x00100000)
  4095  000B50  0100               	movlb	0	; () banked
  4096  000B52  A9A0               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4097  000B54  D003               	goto	l503
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;inc\CANlib.h: 1027: RXF4SIDLbits.SID2 = 0x01 ;
  4101  000B56  010F               	movlb	15	; () banked
  4102  000B58  8F11               	bsf	17,7,b	;volatile
  4103  000B5A  D002               	goto	l4011
  4104  000B5C                     l503:
  4105                           
  4106                           ; BSR set to: 0
  4107                           ;inc\CANlib.h: 1028: else
  4108                           ;inc\CANlib.h: 1029: RXF4SIDLbits.SID2 = 0x00 ;
  4109  000B5C  010F               	movlb	15	; () banked
  4110  000B5E  9F11               	bcf	17,7,b	;volatile
  4111  000B60                     l4011:
  4112                           
  4113                           ; BSR set to: 15
  4114                           ;inc\CANlib.h: 1031: tamp = (filter >> 21);
  4115  000B60  C09E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  4116  000B64  C09F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4117  000B68  C0A0  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4118  000B6C  C0A1  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4119  000B70  0E16               	movlw	22
  4120  000B72  D006               	goto	u5390
  4121  000B74                     u5395:
  4122  000B74  0100               	movlb	0	; () banked
  4123  000B76  90D8               	bcf	status,0,c
  4124  000B78  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4125  000B7A  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4126  000B7C  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4127  000B7E  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  4128  000B80                     u5390:
  4129  000B80  2EE8               	decfsz	wreg,f,c
  4130  000B82  D7F8               	goto	u5395
  4131  000B84  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  4132  000B88  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4133  000B8C  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4134  000B90  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;inc\CANlib.h: 1032: tamp = tamp & 0x000000FF;
  4138  000B94  0100               	movlb	0	; () banked
  4139  000B96  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  4140  000B98  0100               	movlb	0	; () banked
  4141  000B9A  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4142  000B9C  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4143  000B9E  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4144  000BA0  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;inc\CANlib.h: 1033: RXF4SIDH = (unsigned char) tamp;
  4148  000BA2  C0A8  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4149  000BA6                     l4017:
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;inc\CANlib.h: 1034: }
  4153                           ;inc\CANlib.h: 1036: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  4154  000BA6  0E05               	movlw	5
  4155  000BA8  0100               	movlb	0	; () banked
  4156  000BAA  19A7               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4157  000BAC  A4D8               	btfss	status,2,c
  4158  000BAE  0012               	return	
  4159                           
  4160                           ; BSR set to: 0
  4161  000BB0  0EF7               	movlw	247
  4162  000BB2  0100               	movlb	0	; () banked
  4163  000BB4  19A2               	xorwf	CANSetFilter@type& (0+255),w,b
  4164  000BB6  A4D8               	btfss	status,2,c
  4165  000BB8  0012               	return	
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;inc\CANlib.h: 1037: {
  4169                           ;inc\CANlib.h: 1038: RXF5SIDLbits.EXIDEN = 0x01;
  4170  000BBA  010F               	movlb	15	; () banked
  4171  000BBC  8715               	bsf	21,3,b	;volatile
  4172                           
  4173                           ; BSR set to: 15
  4174                           ;inc\CANlib.h: 1040: tamp = filter & 0x000000FF;
  4175  000BBE  0100               	movlb	0	; () banked
  4176  000BC0  519E               	movf	CANSetFilter@filter& (0+255),w,b
  4177  000BC2  0100               	movlb	0	; () banked
  4178  000BC4  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4179  000BC6  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4180  000BC8  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4181  000BCA  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4182                           
  4183                           ; BSR set to: 0
  4184                           ;inc\CANlib.h: 1041: RXF5EIDL = (unsigned char) tamp;
  4185  000BCC  C0A8  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;inc\CANlib.h: 1043: tamp = filter & 0x0000FF00;
  4189  000BD0  0E00               	movlw	0
  4190  000BD2  0100               	movlb	0	; () banked
  4191  000BD4  159E               	andwf	CANSetFilter@filter& (0+255),w,b
  4192  000BD6  0100               	movlb	0	; () banked
  4193  000BD8  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4194  000BDA  0EFF               	movlw	255
  4195  000BDC  0100               	movlb	0	; () banked
  4196  000BDE  159F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4197  000BE0  0100               	movlb	0	; () banked
  4198  000BE2  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4199  000BE4  0E00               	movlw	0
  4200  000BE6  0100               	movlb	0	; () banked
  4201  000BE8  15A0               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4202  000BEA  0100               	movlb	0	; () banked
  4203  000BEC  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4204  000BEE  0E00               	movlw	0
  4205  000BF0  0100               	movlb	0	; () banked
  4206  000BF2  15A1               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4207  000BF4  0100               	movlb	0	; () banked
  4208  000BF6  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4209                           
  4210                           ; BSR set to: 0
  4211                           ;inc\CANlib.h: 1044: tamp = tamp >> 8;
  4212  000BF8  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  4213  000BFC  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4214  000C00  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4215  000C04  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4216  000C08  C0A4  F0A3         	movff	??_CANSetFilter+1,??_CANSetFilter
  4217  000C0C  C0A5  F0A4         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4218  000C10  C0A6  F0A5         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4219  000C14  0100               	movlb	0	; () banked
  4220  000C16  6BA6               	clrf	(??_CANSetFilter+3)& (0+255),b
  4221  000C18  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  4222  000C1C  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4223  000C20  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4224  000C24  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;inc\CANlib.h: 1045: RXF5EIDH = (unsigned char) tamp;
  4228  000C28  C0A8  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;inc\CANlib.h: 1047: if (filter & 0x00010000)
  4232  000C2C  0100               	movlb	0	; () banked
  4233  000C2E  A1A0               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4234  000C30  D003               	goto	l506
  4235                           
  4236                           ; BSR set to: 0
  4237                           ;inc\CANlib.h: 1048: RXF5SIDLbits.EID16 = 0x01;
  4238  000C32  010F               	movlb	15	; () banked
  4239  000C34  8115               	bsf	21,0,b	;volatile
  4240  000C36  D002               	goto	l507
  4241  000C38                     l506:
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;inc\CANlib.h: 1049: else
  4245                           ;inc\CANlib.h: 1050: RXF5SIDLbits.EID16 = 0x00;
  4246  000C38  010F               	movlb	15	; () banked
  4247  000C3A  9115               	bcf	21,0,b	;volatile
  4248  000C3C                     l507:
  4249                           
  4250                           ; BSR set to: 15
  4251                           ;inc\CANlib.h: 1052: if (filter & 0x00020000)
  4252  000C3C  0100               	movlb	0	; () banked
  4253  000C3E  A3A0               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4254  000C40  D003               	goto	l508
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;inc\CANlib.h: 1053: RXF5SIDLbits.EID17 = 0x01;
  4258  000C42  010F               	movlb	15	; () banked
  4259  000C44  8315               	bsf	21,1,b	;volatile
  4260  000C46  D002               	goto	l509
  4261  000C48                     l508:
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;inc\CANlib.h: 1054: else
  4265                           ;inc\CANlib.h: 1055: RXF5SIDLbits.EID17 = 0x00;
  4266  000C48  010F               	movlb	15	; () banked
  4267  000C4A  9315               	bcf	21,1,b	;volatile
  4268  000C4C                     l509:
  4269                           
  4270                           ; BSR set to: 15
  4271                           ;inc\CANlib.h: 1057: if (filter & 0x00040000)
  4272  000C4C  0100               	movlb	0	; () banked
  4273  000C4E  A5A0               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4274  000C50  D003               	goto	l510
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;inc\CANlib.h: 1058: RXF5SIDLbits.SID0 = 0x01;
  4278  000C52  010F               	movlb	15	; () banked
  4279  000C54  8B15               	bsf	21,5,b	;volatile
  4280  000C56  D002               	goto	l511
  4281  000C58                     l510:
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;inc\CANlib.h: 1059: else
  4285                           ;inc\CANlib.h: 1060: RXF5SIDLbits.SID0 = 0x00;
  4286  000C58  010F               	movlb	15	; () banked
  4287  000C5A  9B15               	bcf	21,5,b	;volatile
  4288  000C5C                     l511:
  4289                           
  4290                           ; BSR set to: 15
  4291                           ;inc\CANlib.h: 1062: if (filter & 0x00080000)
  4292  000C5C  0100               	movlb	0	; () banked
  4293  000C5E  A7A0               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4294  000C60  D003               	goto	l512
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;inc\CANlib.h: 1063: RXF5SIDLbits.SID1 = 0x01;
  4298  000C62  010F               	movlb	15	; () banked
  4299  000C64  8D15               	bsf	21,6,b	;volatile
  4300  000C66  D002               	goto	l513
  4301  000C68                     l512:
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;inc\CANlib.h: 1064: else
  4305                           ;inc\CANlib.h: 1065: RXF5SIDLbits.SID1 = 0x00;
  4306  000C68  010F               	movlb	15	; () banked
  4307  000C6A  9D15               	bcf	21,6,b	;volatile
  4308  000C6C                     l513:
  4309                           
  4310                           ; BSR set to: 15
  4311                           ;inc\CANlib.h: 1067: if (filter & 0x00100000)
  4312  000C6C  0100               	movlb	0	; () banked
  4313  000C6E  A9A0               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4314  000C70  D003               	goto	l514
  4315                           
  4316                           ; BSR set to: 0
  4317                           ;inc\CANlib.h: 1068: RXF5SIDLbits.SID2 = 0x01 ;
  4318  000C72  010F               	movlb	15	; () banked
  4319  000C74  8F15               	bsf	21,7,b	;volatile
  4320  000C76  D002               	goto	l4045
  4321  000C78                     l514:
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;inc\CANlib.h: 1069: else
  4325                           ;inc\CANlib.h: 1070: RXF5SIDLbits.SID2 = 0x00 ;
  4326  000C78  010F               	movlb	15	; () banked
  4327  000C7A  9F15               	bcf	21,7,b	;volatile
  4328  000C7C                     l4045:
  4329                           
  4330                           ; BSR set to: 15
  4331                           ;inc\CANlib.h: 1072: tamp = (filter >> 21);
  4332  000C7C  C09E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  4333  000C80  C09F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4334  000C84  C0A0  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4335  000C88  C0A1  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4336  000C8C  0E16               	movlw	22
  4337  000C8E  D006               	goto	u5470
  4338  000C90                     u5475:
  4339  000C90  0100               	movlb	0	; () banked
  4340  000C92  90D8               	bcf	status,0,c
  4341  000C94  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4342  000C96  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4343  000C98  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4344  000C9A  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  4345  000C9C                     u5470:
  4346  000C9C  2EE8               	decfsz	wreg,f,c
  4347  000C9E  D7F8               	goto	u5475
  4348  000CA0  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  4349  000CA4  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4350  000CA8  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4351  000CAC  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;inc\CANlib.h: 1073: tamp = tamp & 0x000000FF;
  4355  000CB0  0100               	movlb	0	; () banked
  4356  000CB2  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  4357  000CB4  0100               	movlb	0	; () banked
  4358  000CB6  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4359  000CB8  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4360  000CBA  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4361  000CBC  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;inc\CANlib.h: 1074: RXF5SIDH = (unsigned char) tamp;
  4365  000CBE  C0A8  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4366  000CC2  0012               	return	
  4367  000CC4                     __end_of_CANSetFilter:
  4368                           	opt stack 0
  4369                           tblptru	equ	0xFF8
  4370                           tblptrh	equ	0xFF7
  4371                           tblptrl	equ	0xFF6
  4372                           tablat	equ	0xFF5
  4373                           intcon	equ	0xFF2
  4374                           postinc0	equ	0xFEE
  4375                           wreg	equ	0xFE8
  4376                           postdec1	equ	0xFE5
  4377                           fsr1l	equ	0xFE1
  4378                           indf2	equ	0xFDF
  4379                           fsr2h	equ	0xFDA
  4380                           fsr2l	equ	0xFD9
  4381                           status	equ	0xFD8
  4382                           
  4383 ;; *************** function _CANOperationMode *****************
  4384 ;; Defined at:
  4385 ;;		line 206 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;  mode            1    wreg     enum E16700
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;  mode            1   31[COMRAM] enum E16700
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  1    wreg      void 
  4392 ;; Registers used:
  4393 ;;		wreg, status,2, status,0
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4399 ;;      Params:         0       0       0       0
  4400 ;;      Locals:         1       0       0       0
  4401 ;;      Temps:          0       0       0       0
  4402 ;;      Totals:         1       0       0       0
  4403 ;;Total ram usage:        1 bytes
  4404 ;; Hardware stack levels used:    1
  4405 ;; Hardware stack levels required when called:    3
  4406 ;; This function calls:
  4407 ;;		Nothing
  4408 ;; This function is called by:
  4409 ;;		_CANInitialize
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           	psect	text8
  4414  00238E                     __ptext8:
  4415                           	opt stack 0
  4416  00238E                     _CANOperationMode:
  4417                           	opt stack 25
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;incstack = 0
  4421                           ;CANOperationMode@mode stored from wreg
  4422  00238E  6E20               	movwf	CANOperationMode@mode,c
  4423                           
  4424                           ;inc\CANlib.h: 208: CANCON = mode;
  4425  002390  C020  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  4426  002394                     l3641:
  4427  002394  506E               	movf	3950,w,c	;volatile
  4428  002396  0BE0               	andlw	224
  4429  002398  1820               	xorwf	CANOperationMode@mode,w,c
  4430  00239A  B4D8               	btfsc	status,2,c
  4431  00239C  0012               	return	
  4432  00239E  D7FA               	goto	l3641
  4433  0023A0                     __end_of_CANOperationMode:
  4434                           	opt stack 0
  4435                           tblptru	equ	0xFF8
  4436                           tblptrh	equ	0xFF7
  4437                           tblptrl	equ	0xFF6
  4438                           tablat	equ	0xFF5
  4439                           intcon	equ	0xFF2
  4440                           postinc0	equ	0xFEE
  4441                           wreg	equ	0xFE8
  4442                           postdec1	equ	0xFE5
  4443                           fsr1l	equ	0xFE1
  4444                           indf2	equ	0xFDF
  4445                           fsr2h	equ	0xFDA
  4446                           fsr2l	equ	0xFD9
  4447                           status	equ	0xFD8
  4448                           
  4449 ;; *************** function _can_interpreter *****************
  4450 ;; Defined at:
  4451 ;;		line 132 in file "CanToSerial.c"
  4452 ;; Parameters:    Size  Location     Type
  4453 ;;		None
  4454 ;; Auto vars:     Size  Location     Type
  4455 ;;		None
  4456 ;; Return value:  Size  Location     Type
  4457 ;;                  1    wreg      void 
  4458 ;; Registers used:
  4459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4465 ;;      Params:         0       0       0       0
  4466 ;;      Locals:         0       0       0       0
  4467 ;;      Temps:          0       8       0       0
  4468 ;;      Totals:         0       8       0       0
  4469 ;;Total ram usage:        8 bytes
  4470 ;; Hardware stack levels used:    1
  4471 ;; Hardware stack levels required when called:    4
  4472 ;; This function calls:
  4473 ;;		_CANisTxReady
  4474 ;;		_CANsendMessage
  4475 ;; This function is called by:
  4476 ;;		_main
  4477 ;; This function uses a non-reentrant model
  4478 ;;
  4479                           
  4480                           	psect	text9
  4481  001CFA                     __ptext9:
  4482                           	opt stack 0
  4483  001CFA                     _can_interpreter:
  4484                           	opt stack 26
  4485                           
  4486                           ;CanToSerial.c: 133: if (id == 0b00000000000000000000000000010) {
  4487                           
  4488                           ;incstack = 0
  4489  001CFA  0E02               	movlw	2
  4490  001CFC  1822               	xorwf	_id,w,c
  4491  001CFE  1023               	iorwf	_id+1,w,c
  4492  001D00  1024               	iorwf	_id+2,w,c
  4493  001D02  1025               	iorwf	_id+3,w,c
  4494  001D04  A4D8               	btfss	status,2,c
  4495  001D06  D092               	goto	l4453
  4496                           
  4497                           ;CanToSerial.c: 134: if (RTR_Flag == 1) {
  4498  001D08  A03F               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
  4499  001D0A  D02A               	goto	l4437
  4500                           
  4501                           ;CanToSerial.c: 135: previousTimeCounter = timeCounter;
  4502  001D0C  C02A  F026         	movff	_timeCounter,_previousTimeCounter	;volatile
  4503  001D10  C02B  F027         	movff	_timeCounter+1,_previousTimeCounter+1	;volatile
  4504  001D14  C02C  F028         	movff	_timeCounter+2,_previousTimeCounter+2	;volatile
  4505  001D18  C02D  F029         	movff	_timeCounter+3,_previousTimeCounter+3	;volatile
  4506                           
  4507                           ;CanToSerial.c: 136: data[0] = 0x03;
  4508  001D1C  0E03               	movlw	3
  4509  001D1E  0100               	movlb	0	; () banked
  4510  001D20  6F7F               	movwf	_data& (0+255),b
  4511  001D22                     l4427:
  4512  001D22  EC95  F011         	call	_CANisTxReady	;wreg free
  4513  001D26  06E8               	decf	wreg,f,c
  4514  001D28  A4D8               	btfss	status,2,c
  4515  001D2A  D7FB               	goto	l4427
  4516                           
  4517                           ;CanToSerial.c: 138: CANsendMessage(id, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRAM
      +                          E & CAN_TX_PRIORITY_0);
  4518  001D2C  C022  F09E         	movff	_id,CANsendMessage@identifier
  4519  001D30  C023  F09F         	movff	_id+1,CANsendMessage@identifier+1
  4520  001D34  C024  F0A0         	movff	_id+2,CANsendMessage@identifier+2
  4521  001D38  C025  F0A1         	movff	_id+3,CANsendMessage@identifier+3
  4522  001D3C  0E7F               	movlw	low _data
  4523  001D3E  0100               	movlb	0	; () banked
  4524  001D40  6FA2               	movwf	CANsendMessage@data& (0+255),b
  4525  001D42  0E00               	movlw	high _data
  4526  001D44  0100               	movlb	0	; () banked
  4527  001D46  6FA3               	movwf	(CANsendMessage@data+1)& (0+255),b
  4528  001D48  0E08               	movlw	8
  4529  001D4A  0100               	movlb	0	; () banked
  4530  001D4C  6FA4               	movwf	CANsendMessage@dataLength& (0+255),b
  4531  001D4E  0EBC               	movlw	188
  4532  001D50  0100               	movlb	0	; () banked
  4533  001D52  6FA5               	movwf	CANsendMessage@flags& (0+255),b
  4534  001D54  EC62  F006         	call	_CANsendMessage	;wreg free
  4535                           
  4536                           ;CanToSerial.c: 139: PORTDbits.RD4 = 1;
  4537  001D58  8883               	bsf	3971,4,c	;volatile
  4538                           
  4539                           ;CanToSerial.c: 140: PORTDbits.RD5 = 0;
  4540  001D5A  9A83               	bcf	3971,5,c	;volatile
  4541                           
  4542                           ;CanToSerial.c: 141: PORTDbits.RD6 = 0;
  4543  001D5C  9C83               	bcf	3971,6,c	;volatile
  4544                           
  4545                           ;CanToSerial.c: 142: } else {
  4546  001D5E  D00D               	goto	l4445
  4547  001D60                     l4437:
  4548                           
  4549                           ;CanToSerial.c: 143: if (data[0] == 0x01) {
  4550  001D60  0100               	movlb	0	; () banked
  4551  001D62  057F               	decf	_data& (0+255),w,b
  4552  001D64  A4D8               	btfss	status,2,c
  4553  001D66  D002               	goto	l4441
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;CanToSerial.c: 144: PORTDbits.RD5 = 1;
  4557  001D68  8A83               	bsf	3971,5,c	;volatile
  4558                           
  4559                           ;CanToSerial.c: 145: PORTCbits.RC5 = 0;
  4560  001D6A  9A82               	bcf	3970,5,c	;volatile
  4561  001D6C                     l4441:
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;CanToSerial.c: 146: }
  4565                           ;CanToSerial.c: 147: if (data[0] == 0x02) {
  4566  001D6C  0E02               	movlw	2
  4567  001D6E  0100               	movlb	0	; () banked
  4568  001D70  197F               	xorwf	_data& (0+255),w,b
  4569  001D72  A4D8               	btfss	status,2,c
  4570  001D74  D002               	goto	l4445
  4571                           
  4572                           ; BSR set to: 0
  4573                           ;CanToSerial.c: 148: PORTDbits.RD6 = 1;
  4574  001D76  8C83               	bsf	3971,6,c	;volatile
  4575                           
  4576                           ;CanToSerial.c: 149: PORTCbits.RC4 = 0;
  4577  001D78  9882               	bcf	3970,4,c	;volatile
  4578  001D7A                     l4445:
  4579                           
  4580                           ;CanToSerial.c: 150: }
  4581                           ;CanToSerial.c: 151: }
  4582                           ;CanToSerial.c: 152: if (previousTimeCounter - timeCounter > 450) {
  4583  001D7A  C02A  F0AE         	movff	_timeCounter,??_can_interpreter	;volatile
  4584  001D7E  C02B  F0AF         	movff	_timeCounter+1,??_can_interpreter+1	;volatile
  4585  001D82  C02C  F0B0         	movff	_timeCounter+2,??_can_interpreter+2	;volatile
  4586  001D86  C02D  F0B1         	movff	_timeCounter+3,??_can_interpreter+3	;volatile
  4587  001D8A  0100               	movlb	0	; () banked
  4588  001D8C  1FAE               	comf	??_can_interpreter& (0+255),f,b
  4589  001D8E  1FAF               	comf	(??_can_interpreter+1)& (0+255),f,b
  4590  001D90  1FB0               	comf	(??_can_interpreter+2)& (0+255),f,b
  4591  001D92  1FB1               	comf	(??_can_interpreter+3)& (0+255),f,b
  4592  001D94  2BAE               	incf	??_can_interpreter& (0+255),f,b
  4593  001D96  0E00               	movlw	0
  4594  001D98  23AF               	addwfc	(??_can_interpreter+1)& (0+255),f,b
  4595  001D9A  23B0               	addwfc	(??_can_interpreter+2)& (0+255),f,b
  4596  001D9C  23B1               	addwfc	(??_can_interpreter+3)& (0+255),f,b
  4597  001D9E  5026               	movf	_previousTimeCounter,w,c
  4598  001DA0  0100               	movlb	0	; () banked
  4599  001DA2  25AE               	addwf	??_can_interpreter& (0+255),w,b
  4600  001DA4  0100               	movlb	0	; () banked
  4601  001DA6  6FB2               	movwf	(??_can_interpreter+4)& (0+255),b
  4602  001DA8  5027               	movf	_previousTimeCounter+1,w,c
  4603  001DAA  0100               	movlb	0	; () banked
  4604  001DAC  21AF               	addwfc	(??_can_interpreter+1)& (0+255),w,b
  4605  001DAE  0100               	movlb	0	; () banked
  4606  001DB0  6FB3               	movwf	(??_can_interpreter+5)& (0+255),b
  4607  001DB2  5028               	movf	_previousTimeCounter+2,w,c
  4608  001DB4  0100               	movlb	0	; () banked
  4609  001DB6  21B0               	addwfc	(??_can_interpreter+2)& (0+255),w,b
  4610  001DB8  0100               	movlb	0	; () banked
  4611  001DBA  6FB4               	movwf	(??_can_interpreter+6)& (0+255),b
  4612  001DBC  5029               	movf	_previousTimeCounter+3,w,c
  4613  001DBE  0100               	movlb	0	; () banked
  4614  001DC0  21B1               	addwfc	(??_can_interpreter+3)& (0+255),w,b
  4615  001DC2  0100               	movlb	0	; () banked
  4616  001DC4  6FB5               	movwf	(??_can_interpreter+7)& (0+255),b
  4617  001DC6  0100               	movlb	0	; () banked
  4618  001DC8  51B5               	movf	(??_can_interpreter+7)& (0+255),w,b
  4619  001DCA  0100               	movlb	0	; () banked
  4620  001DCC  11B4               	iorwf	(??_can_interpreter+6)& (0+255),w,b
  4621  001DCE  E108               	bnz	u6060
  4622  001DD0  0EC3               	movlw	195
  4623  001DD2  0100               	movlb	0	; () banked
  4624  001DD4  5DB2               	subwf	(??_can_interpreter+4)& (0+255),w,b
  4625  001DD6  0E01               	movlw	1
  4626  001DD8  0100               	movlb	0	; () banked
  4627  001DDA  59B3               	subwfb	(??_can_interpreter+5)& (0+255),w,b
  4628  001DDC  A0D8               	btfss	status,0,c
  4629  001DDE  D026               	goto	l4453
  4630  001DE0                     u6060:
  4631                           
  4632                           ; BSR set to: 0
  4633                           ;CanToSerial.c: 153: SerialOutput[4] = PORTDbits.RD6;
  4634  001DE0  0E00               	movlw	0
  4635  001DE2  BC83               	btfsc	3971,6,c	;volatile
  4636  001DE4  0E01               	movlw	1
  4637  001DE6  6E3C               	movwf	_SerialOutput+4,c
  4638                           
  4639                           ; BSR set to: 0
  4640                           ;CanToSerial.c: 154: SerialOutput[4] = ((SerialOutput[5] < 1) | PORTDbits.RD5);
  4641  001DE8  AA83               	btfss	3971,5,c	;volatile
  4642  001DEA  D004               	goto	u6070
  4643  001DEC  0100               	movlb	0	; () banked
  4644  001DEE  6BAE               	clrf	??_can_interpreter& (0+255),b
  4645  001DF0  2BAE               	incf	??_can_interpreter& (0+255),f,b
  4646  001DF2  D002               	goto	u6078
  4647  001DF4                     u6070:
  4648  001DF4  0100               	movlb	0	; () banked
  4649  001DF6  6BAE               	clrf	??_can_interpreter& (0+255),b
  4650  001DF8                     u6078:
  4651  001DF8  503D               	movf	_SerialOutput+5,w,c
  4652  001DFA  A4D8               	btfss	status,2,c
  4653  001DFC  D002               	goto	u6080
  4654  001DFE  0E01               	movlw	1
  4655  001E00  D001               	goto	u6090
  4656  001E02                     u6080:
  4657  001E02  0E00               	movlw	0
  4658  001E04                     u6090:
  4659  001E04  0100               	movlb	0	; () banked
  4660  001E06  11AE               	iorwf	??_can_interpreter& (0+255),w,b
  4661  001E08  6E3C               	movwf	_SerialOutput+4,c
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;CanToSerial.c: 155: SerialOutput[4] = ((SerialOutput[5] < 1) | PORTDbits.RD4);
  4665  001E0A  A883               	btfss	3971,4,c	;volatile
  4666  001E0C  D004               	goto	u6100
  4667  001E0E  0100               	movlb	0	; () banked
  4668  001E10  6BAE               	clrf	??_can_interpreter& (0+255),b
  4669  001E12  2BAE               	incf	??_can_interpreter& (0+255),f,b
  4670  001E14  D002               	goto	u6108
  4671  001E16                     u6100:
  4672  001E16  0100               	movlb	0	; () banked
  4673  001E18  6BAE               	clrf	??_can_interpreter& (0+255),b
  4674  001E1A                     u6108:
  4675  001E1A  503D               	movf	_SerialOutput+5,w,c
  4676  001E1C  A4D8               	btfss	status,2,c
  4677  001E1E  D002               	goto	u6110
  4678  001E20  0E01               	movlw	1
  4679  001E22  D001               	goto	u6120
  4680  001E24                     u6110:
  4681  001E24  0E00               	movlw	0
  4682  001E26                     u6120:
  4683  001E26  0100               	movlb	0	; () banked
  4684  001E28  11AE               	iorwf	??_can_interpreter& (0+255),w,b
  4685  001E2A  6E3C               	movwf	_SerialOutput+4,c
  4686  001E2C                     l4453:
  4687                           
  4688                           ;CanToSerial.c: 156: }
  4689                           ;CanToSerial.c: 157: }
  4690                           ;CanToSerial.c: 158: if ((id == 0b00000000000000000000000000110)&&(RTR_Flag == 0)) {
  4691  001E2C  0E06               	movlw	6
  4692  001E2E  1822               	xorwf	_id,w,c
  4693  001E30  1023               	iorwf	_id+1,w,c
  4694  001E32  1024               	iorwf	_id+2,w,c
  4695  001E34  1025               	iorwf	_id+3,w,c
  4696  001E36  B4D8               	btfsc	status,2,c
  4697  001E38  B03F               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
  4698  001E3A  D042               	goto	l4467
  4699                           
  4700                           ;CanToSerial.c: 159: left_speed = data[1];
  4701  001E3C  C080  F030         	movff	_data+1,_left_speed
  4702  001E40  6A31               	clrf	_left_speed+1,c
  4703                           
  4704                           ;CanToSerial.c: 160: left_speed = ((left_speed << 8) | (data[0]));
  4705  001E42  5030               	movf	_left_speed,w,c
  4706  001E44  0100               	movlb	0	; () banked
  4707  001E46  6FAE               	movwf	??_can_interpreter& (0+255),b
  4708  001E48  0100               	movlb	0	; () banked
  4709  001E4A  517F               	movf	_data& (0+255),w,b
  4710  001E4C  6E30               	movwf	_left_speed,c
  4711  001E4E  C0AE  F031         	movff	??_can_interpreter,_left_speed+1
  4712                           
  4713                           ; BSR set to: 0
  4714                           ;CanToSerial.c: 161: right_speed = data[3];
  4715  001E52  C082  F032         	movff	_data+3,_right_speed
  4716  001E56  6A33               	clrf	_right_speed+1,c
  4717                           
  4718                           ;CanToSerial.c: 162: right_speed = ((right_speed << 8) | (data[2]));
  4719  001E58  5032               	movf	_right_speed,w,c
  4720  001E5A  0100               	movlb	0	; () banked
  4721  001E5C  6FAE               	movwf	??_can_interpreter& (0+255),b
  4722  001E5E  0100               	movlb	0	; () banked
  4723  001E60  5181               	movf	(_data+2)& (0+255),w,b
  4724  001E62  6E32               	movwf	_right_speed,c
  4725  001E64  C0AE  F033         	movff	??_can_interpreter,_right_speed+1
  4726                           
  4727                           ; BSR set to: 0
  4728                           ;CanToSerial.c: 163: SerialOutput[3] = ((left_speed + right_speed) / 2);
  4729  001E68  5032               	movf	_right_speed,w,c
  4730  001E6A  2430               	addwf	_left_speed,w,c
  4731  001E6C  0100               	movlb	0	; () banked
  4732  001E6E  6FAE               	movwf	??_can_interpreter& (0+255),b
  4733  001E70  5033               	movf	_right_speed+1,w,c
  4734  001E72  2031               	addwfc	_left_speed+1,w,c
  4735  001E74  0100               	movlb	0	; () banked
  4736  001E76  6FAF               	movwf	(??_can_interpreter+1)& (0+255),b
  4737  001E78  90D8               	bcf	status,0,c
  4738  001E7A  0100               	movlb	0	; () banked
  4739  001E7C  31AF               	rrcf	(??_can_interpreter+1)& (0+255),w,b
  4740  001E7E  0100               	movlb	0	; () banked
  4741  001E80  6FB1               	movwf	(??_can_interpreter+3)& (0+255),b
  4742  001E82  0100               	movlb	0	; () banked
  4743  001E84  31AE               	rrcf	??_can_interpreter& (0+255),w,b
  4744  001E86  0100               	movlb	0	; () banked
  4745  001E88  6FB0               	movwf	(??_can_interpreter+2)& (0+255),b
  4746  001E8A  0100               	movlb	0	; () banked
  4747  001E8C  51B0               	movf	(??_can_interpreter+2)& (0+255),w,b
  4748  001E8E  6E3B               	movwf	_SerialOutput+3,c
  4749                           
  4750                           ; BSR set to: 0
  4751                           ;CanToSerial.c: 164: SerialOutput[2] = (((left_speed + right_speed) / 2) >> 8);
  4752  001E90  5032               	movf	_right_speed,w,c
  4753  001E92  2430               	addwf	_left_speed,w,c
  4754  001E94  0100               	movlb	0	; () banked
  4755  001E96  6FAE               	movwf	??_can_interpreter& (0+255),b
  4756  001E98  5033               	movf	_right_speed+1,w,c
  4757  001E9A  2031               	addwfc	_left_speed+1,w,c
  4758  001E9C  0100               	movlb	0	; () banked
  4759  001E9E  6FAF               	movwf	(??_can_interpreter+1)& (0+255),b
  4760  001EA0  90D8               	bcf	status,0,c
  4761  001EA2  0100               	movlb	0	; () banked
  4762  001EA4  31AF               	rrcf	(??_can_interpreter+1)& (0+255),w,b
  4763  001EA6  0100               	movlb	0	; () banked
  4764  001EA8  6FB1               	movwf	(??_can_interpreter+3)& (0+255),b
  4765  001EAA  0100               	movlb	0	; () banked
  4766  001EAC  31AE               	rrcf	??_can_interpreter& (0+255),w,b
  4767  001EAE  0100               	movlb	0	; () banked
  4768  001EB0  6FB0               	movwf	(??_can_interpreter+2)& (0+255),b
  4769  001EB2  C0B1  F0B0         	movff	??_can_interpreter+3,??_can_interpreter+2
  4770  001EB6  0100               	movlb	0	; () banked
  4771  001EB8  6BB1               	clrf	(??_can_interpreter+3)& (0+255),b
  4772  001EBA  0100               	movlb	0	; () banked
  4773  001EBC  51B0               	movf	(??_can_interpreter+2)& (0+255),w,b
  4774  001EBE  6E3A               	movwf	_SerialOutput+2,c
  4775  001EC0                     l4467:
  4776                           
  4777                           ;CanToSerial.c: 165: }
  4778                           ;CanToSerial.c: 166: if (id == 0b00000000000000000000000001001) {
  4779  001EC0  0E09               	movlw	9
  4780  001EC2  1822               	xorwf	_id,w,c
  4781  001EC4  1023               	iorwf	_id+1,w,c
  4782  001EC6  1024               	iorwf	_id+2,w,c
  4783  001EC8  1025               	iorwf	_id+3,w,c
  4784  001ECA  A4D8               	btfss	status,2,c
  4785  001ECC  0012               	return	
  4786                           
  4787                           ;CanToSerial.c: 167: SerialOutput[5] = data[0];
  4788  001ECE  C07F  F03D         	movff	_data,_SerialOutput+5
  4789  001ED2  0012               	return	
  4790  001ED4                     __end_of_can_interpreter:
  4791                           	opt stack 0
  4792                           tblptru	equ	0xFF8
  4793                           tblptrh	equ	0xFF7
  4794                           tblptrl	equ	0xFF6
  4795                           tablat	equ	0xFF5
  4796                           intcon	equ	0xFF2
  4797                           postinc0	equ	0xFEE
  4798                           wreg	equ	0xFE8
  4799                           postdec1	equ	0xFE5
  4800                           fsr1l	equ	0xFE1
  4801                           indf2	equ	0xFDF
  4802                           fsr2h	equ	0xFDA
  4803                           fsr2l	equ	0xFD9
  4804                           status	equ	0xFD8
  4805                           
  4806 ;; *************** function _CANsendMessage *****************
  4807 ;; Defined at:
  4808 ;;		line 293 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;  identifier      4    0[BANK0 ] unsigned long 
  4811 ;;  data            2    4[BANK0 ] PTR unsigned char 
  4812 ;;		 -> analogic_brake(8), set_speed(8), set_steering(8), data(8), 
  4813 ;;  dataLength      1    6[BANK0 ] unsigned char 
  4814 ;;  flags           1    7[BANK0 ] enum E16728
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;  tamp            4   12[BANK0 ] unsigned long 
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  1    wreg      void 
  4819 ;; Registers used:
  4820 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4826 ;;      Params:         0       8       0       0
  4827 ;;      Locals:         0       4       0       0
  4828 ;;      Temps:          0       4       0       0
  4829 ;;      Totals:         0      16       0       0
  4830 ;;Total ram usage:       16 bytes
  4831 ;; Hardware stack levels used:    1
  4832 ;; Hardware stack levels required when called:    3
  4833 ;; This function calls:
  4834 ;;		Nothing
  4835 ;; This function is called by:
  4836 ;;		_main
  4837 ;;		_can_interpreter
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           	psect	text10
  4842  000CC4                     __ptext10:
  4843                           	opt stack 0
  4844  000CC4                     _CANsendMessage:
  4845                           	opt stack 26
  4846                           
  4847                           ;inc\CANlib.h: 295: unsigned long tamp;
  4848                           ;inc\CANlib.h: 297: if (TXB0CONbits.TXREQ == 0)
  4849                           
  4850                           ;incstack = 0
  4851  000CC4  010F               	movlb	15	; () banked
  4852  000CC6  B740               	btfsc	64,3,b	;volatile
  4853  000CC8  D13F               	goto	l351
  4854                           
  4855                           ; BSR set to: 15
  4856                           ;inc\CANlib.h: 298: { TXB0DLC = dataLength;
  4857  000CCA  C0A4  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  4858                           
  4859                           ;inc\CANlib.h: 299: if (0b01000000 & flags)
  4860  000CCE  0100               	movlb	0	; () banked
  4861  000CD0  ADA5               	btfss	CANsendMessage@flags& (0+255),6,b
  4862  000CD2  D003               	goto	l352
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;inc\CANlib.h: 300: TXB0DLCbits.TXRTR = 0x01;
  4866  000CD4  010F               	movlb	15	; () banked
  4867  000CD6  8D45               	bsf	69,6,b	;volatile
  4868  000CD8  D002               	goto	l353
  4869  000CDA                     l352:
  4870                           
  4871                           ; BSR set to: 0
  4872                           ;inc\CANlib.h: 301: else
  4873                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x00;
  4874  000CDA  010F               	movlb	15	; () banked
  4875  000CDC  9D45               	bcf	69,6,b	;volatile
  4876  000CDE                     l353:
  4877                           
  4878                           ; BSR set to: 15
  4879                           ;inc\CANlib.h: 304: if (CAN_TX_FRAME_MASK & flags)
  4880  000CDE  0100               	movlb	0	; () banked
  4881  000CE0  A7A5               	btfss	CANsendMessage@flags& (0+255),3,b
  4882  000CE2  D079               	goto	l354
  4883                           
  4884                           ; BSR set to: 0
  4885                           ;inc\CANlib.h: 305: {
  4886                           ;inc\CANlib.h: 307: tamp = identifier & 0x000000FF;
  4887  000CE4  0100               	movlb	0	; () banked
  4888  000CE6  519E               	movf	CANsendMessage@identifier& (0+255),w,b
  4889  000CE8  0100               	movlb	0	; () banked
  4890  000CEA  6FAA               	movwf	CANsendMessage@tamp& (0+255),b
  4891  000CEC  6BAB               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4892  000CEE  6BAC               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4893  000CF0  6BAD               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4894                           
  4895                           ; BSR set to: 0
  4896                           ;inc\CANlib.h: 308: TXB0EIDL = (unsigned char) tamp;
  4897  000CF2  C0AA  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;inc\CANlib.h: 310: tamp = identifier & 0x0000FF00;
  4901  000CF6  0E00               	movlw	0
  4902  000CF8  0100               	movlb	0	; () banked
  4903  000CFA  159E               	andwf	CANsendMessage@identifier& (0+255),w,b
  4904  000CFC  0100               	movlb	0	; () banked
  4905  000CFE  6FAA               	movwf	CANsendMessage@tamp& (0+255),b
  4906  000D00  0EFF               	movlw	255
  4907  000D02  0100               	movlb	0	; () banked
  4908  000D04  159F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4909  000D06  0100               	movlb	0	; () banked
  4910  000D08  6FAB               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4911  000D0A  0E00               	movlw	0
  4912  000D0C  0100               	movlb	0	; () banked
  4913  000D0E  15A0               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4914  000D10  0100               	movlb	0	; () banked
  4915  000D12  6FAC               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4916  000D14  0E00               	movlw	0
  4917  000D16  0100               	movlb	0	; () banked
  4918  000D18  15A1               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4919  000D1A  0100               	movlb	0	; () banked
  4920  000D1C  6FAD               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;inc\CANlib.h: 311: tamp = tamp >> 8;
  4924  000D1E  C0AA  F0A6         	movff	CANsendMessage@tamp,??_CANsendMessage
  4925  000D22  C0AB  F0A7         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4926  000D26  C0AC  F0A8         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4927  000D2A  C0AD  F0A9         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4928  000D2E  C0A7  F0A6         	movff	??_CANsendMessage+1,??_CANsendMessage
  4929  000D32  C0A8  F0A7         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  4930  000D36  C0A9  F0A8         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  4931  000D3A  0100               	movlb	0	; () banked
  4932  000D3C  6BA9               	clrf	(??_CANsendMessage+3)& (0+255),b
  4933  000D3E  C0A6  F0AA         	movff	??_CANsendMessage,CANsendMessage@tamp
  4934  000D42  C0A7  F0AB         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4935  000D46  C0A8  F0AC         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4936  000D4A  C0A9  F0AD         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4937                           
  4938                           ; BSR set to: 0
  4939                           ;inc\CANlib.h: 312: TXB0EIDH = (unsigned char) tamp;
  4940  000D4E  C0AA  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;inc\CANlib.h: 314: TXB0SIDL = 0x00;
  4944  000D52  0E00               	movlw	0
  4945  000D54  010F               	movlb	15	; () banked
  4946  000D56  6F42               	movwf	66,b	;volatile
  4947                           
  4948                           ; BSR set to: 15
  4949                           ;inc\CANlib.h: 315: TXB0SIDLbits.EXIDE = 0x01;
  4950  000D58  010F               	movlb	15	; () banked
  4951  000D5A  8742               	bsf	66,3,b	;volatile
  4952                           
  4953                           ; BSR set to: 15
  4954                           ;inc\CANlib.h: 317: if (identifier & 0x00010000)
  4955  000D5C  0100               	movlb	0	; () banked
  4956  000D5E  A1A0               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  4957  000D60  D002               	goto	l355
  4958                           
  4959                           ; BSR set to: 0
  4960                           ;inc\CANlib.h: 318: TXB0SIDLbits.EID16 = 0x01;
  4961  000D62  010F               	movlb	15	; () banked
  4962  000D64  8142               	bsf	66,0,b	;volatile
  4963  000D66                     l355:
  4964                           
  4965                           ;inc\CANlib.h: 319: if (identifier & 0x00020000)
  4966  000D66  0100               	movlb	0	; () banked
  4967  000D68  A3A0               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  4968  000D6A  D002               	goto	l356
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID17 = 0x01;
  4972  000D6C  010F               	movlb	15	; () banked
  4973  000D6E  8342               	bsf	66,1,b	;volatile
  4974  000D70                     l356:
  4975                           
  4976                           ;inc\CANlib.h: 321: if (identifier & 0x00040000)
  4977  000D70  0100               	movlb	0	; () banked
  4978  000D72  A5A0               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  4979  000D74  D002               	goto	l357
  4980                           
  4981                           ; BSR set to: 0
  4982                           ;inc\CANlib.h: 322: TXB0SIDLbits.SID0 = 0x01;
  4983  000D76  010F               	movlb	15	; () banked
  4984  000D78  8B42               	bsf	66,5,b	;volatile
  4985  000D7A                     l357:
  4986                           
  4987                           ;inc\CANlib.h: 323: if (identifier & 0x00080000)
  4988  000D7A  0100               	movlb	0	; () banked
  4989  000D7C  A7A0               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  4990  000D7E  D002               	goto	l358
  4991                           
  4992                           ; BSR set to: 0
  4993                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID1 = 0x01;
  4994  000D80  010F               	movlb	15	; () banked
  4995  000D82  8D42               	bsf	66,6,b	;volatile
  4996  000D84                     l358:
  4997                           
  4998                           ;inc\CANlib.h: 325: if (identifier & 0x00100000)
  4999  000D84  0100               	movlb	0	; () banked
  5000  000D86  A9A0               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  5001  000D88  D002               	goto	l4135
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID2 = 0x01;
  5005  000D8A  010F               	movlb	15	; () banked
  5006  000D8C  8F42               	bsf	66,7,b	;volatile
  5007  000D8E                     l4135:
  5008                           
  5009                           ;inc\CANlib.h: 328: tamp = (identifier >> 21);
  5010  000D8E  C09E  F0A6         	movff	CANsendMessage@identifier,??_CANsendMessage
  5011  000D92  C09F  F0A7         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5012  000D96  C0A0  F0A8         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5013  000D9A  C0A1  F0A9         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5014  000D9E  0E16               	movlw	22
  5015  000DA0  D006               	goto	u5600
  5016  000DA2                     u5605:
  5017  000DA2  0100               	movlb	0	; () banked
  5018  000DA4  90D8               	bcf	status,0,c
  5019  000DA6  33A9               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5020  000DA8  33A8               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5021  000DAA  33A7               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5022  000DAC  33A6               	rrcf	??_CANsendMessage& (0+255),f,b
  5023  000DAE                     u5600:
  5024  000DAE  2EE8               	decfsz	wreg,f,c
  5025  000DB0  D7F8               	goto	u5605
  5026  000DB2  C0A6  F0AA         	movff	??_CANsendMessage,CANsendMessage@tamp
  5027  000DB6  C0A7  F0AB         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5028  000DBA  C0A8  F0AC         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5029  000DBE  C0A9  F0AD         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;inc\CANlib.h: 329: tamp = tamp & 0x000000FF;
  5033  000DC2  0100               	movlb	0	; () banked
  5034  000DC4  51AA               	movf	CANsendMessage@tamp& (0+255),w,b
  5035  000DC6  0100               	movlb	0	; () banked
  5036  000DC8  6FAA               	movwf	CANsendMessage@tamp& (0+255),b
  5037  000DCA  6BAB               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5038  000DCC  6BAC               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5039  000DCE  6BAD               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;inc\CANlib.h: 330: TXB0SIDH = (unsigned char) tamp;
  5043  000DD0  C0AA  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5044                           
  5045                           ;inc\CANlib.h: 331: }
  5046  000DD4  D059               	goto	l4155
  5047  000DD6                     l354:
  5048                           
  5049                           ; BSR set to: 0
  5050                           ;inc\CANlib.h: 333: else
  5051                           ;inc\CANlib.h: 335: {
  5052                           ;inc\CANlib.h: 336: TXB0SIDLbits.EXIDE = 0x00;
  5053  000DD6  010F               	movlb	15	; () banked
  5054  000DD8  9742               	bcf	66,3,b	;volatile
  5055                           
  5056                           ; BSR set to: 15
  5057                           ;inc\CANlib.h: 338: tamp = (identifier >> 3);
  5058  000DDA  C09E  F0A6         	movff	CANsendMessage@identifier,??_CANsendMessage
  5059  000DDE  C09F  F0A7         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5060  000DE2  C0A0  F0A8         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5061  000DE6  C0A1  F0A9         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5062  000DEA  0E04               	movlw	4
  5063  000DEC  D006               	goto	u5610
  5064  000DEE                     u5615:
  5065  000DEE  0100               	movlb	0	; () banked
  5066  000DF0  90D8               	bcf	status,0,c
  5067  000DF2  33A9               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5068  000DF4  33A8               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5069  000DF6  33A7               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5070  000DF8  33A6               	rrcf	??_CANsendMessage& (0+255),f,b
  5071  000DFA                     u5610:
  5072  000DFA  2EE8               	decfsz	wreg,f,c
  5073  000DFC  D7F8               	goto	u5615
  5074  000DFE  C0A6  F0AA         	movff	??_CANsendMessage,CANsendMessage@tamp
  5075  000E02  C0A7  F0AB         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5076  000E06  C0A8  F0AC         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5077  000E0A  C0A9  F0AD         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5078                           
  5079                           ; BSR set to: 0
  5080                           ;inc\CANlib.h: 339: tamp = tamp & 0x000000FF;
  5081  000E0E  0100               	movlb	0	; () banked
  5082  000E10  51AA               	movf	CANsendMessage@tamp& (0+255),w,b
  5083  000E12  0100               	movlb	0	; () banked
  5084  000E14  6FAA               	movwf	CANsendMessage@tamp& (0+255),b
  5085  000E16  6BAB               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5086  000E18  6BAC               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5087  000E1A  6BAD               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5088                           
  5089                           ; BSR set to: 0
  5090                           ;inc\CANlib.h: 340: TXB0SIDH = (unsigned char) tamp;
  5091  000E1C  C0AA  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5092                           
  5093                           ; BSR set to: 0
  5094                           ;inc\CANlib.h: 342: tamp = identifier & 0x00000007;
  5095  000E20  0E07               	movlw	7
  5096  000E22  0100               	movlb	0	; () banked
  5097  000E24  159E               	andwf	CANsendMessage@identifier& (0+255),w,b
  5098  000E26  0100               	movlb	0	; () banked
  5099  000E28  6FAA               	movwf	CANsendMessage@tamp& (0+255),b
  5100  000E2A  0E00               	movlw	0
  5101  000E2C  0100               	movlb	0	; () banked
  5102  000E2E  159F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5103  000E30  0100               	movlb	0	; () banked
  5104  000E32  6FAB               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5105  000E34  0E00               	movlw	0
  5106  000E36  0100               	movlb	0	; () banked
  5107  000E38  15A0               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5108  000E3A  0100               	movlb	0	; () banked
  5109  000E3C  6FAC               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5110  000E3E  0E00               	movlw	0
  5111  000E40  0100               	movlb	0	; () banked
  5112  000E42  15A1               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5113  000E44  0100               	movlb	0	; () banked
  5114  000E46  6FAD               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5115                           
  5116                           ; BSR set to: 0
  5117                           ;inc\CANlib.h: 343: tamp = tamp << 5;
  5118  000E48  C0AA  F0A6         	movff	CANsendMessage@tamp,??_CANsendMessage
  5119  000E4C  C0AB  F0A7         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5120  000E50  C0AC  F0A8         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5121  000E54  C0AD  F0A9         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5122  000E58  0E05               	movlw	5
  5123  000E5A                     u5625:
  5124  000E5A  90D8               	bcf	status,0,c
  5125  000E5C  0100               	movlb	0	; () banked
  5126  000E5E  37A6               	rlcf	??_CANsendMessage& (0+255),f,b
  5127  000E60  37A7               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  5128  000E62  37A8               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  5129  000E64  37A9               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  5130  000E66  2EE8               	decfsz	wreg,f,c
  5131  000E68  D7F8               	goto	u5625
  5132  000E6A  C0A6  F0AA         	movff	??_CANsendMessage,CANsendMessage@tamp
  5133  000E6E  C0A7  F0AB         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5134  000E72  C0A8  F0AC         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5135  000E76  C0A9  F0AD         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;inc\CANlib.h: 344: TXB0SIDL = TXB0SIDL & 0b00011111;
  5139  000E7A  010F               	movlb	15	; () banked
  5140  000E7C  5142               	movf	66,w,b	;volatile
  5141  000E7E  0B1F               	andlw	31
  5142  000E80  010F               	movlb	15	; () banked
  5143  000E82  6F42               	movwf	66,b	;volatile
  5144                           
  5145                           ; BSR set to: 15
  5146                           ;inc\CANlib.h: 345: TXB0SIDL = (unsigned char) tamp;
  5147  000E84  C0AA  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  5148  000E88                     l4155:
  5149                           
  5150                           ;inc\CANlib.h: 346: }
  5151                           ;inc\CANlib.h: 348: if (0b00000001 & flags)
  5152  000E88  0100               	movlb	0	; () banked
  5153  000E8A  A1A5               	btfss	CANsendMessage@flags& (0+255),0,b
  5154  000E8C  D003               	goto	l361
  5155                           
  5156                           ; BSR set to: 0
  5157                           ;inc\CANlib.h: 349: TXB0CONbits.TXPRI0 = 0x01;
  5158  000E8E  010F               	movlb	15	; () banked
  5159  000E90  8140               	bsf	64,0,b	;volatile
  5160  000E92  D002               	goto	l362
  5161  000E94                     l361:
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;inc\CANlib.h: 350: else
  5165                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x00;
  5166  000E94  010F               	movlb	15	; () banked
  5167  000E96  9140               	bcf	64,0,b	;volatile
  5168  000E98                     l362:
  5169                           
  5170                           ; BSR set to: 15
  5171                           ;inc\CANlib.h: 352: if (0b00000010 & flags)
  5172  000E98  0100               	movlb	0	; () banked
  5173  000E9A  A3A5               	btfss	CANsendMessage@flags& (0+255),1,b
  5174  000E9C  D003               	goto	l363
  5175                           
  5176                           ; BSR set to: 0
  5177                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI1 = 0x01;
  5178  000E9E  010F               	movlb	15	; () banked
  5179  000EA0  8340               	bsf	64,1,b	;volatile
  5180  000EA2  D002               	goto	l4161
  5181  000EA4                     l363:
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;inc\CANlib.h: 354: else
  5185                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x00;
  5186  000EA4  010F               	movlb	15	; () banked
  5187  000EA6  9340               	bcf	64,1,b	;volatile
  5188  000EA8                     l4161:
  5189                           
  5190                           ; BSR set to: 15
  5191                           ;inc\CANlib.h: 357: TXB0D0 = data[0];
  5192  000EA8  C0A2  FFD9         	movff	CANsendMessage@data,fsr2l
  5193  000EAC  C0A3  FFDA         	movff	CANsendMessage@data+1,fsr2h
  5194  000EB0  50DF               	movf	indf2,w,c
  5195  000EB2  010F               	movlb	15	; () banked
  5196  000EB4  6F46               	movwf	70,b	;volatile
  5197                           
  5198                           ; BSR set to: 15
  5199                           ;inc\CANlib.h: 358: TXB0D1 = data[1];
  5200  000EB6  0100               	movlb	0	; () banked
  5201  000EB8  EE20 F001          	lfsr	2,1
  5202  000EBC  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5203  000EBE  26D9               	addwf	fsr2l,f,c
  5204  000EC0  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5205  000EC2  22DA               	addwfc	fsr2h,f,c
  5206  000EC4  50DF               	movf	indf2,w,c
  5207  000EC6  010F               	movlb	15	; () banked
  5208  000EC8  6F47               	movwf	71,b	;volatile
  5209                           
  5210                           ; BSR set to: 15
  5211                           ;inc\CANlib.h: 359: TXB0D2 = data[2];
  5212  000ECA  0100               	movlb	0	; () banked
  5213  000ECC  EE20 F002          	lfsr	2,2
  5214  000ED0  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5215  000ED2  26D9               	addwf	fsr2l,f,c
  5216  000ED4  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5217  000ED6  22DA               	addwfc	fsr2h,f,c
  5218  000ED8  50DF               	movf	indf2,w,c
  5219  000EDA  010F               	movlb	15	; () banked
  5220  000EDC  6F48               	movwf	72,b	;volatile
  5221                           
  5222                           ; BSR set to: 15
  5223                           ;inc\CANlib.h: 360: TXB0D3 = data[3];
  5224  000EDE  0100               	movlb	0	; () banked
  5225  000EE0  EE20 F003          	lfsr	2,3
  5226  000EE4  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5227  000EE6  26D9               	addwf	fsr2l,f,c
  5228  000EE8  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5229  000EEA  22DA               	addwfc	fsr2h,f,c
  5230  000EEC  50DF               	movf	indf2,w,c
  5231  000EEE  010F               	movlb	15	; () banked
  5232  000EF0  6F49               	movwf	73,b	;volatile
  5233                           
  5234                           ; BSR set to: 15
  5235                           ;inc\CANlib.h: 361: TXB0D4 = data[4];
  5236  000EF2  0100               	movlb	0	; () banked
  5237  000EF4  EE20 F004          	lfsr	2,4
  5238  000EF8  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5239  000EFA  26D9               	addwf	fsr2l,f,c
  5240  000EFC  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5241  000EFE  22DA               	addwfc	fsr2h,f,c
  5242  000F00  50DF               	movf	indf2,w,c
  5243  000F02  010F               	movlb	15	; () banked
  5244  000F04  6F4A               	movwf	74,b	;volatile
  5245                           
  5246                           ; BSR set to: 15
  5247                           ;inc\CANlib.h: 362: TXB0D5 = data[5];
  5248  000F06  0100               	movlb	0	; () banked
  5249  000F08  EE20 F005          	lfsr	2,5
  5250  000F0C  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5251  000F0E  26D9               	addwf	fsr2l,f,c
  5252  000F10  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5253  000F12  22DA               	addwfc	fsr2h,f,c
  5254  000F14  50DF               	movf	indf2,w,c
  5255  000F16  010F               	movlb	15	; () banked
  5256  000F18  6F4B               	movwf	75,b	;volatile
  5257                           
  5258                           ; BSR set to: 15
  5259                           ;inc\CANlib.h: 363: TXB0D6 = data[6];
  5260  000F1A  0100               	movlb	0	; () banked
  5261  000F1C  EE20 F006          	lfsr	2,6
  5262  000F20  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5263  000F22  26D9               	addwf	fsr2l,f,c
  5264  000F24  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5265  000F26  22DA               	addwfc	fsr2h,f,c
  5266  000F28  50DF               	movf	indf2,w,c
  5267  000F2A  010F               	movlb	15	; () banked
  5268  000F2C  6F4C               	movwf	76,b	;volatile
  5269                           
  5270                           ; BSR set to: 15
  5271                           ;inc\CANlib.h: 364: TXB0D7 = data[7];
  5272  000F2E  0100               	movlb	0	; () banked
  5273  000F30  EE20 F007          	lfsr	2,7
  5274  000F34  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5275  000F36  26D9               	addwf	fsr2l,f,c
  5276  000F38  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5277  000F3A  22DA               	addwfc	fsr2h,f,c
  5278  000F3C  50DF               	movf	indf2,w,c
  5279  000F3E  010F               	movlb	15	; () banked
  5280  000F40  6F4D               	movwf	77,b	;volatile
  5281                           
  5282                           ; BSR set to: 15
  5283                           ;inc\CANlib.h: 366: TXB0CONbits.TXREQ = 0x01;
  5284  000F42  010F               	movlb	15	; () banked
  5285  000F44  8740               	bsf	64,3,b	;volatile
  5286                           
  5287                           ; BSR set to: 15
  5288                           ;inc\CANlib.h: 367: return;
  5289  000F46  0012               	return	
  5290  000F48                     l351:
  5291                           
  5292                           ; BSR set to: 15
  5293                           ;inc\CANlib.h: 368: }
  5294                           ;inc\CANlib.h: 372: if (TXB1CONbits.TXREQ == 0)
  5295  000F48  010F               	movlb	15	; () banked
  5296  000F4A  B730               	btfsc	48,3,b	;volatile
  5297  000F4C  D13F               	goto	l366
  5298                           
  5299                           ; BSR set to: 15
  5300                           ;inc\CANlib.h: 373: { TXB1DLC = dataLength;
  5301  000F4E  C0A4  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  5302                           
  5303                           ;inc\CANlib.h: 375: if (0b01000000 & flags)
  5304  000F52  0100               	movlb	0	; () banked
  5305  000F54  ADA5               	btfss	CANsendMessage@flags& (0+255),6,b
  5306  000F56  D003               	goto	l367
  5307                           
  5308                           ; BSR set to: 0
  5309                           ;inc\CANlib.h: 376: TXB1DLCbits.TXRTR = 0x01;
  5310  000F58  010F               	movlb	15	; () banked
  5311  000F5A  8D35               	bsf	53,6,b	;volatile
  5312  000F5C  D002               	goto	l368
  5313  000F5E                     l367:
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;inc\CANlib.h: 377: else
  5317                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x00;
  5318  000F5E  010F               	movlb	15	; () banked
  5319  000F60  9D35               	bcf	53,6,b	;volatile
  5320  000F62                     l368:
  5321                           
  5322                           ; BSR set to: 15
  5323                           ;inc\CANlib.h: 380: if (CAN_TX_FRAME_MASK & flags)
  5324  000F62  0100               	movlb	0	; () banked
  5325  000F64  A7A5               	btfss	CANsendMessage@flags& (0+255),3,b
  5326  000F66  D079               	goto	l369
  5327                           
  5328                           ; BSR set to: 0
  5329                           ;inc\CANlib.h: 381: {
  5330                           ;inc\CANlib.h: 382: tamp = identifier & 0x000000FF;
  5331  000F68  0100               	movlb	0	; () banked
  5332  000F6A  519E               	movf	CANsendMessage@identifier& (0+255),w,b
  5333  000F6C  0100               	movlb	0	; () banked
  5334  000F6E  6FAA               	movwf	CANsendMessage@tamp& (0+255),b
  5335  000F70  6BAB               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5336  000F72  6BAC               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5337  000F74  6BAD               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5338                           
  5339                           ; BSR set to: 0
  5340                           ;inc\CANlib.h: 383: TXB1EIDL = (unsigned char) tamp;
  5341  000F76  C0AA  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  5342                           
  5343                           ; BSR set to: 0
  5344                           ;inc\CANlib.h: 385: tamp = identifier & 0x0000FF00;
  5345  000F7A  0E00               	movlw	0
  5346  000F7C  0100               	movlb	0	; () banked
  5347  000F7E  159E               	andwf	CANsendMessage@identifier& (0+255),w,b
  5348  000F80  0100               	movlb	0	; () banked
  5349  000F82  6FAA               	movwf	CANsendMessage@tamp& (0+255),b
  5350  000F84  0EFF               	movlw	255
  5351  000F86  0100               	movlb	0	; () banked
  5352  000F88  159F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5353  000F8A  0100               	movlb	0	; () banked
  5354  000F8C  6FAB               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5355  000F8E  0E00               	movlw	0
  5356  000F90  0100               	movlb	0	; () banked
  5357  000F92  15A0               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5358  000F94  0100               	movlb	0	; () banked
  5359  000F96  6FAC               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5360  000F98  0E00               	movlw	0
  5361  000F9A  0100               	movlb	0	; () banked
  5362  000F9C  15A1               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5363  000F9E  0100               	movlb	0	; () banked
  5364  000FA0  6FAD               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5365                           
  5366                           ; BSR set to: 0
  5367                           ;inc\CANlib.h: 386: tamp = tamp >> 8;
  5368  000FA2  C0AA  F0A6         	movff	CANsendMessage@tamp,??_CANsendMessage
  5369  000FA6  C0AB  F0A7         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5370  000FAA  C0AC  F0A8         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5371  000FAE  C0AD  F0A9         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5372  000FB2  C0A7  F0A6         	movff	??_CANsendMessage+1,??_CANsendMessage
  5373  000FB6  C0A8  F0A7         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  5374  000FBA  C0A9  F0A8         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  5375  000FBE  0100               	movlb	0	; () banked
  5376  000FC0  6BA9               	clrf	(??_CANsendMessage+3)& (0+255),b
  5377  000FC2  C0A6  F0AA         	movff	??_CANsendMessage,CANsendMessage@tamp
  5378  000FC6  C0A7  F0AB         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5379  000FCA  C0A8  F0AC         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5380  000FCE  C0A9  F0AD         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5381                           
  5382                           ; BSR set to: 0
  5383                           ;inc\CANlib.h: 387: TXB1EIDH = (unsigned char) tamp;
  5384  000FD2  C0AA  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  5385                           
  5386                           ; BSR set to: 0
  5387                           ;inc\CANlib.h: 389: TXB1SIDL = 0x00;
  5388  000FD6  0E00               	movlw	0
  5389  000FD8  010F               	movlb	15	; () banked
  5390  000FDA  6F32               	movwf	50,b	;volatile
  5391                           
  5392                           ; BSR set to: 15
  5393                           ;inc\CANlib.h: 390: TXB1SIDLbits.EXIDE = 0x01;
  5394  000FDC  010F               	movlb	15	; () banked
  5395  000FDE  8732               	bsf	50,3,b	;volatile
  5396                           
  5397                           ; BSR set to: 15
  5398                           ;inc\CANlib.h: 392: if (identifier & 0x00010000)
  5399  000FE0  0100               	movlb	0	; () banked
  5400  000FE2  A1A0               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  5401  000FE4  D002               	goto	l370
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;inc\CANlib.h: 393: TXB1SIDLbits.EID16 = 0x01;
  5405  000FE6  010F               	movlb	15	; () banked
  5406  000FE8  8132               	bsf	50,0,b	;volatile
  5407  000FEA                     l370:
  5408                           
  5409                           ;inc\CANlib.h: 394: if (identifier & 0x00020000)
  5410  000FEA  0100               	movlb	0	; () banked
  5411  000FEC  A3A0               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  5412  000FEE  D002               	goto	l371
  5413                           
  5414                           ; BSR set to: 0
  5415                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID17 = 0x01;
  5416  000FF0  010F               	movlb	15	; () banked
  5417  000FF2  8332               	bsf	50,1,b	;volatile
  5418  000FF4                     l371:
  5419                           
  5420                           ;inc\CANlib.h: 396: if (identifier & 0x00040000)
  5421  000FF4  0100               	movlb	0	; () banked
  5422  000FF6  A5A0               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  5423  000FF8  D002               	goto	l372
  5424                           
  5425                           ; BSR set to: 0
  5426                           ;inc\CANlib.h: 397: TXB1SIDLbits.SID0 = 0x01;
  5427  000FFA  010F               	movlb	15	; () banked
  5428  000FFC  8B32               	bsf	50,5,b	;volatile
  5429  000FFE                     l372:
  5430                           
  5431                           ;inc\CANlib.h: 398: if (identifier & 0x00080000)
  5432  000FFE  0100               	movlb	0	; () banked
  5433  001000  A7A0               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  5434  001002  D002               	goto	l373
  5435                           
  5436                           ; BSR set to: 0
  5437                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID1 = 0x01;
  5438  001004  010F               	movlb	15	; () banked
  5439  001006  8D32               	bsf	50,6,b	;volatile
  5440  001008                     l373:
  5441                           
  5442                           ;inc\CANlib.h: 400: if (identifier & 0x00100000)
  5443  001008  0100               	movlb	0	; () banked
  5444  00100A  A9A0               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  5445  00100C  D002               	goto	l4211
  5446                           
  5447                           ; BSR set to: 0
  5448                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID2 = 0x01;
  5449  00100E  010F               	movlb	15	; () banked
  5450  001010  8F32               	bsf	50,7,b	;volatile
  5451  001012                     l4211:
  5452                           
  5453                           ;inc\CANlib.h: 403: tamp = (identifier >> 21);
  5454  001012  C09E  F0A6         	movff	CANsendMessage@identifier,??_CANsendMessage
  5455  001016  C09F  F0A7         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5456  00101A  C0A0  F0A8         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5457  00101E  C0A1  F0A9         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5458  001022  0E16               	movlw	22
  5459  001024  D006               	goto	u5730
  5460  001026                     u5735:
  5461  001026  0100               	movlb	0	; () banked
  5462  001028  90D8               	bcf	status,0,c
  5463  00102A  33A9               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5464  00102C  33A8               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5465  00102E  33A7               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5466  001030  33A6               	rrcf	??_CANsendMessage& (0+255),f,b
  5467  001032                     u5730:
  5468  001032  2EE8               	decfsz	wreg,f,c
  5469  001034  D7F8               	goto	u5735
  5470  001036  C0A6  F0AA         	movff	??_CANsendMessage,CANsendMessage@tamp
  5471  00103A  C0A7  F0AB         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5472  00103E  C0A8  F0AC         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5473  001042  C0A9  F0AD         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;inc\CANlib.h: 404: tamp = tamp & 0x000000FF;
  5477  001046  0100               	movlb	0	; () banked
  5478  001048  51AA               	movf	CANsendMessage@tamp& (0+255),w,b
  5479  00104A  0100               	movlb	0	; () banked
  5480  00104C  6FAA               	movwf	CANsendMessage@tamp& (0+255),b
  5481  00104E  6BAB               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5482  001050  6BAC               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5483  001052  6BAD               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5484                           
  5485                           ; BSR set to: 0
  5486                           ;inc\CANlib.h: 405: TXB1SIDH = (unsigned char) tamp;
  5487  001054  C0AA  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  5488                           
  5489                           ;inc\CANlib.h: 406: }
  5490  001058  D059               	goto	l4231
  5491  00105A                     l369:
  5492                           
  5493                           ; BSR set to: 0
  5494                           ;inc\CANlib.h: 408: else
  5495                           ;inc\CANlib.h: 410: {
  5496                           ;inc\CANlib.h: 411: TXB1SIDLbits.EXIDE = 0x00;
  5497  00105A  010F               	movlb	15	; () banked
  5498  00105C  9732               	bcf	50,3,b	;volatile
  5499                           
  5500                           ; BSR set to: 15
  5501                           ;inc\CANlib.h: 413: tamp = (identifier >> 3);
  5502  00105E  C09E  F0A6         	movff	CANsendMessage@identifier,??_CANsendMessage
  5503  001062  C09F  F0A7         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5504  001066  C0A0  F0A8         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5505  00106A  C0A1  F0A9         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5506  00106E  0E04               	movlw	4
  5507  001070  D006               	goto	u5740
  5508  001072                     u5745:
  5509  001072  0100               	movlb	0	; () banked
  5510  001074  90D8               	bcf	status,0,c
  5511  001076  33A9               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5512  001078  33A8               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5513  00107A  33A7               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5514  00107C  33A6               	rrcf	??_CANsendMessage& (0+255),f,b
  5515  00107E                     u5740:
  5516  00107E  2EE8               	decfsz	wreg,f,c
  5517  001080  D7F8               	goto	u5745
  5518  001082  C0A6  F0AA         	movff	??_CANsendMessage,CANsendMessage@tamp
  5519  001086  C0A7  F0AB         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5520  00108A  C0A8  F0AC         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5521  00108E  C0A9  F0AD         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;inc\CANlib.h: 414: tamp = tamp & 0x000000FF;
  5525  001092  0100               	movlb	0	; () banked
  5526  001094  51AA               	movf	CANsendMessage@tamp& (0+255),w,b
  5527  001096  0100               	movlb	0	; () banked
  5528  001098  6FAA               	movwf	CANsendMessage@tamp& (0+255),b
  5529  00109A  6BAB               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5530  00109C  6BAC               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5531  00109E  6BAD               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5532                           
  5533                           ; BSR set to: 0
  5534                           ;inc\CANlib.h: 415: TXB1SIDH = (unsigned char) tamp;
  5535  0010A0  C0AA  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  5536                           
  5537                           ; BSR set to: 0
  5538                           ;inc\CANlib.h: 417: tamp = identifier & 0x00000007;
  5539  0010A4  0E07               	movlw	7
  5540  0010A6  0100               	movlb	0	; () banked
  5541  0010A8  159E               	andwf	CANsendMessage@identifier& (0+255),w,b
  5542  0010AA  0100               	movlb	0	; () banked
  5543  0010AC  6FAA               	movwf	CANsendMessage@tamp& (0+255),b
  5544  0010AE  0E00               	movlw	0
  5545  0010B0  0100               	movlb	0	; () banked
  5546  0010B2  159F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5547  0010B4  0100               	movlb	0	; () banked
  5548  0010B6  6FAB               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5549  0010B8  0E00               	movlw	0
  5550  0010BA  0100               	movlb	0	; () banked
  5551  0010BC  15A0               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5552  0010BE  0100               	movlb	0	; () banked
  5553  0010C0  6FAC               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5554  0010C2  0E00               	movlw	0
  5555  0010C4  0100               	movlb	0	; () banked
  5556  0010C6  15A1               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5557  0010C8  0100               	movlb	0	; () banked
  5558  0010CA  6FAD               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;inc\CANlib.h: 418: tamp = tamp << 5;
  5562  0010CC  C0AA  F0A6         	movff	CANsendMessage@tamp,??_CANsendMessage
  5563  0010D0  C0AB  F0A7         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5564  0010D4  C0AC  F0A8         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5565  0010D8  C0AD  F0A9         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5566  0010DC  0E05               	movlw	5
  5567  0010DE                     u5755:
  5568  0010DE  90D8               	bcf	status,0,c
  5569  0010E0  0100               	movlb	0	; () banked
  5570  0010E2  37A6               	rlcf	??_CANsendMessage& (0+255),f,b
  5571  0010E4  37A7               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  5572  0010E6  37A8               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  5573  0010E8  37A9               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  5574  0010EA  2EE8               	decfsz	wreg,f,c
  5575  0010EC  D7F8               	goto	u5755
  5576  0010EE  C0A6  F0AA         	movff	??_CANsendMessage,CANsendMessage@tamp
  5577  0010F2  C0A7  F0AB         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5578  0010F6  C0A8  F0AC         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5579  0010FA  C0A9  F0AD         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;inc\CANlib.h: 419: TXB1SIDL = TXB1SIDL & 0b00011111;
  5583  0010FE  010F               	movlb	15	; () banked
  5584  001100  5132               	movf	50,w,b	;volatile
  5585  001102  0B1F               	andlw	31
  5586  001104  010F               	movlb	15	; () banked
  5587  001106  6F32               	movwf	50,b	;volatile
  5588                           
  5589                           ; BSR set to: 15
  5590                           ;inc\CANlib.h: 420: TXB1SIDL = (unsigned char) tamp;
  5591  001108  C0AA  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  5592  00110C                     l4231:
  5593                           
  5594                           ;inc\CANlib.h: 421: }
  5595                           ;inc\CANlib.h: 423: if (0b00000001 & flags)
  5596  00110C  0100               	movlb	0	; () banked
  5597  00110E  A1A5               	btfss	CANsendMessage@flags& (0+255),0,b
  5598  001110  D003               	goto	l376
  5599                           
  5600                           ; BSR set to: 0
  5601                           ;inc\CANlib.h: 424: TXB1CONbits.TXPRI0 = 0x01;
  5602  001112  010F               	movlb	15	; () banked
  5603  001114  8130               	bsf	48,0,b	;volatile
  5604  001116  D002               	goto	l377
  5605  001118                     l376:
  5606                           
  5607                           ; BSR set to: 0
  5608                           ;inc\CANlib.h: 425: else
  5609                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x00;
  5610  001118  010F               	movlb	15	; () banked
  5611  00111A  9130               	bcf	48,0,b	;volatile
  5612  00111C                     l377:
  5613                           
  5614                           ; BSR set to: 15
  5615                           ;inc\CANlib.h: 427: if (0b00000010 & flags)
  5616  00111C  0100               	movlb	0	; () banked
  5617  00111E  A3A5               	btfss	CANsendMessage@flags& (0+255),1,b
  5618  001120  D003               	goto	l378
  5619                           
  5620                           ; BSR set to: 0
  5621                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI1 = 0x01;
  5622  001122  010F               	movlb	15	; () banked
  5623  001124  8330               	bsf	48,1,b	;volatile
  5624  001126  D002               	goto	l4237
  5625  001128                     l378:
  5626                           
  5627                           ; BSR set to: 0
  5628                           ;inc\CANlib.h: 429: else
  5629                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x00;
  5630  001128  010F               	movlb	15	; () banked
  5631  00112A  9330               	bcf	48,1,b	;volatile
  5632  00112C                     l4237:
  5633                           
  5634                           ; BSR set to: 15
  5635                           ;inc\CANlib.h: 432: TXB1D0 = data[0];
  5636  00112C  C0A2  FFD9         	movff	CANsendMessage@data,fsr2l
  5637  001130  C0A3  FFDA         	movff	CANsendMessage@data+1,fsr2h
  5638  001134  50DF               	movf	indf2,w,c
  5639  001136  010F               	movlb	15	; () banked
  5640  001138  6F36               	movwf	54,b	;volatile
  5641                           
  5642                           ; BSR set to: 15
  5643                           ;inc\CANlib.h: 433: TXB1D1 = data[1];
  5644  00113A  0100               	movlb	0	; () banked
  5645  00113C  EE20 F001          	lfsr	2,1
  5646  001140  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5647  001142  26D9               	addwf	fsr2l,f,c
  5648  001144  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5649  001146  22DA               	addwfc	fsr2h,f,c
  5650  001148  50DF               	movf	indf2,w,c
  5651  00114A  010F               	movlb	15	; () banked
  5652  00114C  6F37               	movwf	55,b	;volatile
  5653                           
  5654                           ; BSR set to: 15
  5655                           ;inc\CANlib.h: 434: TXB1D2 = data[2];
  5656  00114E  0100               	movlb	0	; () banked
  5657  001150  EE20 F002          	lfsr	2,2
  5658  001154  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5659  001156  26D9               	addwf	fsr2l,f,c
  5660  001158  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5661  00115A  22DA               	addwfc	fsr2h,f,c
  5662  00115C  50DF               	movf	indf2,w,c
  5663  00115E  010F               	movlb	15	; () banked
  5664  001160  6F38               	movwf	56,b	;volatile
  5665                           
  5666                           ; BSR set to: 15
  5667                           ;inc\CANlib.h: 435: TXB1D3 = data[3];
  5668  001162  0100               	movlb	0	; () banked
  5669  001164  EE20 F003          	lfsr	2,3
  5670  001168  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5671  00116A  26D9               	addwf	fsr2l,f,c
  5672  00116C  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5673  00116E  22DA               	addwfc	fsr2h,f,c
  5674  001170  50DF               	movf	indf2,w,c
  5675  001172  010F               	movlb	15	; () banked
  5676  001174  6F39               	movwf	57,b	;volatile
  5677                           
  5678                           ; BSR set to: 15
  5679                           ;inc\CANlib.h: 436: TXB1D4 = data[4];
  5680  001176  0100               	movlb	0	; () banked
  5681  001178  EE20 F004          	lfsr	2,4
  5682  00117C  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5683  00117E  26D9               	addwf	fsr2l,f,c
  5684  001180  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5685  001182  22DA               	addwfc	fsr2h,f,c
  5686  001184  50DF               	movf	indf2,w,c
  5687  001186  010F               	movlb	15	; () banked
  5688  001188  6F3A               	movwf	58,b	;volatile
  5689                           
  5690                           ; BSR set to: 15
  5691                           ;inc\CANlib.h: 437: TXB1D5 = data[5];
  5692  00118A  0100               	movlb	0	; () banked
  5693  00118C  EE20 F005          	lfsr	2,5
  5694  001190  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5695  001192  26D9               	addwf	fsr2l,f,c
  5696  001194  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5697  001196  22DA               	addwfc	fsr2h,f,c
  5698  001198  50DF               	movf	indf2,w,c
  5699  00119A  010F               	movlb	15	; () banked
  5700  00119C  6F3B               	movwf	59,b	;volatile
  5701                           
  5702                           ; BSR set to: 15
  5703                           ;inc\CANlib.h: 438: TXB1D6 = data[6];
  5704  00119E  0100               	movlb	0	; () banked
  5705  0011A0  EE20 F006          	lfsr	2,6
  5706  0011A4  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5707  0011A6  26D9               	addwf	fsr2l,f,c
  5708  0011A8  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5709  0011AA  22DA               	addwfc	fsr2h,f,c
  5710  0011AC  50DF               	movf	indf2,w,c
  5711  0011AE  010F               	movlb	15	; () banked
  5712  0011B0  6F3C               	movwf	60,b	;volatile
  5713                           
  5714                           ; BSR set to: 15
  5715                           ;inc\CANlib.h: 439: TXB1D7 = data[7];
  5716  0011B2  0100               	movlb	0	; () banked
  5717  0011B4  EE20 F007          	lfsr	2,7
  5718  0011B8  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5719  0011BA  26D9               	addwf	fsr2l,f,c
  5720  0011BC  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5721  0011BE  22DA               	addwfc	fsr2h,f,c
  5722  0011C0  50DF               	movf	indf2,w,c
  5723  0011C2  010F               	movlb	15	; () banked
  5724  0011C4  6F3D               	movwf	61,b	;volatile
  5725                           
  5726                           ; BSR set to: 15
  5727                           ;inc\CANlib.h: 441: TXB1CONbits.TXREQ = 0x01;
  5728  0011C6  010F               	movlb	15	; () banked
  5729  0011C8  8730               	bsf	48,3,b	;volatile
  5730                           
  5731                           ; BSR set to: 15
  5732                           ;inc\CANlib.h: 443: return;
  5733  0011CA  0012               	return	
  5734  0011CC                     l366:
  5735                           
  5736                           ; BSR set to: 15
  5737                           ;inc\CANlib.h: 444: }
  5738                           ;inc\CANlib.h: 448: if (TXB2CONbits.TXREQ == 0)
  5739  0011CC  010F               	movlb	15	; () banked
  5740  0011CE  B720               	btfsc	32,3,b	;volatile
  5741  0011D0  0012               	return	
  5742                           
  5743                           ; BSR set to: 15
  5744                           ;inc\CANlib.h: 449: { TXB2DLC = dataLength;
  5745  0011D2  C0A4  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  5746                           
  5747                           ;inc\CANlib.h: 451: if (0b01000000 & flags)
  5748  0011D6  0100               	movlb	0	; () banked
  5749  0011D8  ADA5               	btfss	CANsendMessage@flags& (0+255),6,b
  5750  0011DA  D003               	goto	l381
  5751                           
  5752                           ; BSR set to: 0
  5753                           ;inc\CANlib.h: 452: TXB2DLCbits.TXRTR = 0x01;
  5754  0011DC  010F               	movlb	15	; () banked
  5755  0011DE  8D25               	bsf	37,6,b	;volatile
  5756  0011E0  D002               	goto	l382
  5757  0011E2                     l381:
  5758                           
  5759                           ; BSR set to: 0
  5760                           ;inc\CANlib.h: 453: else
  5761                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x00;
  5762  0011E2  010F               	movlb	15	; () banked
  5763  0011E4  9D25               	bcf	37,6,b	;volatile
  5764  0011E6                     l382:
  5765                           
  5766                           ; BSR set to: 15
  5767                           ;inc\CANlib.h: 456: if (CAN_TX_FRAME_MASK & flags)
  5768  0011E6  0100               	movlb	0	; () banked
  5769  0011E8  A7A5               	btfss	CANsendMessage@flags& (0+255),3,b
  5770  0011EA  D079               	goto	l383
  5771                           
  5772                           ; BSR set to: 0
  5773                           ;inc\CANlib.h: 457: {
  5774                           ;inc\CANlib.h: 458: tamp = identifier & 0x000000FF;
  5775  0011EC  0100               	movlb	0	; () banked
  5776  0011EE  519E               	movf	CANsendMessage@identifier& (0+255),w,b
  5777  0011F0  0100               	movlb	0	; () banked
  5778  0011F2  6FAA               	movwf	CANsendMessage@tamp& (0+255),b
  5779  0011F4  6BAB               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5780  0011F6  6BAC               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5781  0011F8  6BAD               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5782                           
  5783                           ; BSR set to: 0
  5784                           ;inc\CANlib.h: 459: TXB2EIDL = (unsigned char) tamp;
  5785  0011FA  C0AA  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  5786                           
  5787                           ; BSR set to: 0
  5788                           ;inc\CANlib.h: 461: tamp = identifier & 0x0000FF00;
  5789  0011FE  0E00               	movlw	0
  5790  001200  0100               	movlb	0	; () banked
  5791  001202  159E               	andwf	CANsendMessage@identifier& (0+255),w,b
  5792  001204  0100               	movlb	0	; () banked
  5793  001206  6FAA               	movwf	CANsendMessage@tamp& (0+255),b
  5794  001208  0EFF               	movlw	255
  5795  00120A  0100               	movlb	0	; () banked
  5796  00120C  159F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5797  00120E  0100               	movlb	0	; () banked
  5798  001210  6FAB               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5799  001212  0E00               	movlw	0
  5800  001214  0100               	movlb	0	; () banked
  5801  001216  15A0               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5802  001218  0100               	movlb	0	; () banked
  5803  00121A  6FAC               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5804  00121C  0E00               	movlw	0
  5805  00121E  0100               	movlb	0	; () banked
  5806  001220  15A1               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5807  001222  0100               	movlb	0	; () banked
  5808  001224  6FAD               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;inc\CANlib.h: 462: tamp = tamp >> 8;
  5812  001226  C0AA  F0A6         	movff	CANsendMessage@tamp,??_CANsendMessage
  5813  00122A  C0AB  F0A7         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5814  00122E  C0AC  F0A8         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5815  001232  C0AD  F0A9         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5816  001236  C0A7  F0A6         	movff	??_CANsendMessage+1,??_CANsendMessage
  5817  00123A  C0A8  F0A7         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  5818  00123E  C0A9  F0A8         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  5819  001242  0100               	movlb	0	; () banked
  5820  001244  6BA9               	clrf	(??_CANsendMessage+3)& (0+255),b
  5821  001246  C0A6  F0AA         	movff	??_CANsendMessage,CANsendMessage@tamp
  5822  00124A  C0A7  F0AB         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5823  00124E  C0A8  F0AC         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5824  001252  C0A9  F0AD         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;inc\CANlib.h: 463: TXB2EIDH = (unsigned char) tamp;
  5828  001256  C0AA  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;inc\CANlib.h: 465: TXB2SIDL = 0x00;
  5832  00125A  0E00               	movlw	0
  5833  00125C  010F               	movlb	15	; () banked
  5834  00125E  6F22               	movwf	34,b	;volatile
  5835                           
  5836                           ; BSR set to: 15
  5837                           ;inc\CANlib.h: 466: TXB2SIDLbits.EXIDE = 0x01;
  5838  001260  010F               	movlb	15	; () banked
  5839  001262  8722               	bsf	34,3,b	;volatile
  5840                           
  5841                           ; BSR set to: 15
  5842                           ;inc\CANlib.h: 468: if (identifier & 0x00010000)
  5843  001264  0100               	movlb	0	; () banked
  5844  001266  A1A0               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  5845  001268  D002               	goto	l384
  5846                           
  5847                           ; BSR set to: 0
  5848                           ;inc\CANlib.h: 469: TXB2SIDLbits.EID16 = 0x01;
  5849  00126A  010F               	movlb	15	; () banked
  5850  00126C  8122               	bsf	34,0,b	;volatile
  5851  00126E                     l384:
  5852                           
  5853                           ;inc\CANlib.h: 470: if (identifier & 0x00020000)
  5854  00126E  0100               	movlb	0	; () banked
  5855  001270  A3A0               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  5856  001272  D002               	goto	l385
  5857                           
  5858                           ; BSR set to: 0
  5859                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID17 = 0x01;
  5860  001274  010F               	movlb	15	; () banked
  5861  001276  8322               	bsf	34,1,b	;volatile
  5862  001278                     l385:
  5863                           
  5864                           ;inc\CANlib.h: 472: if (identifier & 0x00040000)
  5865  001278  0100               	movlb	0	; () banked
  5866  00127A  A5A0               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  5867  00127C  D002               	goto	l386
  5868                           
  5869                           ; BSR set to: 0
  5870                           ;inc\CANlib.h: 473: TXB2SIDLbits.SID0 = 0x01;
  5871  00127E  010F               	movlb	15	; () banked
  5872  001280  8B22               	bsf	34,5,b	;volatile
  5873  001282                     l386:
  5874                           
  5875                           ;inc\CANlib.h: 474: if (identifier & 0x00080000)
  5876  001282  0100               	movlb	0	; () banked
  5877  001284  A7A0               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  5878  001286  D002               	goto	l387
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID1 = 0x01;
  5882  001288  010F               	movlb	15	; () banked
  5883  00128A  8D22               	bsf	34,6,b	;volatile
  5884  00128C                     l387:
  5885                           
  5886                           ;inc\CANlib.h: 476: if (identifier & 0x00100000)
  5887  00128C  0100               	movlb	0	; () banked
  5888  00128E  A9A0               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  5889  001290  D002               	goto	l4287
  5890                           
  5891                           ; BSR set to: 0
  5892                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID2 = 0x01;
  5893  001292  010F               	movlb	15	; () banked
  5894  001294  8F22               	bsf	34,7,b	;volatile
  5895  001296                     l4287:
  5896                           
  5897                           ;inc\CANlib.h: 479: tamp = (identifier >> 21);
  5898  001296  C09E  F0A6         	movff	CANsendMessage@identifier,??_CANsendMessage
  5899  00129A  C09F  F0A7         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5900  00129E  C0A0  F0A8         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5901  0012A2  C0A1  F0A9         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5902  0012A6  0E16               	movlw	22
  5903  0012A8  D006               	goto	u5860
  5904  0012AA                     u5865:
  5905  0012AA  0100               	movlb	0	; () banked
  5906  0012AC  90D8               	bcf	status,0,c
  5907  0012AE  33A9               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5908  0012B0  33A8               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5909  0012B2  33A7               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5910  0012B4  33A6               	rrcf	??_CANsendMessage& (0+255),f,b
  5911  0012B6                     u5860:
  5912  0012B6  2EE8               	decfsz	wreg,f,c
  5913  0012B8  D7F8               	goto	u5865
  5914  0012BA  C0A6  F0AA         	movff	??_CANsendMessage,CANsendMessage@tamp
  5915  0012BE  C0A7  F0AB         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5916  0012C2  C0A8  F0AC         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5917  0012C6  C0A9  F0AD         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5918                           
  5919                           ; BSR set to: 0
  5920                           ;inc\CANlib.h: 480: tamp = tamp & 0x000000FF;
  5921  0012CA  0100               	movlb	0	; () banked
  5922  0012CC  51AA               	movf	CANsendMessage@tamp& (0+255),w,b
  5923  0012CE  0100               	movlb	0	; () banked
  5924  0012D0  6FAA               	movwf	CANsendMessage@tamp& (0+255),b
  5925  0012D2  6BAB               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5926  0012D4  6BAC               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5927  0012D6  6BAD               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;inc\CANlib.h: 481: TXB2SIDH = (unsigned char) tamp;
  5931  0012D8  C0AA  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  5932                           
  5933                           ;inc\CANlib.h: 482: }
  5934  0012DC  D059               	goto	l4307
  5935  0012DE                     l383:
  5936                           
  5937                           ; BSR set to: 0
  5938                           ;inc\CANlib.h: 484: else
  5939                           ;inc\CANlib.h: 486: {
  5940                           ;inc\CANlib.h: 487: TXB2SIDLbits.EXIDE = 0x00;
  5941  0012DE  010F               	movlb	15	; () banked
  5942  0012E0  9722               	bcf	34,3,b	;volatile
  5943                           
  5944                           ; BSR set to: 15
  5945                           ;inc\CANlib.h: 489: tamp = (identifier >> 3);
  5946  0012E2  C09E  F0A6         	movff	CANsendMessage@identifier,??_CANsendMessage
  5947  0012E6  C09F  F0A7         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5948  0012EA  C0A0  F0A8         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5949  0012EE  C0A1  F0A9         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5950  0012F2  0E04               	movlw	4
  5951  0012F4  D006               	goto	u5870
  5952  0012F6                     u5875:
  5953  0012F6  0100               	movlb	0	; () banked
  5954  0012F8  90D8               	bcf	status,0,c
  5955  0012FA  33A9               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5956  0012FC  33A8               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5957  0012FE  33A7               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5958  001300  33A6               	rrcf	??_CANsendMessage& (0+255),f,b
  5959  001302                     u5870:
  5960  001302  2EE8               	decfsz	wreg,f,c
  5961  001304  D7F8               	goto	u5875
  5962  001306  C0A6  F0AA         	movff	??_CANsendMessage,CANsendMessage@tamp
  5963  00130A  C0A7  F0AB         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5964  00130E  C0A8  F0AC         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5965  001312  C0A9  F0AD         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5966                           
  5967                           ; BSR set to: 0
  5968                           ;inc\CANlib.h: 490: tamp = tamp & 0x000000FF;
  5969  001316  0100               	movlb	0	; () banked
  5970  001318  51AA               	movf	CANsendMessage@tamp& (0+255),w,b
  5971  00131A  0100               	movlb	0	; () banked
  5972  00131C  6FAA               	movwf	CANsendMessage@tamp& (0+255),b
  5973  00131E  6BAB               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5974  001320  6BAC               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5975  001322  6BAD               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;inc\CANlib.h: 491: TXB2SIDH = (unsigned char) tamp;
  5979  001324  C0AA  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;inc\CANlib.h: 493: tamp = identifier & 0x00000007;
  5983  001328  0E07               	movlw	7
  5984  00132A  0100               	movlb	0	; () banked
  5985  00132C  159E               	andwf	CANsendMessage@identifier& (0+255),w,b
  5986  00132E  0100               	movlb	0	; () banked
  5987  001330  6FAA               	movwf	CANsendMessage@tamp& (0+255),b
  5988  001332  0E00               	movlw	0
  5989  001334  0100               	movlb	0	; () banked
  5990  001336  159F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5991  001338  0100               	movlb	0	; () banked
  5992  00133A  6FAB               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5993  00133C  0E00               	movlw	0
  5994  00133E  0100               	movlb	0	; () banked
  5995  001340  15A0               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5996  001342  0100               	movlb	0	; () banked
  5997  001344  6FAC               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5998  001346  0E00               	movlw	0
  5999  001348  0100               	movlb	0	; () banked
  6000  00134A  15A1               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6001  00134C  0100               	movlb	0	; () banked
  6002  00134E  6FAD               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;inc\CANlib.h: 494: tamp = tamp << 5;
  6006  001350  C0AA  F0A6         	movff	CANsendMessage@tamp,??_CANsendMessage
  6007  001354  C0AB  F0A7         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6008  001358  C0AC  F0A8         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6009  00135C  C0AD  F0A9         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6010  001360  0E05               	movlw	5
  6011  001362                     u5885:
  6012  001362  90D8               	bcf	status,0,c
  6013  001364  0100               	movlb	0	; () banked
  6014  001366  37A6               	rlcf	??_CANsendMessage& (0+255),f,b
  6015  001368  37A7               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  6016  00136A  37A8               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  6017  00136C  37A9               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  6018  00136E  2EE8               	decfsz	wreg,f,c
  6019  001370  D7F8               	goto	u5885
  6020  001372  C0A6  F0AA         	movff	??_CANsendMessage,CANsendMessage@tamp
  6021  001376  C0A7  F0AB         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6022  00137A  C0A8  F0AC         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6023  00137E  C0A9  F0AD         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6024                           
  6025                           ; BSR set to: 0
  6026                           ;inc\CANlib.h: 495: TXB2SIDL = TXB2SIDL & 0b00011111;
  6027  001382  010F               	movlb	15	; () banked
  6028  001384  5122               	movf	34,w,b	;volatile
  6029  001386  0B1F               	andlw	31
  6030  001388  010F               	movlb	15	; () banked
  6031  00138A  6F22               	movwf	34,b	;volatile
  6032                           
  6033                           ; BSR set to: 15
  6034                           ;inc\CANlib.h: 496: TXB2SIDL = (unsigned char) tamp;
  6035  00138C  C0AA  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  6036  001390                     l4307:
  6037                           
  6038                           ;inc\CANlib.h: 497: }
  6039                           ;inc\CANlib.h: 499: if (0b00000001 & flags)
  6040  001390  0100               	movlb	0	; () banked
  6041  001392  A1A5               	btfss	CANsendMessage@flags& (0+255),0,b
  6042  001394  D003               	goto	l390
  6043                           
  6044                           ; BSR set to: 0
  6045                           ;inc\CANlib.h: 500: TXB2CONbits.TXPRI0 = 0x01;
  6046  001396  010F               	movlb	15	; () banked
  6047  001398  8120               	bsf	32,0,b	;volatile
  6048  00139A  D002               	goto	l391
  6049  00139C                     l390:
  6050                           
  6051                           ; BSR set to: 0
  6052                           ;inc\CANlib.h: 501: else
  6053                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x00;
  6054  00139C  010F               	movlb	15	; () banked
  6055  00139E  9120               	bcf	32,0,b	;volatile
  6056  0013A0                     l391:
  6057                           
  6058                           ; BSR set to: 15
  6059                           ;inc\CANlib.h: 503: if (0b00000010 & flags)
  6060  0013A0  0100               	movlb	0	; () banked
  6061  0013A2  A3A5               	btfss	CANsendMessage@flags& (0+255),1,b
  6062  0013A4  D003               	goto	l392
  6063                           
  6064                           ; BSR set to: 0
  6065                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI1 = 0x01;
  6066  0013A6  010F               	movlb	15	; () banked
  6067  0013A8  8320               	bsf	32,1,b	;volatile
  6068  0013AA  D002               	goto	l4313
  6069  0013AC                     l392:
  6070                           
  6071                           ; BSR set to: 0
  6072                           ;inc\CANlib.h: 505: else
  6073                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x00;
  6074  0013AC  010F               	movlb	15	; () banked
  6075  0013AE  9320               	bcf	32,1,b	;volatile
  6076  0013B0                     l4313:
  6077                           
  6078                           ; BSR set to: 15
  6079                           ;inc\CANlib.h: 508: TXB2D0 = data[0];
  6080  0013B0  C0A2  FFD9         	movff	CANsendMessage@data,fsr2l
  6081  0013B4  C0A3  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6082  0013B8  50DF               	movf	indf2,w,c
  6083  0013BA  010F               	movlb	15	; () banked
  6084  0013BC  6F26               	movwf	38,b	;volatile
  6085                           
  6086                           ; BSR set to: 15
  6087                           ;inc\CANlib.h: 509: TXB2D1 = data[1];
  6088  0013BE  0100               	movlb	0	; () banked
  6089  0013C0  EE20 F001          	lfsr	2,1
  6090  0013C4  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6091  0013C6  26D9               	addwf	fsr2l,f,c
  6092  0013C8  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6093  0013CA  22DA               	addwfc	fsr2h,f,c
  6094  0013CC  50DF               	movf	indf2,w,c
  6095  0013CE  010F               	movlb	15	; () banked
  6096  0013D0  6F27               	movwf	39,b	;volatile
  6097                           
  6098                           ; BSR set to: 15
  6099                           ;inc\CANlib.h: 510: TXB2D2 = data[2];
  6100  0013D2  0100               	movlb	0	; () banked
  6101  0013D4  EE20 F002          	lfsr	2,2
  6102  0013D8  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6103  0013DA  26D9               	addwf	fsr2l,f,c
  6104  0013DC  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6105  0013DE  22DA               	addwfc	fsr2h,f,c
  6106  0013E0  50DF               	movf	indf2,w,c
  6107  0013E2  010F               	movlb	15	; () banked
  6108  0013E4  6F28               	movwf	40,b	;volatile
  6109                           
  6110                           ; BSR set to: 15
  6111                           ;inc\CANlib.h: 511: TXB2D3 = data[3];
  6112  0013E6  0100               	movlb	0	; () banked
  6113  0013E8  EE20 F003          	lfsr	2,3
  6114  0013EC  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6115  0013EE  26D9               	addwf	fsr2l,f,c
  6116  0013F0  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6117  0013F2  22DA               	addwfc	fsr2h,f,c
  6118  0013F4  50DF               	movf	indf2,w,c
  6119  0013F6  010F               	movlb	15	; () banked
  6120  0013F8  6F29               	movwf	41,b	;volatile
  6121                           
  6122                           ; BSR set to: 15
  6123                           ;inc\CANlib.h: 512: TXB2D4 = data[4];
  6124  0013FA  0100               	movlb	0	; () banked
  6125  0013FC  EE20 F004          	lfsr	2,4
  6126  001400  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6127  001402  26D9               	addwf	fsr2l,f,c
  6128  001404  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6129  001406  22DA               	addwfc	fsr2h,f,c
  6130  001408  50DF               	movf	indf2,w,c
  6131  00140A  010F               	movlb	15	; () banked
  6132  00140C  6F2A               	movwf	42,b	;volatile
  6133                           
  6134                           ; BSR set to: 15
  6135                           ;inc\CANlib.h: 513: TXB2D5 = data[5];
  6136  00140E  0100               	movlb	0	; () banked
  6137  001410  EE20 F005          	lfsr	2,5
  6138  001414  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6139  001416  26D9               	addwf	fsr2l,f,c
  6140  001418  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6141  00141A  22DA               	addwfc	fsr2h,f,c
  6142  00141C  50DF               	movf	indf2,w,c
  6143  00141E  010F               	movlb	15	; () banked
  6144  001420  6F2B               	movwf	43,b	;volatile
  6145                           
  6146                           ; BSR set to: 15
  6147                           ;inc\CANlib.h: 514: TXB2D6 = data[6];
  6148  001422  0100               	movlb	0	; () banked
  6149  001424  EE20 F006          	lfsr	2,6
  6150  001428  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6151  00142A  26D9               	addwf	fsr2l,f,c
  6152  00142C  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6153  00142E  22DA               	addwfc	fsr2h,f,c
  6154  001430  50DF               	movf	indf2,w,c
  6155  001432  010F               	movlb	15	; () banked
  6156  001434  6F2C               	movwf	44,b	;volatile
  6157                           
  6158                           ; BSR set to: 15
  6159                           ;inc\CANlib.h: 515: TXB2D7 = data[7];
  6160  001436  0100               	movlb	0	; () banked
  6161  001438  EE20 F007          	lfsr	2,7
  6162  00143C  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6163  00143E  26D9               	addwf	fsr2l,f,c
  6164  001440  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6165  001442  22DA               	addwfc	fsr2h,f,c
  6166  001444  50DF               	movf	indf2,w,c
  6167  001446  010F               	movlb	15	; () banked
  6168  001448  6F2D               	movwf	45,b	;volatile
  6169                           
  6170                           ; BSR set to: 15
  6171                           ;inc\CANlib.h: 517: TXB2CONbits.TXREQ = 0x01;
  6172  00144A  010F               	movlb	15	; () banked
  6173  00144C  8720               	bsf	32,3,b	;volatile
  6174                           
  6175                           ; BSR set to: 15
  6176                           ;inc\CANlib.h: 519: return;
  6177  00144E  0012               	return	
  6178  001450                     __end_of_CANsendMessage:
  6179                           	opt stack 0
  6180                           tblptru	equ	0xFF8
  6181                           tblptrh	equ	0xFF7
  6182                           tblptrl	equ	0xFF6
  6183                           tablat	equ	0xFF5
  6184                           intcon	equ	0xFF2
  6185                           postinc0	equ	0xFEE
  6186                           wreg	equ	0xFE8
  6187                           postdec1	equ	0xFE5
  6188                           fsr1l	equ	0xFE1
  6189                           indf2	equ	0xFDF
  6190                           fsr2h	equ	0xFDA
  6191                           fsr2l	equ	0xFD9
  6192                           status	equ	0xFD8
  6193                           
  6194 ;; *************** function _CANisTxReady *****************
  6195 ;; Defined at:
  6196 ;;		line 1153 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;		None
  6199 ;; Auto vars:     Size  Location     Type
  6200 ;;		None
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  1    wreg      unsigned char 
  6203 ;; Registers used:
  6204 ;;		wreg, status,2
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6210 ;;      Params:         0       0       0       0
  6211 ;;      Locals:         1       0       0       0
  6212 ;;      Temps:          0       0       0       0
  6213 ;;      Totals:         1       0       0       0
  6214 ;;Total ram usage:        1 bytes
  6215 ;; Hardware stack levels used:    1
  6216 ;; Hardware stack levels required when called:    3
  6217 ;; This function calls:
  6218 ;;		Nothing
  6219 ;; This function is called by:
  6220 ;;		_can_interpreter
  6221 ;; This function uses a non-reentrant model
  6222 ;;
  6223                           
  6224                           	psect	text11
  6225  00232A                     __ptext11:
  6226                           	opt stack 0
  6227  00232A                     _CANisTxReady:
  6228                           	opt stack 26
  6229                           
  6230                           ;inc\CANlib.h: 1155: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  6231                           
  6232                           ; BSR set to: 15
  6233                           ;incstack = 0
  6234  00232A  0E01               	movlw	1
  6235  00232C  6E20               	movwf	_CANisTxReady$2927,c
  6236  00232E  010F               	movlb	15	; () banked
  6237  002330  A740               	btfss	64,3,b	;volatile
  6238  002332  D008               	goto	l544
  6239                           
  6240                           ; BSR set to: 15
  6241  002334  010F               	movlb	15	; () banked
  6242  002336  A730               	btfss	48,3,b	;volatile
  6243  002338  D005               	goto	l544
  6244                           
  6245                           ; BSR set to: 15
  6246  00233A  010F               	movlb	15	; () banked
  6247  00233C  A720               	btfss	32,3,b	;volatile
  6248  00233E  D002               	goto	l544
  6249                           
  6250                           ; BSR set to: 15
  6251  002340  0E00               	movlw	0
  6252  002342  6E20               	movwf	_CANisTxReady$2927,c
  6253  002344                     l544:
  6254                           
  6255                           ; BSR set to: 15
  6256  002344  5020               	movf	_CANisTxReady$2927,w,c
  6257  002346  0012               	return	
  6258  002348                     __end_of_CANisTxReady:
  6259                           	opt stack 0
  6260                           tblptru	equ	0xFF8
  6261                           tblptrh	equ	0xFF7
  6262                           tblptrl	equ	0xFF6
  6263                           tablat	equ	0xFF5
  6264                           intcon	equ	0xFF2
  6265                           postinc0	equ	0xFEE
  6266                           wreg	equ	0xFE8
  6267                           postdec1	equ	0xFE5
  6268                           fsr1l	equ	0xFE1
  6269                           indf2	equ	0xFDF
  6270                           fsr2h	equ	0xFDA
  6271                           fsr2l	equ	0xFD9
  6272                           status	equ	0xFD8
  6273                           
  6274 ;; *************** function _ISR_bassa *****************
  6275 ;; Defined at:
  6276 ;;		line 66 in file "CanToSerial.c"
  6277 ;; Parameters:    Size  Location     Type
  6278 ;;		None
  6279 ;; Auto vars:     Size  Location     Type
  6280 ;;  i               1   30[COMRAM] unsigned char 
  6281 ;; Return value:  Size  Location     Type
  6282 ;;                  1    wreg      void 
  6283 ;; Registers used:
  6284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6285 ;; Tracked objects:
  6286 ;;		On entry : 0/0
  6287 ;;		On exit  : 0/0
  6288 ;;		Unchanged: 0/0
  6289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6290 ;;      Params:         0       0       0       0
  6291 ;;      Locals:         1       0       0       0
  6292 ;;      Temps:         18       0       0       0
  6293 ;;      Totals:        19       0       0       0
  6294 ;;Total ram usage:       19 bytes
  6295 ;; Hardware stack levels used:    1
  6296 ;; Hardware stack levels required when called:    2
  6297 ;; This function calls:
  6298 ;;		_CANisRxReady
  6299 ;;		_CANreceiveMessage
  6300 ;;		_getsUSART
  6301 ;; This function is called by:
  6302 ;;		Interrupt level 1
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	intcodelo
  6307  000018                     __pintcodelo:
  6308                           	opt stack 0
  6309  000018                     _ISR_bassa:
  6310                           	opt stack 25
  6311                           
  6312                           ; BSR set to: 15
  6313                           ;incstack = 0
  6314  000018  8040               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  6315  00001A  CFD8 F00E          	movff	status,??_ISR_bassa+1
  6316  00001E  CFE8 F00F          	movff	wreg,??_ISR_bassa+2
  6317  000022  CFE0 F010          	movff	bsr,??_ISR_bassa+3
  6318  000026  CFFA F011          	movff	pclath,??_ISR_bassa+4
  6319  00002A  CFFB F012          	movff	pclatu,??_ISR_bassa+5
  6320  00002E  CFE9 F013          	movff	fsr0l,??_ISR_bassa+6
  6321  000032  CFEA F014          	movff	fsr0h,??_ISR_bassa+7
  6322  000036  CFE1 F015          	movff	fsr1l,??_ISR_bassa+8
  6323  00003A  CFE2 F016          	movff	fsr1h,??_ISR_bassa+9
  6324  00003E  CFD9 F017          	movff	fsr2l,??_ISR_bassa+10
  6325  000042  CFDA F018          	movff	fsr2h,??_ISR_bassa+11
  6326  000046  CFF3 F019          	movff	prodl,??_ISR_bassa+12
  6327  00004A  CFF4 F01A          	movff	prodh,??_ISR_bassa+13
  6328  00004E  CFF6 F01B          	movff	tblptrl,??_ISR_bassa+14
  6329  000052  CFF7 F01C          	movff	tblptrh,??_ISR_bassa+15
  6330  000056  CFF8 F01D          	movff	tblptru,??_ISR_bassa+16
  6331  00005A  CFF5 F01E          	movff	tablat,??_ISR_bassa+17
  6332                           
  6333                           ;CanToSerial.c: 67: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  6334  00005E  A0A4               	btfss	4004,0,c	;volatile
  6335  000060  B2A4               	btfsc	4004,1,c	;volatile
  6336  000062  D001               	goto	i1l3549
  6337  000064  D045               	goto	i1l610
  6338  000066                     i1l3549:
  6339                           
  6340                           ;CanToSerial.c: 68: PORTDbits.RD3 = ~PORTDbits.RD3;
  6341  000066  A683               	btfss	3971,3,c	;volatile
  6342  000068  D002               	goto	i1u433_20
  6343  00006A  0E01               	movlw	1
  6344  00006C  D001               	goto	i1u433_26
  6345  00006E                     i1u433_20:
  6346  00006E  0E00               	movlw	0
  6347  000070                     i1u433_26:
  6348  000070  0AFF               	xorlw	255
  6349  000072  6E0D               	movwf	??_ISR_bassa& (0+255),c
  6350  000074  460D               	rlncf	??_ISR_bassa,f,c
  6351  000076  460D               	rlncf	??_ISR_bassa,f,c
  6352  000078  460D               	rlncf	??_ISR_bassa,f,c
  6353  00007A  5083               	movf	3971,w,c	;volatile
  6354  00007C  180D               	xorwf	??_ISR_bassa,w,c
  6355  00007E  0BF7               	andlw	-9
  6356  000080  180D               	xorwf	??_ISR_bassa,w,c
  6357  000082  6E83               	movwf	3971,c	;volatile
  6358                           
  6359                           ;CanToSerial.c: 69: if (CANisRxReady()) {
  6360  000084  ECB3  F011         	call	_CANisRxReady	;wreg free
  6361  000088  0900               	iorlw	0
  6362  00008A  B4D8               	btfsc	status,2,c
  6363  00008C  D02F               	goto	i1l613
  6364                           
  6365                           ;CanToSerial.c: 70: CANreceiveMessage(&msg);
  6366  00008E  0E68               	movlw	low _msg
  6367  000090  6E01               	movwf	CANreceiveMessage@msg,c
  6368  000092  0E00               	movlw	high _msg
  6369  000094  6E02               	movwf	CANreceiveMessage@msg+1,c
  6370  000096  EC28  F00A         	call	_CANreceiveMessage	;wreg free
  6371                           
  6372                           ;CanToSerial.c: 71: RTR_Flag = msg.RTR;
  6373  00009A  0100               	movlb	0	; () banked
  6374  00009C  A176               	btfss	(_msg+14)& (0+255),0,b
  6375  00009E  D002               	goto	i1u435_20
  6376  0000A0  803F               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
  6377  0000A2  D001               	goto	i1l3557
  6378  0000A4                     i1u435_20:
  6379  0000A4  903F               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
  6380  0000A6                     i1l3557:
  6381                           
  6382                           ;CanToSerial.c: 72: id = msg.identifier;
  6383  0000A6  C068  F022         	movff	_msg,_id
  6384  0000AA  C069  F023         	movff	_msg+1,_id+1
  6385  0000AE  C06A  F024         	movff	_msg+2,_id+2
  6386  0000B2  C06B  F025         	movff	_msg+3,_id+3
  6387                           
  6388                           ;CanToSerial.c: 73: newMessageCan = 1;
  6389  0000B6  843F               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  6390                           
  6391                           ;CanToSerial.c: 74: for (char i = 0; i < 8; i++) {
  6392  0000B8  0E00               	movlw	0
  6393  0000BA  6E1F               	movwf	ISR_bassa@i,c
  6394  0000BC                     i1l3563:
  6395  0000BC  0E07               	movlw	7
  6396  0000BE  641F               	cpfsgt	ISR_bassa@i,c
  6397  0000C0  D001               	goto	i1l3567
  6398  0000C2  D014               	goto	i1l613
  6399  0000C4                     i1l3567:
  6400                           
  6401                           ;CanToSerial.c: 75: data[i] = msg.data[i];
  6402  0000C4  501F               	movf	ISR_bassa@i,w,c
  6403  0000C6  0D01               	mullw	1
  6404  0000C8  0E6C               	movlw	low (_msg+4)
  6405  0000CA  24F3               	addwf	prodl,w,c
  6406  0000CC  6ED9               	movwf	fsr2l,c
  6407  0000CE  0E00               	movlw	high (_msg+4)
  6408  0000D0  20F4               	addwfc	prodh,w,c
  6409  0000D2  6EDA               	movwf	fsr2h,c
  6410  0000D4  501F               	movf	ISR_bassa@i,w,c
  6411  0000D6  0D01               	mullw	1
  6412  0000D8  0E7F               	movlw	low _data
  6413  0000DA  24F3               	addwf	prodl,w,c
  6414  0000DC  6EE1               	movwf	fsr1l,c
  6415  0000DE  0E00               	movlw	high _data
  6416  0000E0  20F4               	addwfc	prodh,w,c
  6417  0000E2  6EE2               	movwf	fsr1h,c
  6418  0000E4  CFDF FFE7          	movff	indf2,indf1
  6419  0000E8  2A1F               	incf	ISR_bassa@i,f,c
  6420  0000EA  D7E8               	goto	i1l3563
  6421  0000EC                     i1l613:
  6422                           
  6423                           ;CanToSerial.c: 76: }
  6424                           ;CanToSerial.c: 77: }
  6425                           ;CanToSerial.c: 78: PIR3bits.RXB0IF = 0;
  6426  0000EC  90A4               	bcf	4004,0,c	;volatile
  6427                           
  6428                           ;CanToSerial.c: 79: PIR3bits.RXB1IF = 0;
  6429  0000EE  92A4               	bcf	4004,1,c	;volatile
  6430  0000F0                     i1l610:
  6431                           
  6432                           ;CanToSerial.c: 80: }
  6433                           ;CanToSerial.c: 81: if (PIR1bits.RC1IF == 1) {
  6434  0000F0  AA9E               	btfss	3998,5,c	;volatile
  6435  0000F2  D032               	goto	i1l616
  6436                           
  6437                           ;CanToSerial.c: 82: PORTDbits.RD1 = ~PORTDbits.RD1;
  6438  0000F4  A283               	btfss	3971,1,c	;volatile
  6439  0000F6  D002               	goto	i1u440_20
  6440  0000F8  0E01               	movlw	1
  6441  0000FA  D001               	goto	i1u440_26
  6442  0000FC                     i1u440_20:
  6443  0000FC  0E00               	movlw	0
  6444  0000FE                     i1u440_26:
  6445  0000FE  0AFF               	xorlw	255
  6446  000100  6E0D               	movwf	??_ISR_bassa& (0+255),c
  6447  000102  460D               	rlncf	??_ISR_bassa,f,c
  6448  000104  5083               	movf	3971,w,c	;volatile
  6449  000106  180D               	xorwf	??_ISR_bassa,w,c
  6450  000108  0BFD               	andlw	-3
  6451  00010A  180D               	xorwf	??_ISR_bassa,w,c
  6452  00010C  6E83               	movwf	3971,c	;volatile
  6453                           
  6454                           ;CanToSerial.c: 83: getsUSART((char*) USART_Rx, 7);
  6455  00010E  0E97               	movlw	low _USART_Rx
  6456  000110  6E02               	movwf	getsUSART@buffer,c
  6457  000112  0E00               	movlw	high _USART_Rx
  6458  000114  6E03               	movwf	getsUSART@buffer+1,c
  6459  000116  0E07               	movlw	7
  6460  000118  6E04               	movwf	getsUSART@len,c
  6461  00011A  EC6B  F011         	call	_getsUSART	;wreg free
  6462                           
  6463                           ;CanToSerial.c: 84: if ((USART_Rx[0] == 0xAA)&&(USART_Rx[6] == 0xAA)) {
  6464  00011E  0EAA               	movlw	170
  6465  000120  0100               	movlb	0	; () banked
  6466  000122  1997               	xorwf	_USART_Rx& (0+255),w,b
  6467  000124  A4D8               	btfss	status,2,c
  6468  000126  D017               	goto	i1l617
  6469                           
  6470                           ; BSR set to: 0
  6471  000128  0EAA               	movlw	170
  6472  00012A  0100               	movlb	0	; () banked
  6473  00012C  199D               	xorwf	(_USART_Rx+6)& (0+255),w,b
  6474  00012E  A4D8               	btfss	status,2,c
  6475  000130  D012               	goto	i1l617
  6476                           
  6477                           ; BSR set to: 0
  6478                           ;CanToSerial.c: 86: set_steering_old = set_steering[0];
  6479  000132  C08F  F036         	movff	_set_steering,_set_steering_old	;volatile
  6480                           
  6481                           ;CanToSerial.c: 87: set_speed_old[0] = set_speed[0];
  6482  000136  C087  F060         	movff	_set_speed,_set_speed_old	;volatile
  6483                           
  6484                           ;CanToSerial.c: 88: set_speed_old[1] = set_speed[1];
  6485  00013A  C088  F061         	movff	_set_speed+1,_set_speed_old+1	;volatile
  6486                           
  6487                           ;CanToSerial.c: 89: analogic_brake_old = analogic_brake[0];
  6488  00013E  C077  F035         	movff	_analogic_brake,_analogic_brake_old	;volatile
  6489                           
  6490                           ;CanToSerial.c: 91: set_speed[2] = USART_Rx[1];
  6491  000142  C098  F089         	movff	_USART_Rx+1,_set_speed+2
  6492                           
  6493                           ;CanToSerial.c: 92: set_speed[0] = USART_Rx[2];
  6494  000146  C099  F087         	movff	_USART_Rx+2,_set_speed
  6495                           
  6496                           ;CanToSerial.c: 93: set_speed[1] = USART_Rx[3];
  6497  00014A  C09A  F088         	movff	_USART_Rx+3,_set_speed+1
  6498                           
  6499                           ;CanToSerial.c: 94: set_steering[0] = USART_Rx[4];
  6500  00014E  C09B  F08F         	movff	_USART_Rx+4,_set_steering
  6501                           
  6502                           ;CanToSerial.c: 95: analogic_brake[0] = USART_Rx[5];
  6503  000152  C09C  F077         	movff	_USART_Rx+5,_analogic_brake
  6504  000156                     i1l617:
  6505                           
  6506                           ; BSR set to: 0
  6507                           ;CanToSerial.c: 96: }
  6508                           ;CanToSerial.c: 97: PIR1bits.RC1IF = 0;
  6509  000156  9A9E               	bcf	3998,5,c	;volatile
  6510  000158                     i1l616:
  6511                           
  6512                           ;CanToSerial.c: 98: }
  6513                           ;CanToSerial.c: 99: if (PIR2bits.TMR3IF) {
  6514  000158  A2A1               	btfss	4001,1,c	;volatile
  6515  00015A  D00B               	goto	i1l619
  6516                           
  6517                           ;CanToSerial.c: 100: timeCounter++;
  6518  00015C  0E01               	movlw	1
  6519  00015E  262A               	addwf	_timeCounter,f,c	;volatile
  6520  000160  0E00               	movlw	0
  6521  000162  222B               	addwfc	_timeCounter+1,f,c	;volatile
  6522  000164  222C               	addwfc	_timeCounter+2,f,c	;volatile
  6523  000166  222D               	addwfc	_timeCounter+3,f,c	;volatile
  6524                           
  6525                           ;CanToSerial.c: 101: TMR3H = 0x63;
  6526  000168  0E63               	movlw	99
  6527  00016A  6EB3               	movwf	4019,c	;volatile
  6528                           
  6529                           ;CanToSerial.c: 102: TMR3L = 0xC0;
  6530  00016C  0EC0               	movlw	192
  6531  00016E  6EB2               	movwf	4018,c	;volatile
  6532                           
  6533                           ;CanToSerial.c: 103: PIR2bits.TMR3IF = 0;
  6534  000170  92A1               	bcf	4001,1,c	;volatile
  6535  000172                     i1l619:
  6536  000172  C01E  FFF5         	movff	??_ISR_bassa+17,tablat
  6537  000176  C01D  FFF8         	movff	??_ISR_bassa+16,tblptru
  6538  00017A  C01C  FFF7         	movff	??_ISR_bassa+15,tblptrh
  6539  00017E  C01B  FFF6         	movff	??_ISR_bassa+14,tblptrl
  6540  000182  C01A  FFF4         	movff	??_ISR_bassa+13,prodh
  6541  000186  C019  FFF3         	movff	??_ISR_bassa+12,prodl
  6542  00018A  C018  FFDA         	movff	??_ISR_bassa+11,fsr2h
  6543  00018E  C017  FFD9         	movff	??_ISR_bassa+10,fsr2l
  6544  000192  C016  FFE2         	movff	??_ISR_bassa+9,fsr1h
  6545  000196  C015  FFE1         	movff	??_ISR_bassa+8,fsr1l
  6546  00019A  C014  FFEA         	movff	??_ISR_bassa+7,fsr0h
  6547  00019E  C013  FFE9         	movff	??_ISR_bassa+6,fsr0l
  6548  0001A2  C012  FFFB         	movff	??_ISR_bassa+5,pclatu
  6549  0001A6  C011  FFFA         	movff	??_ISR_bassa+4,pclath
  6550  0001AA  C010  FFE0         	movff	??_ISR_bassa+3,bsr
  6551  0001AE  C00F  FFE8         	movff	??_ISR_bassa+2,wreg
  6552  0001B2  C00E  FFD8         	movff	??_ISR_bassa+1,status
  6553  0001B6  9040               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  6554  0001B8  0010               	retfie	
  6555  0001BA                     __end_of_ISR_bassa:
  6556                           	opt stack 0
  6557                           pclatu	equ	0xFFB
  6558                           pclath	equ	0xFFA
  6559                           tblptru	equ	0xFF8
  6560                           tblptrh	equ	0xFF7
  6561                           tblptrl	equ	0xFF6
  6562                           tablat	equ	0xFF5
  6563                           prodh	equ	0xFF4
  6564                           prodl	equ	0xFF3
  6565                           intcon	equ	0xFF2
  6566                           postinc0	equ	0xFEE
  6567                           fsr0h	equ	0xFEA
  6568                           fsr0l	equ	0xFE9
  6569                           wreg	equ	0xFE8
  6570                           indf1	equ	0xFE7
  6571                           postdec1	equ	0xFE5
  6572                           fsr1h	equ	0xFE2
  6573                           fsr1l	equ	0xFE1
  6574                           bsr	equ	0xFE0
  6575                           indf2	equ	0xFDF
  6576                           fsr2h	equ	0xFDA
  6577                           fsr2l	equ	0xFD9
  6578                           status	equ	0xFD8
  6579                           
  6580 ;; *************** function _getsUSART *****************
  6581 ;; Defined at:
  6582 ;;		line 14 in file "sources\pic18\plib\USART\ugets.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;  buffer          2    1[COMRAM] PTR unsigned char 
  6585 ;;		 -> USART_Rx(7), 
  6586 ;;  len             1    3[COMRAM] unsigned char 
  6587 ;; Auto vars:     Size  Location     Type
  6588 ;;  i               1    5[COMRAM] unsigned char 
  6589 ;;  data            1    4[COMRAM] unsigned char 
  6590 ;; Return value:  Size  Location     Type
  6591 ;;                  1    wreg      void 
  6592 ;; Registers used:
  6593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6594 ;; Tracked objects:
  6595 ;;		On entry : 0/0
  6596 ;;		On exit  : 0/0
  6597 ;;		Unchanged: 0/0
  6598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6599 ;;      Params:         3       0       0       0
  6600 ;;      Locals:         2       0       0       0
  6601 ;;      Temps:          0       0       0       0
  6602 ;;      Totals:         5       0       0       0
  6603 ;;Total ram usage:        5 bytes
  6604 ;; Hardware stack levels used:    1
  6605 ;; Hardware stack levels required when called:    1
  6606 ;; This function calls:
  6607 ;;		_ReadUSART
  6608 ;; This function is called by:
  6609 ;;		_ISR_bassa
  6610 ;; This function uses a non-reentrant model
  6611 ;;
  6612                           
  6613                           	psect	text13
  6614  0022D6                     __ptext13:
  6615                           	opt stack 0
  6616  0022D6                     _getsUSART:
  6617                           	opt stack 25
  6618                           
  6619                           ;incstack = 0
  6620  0022D6  0E00               	movlw	0
  6621  0022D8  6E06               	movwf	getsUSART@i,c
  6622  0022DA  D00E               	goto	i1l3451
  6623  0022DC                     i1l656:
  6624  0022DC  AA9E               	btfss	3998,5,c	;volatile
  6625  0022DE  D7FE               	goto	i1l656
  6626  0022E0  ECA4  F011         	call	_ReadUSART	;wreg free
  6627  0022E4  6E05               	movwf	getsUSART@data,c
  6628  0022E6  C002  FFD9         	movff	getsUSART@buffer,fsr2l
  6629  0022EA  C003  FFDA         	movff	getsUSART@buffer+1,fsr2h
  6630  0022EE  C005  FFDF         	movff	getsUSART@data,indf2
  6631  0022F2  4A02               	infsnz	getsUSART@buffer,f,c
  6632  0022F4  2A03               	incf	getsUSART@buffer+1,f,c
  6633  0022F6  2A06               	incf	getsUSART@i,f,c
  6634  0022F8                     i1l3451:
  6635  0022F8  5004               	movf	getsUSART@len,w,c
  6636  0022FA  5C06               	subwf	getsUSART@i,w,c
  6637  0022FC  B0D8               	btfsc	status,0,c
  6638  0022FE  0012               	return	
  6639  002300  D7ED               	goto	i1l656
  6640  002302                     __end_of_getsUSART:
  6641                           	opt stack 0
  6642                           pclatu	equ	0xFFB
  6643                           pclath	equ	0xFFA
  6644                           tblptru	equ	0xFF8
  6645                           tblptrh	equ	0xFF7
  6646                           tblptrl	equ	0xFF6
  6647                           tablat	equ	0xFF5
  6648                           prodh	equ	0xFF4
  6649                           prodl	equ	0xFF3
  6650                           intcon	equ	0xFF2
  6651                           postinc0	equ	0xFEE
  6652                           fsr0h	equ	0xFEA
  6653                           fsr0l	equ	0xFE9
  6654                           wreg	equ	0xFE8
  6655                           indf1	equ	0xFE7
  6656                           postdec1	equ	0xFE5
  6657                           fsr1h	equ	0xFE2
  6658                           fsr1l	equ	0xFE1
  6659                           bsr	equ	0xFE0
  6660                           indf2	equ	0xFDF
  6661                           fsr2h	equ	0xFDA
  6662                           fsr2l	equ	0xFD9
  6663                           status	equ	0xFD8
  6664                           
  6665 ;; *************** function _ReadUSART *****************
  6666 ;; Defined at:
  6667 ;;		line 15 in file "sources\pic18\plib\USART\uread.c"
  6668 ;; Parameters:    Size  Location     Type
  6669 ;;		None
  6670 ;; Auto vars:     Size  Location     Type
  6671 ;;  data            1    0[COMRAM] unsigned char 
  6672 ;; Return value:  Size  Location     Type
  6673 ;;                  1    wreg      unsigned char 
  6674 ;; Registers used:
  6675 ;;		wreg, status,2, status,0
  6676 ;; Tracked objects:
  6677 ;;		On entry : 0/0
  6678 ;;		On exit  : 0/0
  6679 ;;		Unchanged: 0/0
  6680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6681 ;;      Params:         0       0       0       0
  6682 ;;      Locals:         1       0       0       0
  6683 ;;      Temps:          0       0       0       0
  6684 ;;      Totals:         1       0       0       0
  6685 ;;Total ram usage:        1 bytes
  6686 ;; Hardware stack levels used:    1
  6687 ;; This function calls:
  6688 ;;		Nothing
  6689 ;; This function is called by:
  6690 ;;		_getsUSART
  6691 ;; This function uses a non-reentrant model
  6692 ;;
  6693                           
  6694                           	psect	text14
  6695  002348                     __ptext14:
  6696                           	opt stack 0
  6697  002348                     _ReadUSART:
  6698                           	opt stack 25
  6699                           
  6700                           ;incstack = 0
  6701  002348  0EF2               	movlw	242
  6702  00234A  1634               	andwf	_USART_Status,f,c
  6703  00234C  ACAB               	btfss	4011,6,c	;volatile
  6704  00234E  D003               	goto	i1l714
  6705  002350  9034               	bcf	_USART_Status,0,c
  6706  002352  B0AB               	btfsc	4011,0,c	;volatile
  6707  002354  8034               	bsf	_USART_Status,0,c
  6708  002356                     i1l714:
  6709  002356  B4AB               	btfsc	4011,2,c	;volatile
  6710  002358  8434               	bsf	_USART_Status,2,c
  6711  00235A  B2AB               	btfsc	4011,1,c	;volatile
  6712  00235C  8634               	bsf	_USART_Status,3,c
  6713  00235E  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6714  002362  5001               	movf	ReadUSART@data,w,c
  6715  002364  0012               	return	
  6716  002366                     __end_of_ReadUSART:
  6717                           	opt stack 0
  6718                           pclatu	equ	0xFFB
  6719                           pclath	equ	0xFFA
  6720                           tblptru	equ	0xFF8
  6721                           tblptrh	equ	0xFF7
  6722                           tblptrl	equ	0xFF6
  6723                           tablat	equ	0xFF5
  6724                           prodh	equ	0xFF4
  6725                           prodl	equ	0xFF3
  6726                           intcon	equ	0xFF2
  6727                           postinc0	equ	0xFEE
  6728                           fsr0h	equ	0xFEA
  6729                           fsr0l	equ	0xFE9
  6730                           wreg	equ	0xFE8
  6731                           indf1	equ	0xFE7
  6732                           postdec1	equ	0xFE5
  6733                           fsr1h	equ	0xFE2
  6734                           fsr1l	equ	0xFE1
  6735                           bsr	equ	0xFE0
  6736                           indf2	equ	0xFDF
  6737                           fsr2h	equ	0xFDA
  6738                           fsr2l	equ	0xFD9
  6739                           status	equ	0xFD8
  6740                           
  6741 ;; *************** function _CANreceiveMessage *****************
  6742 ;; Defined at:
  6743 ;;		line 527 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6744 ;; Parameters:    Size  Location     Type
  6745 ;;  msg             2    0[COMRAM] PTR struct .
  6746 ;;		 -> msg(15), 
  6747 ;; Auto vars:     Size  Location     Type
  6748 ;;  tamp            1   11[COMRAM] unsigned char 
  6749 ;;  error           1   10[COMRAM] unsigned char 
  6750 ;; Return value:  Size  Location     Type
  6751 ;;                  1    wreg      unsigned char 
  6752 ;; Registers used:
  6753 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6754 ;; Tracked objects:
  6755 ;;		On entry : 0/0
  6756 ;;		On exit  : 0/0
  6757 ;;		Unchanged: 0/0
  6758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6759 ;;      Params:         2       0       0       0
  6760 ;;      Locals:         2       0       0       0
  6761 ;;      Temps:          8       0       0       0
  6762 ;;      Totals:        12       0       0       0
  6763 ;;Total ram usage:       12 bytes
  6764 ;; Hardware stack levels used:    1
  6765 ;; This function calls:
  6766 ;;		Nothing
  6767 ;; This function is called by:
  6768 ;;		_ISR_bassa
  6769 ;; This function uses a non-reentrant model
  6770 ;;
  6771                           
  6772                           	psect	text15
  6773  001450                     __ptext15:
  6774                           	opt stack 0
  6775  001450                     _CANreceiveMessage:
  6776                           	opt stack 26
  6777                           
  6778                           ;inc\CANlib.h: 529: BYTE tamp;
  6779                           ;inc\CANlib.h: 530: BYTE error = 0;
  6780                           
  6781                           ;incstack = 0
  6782  001450  0E00               	movlw	0
  6783  001452  6E0B               	movwf	CANreceiveMessage@error,c
  6784                           
  6785                           ;inc\CANlib.h: 532: if (COMSTATbits.RXB0OVFL == 0x01)
  6786  001454  BE74               	btfsc	3956,7,c	;volatile
  6787                           
  6788                           ;inc\CANlib.h: 533: error |= CAN_RX_BUFFER_1_OVFL;
  6789  001456  800B               	bsf	CANreceiveMessage@error,0,c
  6790                           
  6791                           ;inc\CANlib.h: 535: if (COMSTATbits.RXB1OVFL == 0x01)
  6792  001458  BC74               	btfsc	3956,6,c	;volatile
  6793                           
  6794                           ;inc\CANlib.h: 536: error |= CAN_RX_BUFFER_2_OVFL;
  6795  00145A  820B               	bsf	CANreceiveMessage@error,1,c
  6796                           
  6797                           ;inc\CANlib.h: 539: if (RXB1CONbits.RXFUL ==0x01)
  6798  00145C  010F               	movlb	15	; () banked
  6799  00145E  AF50               	btfss	80,7,b	;volatile
  6800  001460  D143               	goto	i1l398
  6801                           
  6802                           ; BSR set to: 15
  6803                           ;inc\CANlib.h: 540: {
  6804                           ;inc\CANlib.h: 541: msg->identifier = 0;
  6805  001462  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6806  001466  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6807  00146A  6ADE               	clrf	postinc2,c
  6808  00146C  6ADE               	clrf	postinc2,c
  6809  00146E  6ADE               	clrf	postinc2,c
  6810  001470  6ADD               	clrf	postdec2,c
  6811                           
  6812                           ; BSR set to: 15
  6813                           ;inc\CANlib.h: 542: msg->data[0] =RXB1D0;
  6814  001472  EE20 F004          	lfsr	2,4
  6815  001476  5001               	movf	CANreceiveMessage@msg,w,c
  6816  001478  26D9               	addwf	fsr2l,f,c
  6817  00147A  5002               	movf	CANreceiveMessage@msg+1,w,c
  6818  00147C  22DA               	addwfc	fsr2h,f,c
  6819  00147E  CF56 FFDF          	movff	3926,indf2	;volatile
  6820                           
  6821                           ; BSR set to: 15
  6822                           ;inc\CANlib.h: 543: msg->data[1] =RXB1D1;
  6823  001482  EE20 F005          	lfsr	2,5
  6824  001486  5001               	movf	CANreceiveMessage@msg,w,c
  6825  001488  26D9               	addwf	fsr2l,f,c
  6826  00148A  5002               	movf	CANreceiveMessage@msg+1,w,c
  6827  00148C  22DA               	addwfc	fsr2h,f,c
  6828  00148E  CF57 FFDF          	movff	3927,indf2	;volatile
  6829                           
  6830                           ; BSR set to: 15
  6831                           ;inc\CANlib.h: 544: msg->data[2] =RXB1D2;
  6832  001492  EE20 F006          	lfsr	2,6
  6833  001496  5001               	movf	CANreceiveMessage@msg,w,c
  6834  001498  26D9               	addwf	fsr2l,f,c
  6835  00149A  5002               	movf	CANreceiveMessage@msg+1,w,c
  6836  00149C  22DA               	addwfc	fsr2h,f,c
  6837  00149E  CF58 FFDF          	movff	3928,indf2	;volatile
  6838                           
  6839                           ; BSR set to: 15
  6840                           ;inc\CANlib.h: 545: msg->data[3] =RXB1D3;
  6841  0014A2  EE20 F007          	lfsr	2,7
  6842  0014A6  5001               	movf	CANreceiveMessage@msg,w,c
  6843  0014A8  26D9               	addwf	fsr2l,f,c
  6844  0014AA  5002               	movf	CANreceiveMessage@msg+1,w,c
  6845  0014AC  22DA               	addwfc	fsr2h,f,c
  6846  0014AE  CF59 FFDF          	movff	3929,indf2	;volatile
  6847                           
  6848                           ; BSR set to: 15
  6849                           ;inc\CANlib.h: 546: msg->data[4] =RXB1D4;
  6850  0014B2  EE20 F008          	lfsr	2,8
  6851  0014B6  5001               	movf	CANreceiveMessage@msg,w,c
  6852  0014B8  26D9               	addwf	fsr2l,f,c
  6853  0014BA  5002               	movf	CANreceiveMessage@msg+1,w,c
  6854  0014BC  22DA               	addwfc	fsr2h,f,c
  6855  0014BE  CF5A FFDF          	movff	3930,indf2	;volatile
  6856                           
  6857                           ; BSR set to: 15
  6858                           ;inc\CANlib.h: 547: msg->data[5] =RXB1D5;
  6859  0014C2  EE20 F009          	lfsr	2,9
  6860  0014C6  5001               	movf	CANreceiveMessage@msg,w,c
  6861  0014C8  26D9               	addwf	fsr2l,f,c
  6862  0014CA  5002               	movf	CANreceiveMessage@msg+1,w,c
  6863  0014CC  22DA               	addwfc	fsr2h,f,c
  6864  0014CE  CF5B FFDF          	movff	3931,indf2	;volatile
  6865                           
  6866                           ; BSR set to: 15
  6867                           ;inc\CANlib.h: 548: msg->data[6] =RXB1D6;
  6868  0014D2  EE20 F00A          	lfsr	2,10
  6869  0014D6  5001               	movf	CANreceiveMessage@msg,w,c
  6870  0014D8  26D9               	addwf	fsr2l,f,c
  6871  0014DA  5002               	movf	CANreceiveMessage@msg+1,w,c
  6872  0014DC  22DA               	addwfc	fsr2h,f,c
  6873  0014DE  CF5C FFDF          	movff	3932,indf2	;volatile
  6874                           
  6875                           ; BSR set to: 15
  6876                           ;inc\CANlib.h: 549: msg->data[7] =RXB1D7;
  6877  0014E2  EE20 F00B          	lfsr	2,11
  6878  0014E6  5001               	movf	CANreceiveMessage@msg,w,c
  6879  0014E8  26D9               	addwf	fsr2l,f,c
  6880  0014EA  5002               	movf	CANreceiveMessage@msg+1,w,c
  6881  0014EC  22DA               	addwfc	fsr2h,f,c
  6882  0014EE  CF5D FFDF          	movff	3933,indf2	;volatile
  6883                           
  6884                           ; BSR set to: 15
  6885                           ;inc\CANlib.h: 551: msg->RTR = RXB1DLCbits.RXRTR;
  6886  0014F2  EE20 F00E          	lfsr	2,14
  6887  0014F6  5001               	movf	CANreceiveMessage@msg,w,c
  6888  0014F8  26D9               	addwf	fsr2l,f,c
  6889  0014FA  5002               	movf	CANreceiveMessage@msg+1,w,c
  6890  0014FC  22DA               	addwfc	fsr2h,f,c
  6891  0014FE  010F               	movlb	15	; () banked
  6892  001500  AD55               	btfss	85,6,b	;volatile
  6893  001502  D002               	goto	i1u389_20
  6894  001504  0E01               	movlw	1
  6895  001506  D001               	goto	i1u389_26
  6896  001508                     i1u389_20:
  6897  001508  0E00               	movlw	0
  6898  00150A                     i1u389_26:
  6899  00150A  6EDF               	movwf	indf2,c
  6900                           
  6901                           ; BSR set to: 15
  6902                           ;inc\CANlib.h: 553: msg->length = RXB1DLC & 0x0F;
  6903  00150C  EE20 F00D          	lfsr	2,13
  6904  001510  5001               	movf	CANreceiveMessage@msg,w,c
  6905  001512  26D9               	addwf	fsr2l,f,c
  6906  001514  5002               	movf	CANreceiveMessage@msg+1,w,c
  6907  001516  22DA               	addwfc	fsr2h,f,c
  6908  001518  010F               	movlb	15	; () banked
  6909  00151A  5155               	movf	85,w,b	;volatile
  6910  00151C  0B0F               	andlw	15
  6911  00151E  6EDF               	movwf	indf2,c
  6912                           
  6913                           ; BSR set to: 15
  6914                           ;inc\CANlib.h: 555: msg->type = RXB1SIDLbits.EXID;
  6915  001520  EE20 F00C          	lfsr	2,12
  6916  001524  5001               	movf	CANreceiveMessage@msg,w,c
  6917  001526  26D9               	addwf	fsr2l,f,c
  6918  001528  5002               	movf	CANreceiveMessage@msg+1,w,c
  6919  00152A  22DA               	addwfc	fsr2h,f,c
  6920  00152C  010F               	movlb	15	; () banked
  6921  00152E  A752               	btfss	82,3,b	;volatile
  6922  001530  D002               	goto	i1u390_20
  6923  001532  0E01               	movlw	1
  6924  001534  D001               	goto	i1u390_26
  6925  001536                     i1u390_20:
  6926  001536  0E00               	movlw	0
  6927  001538                     i1u390_26:
  6928  001538  6EDF               	movwf	indf2,c
  6929                           
  6930                           ; BSR set to: 15
  6931                           ;inc\CANlib.h: 557: if (RXB1SIDLbits.EXID == 0)
  6932  00153A  010F               	movlb	15	; () banked
  6933  00153C  B752               	btfsc	82,3,b	;volatile
  6934  00153E  D044               	goto	i1l3339
  6935                           
  6936                           ; BSR set to: 15
  6937                           ;inc\CANlib.h: 558: {
  6938                           ;inc\CANlib.h: 559: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  6939  001540  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  6940  001544  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  6941  001546  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  6942  001548  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  6943  00154A  0E03               	movlw	3
  6944  00154C                     i1u392_25:
  6945  00154C  90D8               	bcf	status,0,c
  6946  00154E  3603               	rlcf	??_CANreceiveMessage,f,c
  6947  001550  3604               	rlcf	??_CANreceiveMessage+1,f,c
  6948  001552  3605               	rlcf	??_CANreceiveMessage+2,f,c
  6949  001554  3606               	rlcf	??_CANreceiveMessage+3,f,c
  6950  001556  2EE8               	decfsz	wreg,f,c
  6951  001558  D7F9               	goto	i1u392_25
  6952  00155A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6953  00155E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6954  001562  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  6955  001566  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  6956  00156A  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  6957  00156E  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  6958                           
  6959                           ; BSR set to: 15
  6960                           ;inc\CANlib.h: 560: tamp = (RXB1SIDL >> 5 ) & 0x07;
  6961  001572  010F               	movlb	15	; () banked
  6962  001574  3952               	swapf	82,w,b	;volatile
  6963  001576  42E8               	rrncf	wreg,f,c
  6964  001578  0B07               	andlw	7
  6965  00157A  0B07               	andlw	7
  6966  00157C  6E0C               	movwf	CANreceiveMessage@tamp,c
  6967                           
  6968                           ; BSR set to: 15
  6969                           ;inc\CANlib.h: 561: msg->identifier = msg->identifier + tamp;
  6970  00157E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6971  001582  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6972  001586  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  6973  00158A  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  6974  00158E  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  6975  001592  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  6976  001596  500C               	movf	CANreceiveMessage@tamp,w,c
  6977  001598  2403               	addwf	??_CANreceiveMessage,w,c
  6978  00159A  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  6979  00159C  0E00               	movlw	0
  6980  00159E  2004               	addwfc	??_CANreceiveMessage+1,w,c
  6981  0015A0  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  6982  0015A2  0E00               	movlw	0
  6983  0015A4  2005               	addwfc	??_CANreceiveMessage+2,w,c
  6984  0015A6  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  6985  0015A8  0E00               	movlw	0
  6986  0015AA  2006               	addwfc	??_CANreceiveMessage+3,w,c
  6987  0015AC  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  6988  0015AE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6989  0015B2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6990  0015B6  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  6991  0015BA  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  6992  0015BE  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  6993  0015C2  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  6994                           
  6995                           ;inc\CANlib.h: 562: }
  6996  0015C6  D08D               	goto	i1l3365
  6997  0015C8                     i1l3339:
  6998                           
  6999                           ; BSR set to: 15
  7000                           ;inc\CANlib.h: 563: else
  7001                           ;inc\CANlib.h: 564: {
  7002                           ;inc\CANlib.h: 565: msg->identifier = (unsigned long) RXB1EIDL;
  7003  0015C8  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  7004  0015CC  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7005  0015CE  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7006  0015D0  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7007  0015D2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7008  0015D6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7009  0015DA  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7010  0015DE  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7011  0015E2  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7012  0015E6  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7013                           
  7014                           ; BSR set to: 15
  7015                           ;inc\CANlib.h: 566: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7016  0015EA  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  7017  0015EE  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7018  0015F0  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7019  0015F2  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7020  0015F4  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7021  0015F8  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7022  0015FC  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7023  001600  6A03               	clrf	??_CANreceiveMessage,c
  7024  001602  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7025  001606  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7026  00160A  5003               	movf	??_CANreceiveMessage,w,c
  7027  00160C  26DE               	addwf	postinc2,f,c
  7028  00160E  5004               	movf	??_CANreceiveMessage+1,w,c
  7029  001610  22DE               	addwfc	postinc2,f,c
  7030  001612  5005               	movf	??_CANreceiveMessage+2,w,c
  7031  001614  22DE               	addwfc	postinc2,f,c
  7032  001616  5006               	movf	??_CANreceiveMessage+3,w,c
  7033  001618  22DE               	addwfc	postinc2,f,c
  7034                           
  7035                           ; BSR set to: 15
  7036                           ;inc\CANlib.h: 568: if (RXB1SIDLbits.EID16)
  7037  00161A  010F               	movlb	15	; () banked
  7038  00161C  A152               	btfss	82,0,b	;volatile
  7039  00161E  D00C               	goto	i1l3347
  7040                           
  7041                           ; BSR set to: 15
  7042                           ;inc\CANlib.h: 569: msg->identifier |= 0x00010000;
  7043  001620  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7044  001624  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7045  001628  0E00               	movlw	0
  7046  00162A  12DE               	iorwf	postinc2,f,c
  7047  00162C  0E00               	movlw	0
  7048  00162E  12DE               	iorwf	postinc2,f,c
  7049  001630  0E01               	movlw	1
  7050  001632  12DE               	iorwf	postinc2,f,c
  7051  001634  0E00               	movlw	0
  7052  001636  12DE               	iorwf	postinc2,f,c
  7053  001638                     i1l3347:
  7054                           
  7055                           ; BSR set to: 15
  7056                           ;inc\CANlib.h: 570: if (RXB1SIDLbits.EID17)
  7057  001638  010F               	movlb	15	; () banked
  7058  00163A  A352               	btfss	82,1,b	;volatile
  7059  00163C  D00C               	goto	i1l3351
  7060                           
  7061                           ; BSR set to: 15
  7062                           ;inc\CANlib.h: 571: msg->identifier |= 0x00020000;
  7063  00163E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7064  001642  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7065  001646  0E00               	movlw	0
  7066  001648  12DE               	iorwf	postinc2,f,c
  7067  00164A  0E00               	movlw	0
  7068  00164C  12DE               	iorwf	postinc2,f,c
  7069  00164E  0E02               	movlw	2
  7070  001650  12DE               	iorwf	postinc2,f,c
  7071  001652  0E00               	movlw	0
  7072  001654  12DE               	iorwf	postinc2,f,c
  7073  001656                     i1l3351:
  7074                           
  7075                           ; BSR set to: 15
  7076                           ;inc\CANlib.h: 572: if (RXB1SIDLbits.SID0)
  7077  001656  010F               	movlb	15	; () banked
  7078  001658  AB52               	btfss	82,5,b	;volatile
  7079  00165A  D00C               	goto	i1l3355
  7080                           
  7081                           ; BSR set to: 15
  7082                           ;inc\CANlib.h: 573: msg->identifier |= 0x00040000;
  7083  00165C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7084  001660  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7085  001664  0E00               	movlw	0
  7086  001666  12DE               	iorwf	postinc2,f,c
  7087  001668  0E00               	movlw	0
  7088  00166A  12DE               	iorwf	postinc2,f,c
  7089  00166C  0E04               	movlw	4
  7090  00166E  12DE               	iorwf	postinc2,f,c
  7091  001670  0E00               	movlw	0
  7092  001672  12DE               	iorwf	postinc2,f,c
  7093  001674                     i1l3355:
  7094                           
  7095                           ; BSR set to: 15
  7096                           ;inc\CANlib.h: 574: if (RXB1SIDLbits.SID1)
  7097  001674  010F               	movlb	15	; () banked
  7098  001676  AD52               	btfss	82,6,b	;volatile
  7099  001678  D00C               	goto	i1l3359
  7100                           
  7101                           ; BSR set to: 15
  7102                           ;inc\CANlib.h: 575: msg->identifier |= 0x00080000;
  7103  00167A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7104  00167E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7105  001682  0E00               	movlw	0
  7106  001684  12DE               	iorwf	postinc2,f,c
  7107  001686  0E00               	movlw	0
  7108  001688  12DE               	iorwf	postinc2,f,c
  7109  00168A  0E08               	movlw	8
  7110  00168C  12DE               	iorwf	postinc2,f,c
  7111  00168E  0E00               	movlw	0
  7112  001690  12DE               	iorwf	postinc2,f,c
  7113  001692                     i1l3359:
  7114                           
  7115                           ; BSR set to: 15
  7116                           ;inc\CANlib.h: 576: if (RXB1SIDLbits.SID2)
  7117  001692  010F               	movlb	15	; () banked
  7118  001694  AF52               	btfss	82,7,b	;volatile
  7119  001696  D00C               	goto	i1l3363
  7120                           
  7121                           ; BSR set to: 15
  7122                           ;inc\CANlib.h: 577: msg->identifier |= 0x00100000;
  7123  001698  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7124  00169C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7125  0016A0  0E00               	movlw	0
  7126  0016A2  12DE               	iorwf	postinc2,f,c
  7127  0016A4  0E00               	movlw	0
  7128  0016A6  12DE               	iorwf	postinc2,f,c
  7129  0016A8  0E10               	movlw	16
  7130  0016AA  12DE               	iorwf	postinc2,f,c
  7131  0016AC  0E00               	movlw	0
  7132  0016AE  12DE               	iorwf	postinc2,f,c
  7133  0016B0                     i1l3363:
  7134                           
  7135                           ; BSR set to: 15
  7136                           ;inc\CANlib.h: 579: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  7137  0016B0  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7138  0016B4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7139  0016B6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7140  0016B8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7141  0016BA  0E15               	movlw	21
  7142  0016BC                     i1u398_25:
  7143  0016BC  90D8               	bcf	status,0,c
  7144  0016BE  3603               	rlcf	??_CANreceiveMessage,f,c
  7145  0016C0  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7146  0016C2  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7147  0016C4  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7148  0016C6  2EE8               	decfsz	wreg,f,c
  7149  0016C8  D7F9               	goto	i1u398_25
  7150  0016CA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7151  0016CE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7152  0016D2  5003               	movf	??_CANreceiveMessage,w,c
  7153  0016D4  12DE               	iorwf	postinc2,f,c
  7154  0016D6  5004               	movf	??_CANreceiveMessage+1,w,c
  7155  0016D8  12DE               	iorwf	postinc2,f,c
  7156  0016DA  5005               	movf	??_CANreceiveMessage+2,w,c
  7157  0016DC  12DE               	iorwf	postinc2,f,c
  7158  0016DE  5006               	movf	??_CANreceiveMessage+3,w,c
  7159  0016E0  12DE               	iorwf	postinc2,f,c
  7160  0016E2                     i1l3365:
  7161                           
  7162                           ; BSR set to: 15
  7163                           ;inc\CANlib.h: 580: }
  7164                           ;inc\CANlib.h: 582: RXB1CONbits.RXFUL = 0x00;
  7165  0016E2  010F               	movlb	15	; () banked
  7166  0016E4  9F50               	bcf	80,7,b	;volatile
  7167                           
  7168                           ; BSR set to: 15
  7169                           ;inc\CANlib.h: 583: return (error);
  7170                           ;	Return value of _CANreceiveMessage is never used
  7171  0016E6  0012               	return	
  7172  0016E8                     i1l398:
  7173                           
  7174                           ; BSR set to: 15
  7175                           ;inc\CANlib.h: 584: }
  7176                           ;inc\CANlib.h: 586: if (RXB0CONbits.RXFUL ==0x01)
  7177  0016E8  AE60               	btfss	3936,7,c	;volatile
  7178  0016EA  0012               	return	
  7179                           
  7180                           ; BSR set to: 15
  7181                           ;inc\CANlib.h: 587: {
  7182                           ;inc\CANlib.h: 588: msg->identifier = 0;
  7183  0016EC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7184  0016F0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7185  0016F4  6ADE               	clrf	postinc2,c
  7186  0016F6  6ADE               	clrf	postinc2,c
  7187  0016F8  6ADE               	clrf	postinc2,c
  7188  0016FA  6ADD               	clrf	postdec2,c
  7189                           
  7190                           ; BSR set to: 15
  7191                           ;inc\CANlib.h: 589: msg->data[0] =RXB0D0;
  7192  0016FC  EE20 F004          	lfsr	2,4
  7193  001700  5001               	movf	CANreceiveMessage@msg,w,c
  7194  001702  26D9               	addwf	fsr2l,f,c
  7195  001704  5002               	movf	CANreceiveMessage@msg+1,w,c
  7196  001706  22DA               	addwfc	fsr2h,f,c
  7197  001708  CF66 FFDF          	movff	3942,indf2	;volatile
  7198                           
  7199                           ; BSR set to: 15
  7200                           ;inc\CANlib.h: 590: msg->data[1] =RXB0D1;
  7201  00170C  EE20 F005          	lfsr	2,5
  7202  001710  5001               	movf	CANreceiveMessage@msg,w,c
  7203  001712  26D9               	addwf	fsr2l,f,c
  7204  001714  5002               	movf	CANreceiveMessage@msg+1,w,c
  7205  001716  22DA               	addwfc	fsr2h,f,c
  7206  001718  CF67 FFDF          	movff	3943,indf2	;volatile
  7207                           
  7208                           ; BSR set to: 15
  7209                           ;inc\CANlib.h: 591: msg->data[2] =RXB0D2;
  7210  00171C  EE20 F006          	lfsr	2,6
  7211  001720  5001               	movf	CANreceiveMessage@msg,w,c
  7212  001722  26D9               	addwf	fsr2l,f,c
  7213  001724  5002               	movf	CANreceiveMessage@msg+1,w,c
  7214  001726  22DA               	addwfc	fsr2h,f,c
  7215  001728  CF68 FFDF          	movff	3944,indf2	;volatile
  7216                           
  7217                           ; BSR set to: 15
  7218                           ;inc\CANlib.h: 592: msg->data[3] =RXB0D3;
  7219  00172C  EE20 F007          	lfsr	2,7
  7220  001730  5001               	movf	CANreceiveMessage@msg,w,c
  7221  001732  26D9               	addwf	fsr2l,f,c
  7222  001734  5002               	movf	CANreceiveMessage@msg+1,w,c
  7223  001736  22DA               	addwfc	fsr2h,f,c
  7224  001738  CF69 FFDF          	movff	3945,indf2	;volatile
  7225                           
  7226                           ; BSR set to: 15
  7227                           ;inc\CANlib.h: 593: msg->data[4] =RXB0D4;
  7228  00173C  EE20 F008          	lfsr	2,8
  7229  001740  5001               	movf	CANreceiveMessage@msg,w,c
  7230  001742  26D9               	addwf	fsr2l,f,c
  7231  001744  5002               	movf	CANreceiveMessage@msg+1,w,c
  7232  001746  22DA               	addwfc	fsr2h,f,c
  7233  001748  CF6A FFDF          	movff	3946,indf2	;volatile
  7234                           
  7235                           ; BSR set to: 15
  7236                           ;inc\CANlib.h: 594: msg->data[5] =RXB0D5;
  7237  00174C  EE20 F009          	lfsr	2,9
  7238  001750  5001               	movf	CANreceiveMessage@msg,w,c
  7239  001752  26D9               	addwf	fsr2l,f,c
  7240  001754  5002               	movf	CANreceiveMessage@msg+1,w,c
  7241  001756  22DA               	addwfc	fsr2h,f,c
  7242  001758  CF6B FFDF          	movff	3947,indf2	;volatile
  7243                           
  7244                           ; BSR set to: 15
  7245                           ;inc\CANlib.h: 595: msg->data[6] =RXB0D6;
  7246  00175C  EE20 F00A          	lfsr	2,10
  7247  001760  5001               	movf	CANreceiveMessage@msg,w,c
  7248  001762  26D9               	addwf	fsr2l,f,c
  7249  001764  5002               	movf	CANreceiveMessage@msg+1,w,c
  7250  001766  22DA               	addwfc	fsr2h,f,c
  7251  001768  CF6C FFDF          	movff	3948,indf2	;volatile
  7252                           
  7253                           ; BSR set to: 15
  7254                           ;inc\CANlib.h: 596: msg->data[7] =RXB0D7;
  7255  00176C  EE20 F00B          	lfsr	2,11
  7256  001770  5001               	movf	CANreceiveMessage@msg,w,c
  7257  001772  26D9               	addwf	fsr2l,f,c
  7258  001774  5002               	movf	CANreceiveMessage@msg+1,w,c
  7259  001776  22DA               	addwfc	fsr2h,f,c
  7260  001778  CF6D FFDF          	movff	3949,indf2	;volatile
  7261                           
  7262                           ; BSR set to: 15
  7263                           ;inc\CANlib.h: 598: msg->RTR = RXB0DLCbits.RXRTR;
  7264  00177C  EE20 F00E          	lfsr	2,14
  7265  001780  5001               	movf	CANreceiveMessage@msg,w,c
  7266  001782  26D9               	addwf	fsr2l,f,c
  7267  001784  5002               	movf	CANreceiveMessage@msg+1,w,c
  7268  001786  22DA               	addwfc	fsr2h,f,c
  7269  001788  AC65               	btfss	3941,6,c	;volatile
  7270  00178A  D002               	goto	i1u400_20
  7271  00178C  0E01               	movlw	1
  7272  00178E  D001               	goto	i1u400_26
  7273  001790                     i1u400_20:
  7274  001790  0E00               	movlw	0
  7275  001792                     i1u400_26:
  7276  001792  6EDF               	movwf	indf2,c
  7277                           
  7278                           ; BSR set to: 15
  7279                           ;inc\CANlib.h: 600: msg->length = RXB0DLC & 0x0F;
  7280  001794  EE20 F00D          	lfsr	2,13
  7281  001798  5001               	movf	CANreceiveMessage@msg,w,c
  7282  00179A  26D9               	addwf	fsr2l,f,c
  7283  00179C  5002               	movf	CANreceiveMessage@msg+1,w,c
  7284  00179E  22DA               	addwfc	fsr2h,f,c
  7285  0017A0  5065               	movf	3941,w,c	;volatile
  7286  0017A2  0B0F               	andlw	15
  7287  0017A4  6EDF               	movwf	indf2,c
  7288                           
  7289                           ; BSR set to: 15
  7290                           ;inc\CANlib.h: 602: msg->type = RXB0SIDLbits.EXID;
  7291  0017A6  EE20 F00C          	lfsr	2,12
  7292  0017AA  5001               	movf	CANreceiveMessage@msg,w,c
  7293  0017AC  26D9               	addwf	fsr2l,f,c
  7294  0017AE  5002               	movf	CANreceiveMessage@msg+1,w,c
  7295  0017B0  22DA               	addwfc	fsr2h,f,c
  7296  0017B2  A662               	btfss	3938,3,c	;volatile
  7297  0017B4  D002               	goto	i1u401_20
  7298  0017B6  0E01               	movlw	1
  7299  0017B8  D001               	goto	i1u401_26
  7300  0017BA                     i1u401_20:
  7301  0017BA  0E00               	movlw	0
  7302  0017BC                     i1u401_26:
  7303  0017BC  6EDF               	movwf	indf2,c
  7304                           
  7305                           ; BSR set to: 15
  7306                           ;inc\CANlib.h: 604: if (RXB0SIDLbits.EXID == 0)
  7307  0017BE  B662               	btfsc	3938,3,c	;volatile
  7308  0017C0  D043               	goto	i1l3401
  7309                           
  7310                           ; BSR set to: 15
  7311                           ;inc\CANlib.h: 605: {
  7312                           ;inc\CANlib.h: 606: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  7313  0017C2  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  7314  0017C6  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7315  0017C8  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7316  0017CA  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7317  0017CC  0E03               	movlw	3
  7318  0017CE                     i1u403_25:
  7319  0017CE  90D8               	bcf	status,0,c
  7320  0017D0  3603               	rlcf	??_CANreceiveMessage,f,c
  7321  0017D2  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7322  0017D4  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7323  0017D6  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7324  0017D8  2EE8               	decfsz	wreg,f,c
  7325  0017DA  D7F9               	goto	i1u403_25
  7326  0017DC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7327  0017E0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7328  0017E4  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7329  0017E8  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7330  0017EC  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7331  0017F0  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7332                           
  7333                           ; BSR set to: 15
  7334                           ;inc\CANlib.h: 607: tamp = (RXB0SIDL >> 5 ) & 0x07;
  7335  0017F4  3862               	swapf	3938,w,c	;volatile
  7336  0017F6  42E8               	rrncf	wreg,f,c
  7337  0017F8  0B07               	andlw	7
  7338  0017FA  0B07               	andlw	7
  7339  0017FC  6E0C               	movwf	CANreceiveMessage@tamp,c
  7340                           
  7341                           ; BSR set to: 15
  7342                           ;inc\CANlib.h: 608: msg->identifier = msg->identifier + tamp;
  7343  0017FE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7344  001802  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7345  001806  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7346  00180A  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7347  00180E  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7348  001812  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7349  001816  500C               	movf	CANreceiveMessage@tamp,w,c
  7350  001818  2403               	addwf	??_CANreceiveMessage,w,c
  7351  00181A  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7352  00181C  0E00               	movlw	0
  7353  00181E  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7354  001820  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7355  001822  0E00               	movlw	0
  7356  001824  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7357  001826  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7358  001828  0E00               	movlw	0
  7359  00182A  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7360  00182C  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7361  00182E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7362  001832  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7363  001836  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7364  00183A  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7365  00183E  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7366  001842  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7367                           
  7368                           ;inc\CANlib.h: 609: }
  7369  001846  D088               	goto	i1l3427
  7370  001848                     i1l3401:
  7371                           
  7372                           ; BSR set to: 15
  7373                           ;inc\CANlib.h: 610: else
  7374                           ;inc\CANlib.h: 611: {
  7375                           ;inc\CANlib.h: 612: msg->identifier = (unsigned long) RXB0EIDL;
  7376  001848  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  7377  00184C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7378  00184E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7379  001850  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7380  001852  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7381  001856  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7382  00185A  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7383  00185E  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7384  001862  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7385  001866  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7386                           
  7387                           ; BSR set to: 15
  7388                           ;inc\CANlib.h: 613: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  7389  00186A  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  7390  00186E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7391  001870  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7392  001872  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7393  001874  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7394  001878  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7395  00187C  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7396  001880  6A03               	clrf	??_CANreceiveMessage,c
  7397  001882  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7398  001886  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7399  00188A  5003               	movf	??_CANreceiveMessage,w,c
  7400  00188C  26DE               	addwf	postinc2,f,c
  7401  00188E  5004               	movf	??_CANreceiveMessage+1,w,c
  7402  001890  22DE               	addwfc	postinc2,f,c
  7403  001892  5005               	movf	??_CANreceiveMessage+2,w,c
  7404  001894  22DE               	addwfc	postinc2,f,c
  7405  001896  5006               	movf	??_CANreceiveMessage+3,w,c
  7406  001898  22DE               	addwfc	postinc2,f,c
  7407                           
  7408                           ; BSR set to: 15
  7409                           ;inc\CANlib.h: 615: if (RXB0SIDLbits.EID16)
  7410  00189A  A062               	btfss	3938,0,c	;volatile
  7411  00189C  D00C               	goto	i1l3409
  7412                           
  7413                           ; BSR set to: 15
  7414                           ;inc\CANlib.h: 616: msg->identifier |= 0x00010000;
  7415  00189E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7416  0018A2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7417  0018A6  0E00               	movlw	0
  7418  0018A8  12DE               	iorwf	postinc2,f,c
  7419  0018AA  0E00               	movlw	0
  7420  0018AC  12DE               	iorwf	postinc2,f,c
  7421  0018AE  0E01               	movlw	1
  7422  0018B0  12DE               	iorwf	postinc2,f,c
  7423  0018B2  0E00               	movlw	0
  7424  0018B4  12DE               	iorwf	postinc2,f,c
  7425  0018B6                     i1l3409:
  7426                           
  7427                           ; BSR set to: 15
  7428                           ;inc\CANlib.h: 617: if (RXB0SIDLbits.EID17)
  7429  0018B6  A262               	btfss	3938,1,c	;volatile
  7430  0018B8  D00C               	goto	i1l3413
  7431                           
  7432                           ; BSR set to: 15
  7433                           ;inc\CANlib.h: 618: msg->identifier |= 0x00020000;
  7434  0018BA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7435  0018BE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7436  0018C2  0E00               	movlw	0
  7437  0018C4  12DE               	iorwf	postinc2,f,c
  7438  0018C6  0E00               	movlw	0
  7439  0018C8  12DE               	iorwf	postinc2,f,c
  7440  0018CA  0E02               	movlw	2
  7441  0018CC  12DE               	iorwf	postinc2,f,c
  7442  0018CE  0E00               	movlw	0
  7443  0018D0  12DE               	iorwf	postinc2,f,c
  7444  0018D2                     i1l3413:
  7445                           
  7446                           ; BSR set to: 15
  7447                           ;inc\CANlib.h: 619: if (RXB0SIDLbits.SID0)
  7448  0018D2  AA62               	btfss	3938,5,c	;volatile
  7449  0018D4  D00C               	goto	i1l3417
  7450                           
  7451                           ; BSR set to: 15
  7452                           ;inc\CANlib.h: 620: msg->identifier |= 0x00040000;
  7453  0018D6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7454  0018DA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7455  0018DE  0E00               	movlw	0
  7456  0018E0  12DE               	iorwf	postinc2,f,c
  7457  0018E2  0E00               	movlw	0
  7458  0018E4  12DE               	iorwf	postinc2,f,c
  7459  0018E6  0E04               	movlw	4
  7460  0018E8  12DE               	iorwf	postinc2,f,c
  7461  0018EA  0E00               	movlw	0
  7462  0018EC  12DE               	iorwf	postinc2,f,c
  7463  0018EE                     i1l3417:
  7464                           
  7465                           ; BSR set to: 15
  7466                           ;inc\CANlib.h: 621: if (RXB0SIDLbits.SID1)
  7467  0018EE  AC62               	btfss	3938,6,c	;volatile
  7468  0018F0  D00C               	goto	i1l3421
  7469                           
  7470                           ; BSR set to: 15
  7471                           ;inc\CANlib.h: 622: msg->identifier |= 0x00080000;
  7472  0018F2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7473  0018F6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7474  0018FA  0E00               	movlw	0
  7475  0018FC  12DE               	iorwf	postinc2,f,c
  7476  0018FE  0E00               	movlw	0
  7477  001900  12DE               	iorwf	postinc2,f,c
  7478  001902  0E08               	movlw	8
  7479  001904  12DE               	iorwf	postinc2,f,c
  7480  001906  0E00               	movlw	0
  7481  001908  12DE               	iorwf	postinc2,f,c
  7482  00190A                     i1l3421:
  7483                           
  7484                           ; BSR set to: 15
  7485                           ;inc\CANlib.h: 623: if (RXB0SIDLbits.SID2)
  7486  00190A  AE62               	btfss	3938,7,c	;volatile
  7487  00190C  D00C               	goto	i1l3425
  7488                           
  7489                           ; BSR set to: 15
  7490                           ;inc\CANlib.h: 624: msg->identifier |= 0x00100000;
  7491  00190E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7492  001912  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7493  001916  0E00               	movlw	0
  7494  001918  12DE               	iorwf	postinc2,f,c
  7495  00191A  0E00               	movlw	0
  7496  00191C  12DE               	iorwf	postinc2,f,c
  7497  00191E  0E10               	movlw	16
  7498  001920  12DE               	iorwf	postinc2,f,c
  7499  001922  0E00               	movlw	0
  7500  001924  12DE               	iorwf	postinc2,f,c
  7501  001926                     i1l3425:
  7502                           
  7503                           ; BSR set to: 15
  7504                           ;inc\CANlib.h: 626: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  7505  001926  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  7506  00192A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7507  00192C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7508  00192E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7509  001930  0E15               	movlw	21
  7510  001932                     i1u409_25:
  7511  001932  90D8               	bcf	status,0,c
  7512  001934  3603               	rlcf	??_CANreceiveMessage,f,c
  7513  001936  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7514  001938  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7515  00193A  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7516  00193C  2EE8               	decfsz	wreg,f,c
  7517  00193E  D7F9               	goto	i1u409_25
  7518  001940  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7519  001944  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7520  001948  5003               	movf	??_CANreceiveMessage,w,c
  7521  00194A  12DE               	iorwf	postinc2,f,c
  7522  00194C  5004               	movf	??_CANreceiveMessage+1,w,c
  7523  00194E  12DE               	iorwf	postinc2,f,c
  7524  001950  5005               	movf	??_CANreceiveMessage+2,w,c
  7525  001952  12DE               	iorwf	postinc2,f,c
  7526  001954  5006               	movf	??_CANreceiveMessage+3,w,c
  7527  001956  12DE               	iorwf	postinc2,f,c
  7528  001958                     i1l3427:
  7529                           
  7530                           ; BSR set to: 15
  7531                           ;inc\CANlib.h: 628: }
  7532                           ;inc\CANlib.h: 629: RXB0CONbits.RXFUL = 0x00;
  7533  001958  9E60               	bcf	3936,7,c	;volatile
  7534                           
  7535                           ; BSR set to: 15
  7536                           ;inc\CANlib.h: 631: return (error);
  7537                           ;	Return value of _CANreceiveMessage is never used
  7538  00195A  0012               	return	
  7539  00195C                     __end_of_CANreceiveMessage:
  7540                           	opt stack 0
  7541                           pclatu	equ	0xFFB
  7542                           pclath	equ	0xFFA
  7543                           tblptru	equ	0xFF8
  7544                           tblptrh	equ	0xFF7
  7545                           tblptrl	equ	0xFF6
  7546                           tablat	equ	0xFF5
  7547                           prodh	equ	0xFF4
  7548                           prodl	equ	0xFF3
  7549                           intcon	equ	0xFF2
  7550                           postinc0	equ	0xFEE
  7551                           fsr0h	equ	0xFEA
  7552                           fsr0l	equ	0xFE9
  7553                           wreg	equ	0xFE8
  7554                           indf1	equ	0xFE7
  7555                           postdec1	equ	0xFE5
  7556                           fsr1h	equ	0xFE2
  7557                           fsr1l	equ	0xFE1
  7558                           bsr	equ	0xFE0
  7559                           indf2	equ	0xFDF
  7560                           postinc2	equ	0xFDE
  7561                           postdec2	equ	0xFDD
  7562                           fsr2h	equ	0xFDA
  7563                           fsr2l	equ	0xFD9
  7564                           status	equ	0xFD8
  7565                           
  7566 ;; *************** function _CANisRxReady *****************
  7567 ;; Defined at:
  7568 ;;		line 1162 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7569 ;; Parameters:    Size  Location     Type
  7570 ;;		None
  7571 ;; Auto vars:     Size  Location     Type
  7572 ;;		None
  7573 ;; Return value:  Size  Location     Type
  7574 ;;                  1    wreg      unsigned char 
  7575 ;; Registers used:
  7576 ;;		wreg, status,2
  7577 ;; Tracked objects:
  7578 ;;		On entry : 0/0
  7579 ;;		On exit  : 0/0
  7580 ;;		Unchanged: 0/0
  7581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7582 ;;      Params:         0       0       0       0
  7583 ;;      Locals:         1       0       0       0
  7584 ;;      Temps:          0       0       0       0
  7585 ;;      Totals:         1       0       0       0
  7586 ;;Total ram usage:        1 bytes
  7587 ;; Hardware stack levels used:    1
  7588 ;; This function calls:
  7589 ;;		Nothing
  7590 ;; This function is called by:
  7591 ;;		_ISR_bassa
  7592 ;; This function uses a non-reentrant model
  7593 ;;
  7594                           
  7595                           	psect	text16
  7596  002366                     __ptext16:
  7597                           	opt stack 0
  7598  002366                     _CANisRxReady:
  7599                           	opt stack 26
  7600                           
  7601                           ;inc\CANlib.h: 1164: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  7602                           
  7603                           ; BSR set to: 15
  7604                           ;incstack = 0
  7605  002366  0E01               	movlw	1
  7606  002368  6E01               	movwf	_CANisRxReady$2929,c
  7607  00236A  BE60               	btfsc	3936,7,c	;volatile
  7608  00236C  D005               	goto	i1l549
  7609  00236E  010F               	movlb	15	; () banked
  7610  002370  BF50               	btfsc	80,7,b	;volatile
  7611  002372  D002               	goto	i1l549
  7612                           
  7613                           ; BSR set to: 15
  7614  002374  0E00               	movlw	0
  7615  002376  6E01               	movwf	_CANisRxReady$2929,c
  7616  002378                     i1l549:
  7617  002378  5001               	movf	_CANisRxReady$2929,w,c
  7618  00237A  0012               	return	
  7619  00237C                     __end_of_CANisRxReady:
  7620                           	opt stack 0
  7621  0000                     pclatu	equ	0xFFB
  7622                           pclath	equ	0xFFA
  7623                           tblptru	equ	0xFF8
  7624                           tblptrh	equ	0xFF7
  7625                           tblptrl	equ	0xFF6
  7626                           tablat	equ	0xFF5
  7627                           prodh	equ	0xFF4
  7628                           prodl	equ	0xFF3
  7629                           intcon	equ	0xFF2
  7630                           postinc0	equ	0xFEE
  7631                           fsr0h	equ	0xFEA
  7632                           fsr0l	equ	0xFE9
  7633                           wreg	equ	0xFE8
  7634                           indf1	equ	0xFE7
  7635                           postdec1	equ	0xFE5
  7636                           fsr1h	equ	0xFE2
  7637                           fsr1l	equ	0xFE1
  7638                           bsr	equ	0xFE0
  7639                           indf2	equ	0xFDF
  7640                           postinc2	equ	0xFDE
  7641                           postdec2	equ	0xFDD
  7642                           fsr2h	equ	0xFDA
  7643                           fsr2l	equ	0xFD9
  7644                           status	equ	0xFD8
  7645                           pclatu	equ	0xFFB
  7646                           pclath	equ	0xFFA
  7647                           tblptru	equ	0xFF8
  7648                           tblptrh	equ	0xFF7
  7649                           tblptrl	equ	0xFF6
  7650                           tablat	equ	0xFF5
  7651                           prodh	equ	0xFF4
  7652                           prodl	equ	0xFF3
  7653                           intcon	equ	0xFF2
  7654                           postinc0	equ	0xFEE
  7655                           fsr0h	equ	0xFEA
  7656                           fsr0l	equ	0xFE9
  7657                           wreg	equ	0xFE8
  7658                           indf1	equ	0xFE7
  7659                           postdec1	equ	0xFE5
  7660                           fsr1h	equ	0xFE2
  7661                           fsr1l	equ	0xFE1
  7662                           bsr	equ	0xFE0
  7663                           indf2	equ	0xFDF
  7664                           postinc2	equ	0xFDE
  7665                           postdec2	equ	0xFDD
  7666                           fsr2h	equ	0xFDA
  7667                           fsr2l	equ	0xFD9
  7668                           status	equ	0xFD8
  7669                           
  7670                           	psect	rparam
  7671  0000                     pclatu	equ	0xFFB
  7672                           pclath	equ	0xFFA
  7673                           tblptru	equ	0xFF8
  7674                           tblptrh	equ	0xFF7
  7675                           tblptrl	equ	0xFF6
  7676                           tablat	equ	0xFF5
  7677                           prodh	equ	0xFF4
  7678                           prodl	equ	0xFF3
  7679                           intcon	equ	0xFF2
  7680                           postinc0	equ	0xFEE
  7681                           fsr0h	equ	0xFEA
  7682                           fsr0l	equ	0xFE9
  7683                           wreg	equ	0xFE8
  7684                           indf1	equ	0xFE7
  7685                           postdec1	equ	0xFE5
  7686                           fsr1h	equ	0xFE2
  7687                           fsr1l	equ	0xFE1
  7688                           bsr	equ	0xFE0
  7689                           indf2	equ	0xFDF
  7690                           postinc2	equ	0xFDE
  7691                           postdec2	equ	0xFDD
  7692                           fsr2h	equ	0xFDA
  7693                           fsr2l	equ	0xFD9
  7694                           status	equ	0xFD8
  7695                           
  7696                           	psect	temp
  7697  000040                     btemp:
  7698                           	opt stack 0
  7699  000040                     	ds	1
  7700  0000                     int$flags	set	btemp
  7701                           pclatu	equ	0xFFB
  7702                           pclath	equ	0xFFA
  7703                           tblptru	equ	0xFF8
  7704                           tblptrh	equ	0xFF7
  7705                           tblptrl	equ	0xFF6
  7706                           tablat	equ	0xFF5
  7707                           prodh	equ	0xFF4
  7708                           prodl	equ	0xFF3
  7709                           intcon	equ	0xFF2
  7710                           postinc0	equ	0xFEE
  7711                           fsr0h	equ	0xFEA
  7712                           fsr0l	equ	0xFE9
  7713                           wreg	equ	0xFE8
  7714                           indf1	equ	0xFE7
  7715                           postdec1	equ	0xFE5
  7716                           fsr1h	equ	0xFE2
  7717                           fsr1l	equ	0xFE1
  7718                           bsr	equ	0xFE0
  7719                           indf2	equ	0xFDF
  7720                           postinc2	equ	0xFDE
  7721                           postdec2	equ	0xFDD
  7722                           fsr2h	equ	0xFDA
  7723                           fsr2l	equ	0xFD9
  7724                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         83
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      63
    BANK0           160     27      89
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    putsUSART@data	PTR unsigned char  size(2) Largest target is 7
		 -> SerialOutput(COMRAM[7]), 

    getsUSART@buffer	PTR unsigned char  size(2) Largest target is 7
		 -> USART_Rx(BANK0[7]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> analogic_brake(BANK0[8]), set_speed(BANK0[8]), set_steering(BANK0[8]), data(BANK0[8]), 


Critical Paths under _main in COMRAM

    _putsUSART->_WriteUSART
    _configurazione_iniziale->_OpenUSART
    _CANInitialize->_CANOperationMode
    _can_interpreter->_CANisTxReady

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage
    _getsUSART->_ReadUSART

Critical Paths under _main in BANK0

    _configurazione_iniziale->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _can_interpreter->_CANsendMessage

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   17362
                                             26 BANK0      1     1      0
                     _CANsendMessage
                    _can_interpreter
            _configurazione_iniziale
                          _putsUSART
 ---------------------------------------------------------------------------------
 (1) _putsUSART                                            2     0      2     161
                                              0 BANK0      2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    8599
                      _CANInitialize
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     387
                                             31 COMRAM     2     0      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                             14 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                              0 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                              0 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      8     8      0    4313
                                             16 BANK0      8     8      0
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4289
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           19    19      0    1494
                                             12 COMRAM    19    19      0
                       _CANisRxReady
                  _CANreceiveMessage
                          _getsUSART
 ---------------------------------------------------------------------------------
 (5) _getsUSART                                            5     2      3     243
                                              1 COMRAM     5     2      3
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (6) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANsendMessage
   _can_interpreter
     _CANisTxReady
     _CANsendMessage
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _OpenUSART
   _putsUSART
     _WriteUSART

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   _getsUSART
     _ReadUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     1B      59       4       55.6%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     21      3F       1       67.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      98       9        0.0%
DATA                 0      0      98      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sun Feb 28 18:20:31 2016

            __end_of_CANSetFilter 0CC4                                _id 0022  
                              bsr 000FE0                       __CFG_BORV$3 000000  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                     __CFG_OSC$HS 000000                       __CFG_LVP$ON 000000  
                             l500 0B40                               l420 1B56  
                             l501 0B4C                               l421 1B5A  
                             l510 0C58                               l502 0B50  
                             l422 1B66                               l351 0F48  
                             l511 0C5C                               l503 0B5C  
                             l431 1C6E                               l423 1B6A  
                             l352 0CDA                               l512 0C68  
                             l432 1C72                               l424 1B76  
                             l361 0E94                               l353 0CDE  
                             l513 0C6C                               l433 1C7E  
                             l425 1B7A                               l370 0FEA  
                             l362 0E98                               l354 0DD6  
                             l514 0C78                               l506 0C38  
                             l434 1C82                               l426 1B86  
                             l346 1F90                               l371 0FF4  
                             l363 0EA4                               l355 0D66  
                             l507 0C3C                               l451 06AE  
                             l435 1C8E                               l427 1B8A  
                             l347 1F9A                               l372 0FFE  
                             l356 0D70                               l508 0C48  
                             l452 06B2                               l436 1C92  
                             l428 1B96                               l381 11E2  
                             l373 1008                               l357 0D7A  
                             l509 0C4C                               l453 06BE  
                             l437 1C9E                               l701 2302  
                             l390 139C                               l382 11E6  
                             l366 11CC                               l358 0D84  
                             l470 0808                               l462 07C8  
                             l454 06C2                               l438 1CA2  
                             l391 13A0                               l383 12DE  
                             l367 0F5E                               l463 07CC  
                             l455 06CE                               l439 1CAE  
                             l544 2344                               l392 13AC  
                             l384 126E                               l376 1118  
                             l368 0F62                               l480 0918  
                             l464 07D8                               l456 06D2  
                             l385 1278                               l377 111C  
                             l369 105A                               l481 0924  
                             l473 08E4                               l465 07DC  
                             l457 06DE                               l386 1282  
                             l378 1128                               l490 0A30  
                             l474 08E8                               l466 07E8  
                             l458 06E2                               l387 128C  
                             l491 0A34                               l475 08F4  
                             l467 07EC                               l459 06EE  
                             l492 0A40                               l484 0A00  
                             l476 08F8                               l468 07F8  
                             l485 0A04                               l477 0904  
                             l469 07FC                               l486 0A10  
                             l478 0908                               l495 0B1C  
                             l487 0A14                               l479 0914  
                             l496 0B20                               l488 0A20  
                             l497 0B2C                               l489 0A24  
                             l498 0B30                               l690 2270  
                             l499 0B3C                               l691 2272  
                             l684 2248                               l688 2262  
                             l689 2264                      getsUSART@len 0004  
                    __CFG_CPB$OFF 000000                      __CFG_CPD$OFF 000000  
                             _dir 01F9                               _msg 0068  
                             prod 000FF3                               wreg 000FE8  
                    __CFG_WDT$OFF 000000                              l4011 0B60  
                            l4017 0BA6                              l4211 1012  
                            l4045 0C7C                              l4231 110C  
                            l4135 0D8E                              l4313 13B0  
                            l4161 0EA8                              l4307 1390  
                            l4155 0E88                              l4091 1F9E  
                            l4237 112C                              l3701 1B9A  
                            l3293 2388                              l4501 219A  
                            l4095 1FA6                              l4351 224A  
                            l4343 2238                              l4441 1D6C  
                            l3641 2394                              l4097 1FEA  
                            l4089 1F88                              l4427 1D22  
                            l3811 04A8                              l3707 1BE0  
                            l4445 1D7A                              l4437 1D60  
                            l4453 1E2C                              l3733 1CB2  
                            l4287 1296                              l4467 1EC0  
                            l3915 0852                              l3675 1ACA  
                            l3659 1A14                              l4483 20B8  
                            l3909 080C                              l3829 0562  
                            l3757 027C                              l4477 209E  
                            l3943 0928                              l3847 061C  
                            l3775 0334                              l4495 215C  
                            l3881 0738                              l3793 03EE  
                            l4489 2116                              l3875 06F2  
                            l3949 096E                              l3983 0A8A  
                            l3977 0A44                     getsUSART@data 0005  
                            _LATA 000F89                              _LATB 000F8A  
                            _LATC 000F8B                              _PIE1 000F9D  
                            u6100 1E16                              u6110 1E24  
                            u5310 0A64                              u5230 0948  
                            u5150 082C                              u5070 0712  
                            u6120 1E26                              u6200 20C4  
                            u5315 0A58                              u5235 093C  
                            u5155 0820                              u5075 0706  
                            u6108 1E1A                              u6060 1DE0  
                            u4540 1990                              u6070 1DF4  
                            u6206 20C6                              u5600 0DAE  
                            u6080 1E02                              u4545 1984  
                            u5610 0DFA                              u6090 1E04  
                            u4555 19F0                              u4900 0424  
                            u4820 02B0                              u4580 1A46  
                            u5605 0DA2                              u6078 1DF8  
                            u5470 0C9C                              u5390 0B80  
                            u4750 1CD2                              u4670 1BBA  
                            u5615 0DEE                              u5625 0E5A  
                            u4905 0418                              u4825 02A4  
                            u4585 1A3A                              u5730 1032  
                            u5475 0C90                              u5395 0B74  
                            u4915 0484                              u4835 0310  
                            u4755 1CC6                              u4675 1BAE  
                            u4595 1AA6                              u5740 107E  
                            u4940 04DE                              u4860 036A  
                            u4780 01F8                              u5735 1026  
                            u5745 1072                              u4945 04D2  
                            u4865 035E                              u4785 01EC  
                            u5755 10DE                              u4955 053E  
                            u4875 03CA                              u4795 0258  
                            u5860 12B6                              u4980 0598  
                            u5870 1302                              u5865 12AA  
                            u4985 058C                              u5875 12F6  
                            u4995 05F8                              u5885 1362  
             __size_of_CANSetMask 039E                              _data 007F  
                            _main 209A                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              indf1 000FE7  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              btemp 0040  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 01BA  
                   __CFG_IESO$OFF 000000                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000010                  _CANOperationMode 238E  
      __size_of_CANreceiveMessage 050C                             ?_main 0001  
                           _T3CON 000FB1                             i1l610 00F0  
                           i1l613 00EC                             i1l616 0158  
                           i1l617 0156                             i1l714 2356  
                           i1l619 0172                             i1l549 2378  
                           i1l398 16E8                             i1l656 22DC  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _TMR3H 000FB3                             _TMR3L 000FB2  
                           _SPBRG 000FAF                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
               _CANisRxReady$2929 0001                             _TXREG 000FAD  
                           _TXSTA 000FAC                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
              __size_of_ISR_bassa 01A2                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
              CANInitialize@flags 00B0                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                  __CFG_EBTRB$OFF 000000                    __pbitbssCOMRAM 01F8  
            __end_of_CANisRxReady 237C                             tablat 000FF5  
            __end_of_CANisTxReady 2348                             status 000FD8  
                  __CFG_PBADEN$ON 000000                    WriteUSART@data 0020  
                 __initialization 228E                      __end_of_main 219E  
                          ??_main 00B8                     __activetblptr 000002  
               _CANisTxReady$2927 0020                            _CANCON 000F6F  
                 __CFG_BBSIZ$1024 000000                   getsUSART@buffer 0002  
                          i1l3401 1848                            i1l3421 190A  
                          i1l3413 18D2                            i1l3351 1656  
                          i1l3425 1926                            i1l3417 18EE  
                          i1l3409 18B6                            i1l3427 1958  
                          i1l3363 16B0                            i1l3355 1674  
                          i1l3347 1638                            i1l3339 15C8  
                          i1l3451 22F8                            i1l3365 16E2  
                          i1l3359 1692                            i1l3563 00BC  
                          i1l3557 00A6                            i1l3549 0066  
                          i1l3567 00C4                __size_of_ReadUSART 001E  
                 _newMessageUsart 01FB                            _RXB0D0 000F66  
                          _RXB0D1 000F67                            _RXB0D2 000F68  
                          _RXB0D3 000F69                            _RXB0D4 000F6A  
                          _RXB1D0 000F56                            _RXB0D5 000F6B  
                          _RXB1D1 000F57                            _RXB0D6 000F6C  
                          _RXB1D2 000F58                            _RXB0D7 000F6D  
                          _RXB1D3 000F59                            _RXB1D4 000F5A  
                          _RXB1D5 000F5B                            _RXB1D6 000F5C  
                          _RXB1D7 000F5D                            _TXB0D0 000F46  
                          _TXB0D1 000F47                            _TXB0D2 000F48  
                          _TXB0D3 000F49                            _TXB1D0 000F36  
                          _TXB0D4 000F4A                            _TXB1D1 000F37  
                          _TXB0D5 000F4B                            _SPBRGH 000FB0  
                          _TXB1D2 000F38                            _TXB0D6 000F4C  
                          _TXB1D3 000F39                            _TXB0D7 000F4D  
                          _TXB2D0 000F26                            _TXB1D4 000F3A  
                          _TXB2D1 000F27                            _TXB1D5 000F3B  
                          _TXB2D2 000F28                            _TXB1D6 000F3C  
                          _TXB2D3 000F29                            _TXB1D7 000F3D  
                          _TXB2D4 000F2A                            _TXB2D5 000F2B  
                          _TXB2D6 000F2C                            _TXB2D7 000F2D  
              CANsendMessage@data 00A2                CANsendMessage@tamp 00AA  
           __size_of_CANSetFilter 0B06                    __CFG_XINST$OFF 000000  
               __end_of_ISR_bassa 01BA                __size_of_OpenUSART 0072  
                  __CFG_STVREN$ON 000000                      ??_CANSetMask 00A3  
                          clear_0 2294                            clear_1 22A2  
        ?_configurazione_iniziale 0001                   __CFG_BOREN$BOHW 000000  
                    __pdataCOMRAM 0037                            tblptrh 000FF7  
                  _analogic_brake 0077                            tblptrl 000FF6  
                          tblptru 000FF8                      _CANSetFilter 01BE  
                      __accesstop 0060           __end_of__initialization 22C8  
              __end_of_CANSetMask 1CFA                     ___rparam_used 000001  
                      _WriteUSART 237C                    __pcstackCOMRAM 0001  
               __end_of_ReadUSART 2366             CANSetFilter@numBuffer 00A7  
                   _newMessageCan 01FA             __size_of_CANisRxReady 0016  
              __size_of_getsUSART 002C             __size_of_CANisTxReady 001E  
                   ReadUSART@data 0001                 __end_of_OpenUSART 228E  
        __end_of_CANOperationMode 23A0                        __pbssBANK0 0060  
                _set_steering_old 0036           __size_of_CANsendMessage 078C  
        __size_of_can_interpreter 01DA                     putsUSART@data 009E  
                    _CANisRxReady 2366                           _CANSTAT 000F6E  
                    _CANisTxReady 232A                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
          __size_of_CANInitialize 01C6                           _RXB0DLC 000F65  
                         _RXB1DLC 000F55                           _RXB0CON 000F60  
                         _RXB1CON 000F50                           _TXB0DLC 000F45  
                         _TXB1DLC 000F35                           _TXB2DLC 000F25  
              __size_of_putsUSART 0028               CANsendMessage@flags 00A5  
                         __Hparam 0000                        _left_speed 0030  
                         __Lparam 0000                 __end_of_getsUSART 2302  
                     ?_WriteUSART 0001              CANInitialize@propSeg 00B5  
                         __pcinit 228E                           __ramtop 0300  
                         __ptext0 209A                           __ptext1 2302  
                         __ptext2 237C                           __ptext3 219E  
                         __ptext4 221C                           __ptext5 1ED4  
                         __ptext6 195C                           __ptext7 01BE  
                         __ptext8 238E                           __ptext9 1CFA  
          CANreceiveMessage@error 000B              end_of_initialization 22C8  
                   __Lmediumconst 0000                     _CANInitialize 1ED4  
                       _RCSTAbits 000FAB                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE                 __end_of_putsUSART 232A  
                       _ISR_bassa 0018                 ??_can_interpreter 00AE  
                  CANSetMask@mask 009E                         _PORTCbits 000F82  
                       _PORTDbits 000F83                    CANSetMask@tamp 00A8  
                  CANSetMask@type 00A2                         _TRISCbits 000F94  
                      getsUSART@i 0006               __size_of_WriteUSART 0012  
__size_of_configurazione_iniziale 007E               _previousTimeCounter 0026  
         _clock_counter_reference 002E                    _CANsendMessage 0CC4  
                CANInitialize@BRP 00AF                  CANInitialize@SJW 00AE  
                       _TXSTAbits 000FAC                    ?_CANInitialize 00AC  
                      ?_ISR_bassa 0001                     __pidataCOMRAM 23A0  
             start_initialization 228E                         _ReadUSART 2348  
             CANSetMask@numBuffer 00A7            __end_of_CANsendMessage 1450  
               ?_CANOperationMode 0001                         _OpenUSART 221C  
              ??_CANOperationMode 0020        CANInitialize@FilterConfig1 00B6  
      CANInitialize@FilterConfig2 00B7                  __CFG_LPT1OSC$OFF 000000  
          CANInitialize@phaseSeg1 00AC            CANInitialize@phaseSeg2 00AD  
                     __pbssCOMRAM 0022                        ?_ReadUSART 0001  
                   __pcstackBANK0 009E                       _BRGCON2bits 000F71  
                     _BRGCON3bits 000F72                   ?_CANsendMessage 009E  
                 ??_CANInitialize 00B1                        ?_OpenUSART 0020  
              CANSetFilter@filter 009E                      ??_WriteUSART 0020  
                     ??_ISR_bassa 000D                         _getsUSART 22D6  
                     __pintcodelo 0018                       _COMSTATbits 000F74  
                      ISR_bassa@i 001F           _configurazione_iniziale 219E  
              __end_of_WriteUSART 238E             CANreceiveMessage@tamp 000C  
                 _can_interpreter 1CFA                          _IPR1bits 000F9F  
              _analogic_brake_old 0035                          _IPR2bits 000FA2  
    _delay_quartz_frequency_value 0037                          _PIE1bits 000F9D  
                        _IPR3bits 000FA5                          _PIE3bits 000FA3  
                        i1u400_20 1790                          i1u400_26 1792  
                        i1u401_20 17BA                          i1u401_26 17BC  
                        i1u403_25 17CE                          i1u440_20 00FC  
                        i1u440_26 00FE                          i1u433_20 006E  
                        i1u409_25 1932                          i1u433_26 0070  
                        i1u435_20 00A4                          i1u390_20 1536  
                        i1u390_26 1538                          i1u392_25 154C  
                        i1u389_20 1508                          i1u389_26 150A  
                        i1u398_25 16BC                          _PIR1bits 000F9E  
                        _PIR2bits 000FA1                          _PIR3bits 000FA4  
                        _RXB0EIDH 000F63                          _RXB0EIDL 000F64  
                        _RXB1EIDH 000F53                          _RXB1EIDL 000F54  
                       _set_speed 0087                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000                          _RXB0SIDH 000F61  
                        _RXB0SIDL 000F62                          _RXF0EIDH 000F02  
                        _RXB1SIDH 000F51                          _RXF0EIDL 000F03  
                        _RXB1SIDL 000F52                          _RXF1EIDH 000F06  
                        _RXF1EIDL 000F07                          _RXF2EIDH 000F0A  
                        _RXF2EIDL 000F0B                          _RXF3EIDH 000F0E  
                        _RXF3EIDL 000F0F                          _RXF4EIDH 000F12  
                        _RXF4EIDL 000F13                          _RXF5EIDH 000F16  
                        _RXF5EIDL 000F17                          _RXF0SIDH 000F00  
                        _RXF0SIDL 000F01                          _TXB0EIDH 000F43  
                        _RXF1SIDH 000F04                          _TXB0EIDL 000F44  
                        _RXF1SIDL 000F05                          _TXB1EIDH 000F33  
                        _RXF2SIDH 000F08                          _TXB1EIDL 000F34  
                        _RXF2SIDL 000F09                          _TXB2EIDH 000F23  
                        _RXF3SIDH 000F0C                          _TXB2EIDL 000F24  
                        _RXF3SIDL 000F0D                          _RXF4SIDH 000F10  
                        _RXF4SIDL 000F11                          _RXF5SIDH 000F14  
                        _RXF5SIDL 000F15                          _RXM0EIDH 000F1A  
                        _RXM0EIDL 000F1B                          _TXB0SIDH 000F41  
                        _RXM1EIDH 000F1E                          _TXB0SIDL 000F42  
                        _RXM1EIDL 000F1F                          _TXB1SIDH 000F31  
                        _TXB1SIDL 000F32                          _TXB2SIDH 000F21  
                        _TXB2SIDL 000F22                          _RXM0SIDH 000F18  
                        _RXM0SIDL 000F19                          _RXM1SIDH 000F1C  
                        _RXM1SIDL 000F1D                        ?_getsUSART 0002  
                        _RXERRCNT 000F75                          _USART_Rx 0097  
                        _TXERRCNT 000F76                         _putsUSART 2302  
                        _RTR_Flag 01F8                       ??_ReadUSART 0001  
                   ?_CANSetFilter 009E                         copy_data0 22BC  
                   _set_speed_old 0060                        _CANCONbits 000F6F  
                     ??_OpenUSART 0022                      _SerialOutput 0038  
                 OpenUSART@config 009E                          __Hrparam 0000  
                    _RXB0SIDLbits 000F62                          __Lrparam 0000  
                    _RXB1SIDLbits 000F52                        _CANSetMask 195C  
                      ?_putsUSART 009E         ??_configurazione_iniziale 0022  
                    _RXF0SIDLbits 000F01                      _RXF1SIDLbits 000F05  
                  ??_CANSetFilter 00A3                          __ptext10 0CC4  
                        __ptext11 232A                          __ptext13 22D6  
                        __ptext14 2348                          __ptext15 1450  
                        __ptext16 2366                      _RXF2SIDLbits 000F09  
         __end_of_can_interpreter 1ED4                      _RXF3SIDLbits 000F0D  
                    _RXF4SIDLbits 000F11                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 00A4                     __size_of_main 0104  
            CANreceiveMessage@msg 0001                      _TXB0SIDLbits 000F42  
                    _TXB1SIDLbits 000F32                      _TXB2SIDLbits 000F22  
                        int$flags 0040         __size_of_CANOperationMode 0012  
                   ?_CANisRxReady 0001                       ??_getsUSART 0005  
                   ?_CANisTxReady 0001                       _RXB0DLCbits 000F65  
                     _RXB1DLCbits 000F55                      _RXM0SIDLbits 000F19  
                     _RXB0CONbits 000F60                       _RXB1CONbits 000F50  
               _CANreceiveMessage 1450                      _RXM1SIDLbits 000F1D  
                      _INTCONbits 000FF2                      _set_steering 008F  
                ??_CANsendMessage 00A6                    OpenUSART@spbrg 0020  
              ?_CANreceiveMessage 0001          CANsendMessage@identifier 009E  
                        intlevel1 0000                  CANSetFilter@tamp 00A8  
                CANSetFilter@type 00A2               ??_CANreceiveMessage 0003  
                     _TXB0DLCbits 000F45                       _right_speed 0032  
                     _TXB1DLCbits 000F35                       _TXB0CONbits 000F40  
                     _TXB2DLCbits 000F25   __end_of_configurazione_iniziale 221C  
                     _TXB1CONbits 000F30                       _TXB2CONbits 000F20  
                     _timeCounter 002A              CANOperationMode@mode 0020  
                  ??_CANisRxReady 0001                       ?_CANSetMask 009E  
                  ??_CANisTxReady 0020         __end_of_CANreceiveMessage 195C  
                     ??_putsUSART 0021                  ?_can_interpreter 0001  
           __end_of_CANInitialize 209A                      _USART_Status 0034  
