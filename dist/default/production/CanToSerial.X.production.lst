

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Mar 20 16:39:36 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    35                           	psect	param0,global,class=BANK0,space=1,delta=1
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37  0000                     
    38                           	psect	idataBANK0
    39  0025DA                     __pidataBANK0:
    40                           	opt stack 0
    41                           
    42                           ;initializer for _SerialOutputOld
    43  0025DA  AA                 	db	170
    44  0025DB  00                 	db	0
    45  0025DC  00                 	db	0
    46  0025DD  00                 	db	0
    47  0025DE  00                 	db	0
    48  0025DF  00                 	db	0
    49  0025E0  AA                 	db	170
    50  0025E1  00                 	db	0
    51                           
    52                           ;initializer for _delay_quartz_frequency_value
    53  0025E2  10                 	db	16
    54                           
    55                           ;initializer for _SerialOutput
    56  0025E3  AA                 	db	170
    57  0025E4  00                 	db	0
    58  0025E5  00                 	db	0
    59  0025E6  00                 	db	0
    60  0025E7  00                 	db	0
    61  0025E8  00                 	db	0
    62  0025E9  AA                 	db	170
    63  0025EA  00                 	db	0
    64  0000                     _RXB1CON	set	3920
    65  0000                     _RXB1CONbits	set	3920
    66  0000                     _RXB1D0	set	3926
    67  0000                     _RXB1D1	set	3927
    68  0000                     _RXB1D2	set	3928
    69  0000                     _RXB1D3	set	3929
    70  0000                     _RXB1D4	set	3930
    71  0000                     _RXB1D5	set	3931
    72  0000                     _RXB1D6	set	3932
    73  0000                     _RXB1D7	set	3933
    74  0000                     _RXB1DLC	set	3925
    75  0000                     _RXB1DLCbits	set	3925
    76  0000                     _RXB1EIDH	set	3923
    77  0000                     _RXB1EIDL	set	3924
    78  0000                     _RXB1SIDH	set	3921
    79  0000                     _RXB1SIDL	set	3922
    80  0000                     _RXB1SIDLbits	set	3922
    81  0000                     _RXF0EIDH	set	3842
    82  0000                     _RXF0EIDL	set	3843
    83  0000                     _RXF0SIDH	set	3840
    84  0000                     _RXF0SIDL	set	3841
    85  0000                     _RXF0SIDLbits	set	3841
    86  0000                     _RXF1EIDH	set	3846
    87  0000                     _RXF1EIDL	set	3847
    88  0000                     _RXF1SIDH	set	3844
    89  0000                     _RXF1SIDL	set	3845
    90  0000                     _RXF1SIDLbits	set	3845
    91  0000                     _RXF2EIDH	set	3850
    92  0000                     _RXF2EIDL	set	3851
    93  0000                     _RXF2SIDH	set	3848
    94  0000                     _RXF2SIDL	set	3849
    95  0000                     _RXF2SIDLbits	set	3849
    96  0000                     _RXF3EIDH	set	3854
    97  0000                     _RXF3EIDL	set	3855
    98  0000                     _RXF3SIDH	set	3852
    99  0000                     _RXF3SIDL	set	3853
   100  0000                     _RXF3SIDLbits	set	3853
   101  0000                     _RXF4EIDH	set	3858
   102  0000                     _RXF4EIDL	set	3859
   103  0000                     _RXF4SIDH	set	3856
   104  0000                     _RXF4SIDL	set	3857
   105  0000                     _RXF4SIDLbits	set	3857
   106  0000                     _RXF5EIDH	set	3862
   107  0000                     _RXF5EIDL	set	3863
   108  0000                     _RXF5SIDH	set	3860
   109  0000                     _RXF5SIDL	set	3861
   110  0000                     _RXF5SIDLbits	set	3861
   111  0000                     _RXM0EIDH	set	3866
   112  0000                     _RXM0EIDL	set	3867
   113  0000                     _RXM0SIDH	set	3864
   114  0000                     _RXM0SIDL	set	3865
   115  0000                     _RXM0SIDLbits	set	3865
   116  0000                     _RXM1EIDH	set	3870
   117  0000                     _RXM1EIDL	set	3871
   118  0000                     _RXM1SIDH	set	3868
   119  0000                     _RXM1SIDL	set	3869
   120  0000                     _RXM1SIDLbits	set	3869
   121  0000                     _TXB0CONbits	set	3904
   122  0000                     _TXB0D0	set	3910
   123  0000                     _TXB0D1	set	3911
   124  0000                     _TXB0D2	set	3912
   125  0000                     _TXB0D3	set	3913
   126  0000                     _TXB0D4	set	3914
   127  0000                     _TXB0D5	set	3915
   128  0000                     _TXB0D6	set	3916
   129  0000                     _TXB0D7	set	3917
   130  0000                     _TXB0DLC	set	3909
   131  0000                     _TXB0DLCbits	set	3909
   132  0000                     _TXB0EIDH	set	3907
   133  0000                     _TXB0EIDL	set	3908
   134  0000                     _TXB0SIDH	set	3905
   135  0000                     _TXB0SIDL	set	3906
   136  0000                     _TXB0SIDLbits	set	3906
   137  0000                     _TXB1CONbits	set	3888
   138  0000                     _TXB1D0	set	3894
   139  0000                     _TXB1D1	set	3895
   140  0000                     _TXB1D2	set	3896
   141  0000                     _TXB1D3	set	3897
   142  0000                     _TXB1D4	set	3898
   143  0000                     _TXB1D5	set	3899
   144  0000                     _TXB1D6	set	3900
   145  0000                     _TXB1D7	set	3901
   146  0000                     _TXB1DLC	set	3893
   147  0000                     _TXB1DLCbits	set	3893
   148  0000                     _TXB1EIDH	set	3891
   149  0000                     _TXB1EIDL	set	3892
   150  0000                     _TXB1SIDH	set	3889
   151  0000                     _TXB1SIDL	set	3890
   152  0000                     _TXB1SIDLbits	set	3890
   153  0000                     _TXB2CONbits	set	3872
   154  0000                     _TXB2D0	set	3878
   155  0000                     _TXB2D1	set	3879
   156  0000                     _TXB2D2	set	3880
   157  0000                     _TXB2D3	set	3881
   158  0000                     _TXB2D4	set	3882
   159  0000                     _TXB2D5	set	3883
   160  0000                     _TXB2D6	set	3884
   161  0000                     _TXB2D7	set	3885
   162  0000                     _TXB2DLC	set	3877
   163  0000                     _TXB2DLCbits	set	3877
   164  0000                     _TXB2EIDH	set	3875
   165  0000                     _TXB2EIDL	set	3876
   166  0000                     _TXB2SIDH	set	3873
   167  0000                     _TXB2SIDL	set	3874
   168  0000                     _TXB2SIDLbits	set	3874
   169  0000                     _ADCON1bits	set	4033
   170  0000                     _BRGCON1	set	3952
   171  0000                     _BRGCON2	set	3953
   172  0000                     _BRGCON2bits	set	3953
   173  0000                     _BRGCON3	set	3954
   174  0000                     _BRGCON3bits	set	3954
   175  0000                     _CANCON	set	3951
   176  0000                     _CANCONbits	set	3951
   177  0000                     _CANSTAT	set	3950
   178  0000                     _COMSTATbits	set	3956
   179  0000                     _INTCONbits	set	4082
   180  0000                     _IPR1bits	set	3999
   181  0000                     _IPR2bits	set	4002
   182  0000                     _IPR3bits	set	4005
   183  0000                     _LATA	set	3977
   184  0000                     _LATAbits	set	3977
   185  0000                     _LATB	set	3978
   186  0000                     _LATC	set	3979
   187  0000                     _LATD	set	3980
   188  0000                     _LATDbits	set	3980
   189  0000                     _LATE	set	3981
   190  0000                     _PIE1	set	3997
   191  0000                     _PIE1bits	set	3997
   192  0000                     _PIE2bits	set	4000
   193  0000                     _PIE3bits	set	4003
   194  0000                     _PIR1bits	set	3998
   195  0000                     _PIR2bits	set	4001
   196  0000                     _PIR3bits	set	4004
   197  0000                     _PORTCbits	set	3970
   198  0000                     _RCONbits	set	4048
   199  0000                     _RCREG	set	4014
   200  0000                     _RCSTA	set	4011
   201  0000                     _RCSTAbits	set	4011
   202  0000                     _RXB0CON	set	3936
   203  0000                     _RXB0CONbits	set	3936
   204  0000                     _RXB0D0	set	3942
   205  0000                     _RXB0D1	set	3943
   206  0000                     _RXB0D2	set	3944
   207  0000                     _RXB0D3	set	3945
   208  0000                     _RXB0D4	set	3946
   209  0000                     _RXB0D5	set	3947
   210  0000                     _RXB0D6	set	3948
   211  0000                     _RXB0D7	set	3949
   212  0000                     _RXB0DLC	set	3941
   213  0000                     _RXB0DLCbits	set	3941
   214  0000                     _RXB0EIDH	set	3939
   215  0000                     _RXB0EIDL	set	3940
   216  0000                     _RXB0SIDH	set	3937
   217  0000                     _RXB0SIDL	set	3938
   218  0000                     _RXB0SIDLbits	set	3938
   219  0000                     _RXERRCNT	set	3957
   220  0000                     _SPBRG	set	4015
   221  0000                     _SPBRGH	set	4016
   222  0000                     _T3CON	set	4017
   223  0000                     _TMR3H	set	4019
   224  0000                     _TMR3L	set	4018
   225  0000                     _TRISA	set	3986
   226  0000                     _TRISB	set	3987
   227  0000                     _TRISC	set	3988
   228  0000                     _TRISCbits	set	3988
   229  0000                     _TRISD	set	3989
   230  0000                     _TRISE	set	3990
   231  0000                     _TXERRCNT	set	3958
   232  0000                     _TXREG	set	4013
   233  0000                     _TXSTA	set	4012
   234  0000                     _TXSTAbits	set	4012
   235                           
   236                           ; #config settings
   237  0000                     
   238                           	psect	cinit
   239  00243E                     __pcinit:
   240                           	opt stack 0
   241  00243E                     start_initialization:
   242                           	opt stack 0
   243  00243E                     __initialization:
   244                           	opt stack 0
   245                           
   246                           ; Clear objects allocated to BANK0 (43 bytes)
   247  00243E  EE00  F092         	lfsr	0,__pbssBANK0
   248  002442  0E2B               	movlw	43
   249  002444                     clear_0:
   250  002444  6AEE               	clrf	postinc0,c
   251  002446  06E8               	decf	wreg,f,c
   252  002448  E1FD               	bnz	clear_0
   253                           
   254                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   255  00244A  6A49               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   256                           
   257                           ; Clear objects allocated to COMRAM (41 bytes)
   258  00244C  EE00  F001         	lfsr	0,__pbssCOMRAM
   259  002450  0E29               	movlw	41
   260  002452                     clear_1:
   261  002452  6AEE               	clrf	postinc0,c
   262  002454  06E8               	decf	wreg,f,c
   263  002456  E1FD               	bnz	clear_1
   264                           
   265                           ; Initialize objects allocated to BANK0 (17 bytes)
   266                           ; load TBLPTR registers with __pidataBANK0
   267  002458  0EDA               	movlw	low __pidataBANK0
   268  00245A  6EF6               	movwf	tblptrl,c
   269  00245C  0E25               	movlw	high __pidataBANK0
   270  00245E  6EF7               	movwf	tblptrh,c
   271  002460  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   272  002462  6EF8               	movwf	tblptru,c
   273  002464  EE00  F0BD         	lfsr	0,__pdataBANK0
   274  002468  EE10 F011          	lfsr	1,17
   275  00246C                     copy_data0:
   276  00246C  0009               	tblrd		*+
   277  00246E  CFF5 FFEE          	movff	tablat,postinc0
   278  002472  50E5               	movf	postdec1,w,c
   279  002474  50E1               	movf	fsr1l,w,c
   280  002476  E1FA               	bnz	copy_data0
   281  002478                     end_of_initialization:
   282                           	opt stack 0
   283  002478                     __end_of__initialization:
   284                           	opt stack 0
   285  002478  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   286  00247A  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   287  00247C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   288  00247E  6EF8               	movwf	tblptru,c
   289  002480  0100               	movlb	0
   290  002482  EF5A  F00F         	goto	_main	;jump to C main() function
   291                           tblptru	equ	0xFF8
   292                           tblptrh	equ	0xFF7
   293                           tblptrl	equ	0xFF6
   294                           tablat	equ	0xFF5
   295                           postinc0	equ	0xFEE
   296                           wreg	equ	0xFE8
   297                           postdec1	equ	0xFE5
   298                           fsr1l	equ	0xFE1
   299                           
   300                           	psect	bitbssCOMRAM
   301  000248                     __pbitbssCOMRAM:
   302                           	opt stack 0
   303  000248                     _RTR_Flag:
   304                           	opt stack 0
   305  000248                     	ds	1
   306  000249                     _dir:
   307                           	opt stack 0
   308  000249                     	ds	1
   309  00024A                     _newMessageCan:
   310                           	opt stack 0
   311  00024A                     	ds	1
   312  00024B                     _newMessageUsart:
   313                           	opt stack 0
   314  00024B                     	ds	1
   315  00024C                     _sendMessage:
   316                           	opt stack 0
   317  00024C                     	ds	1
   318                           tblptru	equ	0xFF8
   319                           tblptrh	equ	0xFF7
   320                           tblptrl	equ	0xFF6
   321                           tablat	equ	0xFF5
   322                           postinc0	equ	0xFEE
   323                           wreg	equ	0xFE8
   324                           postdec1	equ	0xFE5
   325                           fsr1l	equ	0xFE1
   326                           
   327                           	psect	bssCOMRAM
   328  000001                     __pbssCOMRAM:
   329                           	opt stack 0
   330  000001                     _set_speed_old:
   331                           	opt stack 0
   332  000001                     	ds	8
   333  000009                     _USART_Status:
   334                           	opt stack 0
   335  000009                     	ds	1
   336  00000A                     _USART_Rx:
   337                           	opt stack 0
   338  00000A                     	ds	8
   339  000012                     _analogic_brake:
   340                           	opt stack 0
   341  000012                     	ds	8
   342  00001A                     _data:
   343                           	opt stack 0
   344  00001A                     	ds	8
   345  000022                     _set_speed:
   346                           	opt stack 0
   347  000022                     	ds	8
   348                           tblptru	equ	0xFF8
   349                           tblptrh	equ	0xFF7
   350                           tblptrl	equ	0xFF6
   351                           tablat	equ	0xFF5
   352                           postinc0	equ	0xFEE
   353                           wreg	equ	0xFE8
   354                           postdec1	equ	0xFE5
   355                           fsr1l	equ	0xFE1
   356                           
   357                           	psect	bssBANK0
   358  000092                     __pbssBANK0:
   359                           	opt stack 0
   360  000092                     _id:
   361                           	opt stack 0
   362  000092                     	ds	4
   363  000096                     _previousTimeCounter:
   364                           	opt stack 0
   365  000096                     	ds	4
   366  00009A                     _timeCounter:
   367                           	opt stack 0
   368  00009A                     	ds	4
   369  00009E                     _clock_counter_reference:
   370                           	opt stack 0
   371  00009E                     	ds	2
   372  0000A0                     _left_speed:
   373                           	opt stack 0
   374  0000A0                     	ds	2
   375  0000A2                     _right_speed:
   376                           	opt stack 0
   377  0000A2                     	ds	2
   378  0000A4                     _analogic_brake_old:
   379                           	opt stack 0
   380  0000A4                     	ds	1
   381  0000A5                     _set_steering_old:
   382                           	opt stack 0
   383  0000A5                     	ds	1
   384  0000A6                     _msg:
   385                           	opt stack 0
   386  0000A6                     	ds	15
   387  0000B5                     _set_steering:
   388                           	opt stack 0
   389  0000B5                     	ds	8
   390                           tblptru	equ	0xFF8
   391                           tblptrh	equ	0xFF7
   392                           tblptrl	equ	0xFF6
   393                           tablat	equ	0xFF5
   394                           postinc0	equ	0xFEE
   395                           wreg	equ	0xFE8
   396                           postdec1	equ	0xFE5
   397                           fsr1l	equ	0xFE1
   398                           
   399                           	psect	dataBANK0
   400  0000BD                     __pdataBANK0:
   401                           	opt stack 0
   402  0000BD                     _SerialOutputOld:
   403                           	opt stack 0
   404  0000BD                     	ds	8
   405  0000C5                     _delay_quartz_frequency_value:
   406                           	opt stack 0
   407  0000C5                     	ds	1
   408  0000C6                     _SerialOutput:
   409                           	opt stack 0
   410  0000C6                     	ds	8
   411                           tblptru	equ	0xFF8
   412                           tblptrh	equ	0xFF7
   413                           tblptrl	equ	0xFF6
   414                           tablat	equ	0xFF5
   415                           postinc0	equ	0xFEE
   416                           wreg	equ	0xFE8
   417                           postdec1	equ	0xFE5
   418                           fsr1l	equ	0xFE1
   419                           
   420                           	psect	cstackBANK0
   421  000060                     __pcstackBANK0:
   422                           	opt stack 0
   423  000060                     ReadUSART@data:
   424                           	opt stack 0
   425                           
   426                           ; 1 bytes @ 0x0
   427  000060                     	ds	1
   428  000061                     getsUSART@buffer:
   429                           	opt stack 0
   430                           
   431                           ; 2 bytes @ 0x1
   432  000061                     	ds	2
   433  000063                     getsUSART@len:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0x3
   437  000063                     	ds	1
   438  000064                     getsUSART@data:
   439                           	opt stack 0
   440                           
   441                           ; 1 bytes @ 0x4
   442  000064                     	ds	1
   443  000065                     getsUSART@i:
   444                           	opt stack 0
   445                           
   446                           ; 1 bytes @ 0x5
   447  000065                     	ds	1
   448  000066                     ??_ISR_alta:
   449                           
   450                           ; 0 bytes @ 0x6
   451  000066                     	ds	15
   452  000075                     ?___wmul:
   453                           	opt stack 0
   454  000075                     CANOperationMode@mode:
   455                           	opt stack 0
   456  000075                     _CANisTxReady$3180:
   457                           	opt stack 0
   458  000075                     WriteUSART@data:
   459                           	opt stack 0
   460  000075                     OpenUSART@spbrg:
   461                           	opt stack 0
   462  000075                     ___wmul@multiplier:
   463                           	opt stack 0
   464  000075                     CANsendMessage@identifier:
   465                           	opt stack 0
   466  000075                     CANSetMask@mask:
   467                           	opt stack 0
   468  000075                     CANSetFilter@filter:
   469                           	opt stack 0
   470                           
   471                           ; 4 bytes @ 0x15
   472  000075                     	ds	1
   473  000076                     putsUSART@data:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0x16
   477  000076                     	ds	1
   478  000077                     OpenUSART@config:
   479                           	opt stack 0
   480  000077                     ___wmul@multiplicand:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0x17
   484  000077                     	ds	1
   485  000078                     
   486                           ; 0 bytes @ 0x18
   487  000078                     	ds	1
   488  000079                     CANSetMask@type:
   489                           	opt stack 0
   490  000079                     CANSetFilter@type:
   491                           	opt stack 0
   492  000079                     CANsendMessage@data:
   493                           	opt stack 0
   494  000079                     ___wmul@product:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x19
   498  000079                     	ds	1
   499  00007A                     ??_CANSetMask:
   500  00007A                     ??_CANSetFilter:
   501                           
   502                           ; 0 bytes @ 0x1A
   503  00007A                     	ds	1
   504  00007B                     CANsendMessage@dataLength:
   505                           	opt stack 0
   506  00007B                     delay_ms@value_ms:
   507                           	opt stack 0
   508                           
   509                           ; 2 bytes @ 0x1B
   510  00007B                     	ds	1
   511  00007C                     CANsendMessage@flags:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0x1C
   515  00007C                     	ds	1
   516  00007D                     ??_CANsendMessage:
   517  00007D                     
   518                           ; 0 bytes @ 0x1D
   519  00007D                     	ds	1
   520  00007E                     CANSetMask@numBuffer:
   521                           	opt stack 0
   522  00007E                     CANSetFilter@numBuffer:
   523                           	opt stack 0
   524                           
   525                           ; 1 bytes @ 0x1E
   526  00007E                     	ds	1
   527  00007F                     CANSetMask@tamp:
   528                           	opt stack 0
   529  00007F                     CANSetFilter@tamp:
   530                           	opt stack 0
   531                           
   532                           ; 4 bytes @ 0x1F
   533  00007F                     	ds	2
   534  000081                     CANsendMessage@tamp:
   535                           	opt stack 0
   536                           
   537                           ; 4 bytes @ 0x21
   538  000081                     	ds	2
   539  000083                     CANInitialize@phaseSeg1:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x23
   543  000083                     	ds	1
   544  000084                     CANInitialize@phaseSeg2:
   545                           	opt stack 0
   546                           
   547                           ; 1 bytes @ 0x24
   548  000084                     	ds	1
   549  000085                     ??_can_interpreter:
   550  000085                     CANInitialize@SJW:
   551                           	opt stack 0
   552                           
   553                           ; 1 bytes @ 0x25
   554  000085                     	ds	1
   555  000086                     CANInitialize@BRP:
   556                           	opt stack 0
   557                           
   558                           ; 1 bytes @ 0x26
   559  000086                     	ds	1
   560  000087                     CANInitialize@flags:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0x27
   564  000087                     	ds	1
   565  000088                     ??_CANInitialize:
   566                           
   567                           ; 0 bytes @ 0x28
   568  000088                     	ds	4
   569  00008C                     CANInitialize@propSeg:
   570                           	opt stack 0
   571                           
   572                           ; 1 bytes @ 0x2C
   573  00008C                     	ds	1
   574  00008D                     CANInitialize@FilterConfig1:
   575                           	opt stack 0
   576                           
   577                           ; 1 bytes @ 0x2D
   578  00008D                     	ds	1
   579  00008E                     CANInitialize@FilterConfig2:
   580                           	opt stack 0
   581                           
   582                           ; 1 bytes @ 0x2E
   583  00008E                     	ds	1
   584  00008F                     ??_main:
   585                           
   586                           ; 0 bytes @ 0x2F
   587  00008F                     	ds	2
   588  000091                     main@i:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x31
   592  000091                     	ds	1
   593                           tblptru	equ	0xFF8
   594                           tblptrh	equ	0xFF7
   595                           tblptrl	equ	0xFF6
   596                           tablat	equ	0xFF5
   597                           postinc0	equ	0xFEE
   598                           wreg	equ	0xFE8
   599                           postdec1	equ	0xFE5
   600                           fsr1l	equ	0xFE1
   601                           
   602                           	psect	cstackCOMRAM
   603  00002A                     __pcstackCOMRAM:
   604                           	opt stack 0
   605  00002A                     _CANisRxReady$3182:
   606                           	opt stack 0
   607  00002A                     CANreceiveMessage@msg:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x0
   611  00002A                     	ds	2
   612  00002C                     ??_CANreceiveMessage:
   613                           
   614                           ; 0 bytes @ 0x2
   615  00002C                     	ds	8
   616  000034                     CANreceiveMessage@error:
   617                           	opt stack 0
   618                           
   619                           ; 1 bytes @ 0xA
   620  000034                     	ds	1
   621  000035                     CANreceiveMessage@tamp:
   622                           	opt stack 0
   623                           
   624                           ; 1 bytes @ 0xB
   625  000035                     	ds	1
   626  000036                     ??_ISR_bassa:
   627                           
   628                           ; 0 bytes @ 0xC
   629  000036                     	ds	18
   630  000048                     ISR_bassa@i:
   631                           	opt stack 0
   632                           
   633                           ; 1 bytes @ 0x1E
   634  000048                     	ds	1
   635                           tblptru	equ	0xFF8
   636                           tblptrh	equ	0xFF7
   637                           tblptrl	equ	0xFF6
   638                           tablat	equ	0xFF5
   639                           postinc0	equ	0xFEE
   640                           wreg	equ	0xFE8
   641                           postdec1	equ	0xFE5
   642                           fsr1l	equ	0xFE1
   643                           
   644 ;;
   645 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   646 ;;
   647 ;; *************** function _main *****************
   648 ;; Defined at:
   649 ;;		line 128 in file "CanToSerial.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;		None
   652 ;; Auto vars:     Size  Location     Type
   653 ;;  i               1   49[BANK0 ] unsigned char 
   654 ;; Return value:  Size  Location     Type
   655 ;;		None               void
   656 ;; Registers used:
   657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   663 ;;      Params:         0       0       0       0
   664 ;;      Locals:         0       1       0       0
   665 ;;      Temps:          0       2       0       0
   666 ;;      Totals:         0       3       0       0
   667 ;;Total ram usage:        3 bytes
   668 ;; Hardware stack levels required when called:    8
   669 ;; This function calls:
   670 ;;		_CANsendMessage
   671 ;;		_can_interpreter
   672 ;;		_configurazione_iniziale
   673 ;;		_delay_ms
   674 ;;		_putsUSART
   675 ;; This function is called by:
   676 ;;		Startup code after reset
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680                           	psect	text0
   681  001EB4                     __ptext0:
   682                           	opt stack 0
   683  001EB4                     _main:
   684                           	opt stack 23
   685                           
   686                           ;CanToSerial.c: 129: configurazione_iniziale();
   687                           
   688                           ;incstack = 0
   689  001EB4  EC97  F011         	call	_configurazione_iniziale	;wreg free
   690                           
   691                           ;CanToSerial.c: 130: LATDbits.LATD2 = 1;
   692  001EB8  848C               	bsf	3980,2,c	;volatile
   693                           
   694                           ;CanToSerial.c: 131: LATDbits.LATD3 = 1;
   695  001EBA  868C               	bsf	3980,3,c	;volatile
   696                           
   697                           ;CanToSerial.c: 132: LATDbits.LATD0 = 1;
   698  001EBC  808C               	bsf	3980,0,c	;volatile
   699                           
   700                           ;CanToSerial.c: 133: LATDbits.LATD1 = 1;
   701  001EBE  828C               	bsf	3980,1,c	;volatile
   702                           
   703                           ;CanToSerial.c: 134: LATDbits.LATD4 = 1;
   704  001EC0  888C               	bsf	3980,4,c	;volatile
   705                           
   706                           ;CanToSerial.c: 135: LATDbits.LATD6 = 1;
   707  001EC2  8C8C               	bsf	3980,6,c	;volatile
   708                           
   709                           ;CanToSerial.c: 136: LATDbits.LATD5 = 1;
   710  001EC4  8A8C               	bsf	3980,5,c	;volatile
   711                           
   712                           ;CanToSerial.c: 137: delay_ms(500);
   713  001EC6  0E01               	movlw	1
   714  001EC8  0100               	movlb	0	; () banked
   715  001ECA  6F7C               	movwf	(delay_ms@value_ms+1)& (0+255),b
   716  001ECC  0EF4               	movlw	244
   717  001ECE  6F7B               	movwf	delay_ms@value_ms& (0+255),b
   718  001ED0  EC43  F012         	call	_delay_ms	;wreg free
   719                           
   720                           ;CanToSerial.c: 138: LATDbits.LATD2 = 0;
   721  001ED4  948C               	bcf	3980,2,c	;volatile
   722                           
   723                           ;CanToSerial.c: 139: LATDbits.LATD3 = 0;
   724  001ED6  968C               	bcf	3980,3,c	;volatile
   725                           
   726                           ;CanToSerial.c: 140: LATDbits.LATD0 = 0;
   727  001ED8  908C               	bcf	3980,0,c	;volatile
   728                           
   729                           ;CanToSerial.c: 141: LATDbits.LATD1 = 0;
   730  001EDA  928C               	bcf	3980,1,c	;volatile
   731                           
   732                           ;CanToSerial.c: 142: LATDbits.LATD4 = 0;
   733  001EDC  988C               	bcf	3980,4,c	;volatile
   734                           
   735                           ;CanToSerial.c: 143: LATDbits.LATD6 = 0;
   736  001EDE  9C8C               	bcf	3980,6,c	;volatile
   737                           
   738                           ;CanToSerial.c: 144: LATDbits.LATD5 = 0;
   739  001EE0  9A8C               	bcf	3980,5,c	;volatile
   740  001EE2                     l3809:
   741                           
   742                           ;CanToSerial.c: 147: if (newMessageCan == 1) {
   743  001EE2  A449               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
   744  001EE4  D062               	goto	l3843
   745                           
   746                           ;CanToSerial.c: 149: can_interpreter();
   747  001EE6  EC4A  F00E         	call	_can_interpreter	;wreg free
   748                           
   749                           ;CanToSerial.c: 150: SerialOutput[0] = 0xAA;
   750  001EEA  0EAA               	movlw	170
   751  001EEC  0100               	movlb	0	; () banked
   752  001EEE  6FC6               	movwf	_SerialOutput& (0+255),b
   753                           
   754                           ; BSR set to: 0
   755                           ;CanToSerial.c: 151: SerialOutput[6] = 0xAA;
   756  001EF0  0EAA               	movlw	170
   757  001EF2  0100               	movlb	0	; () banked
   758  001EF4  6FCC               	movwf	(_SerialOutput+6)& (0+255),b
   759                           
   760                           ; BSR set to: 0
   761                           ;CanToSerial.c: 152: SerialOutput[7] = '\0';
   762  001EF6  0E00               	movlw	0
   763  001EF8  0100               	movlb	0	; () banked
   764  001EFA  6FCD               	movwf	(_SerialOutput+7)& (0+255),b
   765                           
   766                           ; BSR set to: 0
   767                           ;CanToSerial.c: 153: for (char i = 0; i < 6; i++) {
   768  001EFC  0E00               	movlw	0
   769  001EFE  0100               	movlb	0	; () banked
   770  001F00  6F91               	movwf	main@i& (0+255),b
   771  001F02                     l3821:
   772                           
   773                           ; BSR set to: 0
   774  001F02  0E05               	movlw	5
   775  001F04  0100               	movlb	0	; () banked
   776  001F06  6591               	cpfsgt	main@i& (0+255),b
   777  001F08  D001               	goto	l3825
   778  001F0A  D044               	goto	l648
   779  001F0C                     l3825:
   780                           
   781                           ; BSR set to: 0
   782                           ;CanToSerial.c: 154: if (SerialOutput[i] == 0) {
   783  001F0C  0100               	movlb	0	; () banked
   784  001F0E  5191               	movf	main@i& (0+255),w,b
   785  001F10  0D01               	mullw	1
   786  001F12  0EC6               	movlw	low _SerialOutput
   787  001F14  24F3               	addwf	prodl,w,c
   788  001F16  6ED9               	movwf	fsr2l,c
   789  001F18  0E00               	movlw	high _SerialOutput
   790  001F1A  20F4               	addwfc	prodh,w,c
   791  001F1C  6EDA               	movwf	fsr2h,c
   792  001F1E  50DF               	movf	indf2,w,c
   793  001F20  A4D8               	btfss	status,2,c
   794  001F22  D035               	goto	l3835
   795                           
   796                           ; BSR set to: 0
   797                           ;CanToSerial.c: 155: SerialOutput[i] = 1;
   798  001F24  0100               	movlb	0	; () banked
   799  001F26  5191               	movf	main@i& (0+255),w,b
   800  001F28  0D01               	mullw	1
   801  001F2A  0EC6               	movlw	low _SerialOutput
   802  001F2C  24F3               	addwf	prodl,w,c
   803  001F2E  6ED9               	movwf	fsr2l,c
   804  001F30  0E00               	movlw	high _SerialOutput
   805  001F32  20F4               	addwfc	prodh,w,c
   806  001F34  6EDA               	movwf	fsr2h,c
   807  001F36  0E01               	movlw	1
   808  001F38  6EDF               	movwf	indf2,c
   809                           
   810                           ; BSR set to: 0
   811                           ;CanToSerial.c: 156: if (SerialOutput [i] == SerialOutputOld [i]) {
   812  001F3A  0100               	movlb	0	; () banked
   813  001F3C  5191               	movf	main@i& (0+255),w,b
   814  001F3E  0D01               	mullw	1
   815  001F40  0EBD               	movlw	low _SerialOutputOld
   816  001F42  24F3               	addwf	prodl,w,c
   817  001F44  6ED9               	movwf	fsr2l,c
   818  001F46  0E00               	movlw	high _SerialOutputOld
   819  001F48  20F4               	addwfc	prodh,w,c
   820  001F4A  6EDA               	movwf	fsr2h,c
   821  001F4C  0100               	movlb	0	; () banked
   822  001F4E  5191               	movf	main@i& (0+255),w,b
   823  001F50  0D01               	mullw	1
   824  001F52  0EC6               	movlw	low _SerialOutput
   825  001F54  24F3               	addwf	prodl,w,c
   826  001F56  6EE1               	movwf	fsr1l,c
   827  001F58  0E00               	movlw	high _SerialOutput
   828  001F5A  20F4               	addwfc	prodh,w,c
   829  001F5C  6EE2               	movwf	fsr1h,c
   830  001F5E  50DE               	movf	postinc2,w,c
   831  001F60  18E6               	xorwf	postinc1,w,c
   832  001F62  B4D8               	btfsc	status,2,c
   833                           
   834                           ; BSR set to: 0
   835                           ;CanToSerial.c: 157: sendMessage = 0;
   836  001F64  9849               	bcf	_sendMessage/(0+8),_sendMessage& (0+7),c	;volatile
   837                           
   838                           ; BSR set to: 0
   839                           ;CanToSerial.c: 158: }
   840                           ;CanToSerial.c: 159: SerialOutputOld[i] = SerialOutput[i];
   841                           
   842                           ; BSR set to: 0
   843  001F66  0100               	movlb	0	; () banked
   844  001F68  5191               	movf	main@i& (0+255),w,b
   845  001F6A  0D01               	mullw	1
   846  001F6C  0EC6               	movlw	low _SerialOutput
   847  001F6E  24F3               	addwf	prodl,w,c
   848  001F70  6ED9               	movwf	fsr2l,c
   849  001F72  0E00               	movlw	high _SerialOutput
   850  001F74  20F4               	addwfc	prodh,w,c
   851  001F76  6EDA               	movwf	fsr2h,c
   852  001F78  0100               	movlb	0	; () banked
   853  001F7A  5191               	movf	main@i& (0+255),w,b
   854  001F7C  0D01               	mullw	1
   855  001F7E  0EBD               	movlw	low _SerialOutputOld
   856  001F80  24F3               	addwf	prodl,w,c
   857  001F82  6EE1               	movwf	fsr1l,c
   858  001F84  0E00               	movlw	high _SerialOutputOld
   859  001F86  20F4               	addwfc	prodh,w,c
   860  001F88  6EE2               	movwf	fsr1h,c
   861  001F8A  CFDF FFE7          	movff	indf2,indf1
   862  001F8E                     l3835:
   863                           
   864                           ; BSR set to: 0
   865  001F8E  0100               	movlb	0	; () banked
   866  001F90  2B91               	incf	main@i& (0+255),f,b
   867  001F92  D7B7               	goto	l3821
   868  001F94                     l648:
   869                           
   870                           ; BSR set to: 0
   871                           ;CanToSerial.c: 160: }
   872                           ;CanToSerial.c: 161: }
   873                           ;CanToSerial.c: 162: if (sendMessage == 1) {
   874  001F94  A849               	btfss	_sendMessage/(0+8),_sendMessage& (0+7),c	;volatile
   875  001F96  D008               	goto	l3841
   876                           
   877                           ; BSR set to: 0
   878                           ;CanToSerial.c: 163: putsUSART(SerialOutput);
   879  001F98  0EC6               	movlw	low _SerialOutput
   880  001F9A  0100               	movlb	0	; () banked
   881  001F9C  6F76               	movwf	putsUSART@data& (0+255),b
   882  001F9E  0E00               	movlw	high _SerialOutput
   883  001FA0  0100               	movlb	0	; () banked
   884  001FA2  6F77               	movwf	(putsUSART@data+1)& (0+255),b
   885  001FA4  EC97  F012         	call	_putsUSART	;wreg free
   886  001FA8                     l3841:
   887                           
   888                           ;CanToSerial.c: 164: }
   889                           ;CanToSerial.c: 165: newMessageCan = 0;
   890  001FA8  9449               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
   891  001FAA                     l3843:
   892                           
   893                           ;CanToSerial.c: 166: }
   894                           ;CanToSerial.c: 167: if (newMessageUsart == 1) {
   895  001FAA  A649               	btfss	_newMessageUsart/(0+8),_newMessageUsart& (0+7),c	;volatile
   896  001FAC  D79A               	goto	l3809
   897                           
   898                           ;CanToSerial.c: 168: LATDbits.LATD2 = ~LATDbits.LATD2;
   899  001FAE  A48C               	btfss	3980,2,c	;volatile
   900  001FB0  D002               	goto	u4580
   901  001FB2  0E01               	movlw	1
   902  001FB4  D001               	goto	u4586
   903  001FB6                     u4580:
   904  001FB6  0E00               	movlw	0
   905  001FB8                     u4586:
   906  001FB8  0AFF               	xorlw	255
   907  001FBA  0100               	movlb	0	; () banked
   908  001FBC  6F8F               	movwf	??_main& (0+255),b
   909  001FBE  0100               	movlb	0	; () banked
   910  001FC0  478F               	rlncf	??_main& (0+255),f,b
   911  001FC2  478F               	rlncf	??_main& (0+255),f,b
   912  001FC4  508C               	movf	3980,w,c	;volatile
   913  001FC6  0100               	movlb	0	; () banked
   914  001FC8  198F               	xorwf	??_main& (0+255),w,b
   915  001FCA  0BFB               	andlw	-5
   916  001FCC  198F               	xorwf	??_main& (0+255),w,b
   917  001FCE  6E8C               	movwf	3980,c	;volatile
   918                           
   919                           ;CanToSerial.c: 169: if (set_steering_old != set_steering[0]) {
   920  001FD0  0100               	movlb	0	; () banked
   921  001FD2  51A5               	movf	_set_steering_old& (0+255),w,b	;volatile
   922  001FD4  0100               	movlb	0	; () banked
   923  001FD6  19B5               	xorwf	_set_steering& (0+255),w,b
   924  001FD8  B4D8               	btfsc	status,2,c
   925  001FDA  D017               	goto	l3849
   926                           
   927                           ; BSR set to: 0
   928                           ;CanToSerial.c: 170: CANsendMessage(0b00000000000000000000000000101, set_steering, 8, CA
      +                          N_CONFIG_STD_MSG & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
   929  001FDC  0E05               	movlw	5
   930  001FDE  0100               	movlb	0	; () banked
   931  001FE0  6F75               	movwf	CANsendMessage@identifier& (0+255),b
   932  001FE2  0E00               	movlw	0
   933  001FE4  6F76               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   934  001FE6  0E00               	movlw	0
   935  001FE8  6F77               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   936  001FEA  0E00               	movlw	0
   937  001FEC  6F78               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   938  001FEE  0EB5               	movlw	low _set_steering
   939  001FF0  0100               	movlb	0	; () banked
   940  001FF2  6F79               	movwf	CANsendMessage@data& (0+255),b
   941  001FF4  0E00               	movlw	high _set_steering
   942  001FF6  0100               	movlb	0	; () banked
   943  001FF8  6F7A               	movwf	(CANsendMessage@data+1)& (0+255),b
   944  001FFA  0E08               	movlw	8
   945  001FFC  0100               	movlb	0	; () banked
   946  001FFE  6F7B               	movwf	CANsendMessage@dataLength& (0+255),b
   947  002000  0EBC               	movlw	188
   948  002002  0100               	movlb	0	; () banked
   949  002004  6F7C               	movwf	CANsendMessage@flags& (0+255),b
   950  002006  EC2F  F006         	call	_CANsendMessage	;wreg free
   951  00200A                     l3849:
   952                           
   953                           ;CanToSerial.c: 171: }
   954                           ;CanToSerial.c: 172: if ((set_speed_old[0] != set_speed[0])&&(set_speed_old[1] != set_sp
      +                          eed[1])) {
   955  00200A  5022               	movf	_set_speed,w,c
   956  00200C  1801               	xorwf	_set_speed_old,w,c	;volatile
   957  00200E  B4D8               	btfsc	status,2,c
   958  002010  D01B               	goto	l3855
   959  002012  5023               	movf	_set_speed+1,w,c
   960  002014  1802               	xorwf	_set_speed_old+1,w,c	;volatile
   961  002016  B4D8               	btfsc	status,2,c
   962  002018  D017               	goto	l3855
   963                           
   964                           ;CanToSerial.c: 173: CANsendMessage(0b00000000000000000000000000011, set_speed, 8, CAN_C
      +                          ONFIG_STD_MSG & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
   965  00201A  0E03               	movlw	3
   966  00201C  0100               	movlb	0	; () banked
   967  00201E  6F75               	movwf	CANsendMessage@identifier& (0+255),b
   968  002020  0E00               	movlw	0
   969  002022  6F76               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   970  002024  0E00               	movlw	0
   971  002026  6F77               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   972  002028  0E00               	movlw	0
   973  00202A  6F78               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   974  00202C  0E22               	movlw	low _set_speed
   975  00202E  0100               	movlb	0	; () banked
   976  002030  6F79               	movwf	CANsendMessage@data& (0+255),b
   977  002032  0E00               	movlw	high _set_speed
   978  002034  0100               	movlb	0	; () banked
   979  002036  6F7A               	movwf	(CANsendMessage@data+1)& (0+255),b
   980  002038  0E08               	movlw	8
   981  00203A  0100               	movlb	0	; () banked
   982  00203C  6F7B               	movwf	CANsendMessage@dataLength& (0+255),b
   983  00203E  0EBC               	movlw	188
   984  002040  0100               	movlb	0	; () banked
   985  002042  6F7C               	movwf	CANsendMessage@flags& (0+255),b
   986  002044  EC2F  F006         	call	_CANsendMessage	;wreg free
   987  002048                     l3855:
   988                           
   989                           ;CanToSerial.c: 174: }
   990                           ;CanToSerial.c: 175: if (analogic_brake_old != analogic_brake[0]) {
   991  002048  0100               	movlb	0	; () banked
   992  00204A  51A4               	movf	_analogic_brake_old& (0+255),w,b	;volatile
   993  00204C  1812               	xorwf	_analogic_brake,w,c
   994  00204E  B4D8               	btfsc	status,2,c
   995  002050  D019               	goto	l3861
   996                           
   997                           ; BSR set to: 0
   998                           ;CanToSerial.c: 176: analogic_brake[1] = 0x01;
   999  002052  0E01               	movlw	1
  1000  002054  6E13               	movwf	_analogic_brake+1,c
  1001                           
  1002                           ; BSR set to: 0
  1003                           ;CanToSerial.c: 177: CANsendMessage(0b00000000000000000000000000100, analogic_brake, 8, 
      +                          CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1004  002056  0E04               	movlw	4
  1005  002058  0100               	movlb	0	; () banked
  1006  00205A  6F75               	movwf	CANsendMessage@identifier& (0+255),b
  1007  00205C  0E00               	movlw	0
  1008  00205E  6F76               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1009  002060  0E00               	movlw	0
  1010  002062  6F77               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1011  002064  0E00               	movlw	0
  1012  002066  6F78               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1013  002068  0E12               	movlw	low _analogic_brake
  1014  00206A  0100               	movlb	0	; () banked
  1015  00206C  6F79               	movwf	CANsendMessage@data& (0+255),b
  1016  00206E  0E00               	movlw	high _analogic_brake
  1017  002070  0100               	movlb	0	; () banked
  1018  002072  6F7A               	movwf	(CANsendMessage@data+1)& (0+255),b
  1019  002074  0E08               	movlw	8
  1020  002076  0100               	movlb	0	; () banked
  1021  002078  6F7B               	movwf	CANsendMessage@dataLength& (0+255),b
  1022  00207A  0EBC               	movlw	188
  1023  00207C  0100               	movlb	0	; () banked
  1024  00207E  6F7C               	movwf	CANsendMessage@flags& (0+255),b
  1025  002080  EC2F  F006         	call	_CANsendMessage	;wreg free
  1026  002084                     l3861:
  1027                           
  1028                           ;CanToSerial.c: 178: }
  1029                           ;CanToSerial.c: 179: newMessageUsart = 0;
  1030  002084  9649               	bcf	_newMessageUsart/(0+8),_newMessageUsart& (0+7),c	;volatile
  1031  002086  D72D               	goto	l3809
  1032  002088                     __end_of_main:
  1033                           	opt stack 0
  1034                           tblptru	equ	0xFF8
  1035                           tblptrh	equ	0xFF7
  1036                           tblptrl	equ	0xFF6
  1037                           tablat	equ	0xFF5
  1038                           prodh	equ	0xFF4
  1039                           prodl	equ	0xFF3
  1040                           postinc0	equ	0xFEE
  1041                           wreg	equ	0xFE8
  1042                           indf1	equ	0xFE7
  1043                           postinc1	equ	0xFE6
  1044                           postdec1	equ	0xFE5
  1045                           fsr1h	equ	0xFE2
  1046                           fsr1l	equ	0xFE1
  1047                           indf2	equ	0xFDF
  1048                           postinc2	equ	0xFDE
  1049                           fsr2h	equ	0xFDA
  1050                           fsr2l	equ	0xFD9
  1051                           status	equ	0xFD8
  1052                           
  1053 ;; *************** function _putsUSART *****************
  1054 ;; Defined at:
  1055 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uputs.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;  data            2   22[BANK0 ] PTR unsigned char 
  1058 ;;		 -> SerialOutput(8), 
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;		None
  1061 ;; Return value:  Size  Location     Type
  1062 ;;		None               void
  1063 ;; Registers used:
  1064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1070 ;;      Params:         0       2       0       0
  1071 ;;      Locals:         0       0       0       0
  1072 ;;      Temps:          0       0       0       0
  1073 ;;      Totals:         0       2       0       0
  1074 ;;Total ram usage:        2 bytes
  1075 ;; Hardware stack levels used:    1
  1076 ;; Hardware stack levels required when called:    6
  1077 ;; This function calls:
  1078 ;;		_WriteUSART
  1079 ;; This function is called by:
  1080 ;;		_main
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           	psect	text1
  1085  00252E                     __ptext1:
  1086                           	opt stack 0
  1087  00252E                     _putsUSART:
  1088                           	opt stack 24
  1089  00252E                     l729:
  1090  00252E  A2AC               	btfss	4012,1,c	;volatile
  1091  002530  D7FE               	goto	l729
  1092  002532  C076  FFD9         	movff	putsUSART@data,fsr2l
  1093  002536  C077  FFDA         	movff	putsUSART@data+1,fsr2h
  1094  00253A  50DF               	movf	indf2,w,c
  1095  00253C  ECE3  F012         	call	_WriteUSART
  1096  002540  C076  FFD9         	movff	putsUSART@data,fsr2l
  1097  002544  C077  FFDA         	movff	putsUSART@data+1,fsr2h
  1098  002548  0100               	movlb	0	; () banked
  1099  00254A  4B76               	infsnz	putsUSART@data& (0+255),f,b
  1100  00254C  2B77               	incf	(putsUSART@data+1)& (0+255),f,b
  1101  00254E  50DF               	movf	indf2,w,c
  1102  002550  B4D8               	btfsc	status,2,c
  1103  002552  0012               	return	
  1104  002554  D7EC               	goto	l729
  1105  002556                     __end_of_putsUSART:
  1106                           	opt stack 0
  1107                           tblptru	equ	0xFF8
  1108                           tblptrh	equ	0xFF7
  1109                           tblptrl	equ	0xFF6
  1110                           tablat	equ	0xFF5
  1111                           prodh	equ	0xFF4
  1112                           prodl	equ	0xFF3
  1113                           postinc0	equ	0xFEE
  1114                           wreg	equ	0xFE8
  1115                           indf1	equ	0xFE7
  1116                           postinc1	equ	0xFE6
  1117                           postdec1	equ	0xFE5
  1118                           fsr1h	equ	0xFE2
  1119                           fsr1l	equ	0xFE1
  1120                           indf2	equ	0xFDF
  1121                           postinc2	equ	0xFDE
  1122                           fsr2h	equ	0xFDA
  1123                           fsr2l	equ	0xFD9
  1124                           status	equ	0xFD8
  1125                           
  1126 ;; *************** function _WriteUSART *****************
  1127 ;; Defined at:
  1128 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uwrite.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;  data            1    wreg     unsigned char 
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;  data            1   21[BANK0 ] unsigned char 
  1133 ;; Return value:  Size  Location     Type
  1134 ;;		None               void
  1135 ;; Registers used:
  1136 ;;		wreg
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1142 ;;      Params:         0       0       0       0
  1143 ;;      Locals:         0       1       0       0
  1144 ;;      Temps:          0       0       0       0
  1145 ;;      Totals:         0       1       0       0
  1146 ;;Total ram usage:        1 bytes
  1147 ;; Hardware stack levels used:    1
  1148 ;; Hardware stack levels required when called:    5
  1149 ;; This function calls:
  1150 ;;		Nothing
  1151 ;; This function is called by:
  1152 ;;		_putsUSART
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text2
  1157  0025C6                     __ptext2:
  1158                           	opt stack 0
  1159  0025C6                     _WriteUSART:
  1160                           	opt stack 24
  1161                           
  1162                           ; BSR set to: 0
  1163                           ;incstack = 0
  1164                           ;WriteUSART@data stored from wreg
  1165  0025C6  0100               	movlb	0	; () banked
  1166  0025C8  6F75               	movwf	WriteUSART@data& (0+255),b
  1167  0025CA  ACAC               	btfss	4012,6,c	;volatile
  1168  0025CC  D003               	goto	l3421
  1169  0025CE  90AC               	bcf	4012,0,c	;volatile
  1170  0025D0  B209               	btfsc	_USART_Status,1,c
  1171  0025D2  80AC               	bsf	4012,0,c	;volatile
  1172  0025D4                     l3421:
  1173  0025D4  C075  FFAD         	movff	WriteUSART@data,4013	;volatile
  1174  0025D8  0012               	return		;funcret
  1175  0025DA                     __end_of_WriteUSART:
  1176                           	opt stack 0
  1177                           tblptru	equ	0xFF8
  1178                           tblptrh	equ	0xFF7
  1179                           tblptrl	equ	0xFF6
  1180                           tablat	equ	0xFF5
  1181                           prodh	equ	0xFF4
  1182                           prodl	equ	0xFF3
  1183                           postinc0	equ	0xFEE
  1184                           wreg	equ	0xFE8
  1185                           indf1	equ	0xFE7
  1186                           postinc1	equ	0xFE6
  1187                           postdec1	equ	0xFE5
  1188                           fsr1h	equ	0xFE2
  1189                           fsr1l	equ	0xFE1
  1190                           indf2	equ	0xFDF
  1191                           postinc2	equ	0xFDE
  1192                           fsr2h	equ	0xFDA
  1193                           fsr2l	equ	0xFD9
  1194                           status	equ	0xFD8
  1195                           
  1196 ;; *************** function _delay_ms *****************
  1197 ;; Defined at:
  1198 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;  value_ms        2   27[BANK0 ] unsigned int 
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;		None               void
  1205 ;; Registers used:
  1206 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1212 ;;      Params:         0       2       0       0
  1213 ;;      Locals:         0       0       0       0
  1214 ;;      Temps:          0       0       0       0
  1215 ;;      Totals:         0       2       0       0
  1216 ;;Total ram usage:        2 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; Hardware stack levels required when called:    6
  1219 ;; This function calls:
  1220 ;;		___wmul
  1221 ;; This function is called by:
  1222 ;;		_main
  1223 ;;		_delay_s
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           	psect	text3
  1228  002486                     __ptext3:
  1229                           	opt stack 0
  1230  002486                     _delay_ms:
  1231                           	opt stack 24
  1232                           
  1233                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  1234                           
  1235                           ;incstack = 0
  1236  002486  C0C5  F075         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  1237  00248A  0100               	movlb	0	; () banked
  1238  00248C  6B76               	clrf	(___wmul@multiplier+1)& (0+255),b
  1239  00248E  C07B  F077         	movff	delay_ms@value_ms,___wmul@multiplicand
  1240  002492  C07C  F078         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  1241  002496  EC7C  F012         	call	___wmul	;wreg free
  1242  00249A  C075  F09E         	movff	?___wmul,_clock_counter_reference	;volatile
  1243  00249E  C076  F09F         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  1244                           
  1245                           ;src\delay.c: 75: while (clock_counter_reference) {
  1246  0024A2  D007               	goto	l573
  1247  0024A4                     l3577:
  1248                           
  1249                           ;src\delay.c: 85: _delay(240);
  1250  0024A4  0E50               	movlw	80
  1251  0024A6                     u4737:
  1252  0024A6  2EE8               	decfsz	wreg,f,c
  1253  0024A8  D7FE               	goto	u4737
  1254                           
  1255                           ;src\delay.c: 88: clock_counter_reference--;
  1256  0024AA  0100               	movlb	0	; () banked
  1257  0024AC  079E               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  1258  0024AE  A0D8               	btfss	status,0,c
  1259  0024B0  079F               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  1260  0024B2                     l573:
  1261  0024B2  0100               	movlb	0	; () banked
  1262  0024B4  519E               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  1263  0024B6  0100               	movlb	0	; () banked
  1264  0024B8  119F               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  1265  0024BA  B4D8               	btfsc	status,2,c
  1266  0024BC  0012               	return	
  1267  0024BE  D7F2               	goto	l3577
  1268  0024C0                     __end_of_delay_ms:
  1269                           	opt stack 0
  1270                           tblptru	equ	0xFF8
  1271                           tblptrh	equ	0xFF7
  1272                           tblptrl	equ	0xFF6
  1273                           tablat	equ	0xFF5
  1274                           prodh	equ	0xFF4
  1275                           prodl	equ	0xFF3
  1276                           postinc0	equ	0xFEE
  1277                           wreg	equ	0xFE8
  1278                           indf1	equ	0xFE7
  1279                           postinc1	equ	0xFE6
  1280                           postdec1	equ	0xFE5
  1281                           fsr1h	equ	0xFE2
  1282                           fsr1l	equ	0xFE1
  1283                           indf2	equ	0xFDF
  1284                           postinc2	equ	0xFDE
  1285                           fsr2h	equ	0xFDA
  1286                           fsr2l	equ	0xFD9
  1287                           status	equ	0xFD8
  1288                           
  1289 ;; *************** function ___wmul *****************
  1290 ;; Defined at:
  1291 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;  multiplier      2   21[BANK0 ] unsigned int 
  1294 ;;  multiplicand    2   23[BANK0 ] unsigned int 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  product         2   25[BANK0 ] unsigned int 
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  2   21[BANK0 ] unsigned int 
  1299 ;; Registers used:
  1300 ;;		wreg, status,2, status,0, prodl, prodh
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1306 ;;      Params:         0       4       0       0
  1307 ;;      Locals:         0       2       0       0
  1308 ;;      Temps:          0       0       0       0
  1309 ;;      Totals:         0       6       0       0
  1310 ;;Total ram usage:        6 bytes
  1311 ;; Hardware stack levels used:    1
  1312 ;; Hardware stack levels required when called:    5
  1313 ;; This function calls:
  1314 ;;		Nothing
  1315 ;; This function is called by:
  1316 ;;		_delay_ms
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           	psect	text4
  1321  0024F8                     __ptext4:
  1322                           	opt stack 0
  1323  0024F8                     ___wmul:
  1324                           	opt stack 24
  1325                           
  1326                           ; BSR set to: 0
  1327                           ;incstack = 0
  1328  0024F8  0100               	movlb	0	; () banked
  1329  0024FA  5175               	movf	___wmul@multiplier& (0+255),w,b
  1330  0024FC  0100               	movlb	0	; () banked
  1331  0024FE  0377               	mulwf	___wmul@multiplicand& (0+255),b
  1332  002500  CFF3 F079          	movff	prodl,___wmul@product
  1333  002504  CFF4 F07A          	movff	prodh,___wmul@product+1
  1334  002508  0100               	movlb	0	; () banked
  1335  00250A  5175               	movf	___wmul@multiplier& (0+255),w,b
  1336  00250C  0100               	movlb	0	; () banked
  1337  00250E  0378               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1338  002510  50F3               	movf	prodl,w,c
  1339  002512  0100               	movlb	0	; () banked
  1340  002514  277A               	addwf	(___wmul@product+1)& (0+255),f,b
  1341  002516  0100               	movlb	0	; () banked
  1342  002518  5176               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1343  00251A  0100               	movlb	0	; () banked
  1344  00251C  0377               	mulwf	___wmul@multiplicand& (0+255),b
  1345  00251E  50F3               	movf	prodl,w,c
  1346  002520  0100               	movlb	0	; () banked
  1347  002522  277A               	addwf	(___wmul@product+1)& (0+255),f,b
  1348                           
  1349                           ; BSR set to: 0
  1350  002524  C079  F075         	movff	___wmul@product,?___wmul
  1351  002528  C07A  F076         	movff	___wmul@product+1,?___wmul+1
  1352  00252C  0012               	return	
  1353  00252E                     __end_of___wmul:
  1354                           	opt stack 0
  1355                           tblptru	equ	0xFF8
  1356                           tblptrh	equ	0xFF7
  1357                           tblptrl	equ	0xFF6
  1358                           tablat	equ	0xFF5
  1359                           prodh	equ	0xFF4
  1360                           prodl	equ	0xFF3
  1361                           postinc0	equ	0xFEE
  1362                           wreg	equ	0xFE8
  1363                           indf1	equ	0xFE7
  1364                           postinc1	equ	0xFE6
  1365                           postdec1	equ	0xFE5
  1366                           fsr1h	equ	0xFE2
  1367                           fsr1l	equ	0xFE1
  1368                           indf2	equ	0xFDF
  1369                           postinc2	equ	0xFDE
  1370                           fsr2h	equ	0xFDA
  1371                           fsr2l	equ	0xFD9
  1372                           status	equ	0xFD8
  1373                           
  1374 ;; *************** function _configurazione_iniziale *****************
  1375 ;; Defined at:
  1376 ;;		line 227 in file "CanToSerial.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;		None
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;		None
  1381 ;; Return value:  Size  Location     Type
  1382 ;;		None               void
  1383 ;; Registers used:
  1384 ;;		wreg, status,2, status,0, cstack
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1390 ;;      Params:         0       0       0       0
  1391 ;;      Locals:         0       0       0       0
  1392 ;;      Temps:          0       0       0       0
  1393 ;;      Totals:         0       0       0       0
  1394 ;;Total ram usage:        0 bytes
  1395 ;; Hardware stack levels used:    1
  1396 ;; Hardware stack levels required when called:    7
  1397 ;; This function calls:
  1398 ;;		_CANInitialize
  1399 ;;		_OpenUSART
  1400 ;; This function is called by:
  1401 ;;		_main
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text5
  1406  00232E                     __ptext5:
  1407                           	opt stack 0
  1408  00232E                     _configurazione_iniziale:
  1409                           	opt stack 23
  1410                           
  1411                           ;CanToSerial.c: 228: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1412                           
  1413                           ; BSR set to: 0
  1414                           ;incstack = 0
  1415  00232E  0E4F               	movlw	79
  1416  002330  16AB               	andwf	4011,f,c	;volatile
  1417  002332  9AAC               	bcf	4012,5,c	;volatile
  1418  002334  0ECF               	movlw	207
  1419  002336  169D               	andwf	3997,f,c	;volatile
  1420                           
  1421                           ;CanToSerial.c: 229: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFI
      +                          G_SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  1422  002338  0E06               	movlw	6
  1423  00233A  0100               	movlb	0	; () banked
  1424  00233C  6F83               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1425  00233E  0E05               	movlw	5
  1426  002340  0100               	movlb	0	; () banked
  1427  002342  6F84               	movwf	CANInitialize@phaseSeg2& (0+255),b
  1428  002344  0E01               	movlw	1
  1429  002346  0100               	movlb	0	; () banked
  1430  002348  6F85               	movwf	CANInitialize@SJW& (0+255),b
  1431  00234A  0E03               	movlw	3
  1432  00234C  0100               	movlb	0	; () banked
  1433  00234E  6F86               	movwf	CANInitialize@BRP& (0+255),b
  1434  002350  0E9D               	movlw	157
  1435  002352  0100               	movlb	0	; () banked
  1436  002354  6F87               	movwf	CANInitialize@flags& (0+255),b
  1437  002356  0E04               	movlw	4
  1438  002358  EC44  F010         	call	_CANInitialize
  1439                           
  1440                           ;CanToSerial.c: 231: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b111
      +                          11111 & 0b11111111, 103);
  1441  00235C  0E00               	movlw	0
  1442  00235E  0100               	movlb	0	; () banked
  1443  002360  6F76               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1444  002362  0E67               	movlw	103
  1445  002364  6F75               	movwf	OpenUSART@spbrg& (0+255),b
  1446  002366  0E7C               	movlw	124
  1447  002368  ECE5  F011         	call	_OpenUSART
  1448                           
  1449                           ;CanToSerial.c: 233: RCSTAbits.SPEN = 1;
  1450  00236C  8EAB               	bsf	4011,7,c	;volatile
  1451                           
  1452                           ;CanToSerial.c: 236: RCONbits.IPEN = 1;
  1453  00236E  8ED0               	bsf	4048,7,c	;volatile
  1454                           
  1455                           ;CanToSerial.c: 237: PIR3bits.RXB1IF = 0;
  1456  002370  92A4               	bcf	4004,1,c	;volatile
  1457                           
  1458                           ;CanToSerial.c: 238: PIR3bits.RXB0IF = 0;
  1459  002372  90A4               	bcf	4004,0,c	;volatile
  1460                           
  1461                           ;CanToSerial.c: 239: PIR1bits.RC1IF = 0;
  1462  002374  9A9E               	bcf	3998,5,c	;volatile
  1463                           
  1464                           ;CanToSerial.c: 241: IPR3bits.RXB1IP = 0;
  1465  002376  92A5               	bcf	4005,1,c	;volatile
  1466                           
  1467                           ;CanToSerial.c: 242: IPR3bits.RXB0IP = 0;
  1468  002378  90A5               	bcf	4005,0,c	;volatile
  1469                           
  1470                           ;CanToSerial.c: 243: IPR1bits.RC1IP = 1;
  1471  00237A  8A9F               	bsf	3999,5,c	;volatile
  1472                           
  1473                           ;CanToSerial.c: 245: PIE3bits.RXB1IE = 1;
  1474  00237C  82A3               	bsf	4003,1,c	;volatile
  1475                           
  1476                           ;CanToSerial.c: 246: PIE3bits.RXB0IE = 1;
  1477  00237E  80A3               	bsf	4003,0,c	;volatile
  1478                           
  1479                           ;CanToSerial.c: 247: PIE1bits.RC1IE = 1;
  1480  002380  8A9D               	bsf	3997,5,c	;volatile
  1481                           
  1482                           ;CanToSerial.c: 249: LATA = 0x00;
  1483  002382  0E00               	movlw	0
  1484  002384  6E89               	movwf	3977,c	;volatile
  1485                           
  1486                           ;CanToSerial.c: 250: TRISA = 0b01111101;
  1487  002386  0E7D               	movlw	125
  1488  002388  6E92               	movwf	3986,c	;volatile
  1489                           
  1490                           ;CanToSerial.c: 252: LATB = 0x00;
  1491  00238A  0E00               	movlw	0
  1492  00238C  6E8A               	movwf	3978,c	;volatile
  1493                           
  1494                           ;CanToSerial.c: 253: TRISB = 0b11111011;
  1495  00238E  0EFB               	movlw	251
  1496  002390  6E93               	movwf	3987,c	;volatile
  1497                           
  1498                           ;CanToSerial.c: 255: LATC = 0x00;
  1499  002392  0E00               	movlw	0
  1500  002394  6E8B               	movwf	3979,c	;volatile
  1501                           
  1502                           ;CanToSerial.c: 256: TRISC = 0b10111111;
  1503  002396  0EBF               	movlw	191
  1504  002398  6E94               	movwf	3988,c	;volatile
  1505                           
  1506                           ;CanToSerial.c: 258: LATD = 0x00;
  1507  00239A  0E00               	movlw	0
  1508  00239C  6E8C               	movwf	3980,c	;volatile
  1509                           
  1510                           ;CanToSerial.c: 259: TRISD = 0x00;
  1511  00239E  0E00               	movlw	0
  1512  0023A0  6E95               	movwf	3989,c	;volatile
  1513                           
  1514                           ;CanToSerial.c: 261: LATE = 0x00;
  1515  0023A2  0E00               	movlw	0
  1516  0023A4  6E8D               	movwf	3981,c	;volatile
  1517                           
  1518                           ;CanToSerial.c: 262: TRISE = 0b00000100;
  1519  0023A6  0E04               	movlw	4
  1520  0023A8  6E96               	movwf	3990,c	;volatile
  1521                           
  1522                           ;CanToSerial.c: 264: ADCON1bits.PCFG0 = 1;
  1523  0023AA  80C1               	bsf	4033,0,c	;volatile
  1524                           
  1525                           ;CanToSerial.c: 265: ADCON1bits.PCFG1 = 1;
  1526  0023AC  82C1               	bsf	4033,1,c	;volatile
  1527                           
  1528                           ;CanToSerial.c: 266: ADCON1bits.PCFG2 = 1;
  1529  0023AE  84C1               	bsf	4033,2,c	;volatile
  1530                           
  1531                           ;CanToSerial.c: 267: ADCON1bits.PCFG3 = 1;
  1532  0023B0  86C1               	bsf	4033,3,c	;volatile
  1533                           
  1534                           ;CanToSerial.c: 270: T3CON = 0x01;
  1535  0023B2  0E01               	movlw	1
  1536  0023B4  6EB1               	movwf	4017,c	;volatile
  1537                           
  1538                           ;CanToSerial.c: 271: PIR2bits.TMR3IF = 0;
  1539  0023B6  92A1               	bcf	4001,1,c	;volatile
  1540                           
  1541                           ;CanToSerial.c: 272: IPR2bits.TMR3IP = 0;
  1542  0023B8  92A2               	bcf	4002,1,c	;volatile
  1543                           
  1544                           ;CanToSerial.c: 274: TMR3H = 0x63;
  1545  0023BA  0E63               	movlw	99
  1546  0023BC  6EB3               	movwf	4019,c	;volatile
  1547                           
  1548                           ;CanToSerial.c: 275: TMR3L = 0xC0;
  1549  0023BE  0EC0               	movlw	192
  1550  0023C0  6EB2               	movwf	4018,c	;volatile
  1551                           
  1552                           ;CanToSerial.c: 277: PIE2bits.TMR3IE = 1;
  1553  0023C2  82A0               	bsf	4000,1,c	;volatile
  1554                           
  1555                           ;CanToSerial.c: 279: INTCONbits.GIEH = 1;
  1556  0023C4  8EF2               	bsf	intcon,7,c	;volatile
  1557                           
  1558                           ;CanToSerial.c: 280: INTCONbits.GIEL = 1;
  1559  0023C6  8CF2               	bsf	intcon,6,c	;volatile
  1560  0023C8  0012               	return		;funcret
  1561  0023CA                     __end_of_configurazione_iniziale:
  1562                           	opt stack 0
  1563                           tblptru	equ	0xFF8
  1564                           tblptrh	equ	0xFF7
  1565                           tblptrl	equ	0xFF6
  1566                           tablat	equ	0xFF5
  1567                           prodh	equ	0xFF4
  1568                           prodl	equ	0xFF3
  1569                           intcon	equ	0xFF2
  1570                           postinc0	equ	0xFEE
  1571                           wreg	equ	0xFE8
  1572                           indf1	equ	0xFE7
  1573                           postinc1	equ	0xFE6
  1574                           postdec1	equ	0xFE5
  1575                           fsr1h	equ	0xFE2
  1576                           fsr1l	equ	0xFE1
  1577                           indf2	equ	0xFDF
  1578                           postinc2	equ	0xFDE
  1579                           fsr2h	equ	0xFDA
  1580                           fsr2l	equ	0xFD9
  1581                           status	equ	0xFD8
  1582                           
  1583 ;; *************** function _OpenUSART *****************
  1584 ;; Defined at:
  1585 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uopen.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  config          1    wreg     unsigned char 
  1588 ;;  spbrg           2   21[BANK0 ] unsigned int 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  config          1   23[BANK0 ] unsigned char 
  1591 ;; Return value:  Size  Location     Type
  1592 ;;		None               void
  1593 ;; Registers used:
  1594 ;;		wreg, status,2
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1600 ;;      Params:         0       2       0       0
  1601 ;;      Locals:         0       1       0       0
  1602 ;;      Temps:          0       0       0       0
  1603 ;;      Totals:         0       3       0       0
  1604 ;;Total ram usage:        3 bytes
  1605 ;; Hardware stack levels used:    1
  1606 ;; Hardware stack levels required when called:    5
  1607 ;; This function calls:
  1608 ;;		Nothing
  1609 ;; This function is called by:
  1610 ;;		_configurazione_iniziale
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           	psect	text6
  1615  0023CA                     __ptext6:
  1616                           	opt stack 0
  1617  0023CA                     _OpenUSART:
  1618                           	opt stack 24
  1619                           
  1620                           ;incstack = 0
  1621                           ;OpenUSART@config stored from wreg
  1622  0023CA  0100               	movlb	0	; () banked
  1623  0023CC  6F77               	movwf	OpenUSART@config& (0+255),b
  1624  0023CE  0E00               	movlw	0
  1625  0023D0  6EAC               	movwf	4012,c	;volatile
  1626  0023D2  0E00               	movlw	0
  1627  0023D4  6EAB               	movwf	4011,c	;volatile
  1628  0023D6  0100               	movlb	0	; () banked
  1629  0023D8  B177               	btfsc	OpenUSART@config& (0+255),0,b
  1630                           
  1631                           ; BSR set to: 0
  1632  0023DA  88AC               	bsf	4012,4,c	;volatile
  1633                           
  1634                           ; BSR set to: 0
  1635                           
  1636                           ; BSR set to: 0
  1637  0023DC  0100               	movlb	0	; () banked
  1638  0023DE  A377               	btfss	OpenUSART@config& (0+255),1,b
  1639  0023E0  D002               	goto	l3359
  1640                           
  1641                           ; BSR set to: 0
  1642  0023E2  8CAC               	bsf	4012,6,c	;volatile
  1643  0023E4  8CAB               	bsf	4011,6,c	;volatile
  1644  0023E6                     l3359:
  1645                           
  1646                           ; BSR set to: 0
  1647  0023E6  0100               	movlb	0	; () banked
  1648  0023E8  B577               	btfsc	OpenUSART@config& (0+255),2,b
  1649                           
  1650                           ; BSR set to: 0
  1651  0023EA  8EAC               	bsf	4012,7,c	;volatile
  1652                           
  1653                           ; BSR set to: 0
  1654                           
  1655                           ; BSR set to: 0
  1656  0023EC  0100               	movlb	0	; () banked
  1657  0023EE  A777               	btfss	OpenUSART@config& (0+255),3,b
  1658  0023F0  D002               	goto	l712
  1659                           
  1660                           ; BSR set to: 0
  1661  0023F2  88AB               	bsf	4011,4,c	;volatile
  1662  0023F4  D001               	goto	l3367
  1663  0023F6                     l712:
  1664                           
  1665                           ; BSR set to: 0
  1666  0023F6  8AAB               	bsf	4011,5,c	;volatile
  1667  0023F8                     l3367:
  1668                           
  1669                           ; BSR set to: 0
  1670  0023F8  0100               	movlb	0	; () banked
  1671  0023FA  B977               	btfsc	OpenUSART@config& (0+255),4,b
  1672                           
  1673                           ; BSR set to: 0
  1674  0023FC  84AC               	bsf	4012,2,c	;volatile
  1675                           
  1676                           ; BSR set to: 0
  1677  0023FE  989E               	bcf	3998,4,c	;volatile
  1678                           
  1679                           ; BSR set to: 0
  1680  002400  0100               	movlb	0	; () banked
  1681  002402  BB77               	btfsc	OpenUSART@config& (0+255),5,b
  1682                           
  1683                           ; BSR set to: 0
  1684  002404  86AB               	bsf	4011,3,c	;volatile
  1685                           
  1686                           ; BSR set to: 0
  1687                           
  1688                           ; BSR set to: 0
  1689  002406  0100               	movlb	0	; () banked
  1690  002408  AD77               	btfss	OpenUSART@config& (0+255),6,b
  1691  00240A  D002               	goto	l716
  1692                           
  1693                           ; BSR set to: 0
  1694  00240C  8A9D               	bsf	3997,5,c	;volatile
  1695  00240E  D001               	goto	l717
  1696  002410                     l716:
  1697                           
  1698                           ; BSR set to: 0
  1699  002410  9A9D               	bcf	3997,5,c	;volatile
  1700  002412                     l717:
  1701                           
  1702                           ; BSR set to: 0
  1703  002412  9A9E               	bcf	3998,5,c	;volatile
  1704                           
  1705                           ; BSR set to: 0
  1706  002414  0100               	movlb	0	; () banked
  1707  002416  AF77               	btfss	OpenUSART@config& (0+255),7,b
  1708  002418  D002               	goto	l718
  1709                           
  1710                           ; BSR set to: 0
  1711  00241A  889D               	bsf	3997,4,c	;volatile
  1712  00241C  D001               	goto	l719
  1713  00241E                     l718:
  1714                           
  1715                           ; BSR set to: 0
  1716  00241E  989D               	bcf	3997,4,c	;volatile
  1717  002420                     l719:
  1718                           
  1719                           ; BSR set to: 0
  1720  002420  C075  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  1721                           
  1722                           ; BSR set to: 0
  1723  002424  0100               	movlb	0	; () banked
  1724  002426  5176               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
  1725  002428  6EB0               	movwf	4016,c	;volatile
  1726                           
  1727                           ; BSR set to: 0
  1728  00242A  8AAC               	bsf	4012,5,c	;volatile
  1729                           
  1730                           ; BSR set to: 0
  1731  00242C  8EAB               	bsf	4011,7,c	;volatile
  1732                           
  1733                           ; BSR set to: 0
  1734  00242E  9C94               	bcf	3988,6,c	;volatile
  1735                           
  1736                           ; BSR set to: 0
  1737  002430  8E94               	bsf	3988,7,c	;volatile
  1738                           
  1739                           ; BSR set to: 0
  1740  002432  A8AC               	btfss	4012,4,c	;volatile
  1741  002434  0012               	return	
  1742                           
  1743                           ; BSR set to: 0
  1744  002436  BEAC               	btfsc	4012,7,c	;volatile
  1745  002438  0012               	return	
  1746                           
  1747                           ; BSR set to: 0
  1748  00243A  8C94               	bsf	3988,6,c	;volatile
  1749  00243C  0012               	return	
  1750  00243E                     __end_of_OpenUSART:
  1751                           	opt stack 0
  1752                           tblptru	equ	0xFF8
  1753                           tblptrh	equ	0xFF7
  1754                           tblptrl	equ	0xFF6
  1755                           tablat	equ	0xFF5
  1756                           prodh	equ	0xFF4
  1757                           prodl	equ	0xFF3
  1758                           intcon	equ	0xFF2
  1759                           postinc0	equ	0xFEE
  1760                           wreg	equ	0xFE8
  1761                           indf1	equ	0xFE7
  1762                           postinc1	equ	0xFE6
  1763                           postdec1	equ	0xFE5
  1764                           fsr1h	equ	0xFE2
  1765                           fsr1l	equ	0xFE1
  1766                           indf2	equ	0xFDF
  1767                           postinc2	equ	0xFDE
  1768                           fsr2h	equ	0xFDA
  1769                           fsr2l	equ	0xFD9
  1770                           status	equ	0xFD8
  1771                           
  1772 ;; *************** function _CANInitialize *****************
  1773 ;; Defined at:
  1774 ;;		line 219 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;  propSeg         1    wreg     unsigned char 
  1777 ;;  phaseSeg1       1   35[BANK0 ] unsigned char 
  1778 ;;  phaseSeg2       1   36[BANK0 ] unsigned char 
  1779 ;;  SJW             1   37[BANK0 ] unsigned char 
  1780 ;;  BRP             1   38[BANK0 ] unsigned char 
  1781 ;;  flags           1   39[BANK0 ] enum E16844
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;  propSeg         1   44[BANK0 ] unsigned char 
  1784 ;;  FilterConfig    1   46[BANK0 ] unsigned char 
  1785 ;;  FilterConfig    1   45[BANK0 ] unsigned char 
  1786 ;; Return value:  Size  Location     Type
  1787 ;;		None               void
  1788 ;; Registers used:
  1789 ;;		wreg, status,2, status,0, cstack
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1795 ;;      Params:         0       5       0       0
  1796 ;;      Locals:         0       3       0       0
  1797 ;;      Temps:          0       4       0       0
  1798 ;;      Totals:         0      12       0       0
  1799 ;;Total ram usage:       12 bytes
  1800 ;; Hardware stack levels used:    1
  1801 ;; Hardware stack levels required when called:    6
  1802 ;; This function calls:
  1803 ;;		_CANOperationMode
  1804 ;;		_CANSetFilter
  1805 ;;		_CANSetMask
  1806 ;; This function is called by:
  1807 ;;		_configurazione_iniziale
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text7
  1812  002088                     __ptext7:
  1813                           	opt stack 0
  1814  002088                     _CANInitialize:
  1815                           	opt stack 23
  1816                           
  1817                           ; BSR set to: 0
  1818                           ;incstack = 0
  1819                           ;CANInitialize@propSeg stored from wreg
  1820  002088  0100               	movlb	0	; () banked
  1821  00208A  6F8C               	movwf	CANInitialize@propSeg& (0+255),b
  1822                           
  1823                           ;inc\CANlib.h: 221: BYTE FilterConfig1;
  1824                           ;inc\CANlib.h: 222: BYTE FilterConfig2;
  1825                           ;inc\CANlib.h: 224: CANOperationMode(CAN_OP_MODE_CONFIG);
  1826  00208C  0E80               	movlw	128
  1827  00208E  ECCD  F012         	call	_CANOperationMode
  1828                           
  1829                           ;inc\CANlib.h: 226: BRGCON1 = 0x00;
  1830  002092  0E00               	movlw	0
  1831  002094  6E70               	movwf	3952,c	;volatile
  1832                           
  1833                           ;inc\CANlib.h: 227: BRGCON2 = 0x00;
  1834  002096  0E00               	movlw	0
  1835  002098  6E71               	movwf	3953,c	;volatile
  1836                           
  1837                           ;inc\CANlib.h: 228: BRGCON3 = 0x00;
  1838  00209A  0E00               	movlw	0
  1839  00209C  6E72               	movwf	3954,c	;volatile
  1840                           
  1841                           ;inc\CANlib.h: 230: SJW= SJW << 6;
  1842  00209E  0100               	movlb	0	; () banked
  1843  0020A0  4185               	rrncf	CANInitialize@SJW& (0+255),w,b
  1844  0020A2  42E8               	rrncf	wreg,f,c
  1845  0020A4  0BC0               	andlw	192
  1846  0020A6  0100               	movlb	0	; () banked
  1847  0020A8  6F85               	movwf	CANInitialize@SJW& (0+255),b
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;inc\CANlib.h: 231: BRGCON1 |= SJW;
  1851  0020AA  0100               	movlb	0	; () banked
  1852  0020AC  5185               	movf	CANInitialize@SJW& (0+255),w,b
  1853  0020AE  1270               	iorwf	3952,f,c	;volatile
  1854                           
  1855                           ; BSR set to: 0
  1856                           ;inc\CANlib.h: 232: BRGCON1 |= BRP;
  1857  0020B0  0100               	movlb	0	; () banked
  1858  0020B2  5186               	movf	CANInitialize@BRP& (0+255),w,b
  1859  0020B4  1270               	iorwf	3952,f,c	;volatile
  1860                           
  1861                           ; BSR set to: 0
  1862                           ;inc\CANlib.h: 234: BRGCON2 |= propSeg;
  1863  0020B6  0100               	movlb	0	; () banked
  1864  0020B8  518C               	movf	CANInitialize@propSeg& (0+255),w,b
  1865  0020BA  1271               	iorwf	3953,f,c	;volatile
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;inc\CANlib.h: 235: phaseSeg1 = phaseSeg1 <<3;
  1869  0020BC  0100               	movlb	0	; () banked
  1870  0020BE  3983               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  1871  0020C0  42E8               	rrncf	wreg,f,c
  1872  0020C2  0BF8               	andlw	248
  1873  0020C4  0100               	movlb	0	; () banked
  1874  0020C6  6F83               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1875                           
  1876                           ; BSR set to: 0
  1877                           ;inc\CANlib.h: 236: BRGCON2 |= phaseSeg1;
  1878  0020C8  0100               	movlb	0	; () banked
  1879  0020CA  5183               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  1880  0020CC  1271               	iorwf	3953,f,c	;volatile
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;inc\CANlib.h: 238: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  1884  0020CE  0100               	movlb	0	; () banked
  1885  0020D0  A587               	btfss	CANInitialize@flags& (0+255),2,b
  1886                           
  1887                           ; BSR set to: 0
  1888                           ;inc\CANlib.h: 239: BRGCON2bits.SAM= 1;
  1889  0020D2  8C71               	bsf	3953,6,c	;volatile
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;inc\CANlib.h: 241: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  1893  0020D4  0100               	movlb	0	; () banked
  1894  0020D6  B187               	btfsc	CANInitialize@flags& (0+255),0,b
  1895                           
  1896                           ; BSR set to: 0
  1897                           ;inc\CANlib.h: 242: BRGCON2bits.SEG2PHTS = 1;
  1898  0020D8  8E71               	bsf	3953,7,c	;volatile
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;inc\CANlib.h: 244: BRGCON3 |= phaseSeg2;
  1902                           
  1903                           ; BSR set to: 0
  1904  0020DA  0100               	movlb	0	; () banked
  1905  0020DC  5184               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  1906  0020DE  1272               	iorwf	3954,f,c	;volatile
  1907                           
  1908                           ; BSR set to: 0
  1909                           ;inc\CANlib.h: 246: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  1910  0020E0  0100               	movlb	0	; () banked
  1911  0020E2  B387               	btfsc	CANInitialize@flags& (0+255),1,b
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;inc\CANlib.h: 247: BRGCON3bits.WAKFIL = 1;
  1915  0020E4  8C72               	bsf	3954,6,c	;volatile
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;inc\CANlib.h: 252: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  1919                           
  1920                           ; BSR set to: 0
  1921  0020E6  0100               	movlb	0	; () banked
  1922  0020E8  5187               	movf	CANInitialize@flags& (0+255),w,b
  1923  0020EA  0B60               	andlw	96
  1924  0020EC  6E60               	movwf	3936,c	;volatile
  1925                           
  1926                           ;inc\CANlib.h: 253: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  1927  0020EE  0100               	movlb	0	; () banked
  1928  0020F0  5187               	movf	CANInitialize@flags& (0+255),w,b
  1929  0020F2  0B10               	andlw	16
  1930  0020F4  0AFF               	xorlw	255
  1931  0020F6  B4D8               	btfsc	status,2,c
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;inc\CANlib.h: 254: RXB0CONbits.RXB0DBEN = 1;
  1935  0020F8  8460               	bsf	3936,2,c	;volatile
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;inc\CANlib.h: 256: RXB1CON = RXB0CON;
  1939  0020FA  CF60 FF50          	movff	3936,3920	;volatile
  1940                           
  1941                           ; BSR set to: 0
  1942                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  1943  0020FE  0E00               	movlw	0
  1944  002100  0100               	movlb	0	; () banked
  1945  002102  6F75               	movwf	CANSetMask@mask& (0+255),b
  1946  002104  0E00               	movlw	0
  1947  002106  6F76               	movwf	(CANSetMask@mask+1)& (0+255),b
  1948  002108  0E00               	movlw	0
  1949  00210A  6F77               	movwf	(CANSetMask@mask+2)& (0+255),b
  1950  00210C  0E00               	movlw	0
  1951  00210E  6F78               	movwf	(CANSetMask@mask+3)& (0+255),b
  1952  002110  0EF7               	movlw	247
  1953  002112  0100               	movlb	0	; () banked
  1954  002114  6F79               	movwf	CANSetMask@type& (0+255),b
  1955  002116  0E01               	movlw	1
  1956  002118  EC7B  F00C         	call	_CANSetMask
  1957                           
  1958                           ;inc\CANlib.h: 261: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  1959  00211C  0E00               	movlw	0
  1960  00211E  0100               	movlb	0	; () banked
  1961  002120  6F75               	movwf	CANSetMask@mask& (0+255),b
  1962  002122  0E00               	movlw	0
  1963  002124  6F76               	movwf	(CANSetMask@mask+1)& (0+255),b
  1964  002126  0E00               	movlw	0
  1965  002128  6F77               	movwf	(CANSetMask@mask+2)& (0+255),b
  1966  00212A  0E00               	movlw	0
  1967  00212C  6F78               	movwf	(CANSetMask@mask+3)& (0+255),b
  1968  00212E  0EF7               	movlw	247
  1969  002130  0100               	movlb	0	; () banked
  1970  002132  6F79               	movwf	CANSetMask@type& (0+255),b
  1971  002134  0E02               	movlw	2
  1972  002136  EC7B  F00C         	call	_CANSetMask
  1973                           
  1974                           ;inc\CANlib.h: 264: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  1975  00213A  D00F               	goto	l3099
  1976  00213C                     l3093:
  1977                           
  1978                           ;inc\CANlib.h: 267: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  1979  00213C  0EF7               	movlw	247
  1980  00213E  0100               	movlb	0	; () banked
  1981  002140  6F8D               	movwf	CANInitialize@FilterConfig1& (0+255),b
  1982  002142  D007               	goto	l3095
  1983  002144                     l362:
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;inc\CANlib.h: 272: FilterConfig1 = CAN_CONFIG_STD_MSG;
  1987  002144  0100               	movlb	0	; () banked
  1988  002146  698D               	setf	CANInitialize@FilterConfig1& (0+255),b
  1989                           
  1990                           ;inc\CANlib.h: 273: FilterConfig2 = CAN_CONFIG_STD_MSG;
  1991  002148  0100               	movlb	0	; () banked
  1992  00214A  698E               	setf	CANInitialize@FilterConfig2& (0+255),b
  1993                           
  1994                           ;inc\CANlib.h: 274: break;
  1995  00214C  D028               	goto	l3101
  1996  00214E                     l363:
  1997                           
  1998                           ; BSR set to: 0
  1999                           ;inc\CANlib.h: 276: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2000  00214E  0100               	movlb	0	; () banked
  2001  002150  698D               	setf	CANInitialize@FilterConfig1& (0+255),b
  2002  002152                     l3095:
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;inc\CANlib.h: 277: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2006  002152  0EF7               	movlw	247
  2007  002154  0100               	movlb	0	; () banked
  2008  002156  6F8E               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;inc\CANlib.h: 279: }
  2012                           
  2013                           ;inc\CANlib.h: 278: break;
  2014  002158  D022               	goto	l3101
  2015  00215A                     l3099:
  2016  00215A  0E9F               	movlw	159
  2017  00215C  0100               	movlb	0	; () banked
  2018  00215E  6F88               	movwf	??_CANInitialize& (0+255),b
  2019  002160  0EFF               	movlw	255
  2020  002162  0100               	movlb	0	; () banked
  2021  002164  6F89               	movwf	(??_CANInitialize+1)& (0+255),b
  2022  002166  0100               	movlb	0	; () banked
  2023  002168  5187               	movf	CANInitialize@flags& (0+255),w,b
  2024  00216A  0B60               	andlw	96
  2025  00216C  0100               	movlb	0	; () banked
  2026  00216E  6F8A               	movwf	(??_CANInitialize+2)& (0+255),b
  2027  002170  6B8B               	clrf	(??_CANInitialize+3)& (0+255),b
  2028  002172  0100               	movlb	0	; () banked
  2029  002174  5188               	movf	??_CANInitialize& (0+255),w,b
  2030  002176  0100               	movlb	0	; () banked
  2031  002178  138A               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2032  00217A  0100               	movlb	0	; () banked
  2033  00217C  5189               	movf	(??_CANInitialize+1)& (0+255),w,b
  2034  00217E  0100               	movlb	0	; () banked
  2035  002180  138B               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2036                           
  2037                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2038                           ; Switch size 1, requested type "space"
  2039                           ; Number of cases is 1, Range of values is 0 to 0
  2040                           ; switch strategies available:
  2041                           ; Name         Instructions Cycles
  2042                           ; simple_byte            4     3 (average)
  2043                           ;	Chosen strategy is simple_byte
  2044  002182  0100               	movlb	0	; () banked
  2045  002184  518B               	movf	(??_CANInitialize+3)& (0+255),w,b
  2046  002186  0A00               	xorlw	0	; case 0
  2047  002188  A4D8               	btfss	status,2,c
  2048  00218A  D7E1               	goto	l363
  2049                           
  2050                           ; BSR set to: 0
  2051                           ; Switch size 1, requested type "space"
  2052                           ; Number of cases is 2, Range of values is 191 to 223
  2053                           ; switch strategies available:
  2054                           ; Name         Instructions Cycles
  2055                           ; simple_byte            7     4 (average)
  2056                           ;	Chosen strategy is simple_byte
  2057  00218C  0100               	movlb	0	; () banked
  2058  00218E  518A               	movf	(??_CANInitialize+2)& (0+255),w,b
  2059  002190  0ABF               	xorlw	191	; case 191
  2060  002192  B4D8               	btfsc	status,2,c
  2061  002194  D7D7               	goto	l362
  2062  002196  0A60               	xorlw	96	; case 223
  2063  002198  B4D8               	btfsc	status,2,c
  2064  00219A  D7D0               	goto	l3093
  2065  00219C  D7D8               	goto	l363
  2066  00219E                     l3101:
  2067                           
  2068                           ; BSR set to: 0
  2069                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2070  00219E  0E00               	movlw	0
  2071  0021A0  0100               	movlb	0	; () banked
  2072  0021A2  6F75               	movwf	CANSetFilter@filter& (0+255),b
  2073  0021A4  0E00               	movlw	0
  2074  0021A6  6F76               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2075  0021A8  0E00               	movlw	0
  2076  0021AA  6F77               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2077  0021AC  0E00               	movlw	0
  2078  0021AE  6F78               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2079  0021B0  C08D  F079         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2080  0021B4  0E00               	movlw	0
  2081  0021B6  ECAC  F000         	call	_CANSetFilter
  2082                           
  2083                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2084  0021BA  0E00               	movlw	0
  2085  0021BC  0100               	movlb	0	; () banked
  2086  0021BE  6F75               	movwf	CANSetFilter@filter& (0+255),b
  2087  0021C0  0E00               	movlw	0
  2088  0021C2  6F76               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2089  0021C4  0E00               	movlw	0
  2090  0021C6  6F77               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2091  0021C8  0E00               	movlw	0
  2092  0021CA  6F78               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2093  0021CC  C08D  F079         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2094  0021D0  0E01               	movlw	1
  2095  0021D2  ECAC  F000         	call	_CANSetFilter
  2096                           
  2097                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2098  0021D6  0E00               	movlw	0
  2099  0021D8  0100               	movlb	0	; () banked
  2100  0021DA  6F75               	movwf	CANSetFilter@filter& (0+255),b
  2101  0021DC  0E00               	movlw	0
  2102  0021DE  6F76               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2103  0021E0  0E00               	movlw	0
  2104  0021E2  6F77               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2105  0021E4  0E00               	movlw	0
  2106  0021E6  6F78               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2107  0021E8  C08E  F079         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2108  0021EC  0E02               	movlw	2
  2109  0021EE  ECAC  F000         	call	_CANSetFilter
  2110                           
  2111                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2112  0021F2  0E00               	movlw	0
  2113  0021F4  0100               	movlb	0	; () banked
  2114  0021F6  6F75               	movwf	CANSetFilter@filter& (0+255),b
  2115  0021F8  0E00               	movlw	0
  2116  0021FA  6F76               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2117  0021FC  0E00               	movlw	0
  2118  0021FE  6F77               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2119  002200  0E00               	movlw	0
  2120  002202  6F78               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2121  002204  C08E  F079         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2122  002208  0E03               	movlw	3
  2123  00220A  ECAC  F000         	call	_CANSetFilter
  2124                           
  2125                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  2126  00220E  0E00               	movlw	0
  2127  002210  0100               	movlb	0	; () banked
  2128  002212  6F75               	movwf	CANSetFilter@filter& (0+255),b
  2129  002214  0E00               	movlw	0
  2130  002216  6F76               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2131  002218  0E00               	movlw	0
  2132  00221A  6F77               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2133  00221C  0E00               	movlw	0
  2134  00221E  6F78               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2135  002220  C08E  F079         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2136  002224  0E04               	movlw	4
  2137  002226  ECAC  F000         	call	_CANSetFilter
  2138                           
  2139                           ;inc\CANlib.h: 286: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  2140  00222A  0E00               	movlw	0
  2141  00222C  0100               	movlb	0	; () banked
  2142  00222E  6F75               	movwf	CANSetFilter@filter& (0+255),b
  2143  002230  0E00               	movlw	0
  2144  002232  6F76               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2145  002234  0E00               	movlw	0
  2146  002236  6F77               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2147  002238  0E00               	movlw	0
  2148  00223A  6F78               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2149  00223C  C08E  F079         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2150  002240  0E05               	movlw	5
  2151  002242  ECAC  F000         	call	_CANSetFilter
  2152                           
  2153                           ;inc\CANlib.h: 288: CANOperationMode(CAN_OP_MODE_NORMAL);
  2154  002246  0E00               	movlw	0
  2155  002248  ECCD  F012         	call	_CANOperationMode
  2156  00224C  0012               	return		;funcret
  2157  00224E                     __end_of_CANInitialize:
  2158                           	opt stack 0
  2159                           tblptru	equ	0xFF8
  2160                           tblptrh	equ	0xFF7
  2161                           tblptrl	equ	0xFF6
  2162                           tablat	equ	0xFF5
  2163                           prodh	equ	0xFF4
  2164                           prodl	equ	0xFF3
  2165                           intcon	equ	0xFF2
  2166                           postinc0	equ	0xFEE
  2167                           wreg	equ	0xFE8
  2168                           indf1	equ	0xFE7
  2169                           postinc1	equ	0xFE6
  2170                           postdec1	equ	0xFE5
  2171                           fsr1h	equ	0xFE2
  2172                           fsr1l	equ	0xFE1
  2173                           indf2	equ	0xFDF
  2174                           postinc2	equ	0xFDE
  2175                           fsr2h	equ	0xFDA
  2176                           fsr2l	equ	0xFD9
  2177                           status	equ	0xFD8
  2178                           
  2179 ;; *************** function _CANSetMask *****************
  2180 ;; Defined at:
  2181 ;;		line 641 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;  numBuffer       1    wreg     enum E16878
  2184 ;;  mask            4   21[BANK0 ] unsigned long 
  2185 ;;  type            1   25[BANK0 ] enum E16844
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  numBuffer       1   30[BANK0 ] enum E16878
  2188 ;;  tamp            4   31[BANK0 ] unsigned long 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;		None               void
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2198 ;;      Params:         0       5       0       0
  2199 ;;      Locals:         0       5       0       0
  2200 ;;      Temps:          0       4       0       0
  2201 ;;      Totals:         0      14       0       0
  2202 ;;Total ram usage:       14 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:    5
  2205 ;; This function calls:
  2206 ;;		Nothing
  2207 ;; This function is called by:
  2208 ;;		_CANInitialize
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text8
  2213  0018F6                     __ptext8:
  2214                           	opt stack 0
  2215  0018F6                     _CANSetMask:
  2216                           	opt stack 23
  2217                           
  2218                           ;incstack = 0
  2219                           ;CANSetMask@numBuffer stored from wreg
  2220  0018F6  0100               	movlb	0	; () banked
  2221  0018F8  6F7E               	movwf	CANSetMask@numBuffer& (0+255),b
  2222                           
  2223                           ;inc\CANlib.h: 644: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  2224  0018FA  0100               	movlb	0	; () banked
  2225  0018FC  057E               	decf	CANSetMask@numBuffer& (0+255),w,b
  2226  0018FE  A4D8               	btfss	status,2,c
  2227  001900  D056               	goto	l2663
  2228                           
  2229                           ; BSR set to: 0
  2230  001902  0100               	movlb	0	; () banked
  2231  001904  2979               	incf	CANSetMask@type& (0+255),w,b
  2232  001906  A4D8               	btfss	status,2,c
  2233  001908  D052               	goto	l2663
  2234                           
  2235                           ; BSR set to: 0
  2236                           ;inc\CANlib.h: 645: {
  2237                           ;inc\CANlib.h: 646: tamp = (mask >> 3);
  2238  00190A  C075  F07A         	movff	CANSetMask@mask,??_CANSetMask
  2239  00190E  C076  F07B         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2240  001912  C077  F07C         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2241  001916  C078  F07D         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2242  00191A  0E04               	movlw	4
  2243  00191C  D006               	goto	u2350
  2244  00191E                     u2355:
  2245  00191E  0100               	movlb	0	; () banked
  2246  001920  90D8               	bcf	status,0,c
  2247  001922  337D               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2248  001924  337C               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2249  001926  337B               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2250  001928  337A               	rrcf	??_CANSetMask& (0+255),f,b
  2251  00192A                     u2350:
  2252  00192A  2EE8               	decfsz	wreg,f,c
  2253  00192C  D7F8               	goto	u2355
  2254  00192E  C07A  F07F         	movff	??_CANSetMask,CANSetMask@tamp
  2255  001932  C07B  F080         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2256  001936  C07C  F081         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2257  00193A  C07D  F082         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;inc\CANlib.h: 647: tamp = tamp & 0x000000FF;
  2261  00193E  0100               	movlb	0	; () banked
  2262  001940  517F               	movf	CANSetMask@tamp& (0+255),w,b
  2263  001942  0100               	movlb	0	; () banked
  2264  001944  6F7F               	movwf	CANSetMask@tamp& (0+255),b
  2265  001946  6B80               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2266  001948  6B81               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2267  00194A  6B82               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;inc\CANlib.h: 648: RXM0SIDH = (unsigned char) tamp;
  2271  00194C  C07F  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;inc\CANlib.h: 650: tamp = mask & 0x00000007;
  2275  001950  0E07               	movlw	7
  2276  001952  0100               	movlb	0	; () banked
  2277  001954  1575               	andwf	CANSetMask@mask& (0+255),w,b
  2278  001956  0100               	movlb	0	; () banked
  2279  001958  6F7F               	movwf	CANSetMask@tamp& (0+255),b
  2280  00195A  0E00               	movlw	0
  2281  00195C  0100               	movlb	0	; () banked
  2282  00195E  1576               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2283  001960  0100               	movlb	0	; () banked
  2284  001962  6F80               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2285  001964  0E00               	movlw	0
  2286  001966  0100               	movlb	0	; () banked
  2287  001968  1577               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2288  00196A  0100               	movlb	0	; () banked
  2289  00196C  6F81               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2290  00196E  0E00               	movlw	0
  2291  001970  0100               	movlb	0	; () banked
  2292  001972  1578               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2293  001974  0100               	movlb	0	; () banked
  2294  001976  6F82               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;inc\CANlib.h: 651: tamp = tamp << 5;
  2298  001978  C07F  F07A         	movff	CANSetMask@tamp,??_CANSetMask
  2299  00197C  C080  F07B         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2300  001980  C081  F07C         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2301  001984  C082  F07D         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2302  001988  0E05               	movlw	5
  2303  00198A                     u2365:
  2304  00198A  90D8               	bcf	status,0,c
  2305  00198C  0100               	movlb	0	; () banked
  2306  00198E  377A               	rlcf	??_CANSetMask& (0+255),f,b
  2307  001990  377B               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2308  001992  377C               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2309  001994  377D               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2310  001996  2EE8               	decfsz	wreg,f,c
  2311  001998  D7F8               	goto	u2365
  2312  00199A  C07A  F07F         	movff	??_CANSetMask,CANSetMask@tamp
  2313  00199E  C07B  F080         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2314  0019A2  C07C  F081         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2315  0019A6  C07D  F082         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;inc\CANlib.h: 652: RXM0SIDL = (unsigned char) tamp;
  2319  0019AA  C07F  FF19         	movff	CANSetMask@tamp,3865	;volatile
  2320  0019AE                     l2663:
  2321                           
  2322                           ; BSR set to: 0
  2323                           ;inc\CANlib.h: 653: }
  2324                           ;inc\CANlib.h: 655: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  2325  0019AE  0E02               	movlw	2
  2326  0019B0  0100               	movlb	0	; () banked
  2327  0019B2  197E               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2328  0019B4  A4D8               	btfss	status,2,c
  2329  0019B6  D056               	goto	l2679
  2330                           
  2331                           ; BSR set to: 0
  2332  0019B8  0100               	movlb	0	; () banked
  2333  0019BA  2979               	incf	CANSetMask@type& (0+255),w,b
  2334  0019BC  A4D8               	btfss	status,2,c
  2335  0019BE  D052               	goto	l2679
  2336                           
  2337                           ; BSR set to: 0
  2338                           ;inc\CANlib.h: 656: {
  2339                           ;inc\CANlib.h: 657: tamp = (mask >> 3);
  2340  0019C0  C075  F07A         	movff	CANSetMask@mask,??_CANSetMask
  2341  0019C4  C076  F07B         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2342  0019C8  C077  F07C         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2343  0019CC  C078  F07D         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2344  0019D0  0E04               	movlw	4
  2345  0019D2  D006               	goto	u2390
  2346  0019D4                     u2395:
  2347  0019D4  0100               	movlb	0	; () banked
  2348  0019D6  90D8               	bcf	status,0,c
  2349  0019D8  337D               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2350  0019DA  337C               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2351  0019DC  337B               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2352  0019DE  337A               	rrcf	??_CANSetMask& (0+255),f,b
  2353  0019E0                     u2390:
  2354  0019E0  2EE8               	decfsz	wreg,f,c
  2355  0019E2  D7F8               	goto	u2395
  2356  0019E4  C07A  F07F         	movff	??_CANSetMask,CANSetMask@tamp
  2357  0019E8  C07B  F080         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2358  0019EC  C07C  F081         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2359  0019F0  C07D  F082         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2360                           
  2361                           ; BSR set to: 0
  2362                           ;inc\CANlib.h: 658: tamp = tamp & 0x000000FF;
  2363  0019F4  0100               	movlb	0	; () banked
  2364  0019F6  517F               	movf	CANSetMask@tamp& (0+255),w,b
  2365  0019F8  0100               	movlb	0	; () banked
  2366  0019FA  6F7F               	movwf	CANSetMask@tamp& (0+255),b
  2367  0019FC  6B80               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2368  0019FE  6B81               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2369  001A00  6B82               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;inc\CANlib.h: 659: RXM1SIDH = (unsigned char) tamp;
  2373  001A02  C07F  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;inc\CANlib.h: 661: tamp = mask & 0x00000007;
  2377  001A06  0E07               	movlw	7
  2378  001A08  0100               	movlb	0	; () banked
  2379  001A0A  1575               	andwf	CANSetMask@mask& (0+255),w,b
  2380  001A0C  0100               	movlb	0	; () banked
  2381  001A0E  6F7F               	movwf	CANSetMask@tamp& (0+255),b
  2382  001A10  0E00               	movlw	0
  2383  001A12  0100               	movlb	0	; () banked
  2384  001A14  1576               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2385  001A16  0100               	movlb	0	; () banked
  2386  001A18  6F80               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2387  001A1A  0E00               	movlw	0
  2388  001A1C  0100               	movlb	0	; () banked
  2389  001A1E  1577               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2390  001A20  0100               	movlb	0	; () banked
  2391  001A22  6F81               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2392  001A24  0E00               	movlw	0
  2393  001A26  0100               	movlb	0	; () banked
  2394  001A28  1578               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2395  001A2A  0100               	movlb	0	; () banked
  2396  001A2C  6F82               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;inc\CANlib.h: 662: tamp = tamp << 5;
  2400  001A2E  C07F  F07A         	movff	CANSetMask@tamp,??_CANSetMask
  2401  001A32  C080  F07B         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2402  001A36  C081  F07C         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2403  001A3A  C082  F07D         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2404  001A3E  0E05               	movlw	5
  2405  001A40                     u2405:
  2406  001A40  90D8               	bcf	status,0,c
  2407  001A42  0100               	movlb	0	; () banked
  2408  001A44  377A               	rlcf	??_CANSetMask& (0+255),f,b
  2409  001A46  377B               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2410  001A48  377C               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2411  001A4A  377D               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2412  001A4C  2EE8               	decfsz	wreg,f,c
  2413  001A4E  D7F8               	goto	u2405
  2414  001A50  C07A  F07F         	movff	??_CANSetMask,CANSetMask@tamp
  2415  001A54  C07B  F080         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2416  001A58  C07C  F081         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2417  001A5C  C07D  F082         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2418                           
  2419                           ; BSR set to: 0
  2420                           ;inc\CANlib.h: 663: RXM1SIDL = (unsigned char) tamp;
  2421  001A60  C07F  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  2422  001A64                     l2679:
  2423                           
  2424                           ; BSR set to: 0
  2425                           ;inc\CANlib.h: 664: }
  2426                           ;inc\CANlib.h: 666: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  2427  001A64  0100               	movlb	0	; () banked
  2428  001A66  057E               	decf	CANSetMask@numBuffer& (0+255),w,b
  2429  001A68  A4D8               	btfss	status,2,c
  2430  001A6A  D087               	goto	l2711
  2431                           
  2432                           ; BSR set to: 0
  2433  001A6C  0EF7               	movlw	247
  2434  001A6E  0100               	movlb	0	; () banked
  2435  001A70  1979               	xorwf	CANSetMask@type& (0+255),w,b
  2436  001A72  A4D8               	btfss	status,2,c
  2437  001A74  D082               	goto	l2711
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;inc\CANlib.h: 667: {
  2441                           ;inc\CANlib.h: 668: tamp = mask & 0x000000FF;
  2442  001A76  0100               	movlb	0	; () banked
  2443  001A78  5175               	movf	CANSetMask@mask& (0+255),w,b
  2444  001A7A  0100               	movlb	0	; () banked
  2445  001A7C  6F7F               	movwf	CANSetMask@tamp& (0+255),b
  2446  001A7E  6B80               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2447  001A80  6B81               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2448  001A82  6B82               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2449                           
  2450                           ; BSR set to: 0
  2451                           ;inc\CANlib.h: 669: RXM0EIDL = (unsigned char) tamp;
  2452  001A84  C07F  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  2453                           
  2454                           ; BSR set to: 0
  2455                           ;inc\CANlib.h: 671: tamp = mask & 0x0000FF00;
  2456  001A88  0E00               	movlw	0
  2457  001A8A  0100               	movlb	0	; () banked
  2458  001A8C  1575               	andwf	CANSetMask@mask& (0+255),w,b
  2459  001A8E  0100               	movlb	0	; () banked
  2460  001A90  6F7F               	movwf	CANSetMask@tamp& (0+255),b
  2461  001A92  0EFF               	movlw	255
  2462  001A94  0100               	movlb	0	; () banked
  2463  001A96  1576               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2464  001A98  0100               	movlb	0	; () banked
  2465  001A9A  6F80               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2466  001A9C  0E00               	movlw	0
  2467  001A9E  0100               	movlb	0	; () banked
  2468  001AA0  1577               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2469  001AA2  0100               	movlb	0	; () banked
  2470  001AA4  6F81               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2471  001AA6  0E00               	movlw	0
  2472  001AA8  0100               	movlb	0	; () banked
  2473  001AAA  1578               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2474  001AAC  0100               	movlb	0	; () banked
  2475  001AAE  6F82               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2476                           
  2477                           ; BSR set to: 0
  2478                           ;inc\CANlib.h: 672: tamp = tamp >> 8;
  2479  001AB0  C07F  F07A         	movff	CANSetMask@tamp,??_CANSetMask
  2480  001AB4  C080  F07B         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2481  001AB8  C081  F07C         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2482  001ABC  C082  F07D         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2483  001AC0  C07B  F07A         	movff	??_CANSetMask+1,??_CANSetMask
  2484  001AC4  C07C  F07B         	movff	??_CANSetMask+2,??_CANSetMask+1
  2485  001AC8  C07D  F07C         	movff	??_CANSetMask+3,??_CANSetMask+2
  2486  001ACC  0100               	movlb	0	; () banked
  2487  001ACE  6B7D               	clrf	(??_CANSetMask+3)& (0+255),b
  2488  001AD0  C07A  F07F         	movff	??_CANSetMask,CANSetMask@tamp
  2489  001AD4  C07B  F080         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2490  001AD8  C07C  F081         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2491  001ADC  C07D  F082         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2492                           
  2493                           ; BSR set to: 0
  2494                           ;inc\CANlib.h: 673: RXM0EIDH = (unsigned char) tamp;
  2495  001AE0  C07F  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;inc\CANlib.h: 675: if (mask & 0x00010000)
  2499  001AE4  0100               	movlb	0	; () banked
  2500  001AE6  A177               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  2501  001AE8  D003               	goto	l436
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;inc\CANlib.h: 676: RXM0SIDLbits.EID16 = 0x01;
  2505  001AEA  010F               	movlb	15	; () banked
  2506  001AEC  8119               	bsf	25,0,b	;volatile
  2507  001AEE  D002               	goto	l437
  2508  001AF0                     l436:
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;inc\CANlib.h: 677: else
  2512                           ;inc\CANlib.h: 678: RXM0SIDLbits.EID16 = 0x00;
  2513  001AF0  010F               	movlb	15	; () banked
  2514  001AF2  9119               	bcf	25,0,b	;volatile
  2515  001AF4                     l437:
  2516                           
  2517                           ; BSR set to: 15
  2518                           ;inc\CANlib.h: 680: if (mask & 0x00020000)
  2519  001AF4  0100               	movlb	0	; () banked
  2520  001AF6  A377               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  2521  001AF8  D003               	goto	l438
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;inc\CANlib.h: 681: RXM0SIDLbits.EID17 = 0x01;
  2525  001AFA  010F               	movlb	15	; () banked
  2526  001AFC  8319               	bsf	25,1,b	;volatile
  2527  001AFE  D002               	goto	l439
  2528  001B00                     l438:
  2529                           
  2530                           ; BSR set to: 0
  2531                           ;inc\CANlib.h: 682: else
  2532                           ;inc\CANlib.h: 683: RXM0SIDLbits.EID17 = 0x00;
  2533  001B00  010F               	movlb	15	; () banked
  2534  001B02  9319               	bcf	25,1,b	;volatile
  2535  001B04                     l439:
  2536                           
  2537                           ; BSR set to: 15
  2538                           ;inc\CANlib.h: 685: if (mask & 0x00040000)
  2539  001B04  0100               	movlb	0	; () banked
  2540  001B06  A577               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  2541  001B08  D003               	goto	l440
  2542                           
  2543                           ; BSR set to: 0
  2544                           ;inc\CANlib.h: 686: RXM0SIDLbits.SID0 = 0x01;
  2545  001B0A  010F               	movlb	15	; () banked
  2546  001B0C  8B19               	bsf	25,5,b	;volatile
  2547  001B0E  D002               	goto	l441
  2548  001B10                     l440:
  2549                           
  2550                           ; BSR set to: 0
  2551                           ;inc\CANlib.h: 687: else
  2552                           ;inc\CANlib.h: 688: RXM0SIDLbits.SID0 = 0x00;
  2553  001B10  010F               	movlb	15	; () banked
  2554  001B12  9B19               	bcf	25,5,b	;volatile
  2555  001B14                     l441:
  2556                           
  2557                           ; BSR set to: 15
  2558                           ;inc\CANlib.h: 690: if (mask & 0x00080000)
  2559  001B14  0100               	movlb	0	; () banked
  2560  001B16  A777               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  2561  001B18  D003               	goto	l442
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;inc\CANlib.h: 691: RXM0SIDLbits.SID1 = 0x01;
  2565  001B1A  010F               	movlb	15	; () banked
  2566  001B1C  8D19               	bsf	25,6,b	;volatile
  2567  001B1E  D002               	goto	l443
  2568  001B20                     l442:
  2569                           
  2570                           ; BSR set to: 0
  2571                           ;inc\CANlib.h: 692: else
  2572                           ;inc\CANlib.h: 693: RXM0SIDLbits.SID1 = 0x00;
  2573  001B20  010F               	movlb	15	; () banked
  2574  001B22  9D19               	bcf	25,6,b	;volatile
  2575  001B24                     l443:
  2576                           
  2577                           ; BSR set to: 15
  2578                           ;inc\CANlib.h: 695: if (mask & 0x00100000)
  2579  001B24  0100               	movlb	0	; () banked
  2580  001B26  A977               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  2581  001B28  D003               	goto	l444
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;inc\CANlib.h: 696: RXM0SIDLbits.SID2 = 0x01 ;
  2585  001B2A  010F               	movlb	15	; () banked
  2586  001B2C  8F19               	bsf	25,7,b	;volatile
  2587  001B2E  D002               	goto	l2705
  2588  001B30                     l444:
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;inc\CANlib.h: 697: else
  2592                           ;inc\CANlib.h: 698: RXM0SIDLbits.SID2 = 0x00 ;
  2593  001B30  010F               	movlb	15	; () banked
  2594  001B32  9F19               	bcf	25,7,b	;volatile
  2595  001B34                     l2705:
  2596                           
  2597                           ; BSR set to: 15
  2598                           ;inc\CANlib.h: 700: tamp = (mask >> 21);
  2599  001B34  C075  F07A         	movff	CANSetMask@mask,??_CANSetMask
  2600  001B38  C076  F07B         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2601  001B3C  C077  F07C         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2602  001B40  C078  F07D         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2603  001B44  0E16               	movlw	22
  2604  001B46  D006               	goto	u2480
  2605  001B48                     u2485:
  2606  001B48  0100               	movlb	0	; () banked
  2607  001B4A  90D8               	bcf	status,0,c
  2608  001B4C  337D               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2609  001B4E  337C               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2610  001B50  337B               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2611  001B52  337A               	rrcf	??_CANSetMask& (0+255),f,b
  2612  001B54                     u2480:
  2613  001B54  2EE8               	decfsz	wreg,f,c
  2614  001B56  D7F8               	goto	u2485
  2615  001B58  C07A  F07F         	movff	??_CANSetMask,CANSetMask@tamp
  2616  001B5C  C07B  F080         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2617  001B60  C07C  F081         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2618  001B64  C07D  F082         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;inc\CANlib.h: 701: tamp = tamp & 0x000000FF;
  2622  001B68  0100               	movlb	0	; () banked
  2623  001B6A  517F               	movf	CANSetMask@tamp& (0+255),w,b
  2624  001B6C  0100               	movlb	0	; () banked
  2625  001B6E  6F7F               	movwf	CANSetMask@tamp& (0+255),b
  2626  001B70  6B80               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2627  001B72  6B81               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2628  001B74  6B82               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2629                           
  2630                           ; BSR set to: 0
  2631                           ;inc\CANlib.h: 702: RXM0SIDH = (unsigned char) tamp;
  2632  001B76  C07F  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2633  001B7A                     l2711:
  2634                           
  2635                           ; BSR set to: 0
  2636                           ;inc\CANlib.h: 703: }
  2637                           ;inc\CANlib.h: 705: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  2638  001B7A  0E02               	movlw	2
  2639  001B7C  0100               	movlb	0	; () banked
  2640  001B7E  197E               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2641  001B80  A4D8               	btfss	status,2,c
  2642  001B82  0012               	return	
  2643                           
  2644                           ; BSR set to: 0
  2645  001B84  0EF7               	movlw	247
  2646  001B86  0100               	movlb	0	; () banked
  2647  001B88  1979               	xorwf	CANSetMask@type& (0+255),w,b
  2648  001B8A  A4D8               	btfss	status,2,c
  2649  001B8C  0012               	return	
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;inc\CANlib.h: 706: {
  2653                           ;inc\CANlib.h: 707: tamp = mask & 0x000000FF;
  2654  001B8E  0100               	movlb	0	; () banked
  2655  001B90  5175               	movf	CANSetMask@mask& (0+255),w,b
  2656  001B92  0100               	movlb	0	; () banked
  2657  001B94  6F7F               	movwf	CANSetMask@tamp& (0+255),b
  2658  001B96  6B80               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2659  001B98  6B81               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2660  001B9A  6B82               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2661                           
  2662                           ; BSR set to: 0
  2663                           ;inc\CANlib.h: 708: RXM1EIDL = (unsigned char) tamp;
  2664  001B9C  C07F  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;inc\CANlib.h: 710: tamp = mask & 0x0000FF00;
  2668  001BA0  0E00               	movlw	0
  2669  001BA2  0100               	movlb	0	; () banked
  2670  001BA4  1575               	andwf	CANSetMask@mask& (0+255),w,b
  2671  001BA6  0100               	movlb	0	; () banked
  2672  001BA8  6F7F               	movwf	CANSetMask@tamp& (0+255),b
  2673  001BAA  0EFF               	movlw	255
  2674  001BAC  0100               	movlb	0	; () banked
  2675  001BAE  1576               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2676  001BB0  0100               	movlb	0	; () banked
  2677  001BB2  6F80               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2678  001BB4  0E00               	movlw	0
  2679  001BB6  0100               	movlb	0	; () banked
  2680  001BB8  1577               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2681  001BBA  0100               	movlb	0	; () banked
  2682  001BBC  6F81               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2683  001BBE  0E00               	movlw	0
  2684  001BC0  0100               	movlb	0	; () banked
  2685  001BC2  1578               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2686  001BC4  0100               	movlb	0	; () banked
  2687  001BC6  6F82               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;inc\CANlib.h: 711: tamp = tamp >> 8;
  2691  001BC8  C07F  F07A         	movff	CANSetMask@tamp,??_CANSetMask
  2692  001BCC  C080  F07B         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2693  001BD0  C081  F07C         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2694  001BD4  C082  F07D         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2695  001BD8  C07B  F07A         	movff	??_CANSetMask+1,??_CANSetMask
  2696  001BDC  C07C  F07B         	movff	??_CANSetMask+2,??_CANSetMask+1
  2697  001BE0  C07D  F07C         	movff	??_CANSetMask+3,??_CANSetMask+2
  2698  001BE4  0100               	movlb	0	; () banked
  2699  001BE6  6B7D               	clrf	(??_CANSetMask+3)& (0+255),b
  2700  001BE8  C07A  F07F         	movff	??_CANSetMask,CANSetMask@tamp
  2701  001BEC  C07B  F080         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2702  001BF0  C07C  F081         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2703  001BF4  C07D  F082         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2704                           
  2705                           ; BSR set to: 0
  2706                           ;inc\CANlib.h: 712: RXM1EIDH = (unsigned char) tamp;
  2707  001BF8  C07F  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;inc\CANlib.h: 714: if (mask & 0x00010000)
  2711  001BFC  0100               	movlb	0	; () banked
  2712  001BFE  A177               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  2713  001C00  D003               	goto	l447
  2714                           
  2715                           ; BSR set to: 0
  2716                           ;inc\CANlib.h: 715: RXM1SIDLbits.EID16 = 0x01;
  2717  001C02  010F               	movlb	15	; () banked
  2718  001C04  811D               	bsf	29,0,b	;volatile
  2719  001C06  D002               	goto	l448
  2720  001C08                     l447:
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;inc\CANlib.h: 716: else
  2724                           ;inc\CANlib.h: 717: RXM1SIDLbits.EID16 = 0x00;
  2725  001C08  010F               	movlb	15	; () banked
  2726  001C0A  911D               	bcf	29,0,b	;volatile
  2727  001C0C                     l448:
  2728                           
  2729                           ; BSR set to: 15
  2730                           ;inc\CANlib.h: 719: if (mask & 0x00020000)
  2731  001C0C  0100               	movlb	0	; () banked
  2732  001C0E  A377               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  2733  001C10  D003               	goto	l449
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;inc\CANlib.h: 720: RXM1SIDLbits.EID17 = 0x01;
  2737  001C12  010F               	movlb	15	; () banked
  2738  001C14  831D               	bsf	29,1,b	;volatile
  2739  001C16  D002               	goto	l450
  2740  001C18                     l449:
  2741                           
  2742                           ; BSR set to: 0
  2743                           ;inc\CANlib.h: 721: else
  2744                           ;inc\CANlib.h: 722: RXM1SIDLbits.EID17 = 0x00;
  2745  001C18  010F               	movlb	15	; () banked
  2746  001C1A  931D               	bcf	29,1,b	;volatile
  2747  001C1C                     l450:
  2748                           
  2749                           ; BSR set to: 15
  2750                           ;inc\CANlib.h: 724: if (mask & 0x00040000)
  2751  001C1C  0100               	movlb	0	; () banked
  2752  001C1E  A577               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  2753  001C20  D003               	goto	l451
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;inc\CANlib.h: 725: RXM1SIDLbits.SID0 = 0x01;
  2757  001C22  010F               	movlb	15	; () banked
  2758  001C24  8B1D               	bsf	29,5,b	;volatile
  2759  001C26  D002               	goto	l452
  2760  001C28                     l451:
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;inc\CANlib.h: 726: else
  2764                           ;inc\CANlib.h: 727: RXM1SIDLbits.SID0 = 0x00;
  2765  001C28  010F               	movlb	15	; () banked
  2766  001C2A  9B1D               	bcf	29,5,b	;volatile
  2767  001C2C                     l452:
  2768                           
  2769                           ; BSR set to: 15
  2770                           ;inc\CANlib.h: 729: if (mask & 0x00080000)
  2771  001C2C  0100               	movlb	0	; () banked
  2772  001C2E  A777               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  2773  001C30  D003               	goto	l453
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;inc\CANlib.h: 730: RXM1SIDLbits.SID1 = 0x01;
  2777  001C32  010F               	movlb	15	; () banked
  2778  001C34  8D1D               	bsf	29,6,b	;volatile
  2779  001C36  D002               	goto	l454
  2780  001C38                     l453:
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;inc\CANlib.h: 731: else
  2784                           ;inc\CANlib.h: 732: RXM1SIDLbits.SID1 = 0x00;
  2785  001C38  010F               	movlb	15	; () banked
  2786  001C3A  9D1D               	bcf	29,6,b	;volatile
  2787  001C3C                     l454:
  2788                           
  2789                           ; BSR set to: 15
  2790                           ;inc\CANlib.h: 734: if (mask & 0x00100000)
  2791  001C3C  0100               	movlb	0	; () banked
  2792  001C3E  A977               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  2793  001C40  D003               	goto	l455
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;inc\CANlib.h: 735: RXM1SIDLbits.SID2 = 0x01 ;
  2797  001C42  010F               	movlb	15	; () banked
  2798  001C44  8F1D               	bsf	29,7,b	;volatile
  2799  001C46  D002               	goto	l2737
  2800  001C48                     l455:
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;inc\CANlib.h: 736: else
  2804                           ;inc\CANlib.h: 737: RXM1SIDLbits.SID2 = 0x00 ;
  2805  001C48  010F               	movlb	15	; () banked
  2806  001C4A  9F1D               	bcf	29,7,b	;volatile
  2807  001C4C                     l2737:
  2808                           
  2809                           ; BSR set to: 15
  2810                           ;inc\CANlib.h: 739: tamp = (mask >> 21);
  2811  001C4C  C075  F07A         	movff	CANSetMask@mask,??_CANSetMask
  2812  001C50  C076  F07B         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2813  001C54  C077  F07C         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2814  001C58  C078  F07D         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2815  001C5C  0E16               	movlw	22
  2816  001C5E  D006               	goto	u2560
  2817  001C60                     u2565:
  2818  001C60  0100               	movlb	0	; () banked
  2819  001C62  90D8               	bcf	status,0,c
  2820  001C64  337D               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2821  001C66  337C               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2822  001C68  337B               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2823  001C6A  337A               	rrcf	??_CANSetMask& (0+255),f,b
  2824  001C6C                     u2560:
  2825  001C6C  2EE8               	decfsz	wreg,f,c
  2826  001C6E  D7F8               	goto	u2565
  2827  001C70  C07A  F07F         	movff	??_CANSetMask,CANSetMask@tamp
  2828  001C74  C07B  F080         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2829  001C78  C07C  F081         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2830  001C7C  C07D  F082         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;inc\CANlib.h: 740: tamp = tamp & 0x000000FF;
  2834  001C80  0100               	movlb	0	; () banked
  2835  001C82  517F               	movf	CANSetMask@tamp& (0+255),w,b
  2836  001C84  0100               	movlb	0	; () banked
  2837  001C86  6F7F               	movwf	CANSetMask@tamp& (0+255),b
  2838  001C88  6B80               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2839  001C8A  6B81               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2840  001C8C  6B82               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2841                           
  2842                           ; BSR set to: 0
  2843                           ;inc\CANlib.h: 741: RXM1SIDH = (unsigned char) tamp;
  2844  001C8E  C07F  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2845  001C92  0012               	return	
  2846  001C94                     __end_of_CANSetMask:
  2847                           	opt stack 0
  2848                           tblptru	equ	0xFF8
  2849                           tblptrh	equ	0xFF7
  2850                           tblptrl	equ	0xFF6
  2851                           tablat	equ	0xFF5
  2852                           prodh	equ	0xFF4
  2853                           prodl	equ	0xFF3
  2854                           intcon	equ	0xFF2
  2855                           postinc0	equ	0xFEE
  2856                           wreg	equ	0xFE8
  2857                           indf1	equ	0xFE7
  2858                           postinc1	equ	0xFE6
  2859                           postdec1	equ	0xFE5
  2860                           fsr1h	equ	0xFE2
  2861                           fsr1l	equ	0xFE1
  2862                           indf2	equ	0xFDF
  2863                           postinc2	equ	0xFDE
  2864                           fsr2h	equ	0xFDA
  2865                           fsr2l	equ	0xFD9
  2866                           status	equ	0xFD8
  2867                           
  2868 ;; *************** function _CANSetFilter *****************
  2869 ;; Defined at:
  2870 ;;		line 749 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;  numBuffer       1    wreg     enum E16881
  2873 ;;  filter          4   21[BANK0 ] unsigned long 
  2874 ;;  type            1   25[BANK0 ] enum E16844
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;  numBuffer       1   30[BANK0 ] enum E16881
  2877 ;;  tamp            4   31[BANK0 ] unsigned long 
  2878 ;; Return value:  Size  Location     Type
  2879 ;;		None               void
  2880 ;; Registers used:
  2881 ;;		wreg, status,2, status,0
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2887 ;;      Params:         0       5       0       0
  2888 ;;      Locals:         0       5       0       0
  2889 ;;      Temps:          0       4       0       0
  2890 ;;      Totals:         0      14       0       0
  2891 ;;Total ram usage:       14 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; Hardware stack levels required when called:    5
  2894 ;; This function calls:
  2895 ;;		Nothing
  2896 ;; This function is called by:
  2897 ;;		_CANInitialize
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901                           	psect	text9
  2902  000158                     __ptext9:
  2903                           	opt stack 0
  2904  000158                     _CANSetFilter:
  2905                           	opt stack 23
  2906                           
  2907                           ; BSR set to: 0
  2908                           ;incstack = 0
  2909                           ;CANSetFilter@numBuffer stored from wreg
  2910  000158  0100               	movlb	0	; () banked
  2911  00015A  6F7E               	movwf	CANSetFilter@numBuffer& (0+255),b
  2912                           
  2913                           ;inc\CANlib.h: 751: unsigned long tamp;
  2914                           ;inc\CANlib.h: 753: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  2915  00015C  0100               	movlb	0	; () banked
  2916  00015E  517E               	movf	CANSetFilter@numBuffer& (0+255),w,b
  2917  000160  0100               	movlb	0	; () banked
  2918  000162  A4D8               	btfss	status,2,c
  2919  000164  D058               	goto	l2761
  2920                           
  2921                           ; BSR set to: 0
  2922  000166  0100               	movlb	0	; () banked
  2923  000168  2979               	incf	CANSetFilter@type& (0+255),w,b
  2924  00016A  A4D8               	btfss	status,2,c
  2925  00016C  D054               	goto	l2761
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;inc\CANlib.h: 754: {
  2929                           ;inc\CANlib.h: 755: RXF0SIDLbits.EXIDEN = 0x00;
  2930  00016E  010F               	movlb	15	; () banked
  2931  000170  9701               	bcf	1,3,b	;volatile
  2932                           
  2933                           ; BSR set to: 15
  2934                           ;inc\CANlib.h: 757: tamp = (filter >> 3);
  2935  000172  C075  F07A         	movff	CANSetFilter@filter,??_CANSetFilter
  2936  000176  C076  F07B         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2937  00017A  C077  F07C         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2938  00017E  C078  F07D         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2939  000182  0E04               	movlw	4
  2940  000184  D006               	goto	u2590
  2941  000186                     u2595:
  2942  000186  0100               	movlb	0	; () banked
  2943  000188  90D8               	bcf	status,0,c
  2944  00018A  337D               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  2945  00018C  337C               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  2946  00018E  337B               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  2947  000190  337A               	rrcf	??_CANSetFilter& (0+255),f,b
  2948  000192                     u2590:
  2949  000192  2EE8               	decfsz	wreg,f,c
  2950  000194  D7F8               	goto	u2595
  2951  000196  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  2952  00019A  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2953  00019E  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2954  0001A2  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2955                           
  2956                           ; BSR set to: 0
  2957                           ;inc\CANlib.h: 758: tamp = tamp & 0x000000FF;
  2958  0001A6  0100               	movlb	0	; () banked
  2959  0001A8  517F               	movf	CANSetFilter@tamp& (0+255),w,b
  2960  0001AA  0100               	movlb	0	; () banked
  2961  0001AC  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  2962  0001AE  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  2963  0001B0  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  2964  0001B2  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;inc\CANlib.h: 759: RXF0SIDH = (unsigned char) tamp;
  2968  0001B4  C07F  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  2969                           
  2970                           ; BSR set to: 0
  2971                           ;inc\CANlib.h: 761: tamp = filter & 0x00000007;
  2972  0001B8  0E07               	movlw	7
  2973  0001BA  0100               	movlb	0	; () banked
  2974  0001BC  1575               	andwf	CANSetFilter@filter& (0+255),w,b
  2975  0001BE  0100               	movlb	0	; () banked
  2976  0001C0  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  2977  0001C2  0E00               	movlw	0
  2978  0001C4  0100               	movlb	0	; () banked
  2979  0001C6  1576               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  2980  0001C8  0100               	movlb	0	; () banked
  2981  0001CA  6F80               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  2982  0001CC  0E00               	movlw	0
  2983  0001CE  0100               	movlb	0	; () banked
  2984  0001D0  1577               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  2985  0001D2  0100               	movlb	0	; () banked
  2986  0001D4  6F81               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  2987  0001D6  0E00               	movlw	0
  2988  0001D8  0100               	movlb	0	; () banked
  2989  0001DA  1578               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  2990  0001DC  0100               	movlb	0	; () banked
  2991  0001DE  6F82               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  2992                           
  2993                           ; BSR set to: 0
  2994                           ;inc\CANlib.h: 762: tamp = tamp << 5;
  2995  0001E0  C07F  F07A         	movff	CANSetFilter@tamp,??_CANSetFilter
  2996  0001E4  C080  F07B         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2997  0001E8  C081  F07C         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2998  0001EC  C082  F07D         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2999  0001F0  0E05               	movlw	5
  3000  0001F2                     u2605:
  3001  0001F2  90D8               	bcf	status,0,c
  3002  0001F4  0100               	movlb	0	; () banked
  3003  0001F6  377A               	rlcf	??_CANSetFilter& (0+255),f,b
  3004  0001F8  377B               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3005  0001FA  377C               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3006  0001FC  377D               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3007  0001FE  2EE8               	decfsz	wreg,f,c
  3008  000200  D7F8               	goto	u2605
  3009  000202  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  3010  000206  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3011  00020A  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3012  00020E  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;inc\CANlib.h: 763: RXF0SIDL = (unsigned char) tamp;
  3016  000212  C07F  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3017  000216                     l2761:
  3018                           
  3019                           ; BSR set to: 0
  3020                           ;inc\CANlib.h: 764: }
  3021                           ;inc\CANlib.h: 766: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3022  000216  0100               	movlb	0	; () banked
  3023  000218  057E               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3024  00021A  A4D8               	btfss	status,2,c
  3025  00021C  D058               	goto	l2779
  3026                           
  3027                           ; BSR set to: 0
  3028  00021E  0100               	movlb	0	; () banked
  3029  000220  2979               	incf	CANSetFilter@type& (0+255),w,b
  3030  000222  A4D8               	btfss	status,2,c
  3031  000224  D054               	goto	l2779
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;inc\CANlib.h: 767: {
  3035                           ;inc\CANlib.h: 768: RXF1SIDLbits.EXIDEN = 0x00;
  3036  000226  010F               	movlb	15	; () banked
  3037  000228  9705               	bcf	5,3,b	;volatile
  3038                           
  3039                           ; BSR set to: 15
  3040                           ;inc\CANlib.h: 770: tamp = (filter >> 3);
  3041  00022A  C075  F07A         	movff	CANSetFilter@filter,??_CANSetFilter
  3042  00022E  C076  F07B         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3043  000232  C077  F07C         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3044  000236  C078  F07D         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3045  00023A  0E04               	movlw	4
  3046  00023C  D006               	goto	u2630
  3047  00023E                     u2635:
  3048  00023E  0100               	movlb	0	; () banked
  3049  000240  90D8               	bcf	status,0,c
  3050  000242  337D               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3051  000244  337C               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3052  000246  337B               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3053  000248  337A               	rrcf	??_CANSetFilter& (0+255),f,b
  3054  00024A                     u2630:
  3055  00024A  2EE8               	decfsz	wreg,f,c
  3056  00024C  D7F8               	goto	u2635
  3057  00024E  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  3058  000252  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3059  000256  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3060  00025A  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3061                           
  3062                           ; BSR set to: 0
  3063                           ;inc\CANlib.h: 771: tamp = tamp & 0x000000FF;
  3064  00025E  0100               	movlb	0	; () banked
  3065  000260  517F               	movf	CANSetFilter@tamp& (0+255),w,b
  3066  000262  0100               	movlb	0	; () banked
  3067  000264  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  3068  000266  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3069  000268  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3070  00026A  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;inc\CANlib.h: 772: RXF1SIDH = (unsigned char) tamp;
  3074  00026C  C07F  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;inc\CANlib.h: 774: tamp = filter & 0x00000007;
  3078  000270  0E07               	movlw	7
  3079  000272  0100               	movlb	0	; () banked
  3080  000274  1575               	andwf	CANSetFilter@filter& (0+255),w,b
  3081  000276  0100               	movlb	0	; () banked
  3082  000278  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  3083  00027A  0E00               	movlw	0
  3084  00027C  0100               	movlb	0	; () banked
  3085  00027E  1576               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3086  000280  0100               	movlb	0	; () banked
  3087  000282  6F80               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3088  000284  0E00               	movlw	0
  3089  000286  0100               	movlb	0	; () banked
  3090  000288  1577               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3091  00028A  0100               	movlb	0	; () banked
  3092  00028C  6F81               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3093  00028E  0E00               	movlw	0
  3094  000290  0100               	movlb	0	; () banked
  3095  000292  1578               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3096  000294  0100               	movlb	0	; () banked
  3097  000296  6F82               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;inc\CANlib.h: 775: tamp = tamp << 5;
  3101  000298  C07F  F07A         	movff	CANSetFilter@tamp,??_CANSetFilter
  3102  00029C  C080  F07B         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3103  0002A0  C081  F07C         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3104  0002A4  C082  F07D         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3105  0002A8  0E05               	movlw	5
  3106  0002AA                     u2645:
  3107  0002AA  90D8               	bcf	status,0,c
  3108  0002AC  0100               	movlb	0	; () banked
  3109  0002AE  377A               	rlcf	??_CANSetFilter& (0+255),f,b
  3110  0002B0  377B               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3111  0002B2  377C               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3112  0002B4  377D               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3113  0002B6  2EE8               	decfsz	wreg,f,c
  3114  0002B8  D7F8               	goto	u2645
  3115  0002BA  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  3116  0002BE  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3117  0002C2  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3118  0002C6  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3119                           
  3120                           ; BSR set to: 0
  3121                           ;inc\CANlib.h: 776: RXF1SIDL = (unsigned char) tamp;
  3122  0002CA  C07F  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3123  0002CE                     l2779:
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;inc\CANlib.h: 777: }
  3127                           ;inc\CANlib.h: 779: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3128  0002CE  0E02               	movlw	2
  3129  0002D0  0100               	movlb	0	; () banked
  3130  0002D2  197E               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3131  0002D4  A4D8               	btfss	status,2,c
  3132  0002D6  D058               	goto	l2797
  3133                           
  3134                           ; BSR set to: 0
  3135  0002D8  0100               	movlb	0	; () banked
  3136  0002DA  2979               	incf	CANSetFilter@type& (0+255),w,b
  3137  0002DC  A4D8               	btfss	status,2,c
  3138  0002DE  D054               	goto	l2797
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;inc\CANlib.h: 780: {
  3142                           ;inc\CANlib.h: 781: RXF2SIDLbits.EXIDEN = 0x00;
  3143  0002E0  010F               	movlb	15	; () banked
  3144  0002E2  9709               	bcf	9,3,b	;volatile
  3145                           
  3146                           ; BSR set to: 15
  3147                           ;inc\CANlib.h: 783: tamp = (filter >> 3);
  3148  0002E4  C075  F07A         	movff	CANSetFilter@filter,??_CANSetFilter
  3149  0002E8  C076  F07B         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3150  0002EC  C077  F07C         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3151  0002F0  C078  F07D         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3152  0002F4  0E04               	movlw	4
  3153  0002F6  D006               	goto	u2670
  3154  0002F8                     u2675:
  3155  0002F8  0100               	movlb	0	; () banked
  3156  0002FA  90D8               	bcf	status,0,c
  3157  0002FC  337D               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3158  0002FE  337C               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3159  000300  337B               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3160  000302  337A               	rrcf	??_CANSetFilter& (0+255),f,b
  3161  000304                     u2670:
  3162  000304  2EE8               	decfsz	wreg,f,c
  3163  000306  D7F8               	goto	u2675
  3164  000308  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  3165  00030C  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3166  000310  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3167  000314  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;inc\CANlib.h: 784: tamp = tamp & 0x000000FF;
  3171  000318  0100               	movlb	0	; () banked
  3172  00031A  517F               	movf	CANSetFilter@tamp& (0+255),w,b
  3173  00031C  0100               	movlb	0	; () banked
  3174  00031E  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  3175  000320  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3176  000322  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3177  000324  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3178                           
  3179                           ; BSR set to: 0
  3180                           ;inc\CANlib.h: 785: RXF2SIDH = (unsigned char) tamp;
  3181  000326  C07F  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;inc\CANlib.h: 787: tamp = filter & 0x00000007;
  3185  00032A  0E07               	movlw	7
  3186  00032C  0100               	movlb	0	; () banked
  3187  00032E  1575               	andwf	CANSetFilter@filter& (0+255),w,b
  3188  000330  0100               	movlb	0	; () banked
  3189  000332  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  3190  000334  0E00               	movlw	0
  3191  000336  0100               	movlb	0	; () banked
  3192  000338  1576               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3193  00033A  0100               	movlb	0	; () banked
  3194  00033C  6F80               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3195  00033E  0E00               	movlw	0
  3196  000340  0100               	movlb	0	; () banked
  3197  000342  1577               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3198  000344  0100               	movlb	0	; () banked
  3199  000346  6F81               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3200  000348  0E00               	movlw	0
  3201  00034A  0100               	movlb	0	; () banked
  3202  00034C  1578               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3203  00034E  0100               	movlb	0	; () banked
  3204  000350  6F82               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;inc\CANlib.h: 788: tamp = tamp << 5;
  3208  000352  C07F  F07A         	movff	CANSetFilter@tamp,??_CANSetFilter
  3209  000356  C080  F07B         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3210  00035A  C081  F07C         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3211  00035E  C082  F07D         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3212  000362  0E05               	movlw	5
  3213  000364                     u2685:
  3214  000364  90D8               	bcf	status,0,c
  3215  000366  0100               	movlb	0	; () banked
  3216  000368  377A               	rlcf	??_CANSetFilter& (0+255),f,b
  3217  00036A  377B               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3218  00036C  377C               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3219  00036E  377D               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3220  000370  2EE8               	decfsz	wreg,f,c
  3221  000372  D7F8               	goto	u2685
  3222  000374  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  3223  000378  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3224  00037C  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3225  000380  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3226                           
  3227                           ; BSR set to: 0
  3228                           ;inc\CANlib.h: 789: RXF2SIDL = (unsigned char) tamp;
  3229  000384  C07F  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  3230  000388                     l2797:
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;inc\CANlib.h: 790: }
  3234                           ;inc\CANlib.h: 792: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  3235  000388  0E03               	movlw	3
  3236  00038A  0100               	movlb	0	; () banked
  3237  00038C  197E               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3238  00038E  A4D8               	btfss	status,2,c
  3239  000390  D058               	goto	l2815
  3240                           
  3241                           ; BSR set to: 0
  3242  000392  0100               	movlb	0	; () banked
  3243  000394  2979               	incf	CANSetFilter@type& (0+255),w,b
  3244  000396  A4D8               	btfss	status,2,c
  3245  000398  D054               	goto	l2815
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;inc\CANlib.h: 793: {
  3249                           ;inc\CANlib.h: 794: RXF3SIDLbits.EXIDEN = 0x00;
  3250  00039A  010F               	movlb	15	; () banked
  3251  00039C  970D               	bcf	13,3,b	;volatile
  3252                           
  3253                           ; BSR set to: 15
  3254                           ;inc\CANlib.h: 796: tamp = (filter >> 3);
  3255  00039E  C075  F07A         	movff	CANSetFilter@filter,??_CANSetFilter
  3256  0003A2  C076  F07B         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3257  0003A6  C077  F07C         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3258  0003AA  C078  F07D         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3259  0003AE  0E04               	movlw	4
  3260  0003B0  D006               	goto	u2710
  3261  0003B2                     u2715:
  3262  0003B2  0100               	movlb	0	; () banked
  3263  0003B4  90D8               	bcf	status,0,c
  3264  0003B6  337D               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3265  0003B8  337C               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3266  0003BA  337B               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3267  0003BC  337A               	rrcf	??_CANSetFilter& (0+255),f,b
  3268  0003BE                     u2710:
  3269  0003BE  2EE8               	decfsz	wreg,f,c
  3270  0003C0  D7F8               	goto	u2715
  3271  0003C2  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  3272  0003C6  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3273  0003CA  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3274  0003CE  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;inc\CANlib.h: 797: tamp = tamp & 0x000000FF;
  3278  0003D2  0100               	movlb	0	; () banked
  3279  0003D4  517F               	movf	CANSetFilter@tamp& (0+255),w,b
  3280  0003D6  0100               	movlb	0	; () banked
  3281  0003D8  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  3282  0003DA  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3283  0003DC  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3284  0003DE  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3285                           
  3286                           ; BSR set to: 0
  3287                           ;inc\CANlib.h: 798: RXF3SIDH = (unsigned char) tamp;
  3288  0003E0  C07F  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;inc\CANlib.h: 800: tamp = filter & 0x00000007;
  3292  0003E4  0E07               	movlw	7
  3293  0003E6  0100               	movlb	0	; () banked
  3294  0003E8  1575               	andwf	CANSetFilter@filter& (0+255),w,b
  3295  0003EA  0100               	movlb	0	; () banked
  3296  0003EC  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  3297  0003EE  0E00               	movlw	0
  3298  0003F0  0100               	movlb	0	; () banked
  3299  0003F2  1576               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3300  0003F4  0100               	movlb	0	; () banked
  3301  0003F6  6F80               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3302  0003F8  0E00               	movlw	0
  3303  0003FA  0100               	movlb	0	; () banked
  3304  0003FC  1577               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3305  0003FE  0100               	movlb	0	; () banked
  3306  000400  6F81               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3307  000402  0E00               	movlw	0
  3308  000404  0100               	movlb	0	; () banked
  3309  000406  1578               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3310  000408  0100               	movlb	0	; () banked
  3311  00040A  6F82               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;inc\CANlib.h: 801: tamp = tamp << 5;
  3315  00040C  C07F  F07A         	movff	CANSetFilter@tamp,??_CANSetFilter
  3316  000410  C080  F07B         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3317  000414  C081  F07C         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3318  000418  C082  F07D         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3319  00041C  0E05               	movlw	5
  3320  00041E                     u2725:
  3321  00041E  90D8               	bcf	status,0,c
  3322  000420  0100               	movlb	0	; () banked
  3323  000422  377A               	rlcf	??_CANSetFilter& (0+255),f,b
  3324  000424  377B               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3325  000426  377C               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3326  000428  377D               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3327  00042A  2EE8               	decfsz	wreg,f,c
  3328  00042C  D7F8               	goto	u2725
  3329  00042E  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  3330  000432  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3331  000436  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3332  00043A  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3333                           
  3334                           ; BSR set to: 0
  3335                           ;inc\CANlib.h: 802: RXF3SIDL = (unsigned char) tamp;
  3336  00043E  C07F  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  3337  000442                     l2815:
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;inc\CANlib.h: 803: }
  3341                           ;inc\CANlib.h: 805: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  3342  000442  0E04               	movlw	4
  3343  000444  0100               	movlb	0	; () banked
  3344  000446  197E               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3345  000448  A4D8               	btfss	status,2,c
  3346  00044A  D058               	goto	l2833
  3347                           
  3348                           ; BSR set to: 0
  3349  00044C  0100               	movlb	0	; () banked
  3350  00044E  2979               	incf	CANSetFilter@type& (0+255),w,b
  3351  000450  A4D8               	btfss	status,2,c
  3352  000452  D054               	goto	l2833
  3353                           
  3354                           ; BSR set to: 0
  3355                           ;inc\CANlib.h: 806: {
  3356                           ;inc\CANlib.h: 807: RXF4SIDLbits.EXIDEN = 0x00;
  3357  000454  010F               	movlb	15	; () banked
  3358  000456  9711               	bcf	17,3,b	;volatile
  3359                           
  3360                           ; BSR set to: 15
  3361                           ;inc\CANlib.h: 809: tamp = (filter >> 3);
  3362  000458  C075  F07A         	movff	CANSetFilter@filter,??_CANSetFilter
  3363  00045C  C076  F07B         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3364  000460  C077  F07C         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3365  000464  C078  F07D         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3366  000468  0E04               	movlw	4
  3367  00046A  D006               	goto	u2750
  3368  00046C                     u2755:
  3369  00046C  0100               	movlb	0	; () banked
  3370  00046E  90D8               	bcf	status,0,c
  3371  000470  337D               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3372  000472  337C               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3373  000474  337B               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3374  000476  337A               	rrcf	??_CANSetFilter& (0+255),f,b
  3375  000478                     u2750:
  3376  000478  2EE8               	decfsz	wreg,f,c
  3377  00047A  D7F8               	goto	u2755
  3378  00047C  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  3379  000480  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3380  000484  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3381  000488  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3382                           
  3383                           ; BSR set to: 0
  3384                           ;inc\CANlib.h: 810: tamp = tamp & 0x000000FF;
  3385  00048C  0100               	movlb	0	; () banked
  3386  00048E  517F               	movf	CANSetFilter@tamp& (0+255),w,b
  3387  000490  0100               	movlb	0	; () banked
  3388  000492  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  3389  000494  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3390  000496  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3391  000498  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;inc\CANlib.h: 811: RXF4SIDH = (unsigned char) tamp;
  3395  00049A  C07F  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;inc\CANlib.h: 813: tamp = filter & 0x00000007;
  3399  00049E  0E07               	movlw	7
  3400  0004A0  0100               	movlb	0	; () banked
  3401  0004A2  1575               	andwf	CANSetFilter@filter& (0+255),w,b
  3402  0004A4  0100               	movlb	0	; () banked
  3403  0004A6  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  3404  0004A8  0E00               	movlw	0
  3405  0004AA  0100               	movlb	0	; () banked
  3406  0004AC  1576               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3407  0004AE  0100               	movlb	0	; () banked
  3408  0004B0  6F80               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3409  0004B2  0E00               	movlw	0
  3410  0004B4  0100               	movlb	0	; () banked
  3411  0004B6  1577               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3412  0004B8  0100               	movlb	0	; () banked
  3413  0004BA  6F81               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3414  0004BC  0E00               	movlw	0
  3415  0004BE  0100               	movlb	0	; () banked
  3416  0004C0  1578               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3417  0004C2  0100               	movlb	0	; () banked
  3418  0004C4  6F82               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;inc\CANlib.h: 814: tamp = tamp << 5;
  3422  0004C6  C07F  F07A         	movff	CANSetFilter@tamp,??_CANSetFilter
  3423  0004CA  C080  F07B         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3424  0004CE  C081  F07C         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3425  0004D2  C082  F07D         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3426  0004D6  0E05               	movlw	5
  3427  0004D8                     u2765:
  3428  0004D8  90D8               	bcf	status,0,c
  3429  0004DA  0100               	movlb	0	; () banked
  3430  0004DC  377A               	rlcf	??_CANSetFilter& (0+255),f,b
  3431  0004DE  377B               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3432  0004E0  377C               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3433  0004E2  377D               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3434  0004E4  2EE8               	decfsz	wreg,f,c
  3435  0004E6  D7F8               	goto	u2765
  3436  0004E8  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  3437  0004EC  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3438  0004F0  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3439  0004F4  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;inc\CANlib.h: 815: RXF4SIDL = (unsigned char) tamp;
  3443  0004F8  C07F  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  3444  0004FC                     l2833:
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;inc\CANlib.h: 816: }
  3448                           ;inc\CANlib.h: 818: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  3449  0004FC  0E05               	movlw	5
  3450  0004FE  0100               	movlb	0	; () banked
  3451  000500  197E               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3452  000502  A4D8               	btfss	status,2,c
  3453  000504  D058               	goto	l2851
  3454                           
  3455                           ; BSR set to: 0
  3456  000506  0100               	movlb	0	; () banked
  3457  000508  2979               	incf	CANSetFilter@type& (0+255),w,b
  3458  00050A  A4D8               	btfss	status,2,c
  3459  00050C  D054               	goto	l2851
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;inc\CANlib.h: 819: {
  3463                           ;inc\CANlib.h: 820: RXF5SIDLbits.EXIDEN = 0x00;
  3464  00050E  010F               	movlb	15	; () banked
  3465  000510  9715               	bcf	21,3,b	;volatile
  3466                           
  3467                           ; BSR set to: 15
  3468                           ;inc\CANlib.h: 822: tamp = (filter >> 3);
  3469  000512  C075  F07A         	movff	CANSetFilter@filter,??_CANSetFilter
  3470  000516  C076  F07B         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3471  00051A  C077  F07C         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3472  00051E  C078  F07D         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3473  000522  0E04               	movlw	4
  3474  000524  D006               	goto	u2790
  3475  000526                     u2795:
  3476  000526  0100               	movlb	0	; () banked
  3477  000528  90D8               	bcf	status,0,c
  3478  00052A  337D               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3479  00052C  337C               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3480  00052E  337B               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3481  000530  337A               	rrcf	??_CANSetFilter& (0+255),f,b
  3482  000532                     u2790:
  3483  000532  2EE8               	decfsz	wreg,f,c
  3484  000534  D7F8               	goto	u2795
  3485  000536  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  3486  00053A  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3487  00053E  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3488  000542  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;inc\CANlib.h: 823: tamp = tamp & 0x000000FF;
  3492  000546  0100               	movlb	0	; () banked
  3493  000548  517F               	movf	CANSetFilter@tamp& (0+255),w,b
  3494  00054A  0100               	movlb	0	; () banked
  3495  00054C  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  3496  00054E  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3497  000550  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3498  000552  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;inc\CANlib.h: 824: RXF5SIDH = (unsigned char) tamp;
  3502  000554  C07F  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;inc\CANlib.h: 826: tamp = filter & 0x00000007;
  3506  000558  0E07               	movlw	7
  3507  00055A  0100               	movlb	0	; () banked
  3508  00055C  1575               	andwf	CANSetFilter@filter& (0+255),w,b
  3509  00055E  0100               	movlb	0	; () banked
  3510  000560  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  3511  000562  0E00               	movlw	0
  3512  000564  0100               	movlb	0	; () banked
  3513  000566  1576               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3514  000568  0100               	movlb	0	; () banked
  3515  00056A  6F80               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3516  00056C  0E00               	movlw	0
  3517  00056E  0100               	movlb	0	; () banked
  3518  000570  1577               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3519  000572  0100               	movlb	0	; () banked
  3520  000574  6F81               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3521  000576  0E00               	movlw	0
  3522  000578  0100               	movlb	0	; () banked
  3523  00057A  1578               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3524  00057C  0100               	movlb	0	; () banked
  3525  00057E  6F82               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;inc\CANlib.h: 827: tamp = tamp << 5;
  3529  000580  C07F  F07A         	movff	CANSetFilter@tamp,??_CANSetFilter
  3530  000584  C080  F07B         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3531  000588  C081  F07C         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3532  00058C  C082  F07D         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3533  000590  0E05               	movlw	5
  3534  000592                     u2805:
  3535  000592  90D8               	bcf	status,0,c
  3536  000594  0100               	movlb	0	; () banked
  3537  000596  377A               	rlcf	??_CANSetFilter& (0+255),f,b
  3538  000598  377B               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3539  00059A  377C               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3540  00059C  377D               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3541  00059E  2EE8               	decfsz	wreg,f,c
  3542  0005A0  D7F8               	goto	u2805
  3543  0005A2  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  3544  0005A6  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3545  0005AA  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3546  0005AE  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3547                           
  3548                           ; BSR set to: 0
  3549                           ;inc\CANlib.h: 828: RXF5SIDL = (unsigned char) tamp;
  3550  0005B2  C07F  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  3551  0005B6                     l2851:
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;inc\CANlib.h: 829: }
  3555                           ;inc\CANlib.h: 832: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  3556  0005B6  0100               	movlb	0	; () banked
  3557  0005B8  517E               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3558  0005BA  0100               	movlb	0	; () banked
  3559  0005BC  A4D8               	btfss	status,2,c
  3560  0005BE  D089               	goto	l2885
  3561                           
  3562                           ; BSR set to: 0
  3563  0005C0  0EF7               	movlw	247
  3564  0005C2  0100               	movlb	0	; () banked
  3565  0005C4  1979               	xorwf	CANSetFilter@type& (0+255),w,b
  3566  0005C6  A4D8               	btfss	status,2,c
  3567  0005C8  D084               	goto	l2885
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;inc\CANlib.h: 833: {
  3571                           ;inc\CANlib.h: 834: RXF0SIDLbits.EXIDEN = 0x01;
  3572  0005CA  010F               	movlb	15	; () banked
  3573  0005CC  8701               	bsf	1,3,b	;volatile
  3574                           
  3575                           ; BSR set to: 15
  3576                           ;inc\CANlib.h: 836: tamp = filter & 0x000000FF;
  3577  0005CE  0100               	movlb	0	; () banked
  3578  0005D0  5175               	movf	CANSetFilter@filter& (0+255),w,b
  3579  0005D2  0100               	movlb	0	; () banked
  3580  0005D4  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  3581  0005D6  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3582  0005D8  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3583  0005DA  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;inc\CANlib.h: 837: RXF0EIDL = (unsigned char) tamp;
  3587  0005DC  C07F  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;inc\CANlib.h: 839: tamp = filter & 0x0000FF00;
  3591  0005E0  0E00               	movlw	0
  3592  0005E2  0100               	movlb	0	; () banked
  3593  0005E4  1575               	andwf	CANSetFilter@filter& (0+255),w,b
  3594  0005E6  0100               	movlb	0	; () banked
  3595  0005E8  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  3596  0005EA  0EFF               	movlw	255
  3597  0005EC  0100               	movlb	0	; () banked
  3598  0005EE  1576               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3599  0005F0  0100               	movlb	0	; () banked
  3600  0005F2  6F80               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3601  0005F4  0E00               	movlw	0
  3602  0005F6  0100               	movlb	0	; () banked
  3603  0005F8  1577               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3604  0005FA  0100               	movlb	0	; () banked
  3605  0005FC  6F81               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3606  0005FE  0E00               	movlw	0
  3607  000600  0100               	movlb	0	; () banked
  3608  000602  1578               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3609  000604  0100               	movlb	0	; () banked
  3610  000606  6F82               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;inc\CANlib.h: 840: tamp = tamp >> 8;
  3614  000608  C07F  F07A         	movff	CANSetFilter@tamp,??_CANSetFilter
  3615  00060C  C080  F07B         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3616  000610  C081  F07C         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3617  000614  C082  F07D         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3618  000618  C07B  F07A         	movff	??_CANSetFilter+1,??_CANSetFilter
  3619  00061C  C07C  F07B         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3620  000620  C07D  F07C         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3621  000624  0100               	movlb	0	; () banked
  3622  000626  6B7D               	clrf	(??_CANSetFilter+3)& (0+255),b
  3623  000628  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  3624  00062C  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3625  000630  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3626  000634  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;inc\CANlib.h: 841: RXF0EIDH = (unsigned char) tamp;
  3630  000638  C07F  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;inc\CANlib.h: 843: if (filter & 0x00010000)
  3634  00063C  0100               	movlb	0	; () banked
  3635  00063E  A177               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3636  000640  D003               	goto	l467
  3637                           
  3638                           ; BSR set to: 0
  3639                           ;inc\CANlib.h: 844: RXF0SIDLbits.EID16 = 0x01;
  3640  000642  010F               	movlb	15	; () banked
  3641  000644  8101               	bsf	1,0,b	;volatile
  3642  000646  D002               	goto	l468
  3643  000648                     l467:
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;inc\CANlib.h: 845: else
  3647                           ;inc\CANlib.h: 846: RXF0SIDLbits.EID16 = 0x00;
  3648  000648  010F               	movlb	15	; () banked
  3649  00064A  9101               	bcf	1,0,b	;volatile
  3650  00064C                     l468:
  3651                           
  3652                           ; BSR set to: 15
  3653                           ;inc\CANlib.h: 848: if (filter & 0x00020000)
  3654  00064C  0100               	movlb	0	; () banked
  3655  00064E  A377               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3656  000650  D003               	goto	l469
  3657                           
  3658                           ; BSR set to: 0
  3659                           ;inc\CANlib.h: 849: RXF0SIDLbits.EID17 = 0x01;
  3660  000652  010F               	movlb	15	; () banked
  3661  000654  8301               	bsf	1,1,b	;volatile
  3662  000656  D002               	goto	l470
  3663  000658                     l469:
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;inc\CANlib.h: 850: else
  3667                           ;inc\CANlib.h: 851: RXF0SIDLbits.EID17 = 0x00;
  3668  000658  010F               	movlb	15	; () banked
  3669  00065A  9301               	bcf	1,1,b	;volatile
  3670  00065C                     l470:
  3671                           
  3672                           ; BSR set to: 15
  3673                           ;inc\CANlib.h: 853: if (filter & 0x00040000)
  3674  00065C  0100               	movlb	0	; () banked
  3675  00065E  A577               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3676  000660  D003               	goto	l471
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;inc\CANlib.h: 854: RXF0SIDLbits.SID0 = 0x01;
  3680  000662  010F               	movlb	15	; () banked
  3681  000664  8B01               	bsf	1,5,b	;volatile
  3682  000666  D002               	goto	l472
  3683  000668                     l471:
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;inc\CANlib.h: 855: else
  3687                           ;inc\CANlib.h: 856: RXF0SIDLbits.SID0 = 0x00;
  3688  000668  010F               	movlb	15	; () banked
  3689  00066A  9B01               	bcf	1,5,b	;volatile
  3690  00066C                     l472:
  3691                           
  3692                           ; BSR set to: 15
  3693                           ;inc\CANlib.h: 858: if (filter & 0x00080000)
  3694  00066C  0100               	movlb	0	; () banked
  3695  00066E  A777               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  3696  000670  D003               	goto	l473
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;inc\CANlib.h: 859: RXF0SIDLbits.SID1 = 0x01;
  3700  000672  010F               	movlb	15	; () banked
  3701  000674  8D01               	bsf	1,6,b	;volatile
  3702  000676  D002               	goto	l474
  3703  000678                     l473:
  3704                           
  3705                           ; BSR set to: 0
  3706                           ;inc\CANlib.h: 860: else
  3707                           ;inc\CANlib.h: 861: RXF0SIDLbits.SID1 = 0x00;
  3708  000678  010F               	movlb	15	; () banked
  3709  00067A  9D01               	bcf	1,6,b	;volatile
  3710  00067C                     l474:
  3711                           
  3712                           ; BSR set to: 15
  3713                           ;inc\CANlib.h: 863: if (filter & 0x00100000)
  3714  00067C  0100               	movlb	0	; () banked
  3715  00067E  A977               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  3716  000680  D003               	goto	l475
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;inc\CANlib.h: 864: RXF0SIDLbits.SID2 = 0x01 ;
  3720  000682  010F               	movlb	15	; () banked
  3721  000684  8F01               	bsf	1,7,b	;volatile
  3722  000686  D002               	goto	l2879
  3723  000688                     l475:
  3724                           
  3725                           ; BSR set to: 0
  3726                           ;inc\CANlib.h: 865: else
  3727                           ;inc\CANlib.h: 866: RXF0SIDLbits.SID2 = 0x00 ;
  3728  000688  010F               	movlb	15	; () banked
  3729  00068A  9F01               	bcf	1,7,b	;volatile
  3730  00068C                     l2879:
  3731                           
  3732                           ; BSR set to: 15
  3733                           ;inc\CANlib.h: 868: tamp = (filter >> 21);
  3734  00068C  C075  F07A         	movff	CANSetFilter@filter,??_CANSetFilter
  3735  000690  C076  F07B         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3736  000694  C077  F07C         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3737  000698  C078  F07D         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3738  00069C  0E16               	movlw	22
  3739  00069E  D006               	goto	u2880
  3740  0006A0                     u2885:
  3741  0006A0  0100               	movlb	0	; () banked
  3742  0006A2  90D8               	bcf	status,0,c
  3743  0006A4  337D               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3744  0006A6  337C               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3745  0006A8  337B               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3746  0006AA  337A               	rrcf	??_CANSetFilter& (0+255),f,b
  3747  0006AC                     u2880:
  3748  0006AC  2EE8               	decfsz	wreg,f,c
  3749  0006AE  D7F8               	goto	u2885
  3750  0006B0  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  3751  0006B4  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3752  0006B8  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3753  0006BC  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;inc\CANlib.h: 869: tamp = tamp & 0x000000FF;
  3757  0006C0  0100               	movlb	0	; () banked
  3758  0006C2  517F               	movf	CANSetFilter@tamp& (0+255),w,b
  3759  0006C4  0100               	movlb	0	; () banked
  3760  0006C6  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  3761  0006C8  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3762  0006CA  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3763  0006CC  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3764                           
  3765                           ; BSR set to: 0
  3766                           ;inc\CANlib.h: 870: RXF0SIDH = (unsigned char) tamp;
  3767  0006CE  C07F  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3768  0006D2                     l2885:
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;inc\CANlib.h: 871: }
  3772                           ;inc\CANlib.h: 873: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  3773  0006D2  0100               	movlb	0	; () banked
  3774  0006D4  057E               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3775  0006D6  A4D8               	btfss	status,2,c
  3776  0006D8  D089               	goto	l2919
  3777                           
  3778                           ; BSR set to: 0
  3779  0006DA  0EF7               	movlw	247
  3780  0006DC  0100               	movlb	0	; () banked
  3781  0006DE  1979               	xorwf	CANSetFilter@type& (0+255),w,b
  3782  0006E0  A4D8               	btfss	status,2,c
  3783  0006E2  D084               	goto	l2919
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;inc\CANlib.h: 874: {
  3787                           ;inc\CANlib.h: 875: RXF1SIDLbits.EXIDEN = 0x01;
  3788  0006E4  010F               	movlb	15	; () banked
  3789  0006E6  8705               	bsf	5,3,b	;volatile
  3790                           
  3791                           ; BSR set to: 15
  3792                           ;inc\CANlib.h: 877: tamp = filter & 0x000000FF;
  3793  0006E8  0100               	movlb	0	; () banked
  3794  0006EA  5175               	movf	CANSetFilter@filter& (0+255),w,b
  3795  0006EC  0100               	movlb	0	; () banked
  3796  0006EE  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  3797  0006F0  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3798  0006F2  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3799  0006F4  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;inc\CANlib.h: 878: RXF1EIDL = (unsigned char) tamp;
  3803  0006F6  C07F  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  3804                           
  3805                           ; BSR set to: 0
  3806                           ;inc\CANlib.h: 880: tamp = filter & 0x0000FF00;
  3807  0006FA  0E00               	movlw	0
  3808  0006FC  0100               	movlb	0	; () banked
  3809  0006FE  1575               	andwf	CANSetFilter@filter& (0+255),w,b
  3810  000700  0100               	movlb	0	; () banked
  3811  000702  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  3812  000704  0EFF               	movlw	255
  3813  000706  0100               	movlb	0	; () banked
  3814  000708  1576               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3815  00070A  0100               	movlb	0	; () banked
  3816  00070C  6F80               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3817  00070E  0E00               	movlw	0
  3818  000710  0100               	movlb	0	; () banked
  3819  000712  1577               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3820  000714  0100               	movlb	0	; () banked
  3821  000716  6F81               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3822  000718  0E00               	movlw	0
  3823  00071A  0100               	movlb	0	; () banked
  3824  00071C  1578               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3825  00071E  0100               	movlb	0	; () banked
  3826  000720  6F82               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;inc\CANlib.h: 881: tamp = tamp >> 8;
  3830  000722  C07F  F07A         	movff	CANSetFilter@tamp,??_CANSetFilter
  3831  000726  C080  F07B         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3832  00072A  C081  F07C         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3833  00072E  C082  F07D         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3834  000732  C07B  F07A         	movff	??_CANSetFilter+1,??_CANSetFilter
  3835  000736  C07C  F07B         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3836  00073A  C07D  F07C         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3837  00073E  0100               	movlb	0	; () banked
  3838  000740  6B7D               	clrf	(??_CANSetFilter+3)& (0+255),b
  3839  000742  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  3840  000746  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3841  00074A  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3842  00074E  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;inc\CANlib.h: 882: RXF1EIDH = (unsigned char) tamp;
  3846  000752  C07F  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;inc\CANlib.h: 884: if (filter & 0x00010000)
  3850  000756  0100               	movlb	0	; () banked
  3851  000758  A177               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3852  00075A  D003               	goto	l478
  3853                           
  3854                           ; BSR set to: 0
  3855                           ;inc\CANlib.h: 885: RXF1SIDLbits.EID16 = 0x01;
  3856  00075C  010F               	movlb	15	; () banked
  3857  00075E  8105               	bsf	5,0,b	;volatile
  3858  000760  D002               	goto	l479
  3859  000762                     l478:
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;inc\CANlib.h: 886: else
  3863                           ;inc\CANlib.h: 887: RXF1SIDLbits.EID16 = 0x00;
  3864  000762  010F               	movlb	15	; () banked
  3865  000764  9105               	bcf	5,0,b	;volatile
  3866  000766                     l479:
  3867                           
  3868                           ; BSR set to: 15
  3869                           ;inc\CANlib.h: 889: if (filter & 0x00020000)
  3870  000766  0100               	movlb	0	; () banked
  3871  000768  A377               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3872  00076A  D003               	goto	l480
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;inc\CANlib.h: 890: RXF1SIDLbits.EID17 = 0x01;
  3876  00076C  010F               	movlb	15	; () banked
  3877  00076E  8305               	bsf	5,1,b	;volatile
  3878  000770  D002               	goto	l481
  3879  000772                     l480:
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;inc\CANlib.h: 891: else
  3883                           ;inc\CANlib.h: 892: RXF1SIDLbits.EID17 = 0x00;
  3884  000772  010F               	movlb	15	; () banked
  3885  000774  9305               	bcf	5,1,b	;volatile
  3886  000776                     l481:
  3887                           
  3888                           ; BSR set to: 15
  3889                           ;inc\CANlib.h: 894: if (filter & 0x00040000)
  3890  000776  0100               	movlb	0	; () banked
  3891  000778  A577               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3892  00077A  D003               	goto	l482
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;inc\CANlib.h: 895: RXF1SIDLbits.SID0 = 0x01;
  3896  00077C  010F               	movlb	15	; () banked
  3897  00077E  8B05               	bsf	5,5,b	;volatile
  3898  000780  D002               	goto	l483
  3899  000782                     l482:
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;inc\CANlib.h: 896: else
  3903                           ;inc\CANlib.h: 897: RXF1SIDLbits.SID0 = 0x00;
  3904  000782  010F               	movlb	15	; () banked
  3905  000784  9B05               	bcf	5,5,b	;volatile
  3906  000786                     l483:
  3907                           
  3908                           ; BSR set to: 15
  3909                           ;inc\CANlib.h: 899: if (filter & 0x00080000)
  3910  000786  0100               	movlb	0	; () banked
  3911  000788  A777               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  3912  00078A  D003               	goto	l484
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;inc\CANlib.h: 900: RXF1SIDLbits.SID1 = 0x01;
  3916  00078C  010F               	movlb	15	; () banked
  3917  00078E  8D05               	bsf	5,6,b	;volatile
  3918  000790  D002               	goto	l485
  3919  000792                     l484:
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;inc\CANlib.h: 901: else
  3923                           ;inc\CANlib.h: 902: RXF1SIDLbits.SID1 = 0x00;
  3924  000792  010F               	movlb	15	; () banked
  3925  000794  9D05               	bcf	5,6,b	;volatile
  3926  000796                     l485:
  3927                           
  3928                           ; BSR set to: 15
  3929                           ;inc\CANlib.h: 904: if (filter & 0x00100000)
  3930  000796  0100               	movlb	0	; () banked
  3931  000798  A977               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  3932  00079A  D003               	goto	l486
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;inc\CANlib.h: 905: RXF1SIDLbits.SID2 = 0x01 ;
  3936  00079C  010F               	movlb	15	; () banked
  3937  00079E  8F05               	bsf	5,7,b	;volatile
  3938  0007A0  D002               	goto	l2913
  3939  0007A2                     l486:
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;inc\CANlib.h: 906: else
  3943                           ;inc\CANlib.h: 907: RXF1SIDLbits.SID2 = 0x00 ;
  3944  0007A2  010F               	movlb	15	; () banked
  3945  0007A4  9F05               	bcf	5,7,b	;volatile
  3946  0007A6                     l2913:
  3947                           
  3948                           ; BSR set to: 15
  3949                           ;inc\CANlib.h: 909: tamp = (filter >> 21);
  3950  0007A6  C075  F07A         	movff	CANSetFilter@filter,??_CANSetFilter
  3951  0007AA  C076  F07B         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3952  0007AE  C077  F07C         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3953  0007B2  C078  F07D         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3954  0007B6  0E16               	movlw	22
  3955  0007B8  D006               	goto	u2960
  3956  0007BA                     u2965:
  3957  0007BA  0100               	movlb	0	; () banked
  3958  0007BC  90D8               	bcf	status,0,c
  3959  0007BE  337D               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3960  0007C0  337C               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3961  0007C2  337B               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3962  0007C4  337A               	rrcf	??_CANSetFilter& (0+255),f,b
  3963  0007C6                     u2960:
  3964  0007C6  2EE8               	decfsz	wreg,f,c
  3965  0007C8  D7F8               	goto	u2965
  3966  0007CA  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  3967  0007CE  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3968  0007D2  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3969  0007D6  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;inc\CANlib.h: 910: tamp = tamp & 0x000000FF;
  3973  0007DA  0100               	movlb	0	; () banked
  3974  0007DC  517F               	movf	CANSetFilter@tamp& (0+255),w,b
  3975  0007DE  0100               	movlb	0	; () banked
  3976  0007E0  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  3977  0007E2  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3978  0007E4  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3979  0007E6  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;inc\CANlib.h: 911: RXF1SIDH = (unsigned char) tamp;
  3983  0007E8  C07F  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3984  0007EC                     l2919:
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;inc\CANlib.h: 912: }
  3988                           ;inc\CANlib.h: 915: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  3989  0007EC  0E02               	movlw	2
  3990  0007EE  0100               	movlb	0	; () banked
  3991  0007F0  197E               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3992  0007F2  A4D8               	btfss	status,2,c
  3993  0007F4  D089               	goto	l2953
  3994                           
  3995                           ; BSR set to: 0
  3996  0007F6  0EF7               	movlw	247
  3997  0007F8  0100               	movlb	0	; () banked
  3998  0007FA  1979               	xorwf	CANSetFilter@type& (0+255),w,b
  3999  0007FC  A4D8               	btfss	status,2,c
  4000  0007FE  D084               	goto	l2953
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;inc\CANlib.h: 916: {
  4004                           ;inc\CANlib.h: 917: RXF2SIDLbits.EXIDEN = 0x01;
  4005  000800  010F               	movlb	15	; () banked
  4006  000802  8709               	bsf	9,3,b	;volatile
  4007                           
  4008                           ; BSR set to: 15
  4009                           ;inc\CANlib.h: 919: tamp = filter & 0x000000FF;
  4010  000804  0100               	movlb	0	; () banked
  4011  000806  5175               	movf	CANSetFilter@filter& (0+255),w,b
  4012  000808  0100               	movlb	0	; () banked
  4013  00080A  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  4014  00080C  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4015  00080E  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4016  000810  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;inc\CANlib.h: 920: RXF2EIDL = (unsigned char) tamp;
  4020  000812  C07F  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4021                           
  4022                           ; BSR set to: 0
  4023                           ;inc\CANlib.h: 922: tamp = filter & 0x0000FF00;
  4024  000816  0E00               	movlw	0
  4025  000818  0100               	movlb	0	; () banked
  4026  00081A  1575               	andwf	CANSetFilter@filter& (0+255),w,b
  4027  00081C  0100               	movlb	0	; () banked
  4028  00081E  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  4029  000820  0EFF               	movlw	255
  4030  000822  0100               	movlb	0	; () banked
  4031  000824  1576               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4032  000826  0100               	movlb	0	; () banked
  4033  000828  6F80               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4034  00082A  0E00               	movlw	0
  4035  00082C  0100               	movlb	0	; () banked
  4036  00082E  1577               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4037  000830  0100               	movlb	0	; () banked
  4038  000832  6F81               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4039  000834  0E00               	movlw	0
  4040  000836  0100               	movlb	0	; () banked
  4041  000838  1578               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4042  00083A  0100               	movlb	0	; () banked
  4043  00083C  6F82               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;inc\CANlib.h: 923: tamp = tamp >> 8;
  4047  00083E  C07F  F07A         	movff	CANSetFilter@tamp,??_CANSetFilter
  4048  000842  C080  F07B         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4049  000846  C081  F07C         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4050  00084A  C082  F07D         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4051  00084E  C07B  F07A         	movff	??_CANSetFilter+1,??_CANSetFilter
  4052  000852  C07C  F07B         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4053  000856  C07D  F07C         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4054  00085A  0100               	movlb	0	; () banked
  4055  00085C  6B7D               	clrf	(??_CANSetFilter+3)& (0+255),b
  4056  00085E  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  4057  000862  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4058  000866  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4059  00086A  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;inc\CANlib.h: 924: RXF2EIDH = (unsigned char) tamp;
  4063  00086E  C07F  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;inc\CANlib.h: 926: if (filter & 0x00010000)
  4067  000872  0100               	movlb	0	; () banked
  4068  000874  A177               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4069  000876  D003               	goto	l489
  4070                           
  4071                           ; BSR set to: 0
  4072                           ;inc\CANlib.h: 927: RXF2SIDLbits.EID16 = 0x01;
  4073  000878  010F               	movlb	15	; () banked
  4074  00087A  8109               	bsf	9,0,b	;volatile
  4075  00087C  D002               	goto	l490
  4076  00087E                     l489:
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;inc\CANlib.h: 928: else
  4080                           ;inc\CANlib.h: 929: RXF2SIDLbits.EID16 = 0x00;
  4081  00087E  010F               	movlb	15	; () banked
  4082  000880  9109               	bcf	9,0,b	;volatile
  4083  000882                     l490:
  4084                           
  4085                           ; BSR set to: 15
  4086                           ;inc\CANlib.h: 931: if (filter & 0x00020000)
  4087  000882  0100               	movlb	0	; () banked
  4088  000884  A377               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4089  000886  D003               	goto	l491
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;inc\CANlib.h: 932: RXF2SIDLbits.EID17 = 0x01;
  4093  000888  010F               	movlb	15	; () banked
  4094  00088A  8309               	bsf	9,1,b	;volatile
  4095  00088C  D002               	goto	l492
  4096  00088E                     l491:
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;inc\CANlib.h: 933: else
  4100                           ;inc\CANlib.h: 934: RXF2SIDLbits.EID17 = 0x00;
  4101  00088E  010F               	movlb	15	; () banked
  4102  000890  9309               	bcf	9,1,b	;volatile
  4103  000892                     l492:
  4104                           
  4105                           ; BSR set to: 15
  4106                           ;inc\CANlib.h: 936: if (filter & 0x00040000)
  4107  000892  0100               	movlb	0	; () banked
  4108  000894  A577               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4109  000896  D003               	goto	l493
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;inc\CANlib.h: 937: RXF2SIDLbits.SID0 = 0x01;
  4113  000898  010F               	movlb	15	; () banked
  4114  00089A  8B09               	bsf	9,5,b	;volatile
  4115  00089C  D002               	goto	l494
  4116  00089E                     l493:
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;inc\CANlib.h: 938: else
  4120                           ;inc\CANlib.h: 939: RXF2SIDLbits.SID0 = 0x00;
  4121  00089E  010F               	movlb	15	; () banked
  4122  0008A0  9B09               	bcf	9,5,b	;volatile
  4123  0008A2                     l494:
  4124                           
  4125                           ; BSR set to: 15
  4126                           ;inc\CANlib.h: 941: if (filter & 0x00080000)
  4127  0008A2  0100               	movlb	0	; () banked
  4128  0008A4  A777               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4129  0008A6  D003               	goto	l495
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;inc\CANlib.h: 942: RXF2SIDLbits.SID1 = 0x01;
  4133  0008A8  010F               	movlb	15	; () banked
  4134  0008AA  8D09               	bsf	9,6,b	;volatile
  4135  0008AC  D002               	goto	l496
  4136  0008AE                     l495:
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;inc\CANlib.h: 943: else
  4140                           ;inc\CANlib.h: 944: RXF2SIDLbits.SID1 = 0x00;
  4141  0008AE  010F               	movlb	15	; () banked
  4142  0008B0  9D09               	bcf	9,6,b	;volatile
  4143  0008B2                     l496:
  4144                           
  4145                           ; BSR set to: 15
  4146                           ;inc\CANlib.h: 946: if (filter & 0x00100000)
  4147  0008B2  0100               	movlb	0	; () banked
  4148  0008B4  A977               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4149  0008B6  D003               	goto	l497
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;inc\CANlib.h: 947: RXF2SIDLbits.SID2 = 0x01 ;
  4153  0008B8  010F               	movlb	15	; () banked
  4154  0008BA  8F09               	bsf	9,7,b	;volatile
  4155  0008BC  D002               	goto	l2947
  4156  0008BE                     l497:
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;inc\CANlib.h: 948: else
  4160                           ;inc\CANlib.h: 949: RXF2SIDLbits.SID2 = 0x00 ;
  4161  0008BE  010F               	movlb	15	; () banked
  4162  0008C0  9F09               	bcf	9,7,b	;volatile
  4163  0008C2                     l2947:
  4164                           
  4165                           ; BSR set to: 15
  4166                           ;inc\CANlib.h: 951: tamp = (filter >> 21);
  4167  0008C2  C075  F07A         	movff	CANSetFilter@filter,??_CANSetFilter
  4168  0008C6  C076  F07B         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4169  0008CA  C077  F07C         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4170  0008CE  C078  F07D         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4171  0008D2  0E16               	movlw	22
  4172  0008D4  D006               	goto	u3040
  4173  0008D6                     u3045:
  4174  0008D6  0100               	movlb	0	; () banked
  4175  0008D8  90D8               	bcf	status,0,c
  4176  0008DA  337D               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4177  0008DC  337C               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4178  0008DE  337B               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4179  0008E0  337A               	rrcf	??_CANSetFilter& (0+255),f,b
  4180  0008E2                     u3040:
  4181  0008E2  2EE8               	decfsz	wreg,f,c
  4182  0008E4  D7F8               	goto	u3045
  4183  0008E6  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  4184  0008EA  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4185  0008EE  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4186  0008F2  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;inc\CANlib.h: 952: tamp = tamp & 0x000000FF;
  4190  0008F6  0100               	movlb	0	; () banked
  4191  0008F8  517F               	movf	CANSetFilter@tamp& (0+255),w,b
  4192  0008FA  0100               	movlb	0	; () banked
  4193  0008FC  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  4194  0008FE  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4195  000900  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4196  000902  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;inc\CANlib.h: 953: RXF2SIDH = (unsigned char) tamp;
  4200  000904  C07F  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4201  000908                     l2953:
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;inc\CANlib.h: 954: }
  4205                           ;inc\CANlib.h: 956: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  4206  000908  0E03               	movlw	3
  4207  00090A  0100               	movlb	0	; () banked
  4208  00090C  197E               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4209  00090E  A4D8               	btfss	status,2,c
  4210  000910  D089               	goto	l2987
  4211                           
  4212                           ; BSR set to: 0
  4213  000912  0EF7               	movlw	247
  4214  000914  0100               	movlb	0	; () banked
  4215  000916  1979               	xorwf	CANSetFilter@type& (0+255),w,b
  4216  000918  A4D8               	btfss	status,2,c
  4217  00091A  D084               	goto	l2987
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;inc\CANlib.h: 957: {
  4221                           ;inc\CANlib.h: 958: RXF3SIDLbits.EXIDEN = 0x01;
  4222  00091C  010F               	movlb	15	; () banked
  4223  00091E  870D               	bsf	13,3,b	;volatile
  4224                           
  4225                           ; BSR set to: 15
  4226                           ;inc\CANlib.h: 960: tamp = filter & 0x000000FF;
  4227  000920  0100               	movlb	0	; () banked
  4228  000922  5175               	movf	CANSetFilter@filter& (0+255),w,b
  4229  000924  0100               	movlb	0	; () banked
  4230  000926  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  4231  000928  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4232  00092A  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4233  00092C  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;inc\CANlib.h: 961: RXF3EIDL = (unsigned char) tamp;
  4237  00092E  C07F  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;inc\CANlib.h: 963: tamp = filter & 0x0000FF00;
  4241  000932  0E00               	movlw	0
  4242  000934  0100               	movlb	0	; () banked
  4243  000936  1575               	andwf	CANSetFilter@filter& (0+255),w,b
  4244  000938  0100               	movlb	0	; () banked
  4245  00093A  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  4246  00093C  0EFF               	movlw	255
  4247  00093E  0100               	movlb	0	; () banked
  4248  000940  1576               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4249  000942  0100               	movlb	0	; () banked
  4250  000944  6F80               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4251  000946  0E00               	movlw	0
  4252  000948  0100               	movlb	0	; () banked
  4253  00094A  1577               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4254  00094C  0100               	movlb	0	; () banked
  4255  00094E  6F81               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4256  000950  0E00               	movlw	0
  4257  000952  0100               	movlb	0	; () banked
  4258  000954  1578               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4259  000956  0100               	movlb	0	; () banked
  4260  000958  6F82               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;inc\CANlib.h: 964: tamp = tamp >> 8;
  4264  00095A  C07F  F07A         	movff	CANSetFilter@tamp,??_CANSetFilter
  4265  00095E  C080  F07B         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4266  000962  C081  F07C         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4267  000966  C082  F07D         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4268  00096A  C07B  F07A         	movff	??_CANSetFilter+1,??_CANSetFilter
  4269  00096E  C07C  F07B         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4270  000972  C07D  F07C         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4271  000976  0100               	movlb	0	; () banked
  4272  000978  6B7D               	clrf	(??_CANSetFilter+3)& (0+255),b
  4273  00097A  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  4274  00097E  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4275  000982  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4276  000986  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;inc\CANlib.h: 965: RXF3EIDH = (unsigned char) tamp;
  4280  00098A  C07F  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;inc\CANlib.h: 967: if (filter & 0x00010000)
  4284  00098E  0100               	movlb	0	; () banked
  4285  000990  A177               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4286  000992  D003               	goto	l500
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;inc\CANlib.h: 968: RXF3SIDLbits.EID16 = 0x01;
  4290  000994  010F               	movlb	15	; () banked
  4291  000996  810D               	bsf	13,0,b	;volatile
  4292  000998  D002               	goto	l501
  4293  00099A                     l500:
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;inc\CANlib.h: 969: else
  4297                           ;inc\CANlib.h: 970: RXF3SIDLbits.EID16 = 0x00;
  4298  00099A  010F               	movlb	15	; () banked
  4299  00099C  910D               	bcf	13,0,b	;volatile
  4300  00099E                     l501:
  4301                           
  4302                           ; BSR set to: 15
  4303                           ;inc\CANlib.h: 972: if (filter & 0x00020000)
  4304  00099E  0100               	movlb	0	; () banked
  4305  0009A0  A377               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4306  0009A2  D003               	goto	l502
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;inc\CANlib.h: 973: RXF3SIDLbits.EID17 = 0x01;
  4310  0009A4  010F               	movlb	15	; () banked
  4311  0009A6  830D               	bsf	13,1,b	;volatile
  4312  0009A8  D002               	goto	l503
  4313  0009AA                     l502:
  4314                           
  4315                           ; BSR set to: 0
  4316                           ;inc\CANlib.h: 974: else
  4317                           ;inc\CANlib.h: 975: RXF3SIDLbits.EID17 = 0x00;
  4318  0009AA  010F               	movlb	15	; () banked
  4319  0009AC  930D               	bcf	13,1,b	;volatile
  4320  0009AE                     l503:
  4321                           
  4322                           ; BSR set to: 15
  4323                           ;inc\CANlib.h: 977: if (filter & 0x00040000)
  4324  0009AE  0100               	movlb	0	; () banked
  4325  0009B0  A577               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4326  0009B2  D003               	goto	l504
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;inc\CANlib.h: 978: RXF3SIDLbits.SID0 = 0x01;
  4330  0009B4  010F               	movlb	15	; () banked
  4331  0009B6  8B0D               	bsf	13,5,b	;volatile
  4332  0009B8  D002               	goto	l505
  4333  0009BA                     l504:
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;inc\CANlib.h: 979: else
  4337                           ;inc\CANlib.h: 980: RXF3SIDLbits.SID0 = 0x00;
  4338  0009BA  010F               	movlb	15	; () banked
  4339  0009BC  9B0D               	bcf	13,5,b	;volatile
  4340  0009BE                     l505:
  4341                           
  4342                           ; BSR set to: 15
  4343                           ;inc\CANlib.h: 982: if (filter & 0x00080000)
  4344  0009BE  0100               	movlb	0	; () banked
  4345  0009C0  A777               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4346  0009C2  D003               	goto	l506
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;inc\CANlib.h: 983: RXF3SIDLbits.SID1 = 0x01;
  4350  0009C4  010F               	movlb	15	; () banked
  4351  0009C6  8D0D               	bsf	13,6,b	;volatile
  4352  0009C8  D002               	goto	l507
  4353  0009CA                     l506:
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;inc\CANlib.h: 984: else
  4357                           ;inc\CANlib.h: 985: RXF3SIDLbits.SID1 = 0x00;
  4358  0009CA  010F               	movlb	15	; () banked
  4359  0009CC  9D0D               	bcf	13,6,b	;volatile
  4360  0009CE                     l507:
  4361                           
  4362                           ; BSR set to: 15
  4363                           ;inc\CANlib.h: 987: if (filter & 0x00100000)
  4364  0009CE  0100               	movlb	0	; () banked
  4365  0009D0  A977               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4366  0009D2  D003               	goto	l508
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;inc\CANlib.h: 988: RXF3SIDLbits.SID2 = 0x01 ;
  4370  0009D4  010F               	movlb	15	; () banked
  4371  0009D6  8F0D               	bsf	13,7,b	;volatile
  4372  0009D8  D002               	goto	l2981
  4373  0009DA                     l508:
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;inc\CANlib.h: 989: else
  4377                           ;inc\CANlib.h: 990: RXF3SIDLbits.SID2 = 0x00 ;
  4378  0009DA  010F               	movlb	15	; () banked
  4379  0009DC  9F0D               	bcf	13,7,b	;volatile
  4380  0009DE                     l2981:
  4381                           
  4382                           ; BSR set to: 15
  4383                           ;inc\CANlib.h: 992: tamp = (filter >> 21);
  4384  0009DE  C075  F07A         	movff	CANSetFilter@filter,??_CANSetFilter
  4385  0009E2  C076  F07B         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4386  0009E6  C077  F07C         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4387  0009EA  C078  F07D         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4388  0009EE  0E16               	movlw	22
  4389  0009F0  D006               	goto	u3120
  4390  0009F2                     u3125:
  4391  0009F2  0100               	movlb	0	; () banked
  4392  0009F4  90D8               	bcf	status,0,c
  4393  0009F6  337D               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4394  0009F8  337C               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4395  0009FA  337B               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4396  0009FC  337A               	rrcf	??_CANSetFilter& (0+255),f,b
  4397  0009FE                     u3120:
  4398  0009FE  2EE8               	decfsz	wreg,f,c
  4399  000A00  D7F8               	goto	u3125
  4400  000A02  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  4401  000A06  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4402  000A0A  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4403  000A0E  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;inc\CANlib.h: 993: tamp = tamp & 0x000000FF;
  4407  000A12  0100               	movlb	0	; () banked
  4408  000A14  517F               	movf	CANSetFilter@tamp& (0+255),w,b
  4409  000A16  0100               	movlb	0	; () banked
  4410  000A18  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  4411  000A1A  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4412  000A1C  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4413  000A1E  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;inc\CANlib.h: 994: RXF3SIDH = (unsigned char) tamp;
  4417  000A20  C07F  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4418  000A24                     l2987:
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;inc\CANlib.h: 995: }
  4422                           ;inc\CANlib.h: 997: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  4423  000A24  0E04               	movlw	4
  4424  000A26  0100               	movlb	0	; () banked
  4425  000A28  197E               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4426  000A2A  A4D8               	btfss	status,2,c
  4427  000A2C  D089               	goto	l3021
  4428                           
  4429                           ; BSR set to: 0
  4430  000A2E  0EF7               	movlw	247
  4431  000A30  0100               	movlb	0	; () banked
  4432  000A32  1979               	xorwf	CANSetFilter@type& (0+255),w,b
  4433  000A34  A4D8               	btfss	status,2,c
  4434  000A36  D084               	goto	l3021
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;inc\CANlib.h: 998: {
  4438                           ;inc\CANlib.h: 999: RXF4SIDLbits.EXIDEN = 0x01;
  4439  000A38  010F               	movlb	15	; () banked
  4440  000A3A  8711               	bsf	17,3,b	;volatile
  4441                           
  4442                           ; BSR set to: 15
  4443                           ;inc\CANlib.h: 1001: tamp = filter & 0x000000FF;
  4444  000A3C  0100               	movlb	0	; () banked
  4445  000A3E  5175               	movf	CANSetFilter@filter& (0+255),w,b
  4446  000A40  0100               	movlb	0	; () banked
  4447  000A42  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  4448  000A44  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4449  000A46  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4450  000A48  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;inc\CANlib.h: 1002: RXF4EIDL = (unsigned char) tamp;
  4454  000A4A  C07F  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;inc\CANlib.h: 1004: tamp = filter & 0x0000FF00;
  4458  000A4E  0E00               	movlw	0
  4459  000A50  0100               	movlb	0	; () banked
  4460  000A52  1575               	andwf	CANSetFilter@filter& (0+255),w,b
  4461  000A54  0100               	movlb	0	; () banked
  4462  000A56  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  4463  000A58  0EFF               	movlw	255
  4464  000A5A  0100               	movlb	0	; () banked
  4465  000A5C  1576               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4466  000A5E  0100               	movlb	0	; () banked
  4467  000A60  6F80               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4468  000A62  0E00               	movlw	0
  4469  000A64  0100               	movlb	0	; () banked
  4470  000A66  1577               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4471  000A68  0100               	movlb	0	; () banked
  4472  000A6A  6F81               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4473  000A6C  0E00               	movlw	0
  4474  000A6E  0100               	movlb	0	; () banked
  4475  000A70  1578               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4476  000A72  0100               	movlb	0	; () banked
  4477  000A74  6F82               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4478                           
  4479                           ; BSR set to: 0
  4480                           ;inc\CANlib.h: 1005: tamp = tamp >> 8;
  4481  000A76  C07F  F07A         	movff	CANSetFilter@tamp,??_CANSetFilter
  4482  000A7A  C080  F07B         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4483  000A7E  C081  F07C         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4484  000A82  C082  F07D         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4485  000A86  C07B  F07A         	movff	??_CANSetFilter+1,??_CANSetFilter
  4486  000A8A  C07C  F07B         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4487  000A8E  C07D  F07C         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4488  000A92  0100               	movlb	0	; () banked
  4489  000A94  6B7D               	clrf	(??_CANSetFilter+3)& (0+255),b
  4490  000A96  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  4491  000A9A  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4492  000A9E  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4493  000AA2  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;inc\CANlib.h: 1006: RXF4EIDH = (unsigned char) tamp;
  4497  000AA6  C07F  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;inc\CANlib.h: 1008: if (filter & 0x00010000)
  4501  000AAA  0100               	movlb	0	; () banked
  4502  000AAC  A177               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4503  000AAE  D003               	goto	l511
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;inc\CANlib.h: 1009: RXF4SIDLbits.EID16 = 0x01;
  4507  000AB0  010F               	movlb	15	; () banked
  4508  000AB2  8111               	bsf	17,0,b	;volatile
  4509  000AB4  D002               	goto	l512
  4510  000AB6                     l511:
  4511                           
  4512                           ; BSR set to: 0
  4513                           ;inc\CANlib.h: 1010: else
  4514                           ;inc\CANlib.h: 1011: RXF4SIDLbits.EID16 = 0x00;
  4515  000AB6  010F               	movlb	15	; () banked
  4516  000AB8  9111               	bcf	17,0,b	;volatile
  4517  000ABA                     l512:
  4518                           
  4519                           ; BSR set to: 15
  4520                           ;inc\CANlib.h: 1013: if (filter & 0x00020000)
  4521  000ABA  0100               	movlb	0	; () banked
  4522  000ABC  A377               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4523  000ABE  D003               	goto	l513
  4524                           
  4525                           ; BSR set to: 0
  4526                           ;inc\CANlib.h: 1014: RXF4SIDLbits.EID17 = 0x01;
  4527  000AC0  010F               	movlb	15	; () banked
  4528  000AC2  8311               	bsf	17,1,b	;volatile
  4529  000AC4  D002               	goto	l514
  4530  000AC6                     l513:
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;inc\CANlib.h: 1015: else
  4534                           ;inc\CANlib.h: 1016: RXF4SIDLbits.EID17 = 0x00;
  4535  000AC6  010F               	movlb	15	; () banked
  4536  000AC8  9311               	bcf	17,1,b	;volatile
  4537  000ACA                     l514:
  4538                           
  4539                           ; BSR set to: 15
  4540                           ;inc\CANlib.h: 1018: if (filter & 0x00040000)
  4541  000ACA  0100               	movlb	0	; () banked
  4542  000ACC  A577               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4543  000ACE  D003               	goto	l515
  4544                           
  4545                           ; BSR set to: 0
  4546                           ;inc\CANlib.h: 1019: RXF4SIDLbits.SID0 = 0x01;
  4547  000AD0  010F               	movlb	15	; () banked
  4548  000AD2  8B11               	bsf	17,5,b	;volatile
  4549  000AD4  D002               	goto	l516
  4550  000AD6                     l515:
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;inc\CANlib.h: 1020: else
  4554                           ;inc\CANlib.h: 1021: RXF4SIDLbits.SID0 = 0x00;
  4555  000AD6  010F               	movlb	15	; () banked
  4556  000AD8  9B11               	bcf	17,5,b	;volatile
  4557  000ADA                     l516:
  4558                           
  4559                           ; BSR set to: 15
  4560                           ;inc\CANlib.h: 1023: if (filter & 0x00080000)
  4561  000ADA  0100               	movlb	0	; () banked
  4562  000ADC  A777               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4563  000ADE  D003               	goto	l517
  4564                           
  4565                           ; BSR set to: 0
  4566                           ;inc\CANlib.h: 1024: RXF4SIDLbits.SID1 = 0x01;
  4567  000AE0  010F               	movlb	15	; () banked
  4568  000AE2  8D11               	bsf	17,6,b	;volatile
  4569  000AE4  D002               	goto	l518
  4570  000AE6                     l517:
  4571                           
  4572                           ; BSR set to: 0
  4573                           ;inc\CANlib.h: 1025: else
  4574                           ;inc\CANlib.h: 1026: RXF4SIDLbits.SID1 = 0x00;
  4575  000AE6  010F               	movlb	15	; () banked
  4576  000AE8  9D11               	bcf	17,6,b	;volatile
  4577  000AEA                     l518:
  4578                           
  4579                           ; BSR set to: 15
  4580                           ;inc\CANlib.h: 1028: if (filter & 0x00100000)
  4581  000AEA  0100               	movlb	0	; () banked
  4582  000AEC  A977               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4583  000AEE  D003               	goto	l519
  4584                           
  4585                           ; BSR set to: 0
  4586                           ;inc\CANlib.h: 1029: RXF4SIDLbits.SID2 = 0x01 ;
  4587  000AF0  010F               	movlb	15	; () banked
  4588  000AF2  8F11               	bsf	17,7,b	;volatile
  4589  000AF4  D002               	goto	l3015
  4590  000AF6                     l519:
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;inc\CANlib.h: 1030: else
  4594                           ;inc\CANlib.h: 1031: RXF4SIDLbits.SID2 = 0x00 ;
  4595  000AF6  010F               	movlb	15	; () banked
  4596  000AF8  9F11               	bcf	17,7,b	;volatile
  4597  000AFA                     l3015:
  4598                           
  4599                           ; BSR set to: 15
  4600                           ;inc\CANlib.h: 1033: tamp = (filter >> 21);
  4601  000AFA  C075  F07A         	movff	CANSetFilter@filter,??_CANSetFilter
  4602  000AFE  C076  F07B         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4603  000B02  C077  F07C         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4604  000B06  C078  F07D         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4605  000B0A  0E16               	movlw	22
  4606  000B0C  D006               	goto	u3200
  4607  000B0E                     u3205:
  4608  000B0E  0100               	movlb	0	; () banked
  4609  000B10  90D8               	bcf	status,0,c
  4610  000B12  337D               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4611  000B14  337C               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4612  000B16  337B               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4613  000B18  337A               	rrcf	??_CANSetFilter& (0+255),f,b
  4614  000B1A                     u3200:
  4615  000B1A  2EE8               	decfsz	wreg,f,c
  4616  000B1C  D7F8               	goto	u3205
  4617  000B1E  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  4618  000B22  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4619  000B26  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4620  000B2A  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;inc\CANlib.h: 1034: tamp = tamp & 0x000000FF;
  4624  000B2E  0100               	movlb	0	; () banked
  4625  000B30  517F               	movf	CANSetFilter@tamp& (0+255),w,b
  4626  000B32  0100               	movlb	0	; () banked
  4627  000B34  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  4628  000B36  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4629  000B38  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4630  000B3A  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4631                           
  4632                           ; BSR set to: 0
  4633                           ;inc\CANlib.h: 1035: RXF4SIDH = (unsigned char) tamp;
  4634  000B3C  C07F  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4635  000B40                     l3021:
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;inc\CANlib.h: 1036: }
  4639                           ;inc\CANlib.h: 1038: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  4640  000B40  0E05               	movlw	5
  4641  000B42  0100               	movlb	0	; () banked
  4642  000B44  197E               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4643  000B46  A4D8               	btfss	status,2,c
  4644  000B48  0012               	return	
  4645                           
  4646                           ; BSR set to: 0
  4647  000B4A  0EF7               	movlw	247
  4648  000B4C  0100               	movlb	0	; () banked
  4649  000B4E  1979               	xorwf	CANSetFilter@type& (0+255),w,b
  4650  000B50  A4D8               	btfss	status,2,c
  4651  000B52  0012               	return	
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;inc\CANlib.h: 1039: {
  4655                           ;inc\CANlib.h: 1040: RXF5SIDLbits.EXIDEN = 0x01;
  4656  000B54  010F               	movlb	15	; () banked
  4657  000B56  8715               	bsf	21,3,b	;volatile
  4658                           
  4659                           ; BSR set to: 15
  4660                           ;inc\CANlib.h: 1042: tamp = filter & 0x000000FF;
  4661  000B58  0100               	movlb	0	; () banked
  4662  000B5A  5175               	movf	CANSetFilter@filter& (0+255),w,b
  4663  000B5C  0100               	movlb	0	; () banked
  4664  000B5E  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  4665  000B60  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4666  000B62  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4667  000B64  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;inc\CANlib.h: 1043: RXF5EIDL = (unsigned char) tamp;
  4671  000B66  C07F  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;inc\CANlib.h: 1045: tamp = filter & 0x0000FF00;
  4675  000B6A  0E00               	movlw	0
  4676  000B6C  0100               	movlb	0	; () banked
  4677  000B6E  1575               	andwf	CANSetFilter@filter& (0+255),w,b
  4678  000B70  0100               	movlb	0	; () banked
  4679  000B72  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  4680  000B74  0EFF               	movlw	255
  4681  000B76  0100               	movlb	0	; () banked
  4682  000B78  1576               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4683  000B7A  0100               	movlb	0	; () banked
  4684  000B7C  6F80               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4685  000B7E  0E00               	movlw	0
  4686  000B80  0100               	movlb	0	; () banked
  4687  000B82  1577               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4688  000B84  0100               	movlb	0	; () banked
  4689  000B86  6F81               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4690  000B88  0E00               	movlw	0
  4691  000B8A  0100               	movlb	0	; () banked
  4692  000B8C  1578               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4693  000B8E  0100               	movlb	0	; () banked
  4694  000B90  6F82               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;inc\CANlib.h: 1046: tamp = tamp >> 8;
  4698  000B92  C07F  F07A         	movff	CANSetFilter@tamp,??_CANSetFilter
  4699  000B96  C080  F07B         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4700  000B9A  C081  F07C         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4701  000B9E  C082  F07D         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4702  000BA2  C07B  F07A         	movff	??_CANSetFilter+1,??_CANSetFilter
  4703  000BA6  C07C  F07B         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4704  000BAA  C07D  F07C         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4705  000BAE  0100               	movlb	0	; () banked
  4706  000BB0  6B7D               	clrf	(??_CANSetFilter+3)& (0+255),b
  4707  000BB2  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  4708  000BB6  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4709  000BBA  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4710  000BBE  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;inc\CANlib.h: 1047: RXF5EIDH = (unsigned char) tamp;
  4714  000BC2  C07F  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;inc\CANlib.h: 1049: if (filter & 0x00010000)
  4718  000BC6  0100               	movlb	0	; () banked
  4719  000BC8  A177               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4720  000BCA  D003               	goto	l522
  4721                           
  4722                           ; BSR set to: 0
  4723                           ;inc\CANlib.h: 1050: RXF5SIDLbits.EID16 = 0x01;
  4724  000BCC  010F               	movlb	15	; () banked
  4725  000BCE  8115               	bsf	21,0,b	;volatile
  4726  000BD0  D002               	goto	l523
  4727  000BD2                     l522:
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;inc\CANlib.h: 1051: else
  4731                           ;inc\CANlib.h: 1052: RXF5SIDLbits.EID16 = 0x00;
  4732  000BD2  010F               	movlb	15	; () banked
  4733  000BD4  9115               	bcf	21,0,b	;volatile
  4734  000BD6                     l523:
  4735                           
  4736                           ; BSR set to: 15
  4737                           ;inc\CANlib.h: 1054: if (filter & 0x00020000)
  4738  000BD6  0100               	movlb	0	; () banked
  4739  000BD8  A377               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4740  000BDA  D003               	goto	l524
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;inc\CANlib.h: 1055: RXF5SIDLbits.EID17 = 0x01;
  4744  000BDC  010F               	movlb	15	; () banked
  4745  000BDE  8315               	bsf	21,1,b	;volatile
  4746  000BE0  D002               	goto	l525
  4747  000BE2                     l524:
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;inc\CANlib.h: 1056: else
  4751                           ;inc\CANlib.h: 1057: RXF5SIDLbits.EID17 = 0x00;
  4752  000BE2  010F               	movlb	15	; () banked
  4753  000BE4  9315               	bcf	21,1,b	;volatile
  4754  000BE6                     l525:
  4755                           
  4756                           ; BSR set to: 15
  4757                           ;inc\CANlib.h: 1059: if (filter & 0x00040000)
  4758  000BE6  0100               	movlb	0	; () banked
  4759  000BE8  A577               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4760  000BEA  D003               	goto	l526
  4761                           
  4762                           ; BSR set to: 0
  4763                           ;inc\CANlib.h: 1060: RXF5SIDLbits.SID0 = 0x01;
  4764  000BEC  010F               	movlb	15	; () banked
  4765  000BEE  8B15               	bsf	21,5,b	;volatile
  4766  000BF0  D002               	goto	l527
  4767  000BF2                     l526:
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;inc\CANlib.h: 1061: else
  4771                           ;inc\CANlib.h: 1062: RXF5SIDLbits.SID0 = 0x00;
  4772  000BF2  010F               	movlb	15	; () banked
  4773  000BF4  9B15               	bcf	21,5,b	;volatile
  4774  000BF6                     l527:
  4775                           
  4776                           ; BSR set to: 15
  4777                           ;inc\CANlib.h: 1064: if (filter & 0x00080000)
  4778  000BF6  0100               	movlb	0	; () banked
  4779  000BF8  A777               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4780  000BFA  D003               	goto	l528
  4781                           
  4782                           ; BSR set to: 0
  4783                           ;inc\CANlib.h: 1065: RXF5SIDLbits.SID1 = 0x01;
  4784  000BFC  010F               	movlb	15	; () banked
  4785  000BFE  8D15               	bsf	21,6,b	;volatile
  4786  000C00  D002               	goto	l529
  4787  000C02                     l528:
  4788                           
  4789                           ; BSR set to: 0
  4790                           ;inc\CANlib.h: 1066: else
  4791                           ;inc\CANlib.h: 1067: RXF5SIDLbits.SID1 = 0x00;
  4792  000C02  010F               	movlb	15	; () banked
  4793  000C04  9D15               	bcf	21,6,b	;volatile
  4794  000C06                     l529:
  4795                           
  4796                           ; BSR set to: 15
  4797                           ;inc\CANlib.h: 1069: if (filter & 0x00100000)
  4798  000C06  0100               	movlb	0	; () banked
  4799  000C08  A977               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4800  000C0A  D003               	goto	l530
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;inc\CANlib.h: 1070: RXF5SIDLbits.SID2 = 0x01 ;
  4804  000C0C  010F               	movlb	15	; () banked
  4805  000C0E  8F15               	bsf	21,7,b	;volatile
  4806  000C10  D002               	goto	l3049
  4807  000C12                     l530:
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;inc\CANlib.h: 1071: else
  4811                           ;inc\CANlib.h: 1072: RXF5SIDLbits.SID2 = 0x00 ;
  4812  000C12  010F               	movlb	15	; () banked
  4813  000C14  9F15               	bcf	21,7,b	;volatile
  4814  000C16                     l3049:
  4815                           
  4816                           ; BSR set to: 15
  4817                           ;inc\CANlib.h: 1074: tamp = (filter >> 21);
  4818  000C16  C075  F07A         	movff	CANSetFilter@filter,??_CANSetFilter
  4819  000C1A  C076  F07B         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4820  000C1E  C077  F07C         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4821  000C22  C078  F07D         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4822  000C26  0E16               	movlw	22
  4823  000C28  D006               	goto	u3280
  4824  000C2A                     u3285:
  4825  000C2A  0100               	movlb	0	; () banked
  4826  000C2C  90D8               	bcf	status,0,c
  4827  000C2E  337D               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4828  000C30  337C               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4829  000C32  337B               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4830  000C34  337A               	rrcf	??_CANSetFilter& (0+255),f,b
  4831  000C36                     u3280:
  4832  000C36  2EE8               	decfsz	wreg,f,c
  4833  000C38  D7F8               	goto	u3285
  4834  000C3A  C07A  F07F         	movff	??_CANSetFilter,CANSetFilter@tamp
  4835  000C3E  C07B  F080         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4836  000C42  C07C  F081         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4837  000C46  C07D  F082         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4838                           
  4839                           ; BSR set to: 0
  4840                           ;inc\CANlib.h: 1075: tamp = tamp & 0x000000FF;
  4841  000C4A  0100               	movlb	0	; () banked
  4842  000C4C  517F               	movf	CANSetFilter@tamp& (0+255),w,b
  4843  000C4E  0100               	movlb	0	; () banked
  4844  000C50  6F7F               	movwf	CANSetFilter@tamp& (0+255),b
  4845  000C52  6B80               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4846  000C54  6B81               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4847  000C56  6B82               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4848                           
  4849                           ; BSR set to: 0
  4850                           ;inc\CANlib.h: 1076: RXF5SIDH = (unsigned char) tamp;
  4851  000C58  C07F  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4852  000C5C  0012               	return	
  4853  000C5E                     __end_of_CANSetFilter:
  4854                           	opt stack 0
  4855                           tblptru	equ	0xFF8
  4856                           tblptrh	equ	0xFF7
  4857                           tblptrl	equ	0xFF6
  4858                           tablat	equ	0xFF5
  4859                           prodh	equ	0xFF4
  4860                           prodl	equ	0xFF3
  4861                           intcon	equ	0xFF2
  4862                           postinc0	equ	0xFEE
  4863                           wreg	equ	0xFE8
  4864                           indf1	equ	0xFE7
  4865                           postinc1	equ	0xFE6
  4866                           postdec1	equ	0xFE5
  4867                           fsr1h	equ	0xFE2
  4868                           fsr1l	equ	0xFE1
  4869                           indf2	equ	0xFDF
  4870                           postinc2	equ	0xFDE
  4871                           fsr2h	equ	0xFDA
  4872                           fsr2l	equ	0xFD9
  4873                           status	equ	0xFD8
  4874                           
  4875 ;; *************** function _CANOperationMode *****************
  4876 ;; Defined at:
  4877 ;;		line 207 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;  mode            1    wreg     enum E16838
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;  mode            1   21[BANK0 ] enum E16838
  4882 ;; Return value:  Size  Location     Type
  4883 ;;		None               void
  4884 ;; Registers used:
  4885 ;;		wreg, status,2, status,0
  4886 ;; Tracked objects:
  4887 ;;		On entry : 0/0
  4888 ;;		On exit  : 0/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4891 ;;      Params:         0       0       0       0
  4892 ;;      Locals:         0       1       0       0
  4893 ;;      Temps:          0       0       0       0
  4894 ;;      Totals:         0       1       0       0
  4895 ;;Total ram usage:        1 bytes
  4896 ;; Hardware stack levels used:    1
  4897 ;; Hardware stack levels required when called:    5
  4898 ;; This function calls:
  4899 ;;		Nothing
  4900 ;; This function is called by:
  4901 ;;		_CANInitialize
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905                           	psect	text10
  4906  00259A                     __ptext10:
  4907                           	opt stack 0
  4908  00259A                     _CANOperationMode:
  4909                           	opt stack 23
  4910                           
  4911                           ; BSR set to: 0
  4912                           ;incstack = 0
  4913                           ;CANOperationMode@mode stored from wreg
  4914  00259A  0100               	movlb	0	; () banked
  4915  00259C  6F75               	movwf	CANOperationMode@mode& (0+255),b
  4916                           
  4917                           ;inc\CANlib.h: 209: CANCON = mode;
  4918  00259E  C075  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  4919  0025A2                     l2645:
  4920  0025A2  506E               	movf	3950,w,c	;volatile
  4921  0025A4  0BE0               	andlw	224
  4922  0025A6  0100               	movlb	0	; () banked
  4923  0025A8  1975               	xorwf	CANOperationMode@mode& (0+255),w,b
  4924  0025AA  B4D8               	btfsc	status,2,c
  4925  0025AC  0012               	return	
  4926  0025AE  D7F9               	goto	l2645
  4927  0025B0                     __end_of_CANOperationMode:
  4928                           	opt stack 0
  4929                           tblptru	equ	0xFF8
  4930                           tblptrh	equ	0xFF7
  4931                           tblptrl	equ	0xFF6
  4932                           tablat	equ	0xFF5
  4933                           prodh	equ	0xFF4
  4934                           prodl	equ	0xFF3
  4935                           intcon	equ	0xFF2
  4936                           postinc0	equ	0xFEE
  4937                           wreg	equ	0xFE8
  4938                           indf1	equ	0xFE7
  4939                           postinc1	equ	0xFE6
  4940                           postdec1	equ	0xFE5
  4941                           fsr1h	equ	0xFE2
  4942                           fsr1l	equ	0xFE1
  4943                           indf2	equ	0xFDF
  4944                           postinc2	equ	0xFDE
  4945                           fsr2h	equ	0xFDA
  4946                           fsr2l	equ	0xFD9
  4947                           status	equ	0xFD8
  4948                           
  4949 ;; *************** function _can_interpreter *****************
  4950 ;; Defined at:
  4951 ;;		line 185 in file "CanToSerial.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;		None
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;		None
  4956 ;; Return value:  Size  Location     Type
  4957 ;;		None               void
  4958 ;; Registers used:
  4959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4965 ;;      Params:         0       0       0       0
  4966 ;;      Locals:         0       0       0       0
  4967 ;;      Temps:          0       8       0       0
  4968 ;;      Totals:         0       8       0       0
  4969 ;;Total ram usage:        8 bytes
  4970 ;; Hardware stack levels used:    1
  4971 ;; Hardware stack levels required when called:    6
  4972 ;; This function calls:
  4973 ;;		_CANisTxReady
  4974 ;;		_CANsendMessage
  4975 ;; This function is called by:
  4976 ;;		_main
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           	psect	text11
  4981  001C94                     __ptext11:
  4982                           	opt stack 0
  4983  001C94                     _can_interpreter:
  4984                           	opt stack 24
  4985                           
  4986                           ;CanToSerial.c: 187: if (id == 0b00000000000000000000000000010) {
  4987                           
  4988                           ; BSR set to: 0
  4989                           ;incstack = 0
  4990  001C94  0E02               	movlw	2
  4991  001C96  0100               	movlb	0	; () banked
  4992  001C98  1992               	xorwf	_id& (0+255),w,b	;volatile
  4993  001C9A  0100               	movlb	0	; () banked
  4994  001C9C  1193               	iorwf	(_id+1)& (0+255),w,b	;volatile
  4995  001C9E  0100               	movlb	0	; () banked
  4996  001CA0  1194               	iorwf	(_id+2)& (0+255),w,b	;volatile
  4997  001CA2  0100               	movlb	0	; () banked
  4998  001CA4  1195               	iorwf	(_id+3)& (0+255),w,b	;volatile
  4999  001CA6  A4D8               	btfss	status,2,c
  5000  001CA8  D09B               	goto	l3677
  5001                           
  5002                           ; BSR set to: 0
  5003                           ;CanToSerial.c: 188: LATAbits.LATA1 = 0;
  5004  001CAA  9289               	bcf	3977,1,c	;volatile
  5005                           
  5006                           ;CanToSerial.c: 189: if (RTR_Flag == 1) {
  5007  001CAC  A049               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
  5008  001CAE  D02B               	goto	l3661
  5009                           
  5010                           ; BSR set to: 0
  5011                           ;CanToSerial.c: 190: previousTimeCounter = timeCounter;
  5012  001CB0  C09A  F096         	movff	_timeCounter,_previousTimeCounter	;volatile
  5013  001CB4  C09B  F097         	movff	_timeCounter+1,_previousTimeCounter+1	;volatile
  5014  001CB8  C09C  F098         	movff	_timeCounter+2,_previousTimeCounter+2	;volatile
  5015  001CBC  C09D  F099         	movff	_timeCounter+3,_previousTimeCounter+3	;volatile
  5016                           
  5017                           ; BSR set to: 0
  5018                           ;CanToSerial.c: 191: data[0] = 0x03;
  5019  001CC0  0E03               	movlw	3
  5020  001CC2  6E1A               	movwf	_data,c
  5021  001CC4                     l3649:
  5022  001CC4  ECAB  F012         	call	_CANisTxReady	;wreg free
  5023  001CC8  06E8               	decf	wreg,f,c
  5024  001CCA  A4D8               	btfss	status,2,c
  5025  001CCC  D7FB               	goto	l3649
  5026                           
  5027                           ;CanToSerial.c: 193: CANsendMessage(0b00000000000000000000000000010, data, 8, CAN_CONFIG
      +                          _STD_MSG & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  5028  001CCE  0E02               	movlw	2
  5029  001CD0  0100               	movlb	0	; () banked
  5030  001CD2  6F75               	movwf	CANsendMessage@identifier& (0+255),b
  5031  001CD4  0E00               	movlw	0
  5032  001CD6  6F76               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  5033  001CD8  0E00               	movlw	0
  5034  001CDA  6F77               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  5035  001CDC  0E00               	movlw	0
  5036  001CDE  6F78               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  5037  001CE0  0E1A               	movlw	low _data
  5038  001CE2  0100               	movlb	0	; () banked
  5039  001CE4  6F79               	movwf	CANsendMessage@data& (0+255),b
  5040  001CE6  0E00               	movlw	high _data
  5041  001CE8  0100               	movlb	0	; () banked
  5042  001CEA  6F7A               	movwf	(CANsendMessage@data+1)& (0+255),b
  5043  001CEC  0E08               	movlw	8
  5044  001CEE  0100               	movlb	0	; () banked
  5045  001CF0  6F7B               	movwf	CANsendMessage@dataLength& (0+255),b
  5046  001CF2  0EBC               	movlw	188
  5047  001CF4  0100               	movlb	0	; () banked
  5048  001CF6  6F7C               	movwf	CANsendMessage@flags& (0+255),b
  5049  001CF8  EC2F  F006         	call	_CANsendMessage	;wreg free
  5050                           
  5051                           ;CanToSerial.c: 194: LATDbits.LATD4 = 1;
  5052  001CFC  888C               	bsf	3980,4,c	;volatile
  5053                           
  5054                           ;CanToSerial.c: 195: LATDbits.LATD5 = 0;
  5055  001CFE  9A8C               	bcf	3980,5,c	;volatile
  5056                           
  5057                           ;CanToSerial.c: 196: LATDbits.LATD6 = 0;
  5058  001D00  9C8C               	bcf	3980,6,c	;volatile
  5059                           
  5060                           ;CanToSerial.c: 197: LATDbits.LATD2 = 1;
  5061  001D02  848C               	bsf	3980,2,c	;volatile
  5062                           
  5063                           ;CanToSerial.c: 198: } else {
  5064  001D04  D00B               	goto	l3669
  5065  001D06                     l3661:
  5066                           
  5067                           ;CanToSerial.c: 199: if (data[0] == 0x01) {
  5068  001D06  041A               	decf	_data,w,c
  5069  001D08  A4D8               	btfss	status,2,c
  5070  001D0A  D002               	goto	l3665
  5071                           
  5072                           ;CanToSerial.c: 200: LATDbits.LATD5 = 1;
  5073  001D0C  8A8C               	bsf	3980,5,c	;volatile
  5074                           
  5075                           ;CanToSerial.c: 201: PORTCbits.RC5 = 0;
  5076  001D0E  9A82               	bcf	3970,5,c	;volatile
  5077  001D10                     l3665:
  5078                           
  5079                           ;CanToSerial.c: 202: }
  5080                           ;CanToSerial.c: 203: if (data[0] == 0x02) {
  5081  001D10  0E02               	movlw	2
  5082  001D12  181A               	xorwf	_data,w,c
  5083  001D14  A4D8               	btfss	status,2,c
  5084  001D16  D002               	goto	l3669
  5085                           
  5086                           ;CanToSerial.c: 204: LATDbits.LATD6 = 1;
  5087  001D18  8C8C               	bsf	3980,6,c	;volatile
  5088                           
  5089                           ;CanToSerial.c: 205: PORTCbits.RC4 = 0;
  5090  001D1A  9882               	bcf	3970,4,c	;volatile
  5091  001D1C                     l3669:
  5092                           
  5093                           ;CanToSerial.c: 206: }
  5094                           ;CanToSerial.c: 207: }
  5095                           ;CanToSerial.c: 208: if (previousTimeCounter - timeCounter > 450) {
  5096  001D1C  C09A  F085         	movff	_timeCounter,??_can_interpreter	;volatile
  5097  001D20  C09B  F086         	movff	_timeCounter+1,??_can_interpreter+1	;volatile
  5098  001D24  C09C  F087         	movff	_timeCounter+2,??_can_interpreter+2	;volatile
  5099  001D28  C09D  F088         	movff	_timeCounter+3,??_can_interpreter+3	;volatile
  5100  001D2C  0100               	movlb	0	; () banked
  5101  001D2E  1F85               	comf	??_can_interpreter& (0+255),f,b
  5102  001D30  1F86               	comf	(??_can_interpreter+1)& (0+255),f,b
  5103  001D32  1F87               	comf	(??_can_interpreter+2)& (0+255),f,b
  5104  001D34  1F88               	comf	(??_can_interpreter+3)& (0+255),f,b
  5105  001D36  2B85               	incf	??_can_interpreter& (0+255),f,b
  5106  001D38  0E00               	movlw	0
  5107  001D3A  2386               	addwfc	(??_can_interpreter+1)& (0+255),f,b
  5108  001D3C  2387               	addwfc	(??_can_interpreter+2)& (0+255),f,b
  5109  001D3E  2388               	addwfc	(??_can_interpreter+3)& (0+255),f,b
  5110  001D40  0100               	movlb	0	; () banked
  5111  001D42  5196               	movf	_previousTimeCounter& (0+255),w,b
  5112  001D44  0100               	movlb	0	; () banked
  5113  001D46  2585               	addwf	??_can_interpreter& (0+255),w,b
  5114  001D48  0100               	movlb	0	; () banked
  5115  001D4A  6F89               	movwf	(??_can_interpreter+4)& (0+255),b
  5116  001D4C  0100               	movlb	0	; () banked
  5117  001D4E  5197               	movf	(_previousTimeCounter+1)& (0+255),w,b
  5118  001D50  0100               	movlb	0	; () banked
  5119  001D52  2186               	addwfc	(??_can_interpreter+1)& (0+255),w,b
  5120  001D54  0100               	movlb	0	; () banked
  5121  001D56  6F8A               	movwf	(??_can_interpreter+5)& (0+255),b
  5122  001D58  0100               	movlb	0	; () banked
  5123  001D5A  5198               	movf	(_previousTimeCounter+2)& (0+255),w,b
  5124  001D5C  0100               	movlb	0	; () banked
  5125  001D5E  2187               	addwfc	(??_can_interpreter+2)& (0+255),w,b
  5126  001D60  0100               	movlb	0	; () banked
  5127  001D62  6F8B               	movwf	(??_can_interpreter+6)& (0+255),b
  5128  001D64  0100               	movlb	0	; () banked
  5129  001D66  5199               	movf	(_previousTimeCounter+3)& (0+255),w,b
  5130  001D68  0100               	movlb	0	; () banked
  5131  001D6A  2188               	addwfc	(??_can_interpreter+3)& (0+255),w,b
  5132  001D6C  0100               	movlb	0	; () banked
  5133  001D6E  6F8C               	movwf	(??_can_interpreter+7)& (0+255),b
  5134  001D70  0100               	movlb	0	; () banked
  5135  001D72  518C               	movf	(??_can_interpreter+7)& (0+255),w,b
  5136  001D74  0100               	movlb	0	; () banked
  5137  001D76  118B               	iorwf	(??_can_interpreter+6)& (0+255),w,b
  5138  001D78  E108               	bnz	u4250
  5139  001D7A  0EC3               	movlw	195
  5140  001D7C  0100               	movlb	0	; () banked
  5141  001D7E  5D89               	subwf	(??_can_interpreter+4)& (0+255),w,b
  5142  001D80  0E01               	movlw	1
  5143  001D82  0100               	movlb	0	; () banked
  5144  001D84  598A               	subwfb	(??_can_interpreter+5)& (0+255),w,b
  5145  001D86  A0D8               	btfss	status,0,c
  5146  001D88  D02B               	goto	l3677
  5147  001D8A                     u4250:
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;CanToSerial.c: 209: SerialOutput[4] = LATDbits.LATD6;
  5151  001D8A  0E00               	movlw	0
  5152  001D8C  BC8C               	btfsc	3980,6,c	;volatile
  5153  001D8E  0E01               	movlw	1
  5154  001D90  0100               	movlb	0	; () banked
  5155  001D92  6FCA               	movwf	(_SerialOutput+4)& (0+255),b
  5156                           
  5157                           ; BSR set to: 0
  5158                           ;CanToSerial.c: 210: SerialOutput[4] = ((SerialOutput[5] < 1) | LATDbits.LATD5);
  5159  001D94  AA8C               	btfss	3980,5,c	;volatile
  5160  001D96  D004               	goto	u4260
  5161  001D98  0100               	movlb	0	; () banked
  5162  001D9A  6B85               	clrf	??_can_interpreter& (0+255),b
  5163  001D9C  2B85               	incf	??_can_interpreter& (0+255),f,b
  5164  001D9E  D002               	goto	u4268
  5165  001DA0                     u4260:
  5166  001DA0  0100               	movlb	0	; () banked
  5167  001DA2  6B85               	clrf	??_can_interpreter& (0+255),b
  5168  001DA4                     u4268:
  5169  001DA4  0100               	movlb	0	; () banked
  5170  001DA6  51CB               	movf	(_SerialOutput+5)& (0+255),w,b
  5171  001DA8  A4D8               	btfss	status,2,c
  5172  001DAA  D002               	goto	u4270
  5173  001DAC  0E01               	movlw	1
  5174  001DAE  D001               	goto	u4280
  5175  001DB0                     u4270:
  5176  001DB0  0E00               	movlw	0
  5177  001DB2                     u4280:
  5178  001DB2  0100               	movlb	0	; () banked
  5179  001DB4  1185               	iorwf	??_can_interpreter& (0+255),w,b
  5180  001DB6  0100               	movlb	0	; () banked
  5181  001DB8  6FCA               	movwf	(_SerialOutput+4)& (0+255),b
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;CanToSerial.c: 211: SerialOutput[4] = ((SerialOutput[5] < 1) | LATDbits.LATD4);
  5185  001DBA  A88C               	btfss	3980,4,c	;volatile
  5186  001DBC  D004               	goto	u4290
  5187  001DBE  0100               	movlb	0	; () banked
  5188  001DC0  6B85               	clrf	??_can_interpreter& (0+255),b
  5189  001DC2  2B85               	incf	??_can_interpreter& (0+255),f,b
  5190  001DC4  D002               	goto	u4298
  5191  001DC6                     u4290:
  5192  001DC6  0100               	movlb	0	; () banked
  5193  001DC8  6B85               	clrf	??_can_interpreter& (0+255),b
  5194  001DCA                     u4298:
  5195  001DCA  0100               	movlb	0	; () banked
  5196  001DCC  51CB               	movf	(_SerialOutput+5)& (0+255),w,b
  5197  001DCE  A4D8               	btfss	status,2,c
  5198  001DD0  D002               	goto	u4300
  5199  001DD2  0E01               	movlw	1
  5200  001DD4  D001               	goto	u4310
  5201  001DD6                     u4300:
  5202  001DD6  0E00               	movlw	0
  5203  001DD8                     u4310:
  5204  001DD8  0100               	movlb	0	; () banked
  5205  001DDA  1185               	iorwf	??_can_interpreter& (0+255),w,b
  5206  001DDC  0100               	movlb	0	; () banked
  5207  001DDE  6FCA               	movwf	(_SerialOutput+4)& (0+255),b
  5208  001DE0                     l3677:
  5209                           
  5210                           ; BSR set to: 0
  5211                           ;CanToSerial.c: 212: }
  5212                           ;CanToSerial.c: 213: }
  5213                           ;CanToSerial.c: 214: if ((id == 0b00000000000000000000000000110)&&(RTR_Flag == 0)) {
  5214  001DE0  0E06               	movlw	6
  5215  001DE2  0100               	movlb	0	; () banked
  5216  001DE4  1992               	xorwf	_id& (0+255),w,b	;volatile
  5217  001DE6  0100               	movlb	0	; () banked
  5218  001DE8  1193               	iorwf	(_id+1)& (0+255),w,b	;volatile
  5219  001DEA  0100               	movlb	0	; () banked
  5220  001DEC  1194               	iorwf	(_id+2)& (0+255),w,b	;volatile
  5221  001DEE  0100               	movlb	0	; () banked
  5222  001DF0  1195               	iorwf	(_id+3)& (0+255),w,b	;volatile
  5223  001DF2  B4D8               	btfsc	status,2,c
  5224                           
  5225                           ; BSR set to: 0
  5226  001DF4  B049               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
  5227  001DF6  D050               	goto	l3691
  5228                           
  5229                           ; BSR set to: 0
  5230                           ;CanToSerial.c: 215: left_speed = data[1];
  5231  001DF8  C01B  F0A0         	movff	_data+1,_left_speed
  5232  001DFC  0100               	movlb	0	; () banked
  5233  001DFE  6BA1               	clrf	(_left_speed+1)& (0+255),b
  5234                           
  5235                           ; BSR set to: 0
  5236                           ;CanToSerial.c: 216: left_speed = ((left_speed << 8) | (data[0]));
  5237  001E00  0100               	movlb	0	; () banked
  5238  001E02  51A0               	movf	_left_speed& (0+255),w,b
  5239  001E04  0100               	movlb	0	; () banked
  5240  001E06  6F85               	movwf	??_can_interpreter& (0+255),b
  5241  001E08  501A               	movf	_data,w,c
  5242  001E0A  0100               	movlb	0	; () banked
  5243  001E0C  6FA0               	movwf	_left_speed& (0+255),b
  5244  001E0E  C085  F0A1         	movff	??_can_interpreter,_left_speed+1
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;CanToSerial.c: 217: right_speed = data[3];
  5248  001E12  C01D  F0A2         	movff	_data+3,_right_speed
  5249  001E16  0100               	movlb	0	; () banked
  5250  001E18  6BA3               	clrf	(_right_speed+1)& (0+255),b
  5251                           
  5252                           ;CanToSerial.c: 218: right_speed = ((right_speed << 8) | (data[2]));
  5253  001E1A  0100               	movlb	0	; () banked
  5254  001E1C  51A2               	movf	_right_speed& (0+255),w,b
  5255  001E1E  0100               	movlb	0	; () banked
  5256  001E20  6F85               	movwf	??_can_interpreter& (0+255),b
  5257  001E22  501C               	movf	_data+2,w,c
  5258  001E24  0100               	movlb	0	; () banked
  5259  001E26  6FA2               	movwf	_right_speed& (0+255),b
  5260  001E28  C085  F0A3         	movff	??_can_interpreter,_right_speed+1
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;CanToSerial.c: 219: SerialOutput[3] = ((left_speed + right_speed) / 2);
  5264  001E2C  0100               	movlb	0	; () banked
  5265  001E2E  51A2               	movf	_right_speed& (0+255),w,b
  5266  001E30  0100               	movlb	0	; () banked
  5267  001E32  25A0               	addwf	_left_speed& (0+255),w,b
  5268  001E34  0100               	movlb	0	; () banked
  5269  001E36  6F85               	movwf	??_can_interpreter& (0+255),b
  5270  001E38  0100               	movlb	0	; () banked
  5271  001E3A  51A3               	movf	(_right_speed+1)& (0+255),w,b
  5272  001E3C  0100               	movlb	0	; () banked
  5273  001E3E  21A1               	addwfc	(_left_speed+1)& (0+255),w,b
  5274  001E40  0100               	movlb	0	; () banked
  5275  001E42  6F86               	movwf	(??_can_interpreter+1)& (0+255),b
  5276  001E44  90D8               	bcf	status,0,c
  5277  001E46  0100               	movlb	0	; () banked
  5278  001E48  3186               	rrcf	(??_can_interpreter+1)& (0+255),w,b
  5279  001E4A  0100               	movlb	0	; () banked
  5280  001E4C  6F88               	movwf	(??_can_interpreter+3)& (0+255),b
  5281  001E4E  0100               	movlb	0	; () banked
  5282  001E50  3185               	rrcf	??_can_interpreter& (0+255),w,b
  5283  001E52  0100               	movlb	0	; () banked
  5284  001E54  6F87               	movwf	(??_can_interpreter+2)& (0+255),b
  5285  001E56  0100               	movlb	0	; () banked
  5286  001E58  5187               	movf	(??_can_interpreter+2)& (0+255),w,b
  5287  001E5A  0100               	movlb	0	; () banked
  5288  001E5C  6FC9               	movwf	(_SerialOutput+3)& (0+255),b
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;CanToSerial.c: 220: SerialOutput[2] = (((left_speed + right_speed) / 2) >> 8);
  5292  001E5E  0100               	movlb	0	; () banked
  5293  001E60  51A2               	movf	_right_speed& (0+255),w,b
  5294  001E62  0100               	movlb	0	; () banked
  5295  001E64  25A0               	addwf	_left_speed& (0+255),w,b
  5296  001E66  0100               	movlb	0	; () banked
  5297  001E68  6F85               	movwf	??_can_interpreter& (0+255),b
  5298  001E6A  0100               	movlb	0	; () banked
  5299  001E6C  51A3               	movf	(_right_speed+1)& (0+255),w,b
  5300  001E6E  0100               	movlb	0	; () banked
  5301  001E70  21A1               	addwfc	(_left_speed+1)& (0+255),w,b
  5302  001E72  0100               	movlb	0	; () banked
  5303  001E74  6F86               	movwf	(??_can_interpreter+1)& (0+255),b
  5304  001E76  90D8               	bcf	status,0,c
  5305  001E78  0100               	movlb	0	; () banked
  5306  001E7A  3186               	rrcf	(??_can_interpreter+1)& (0+255),w,b
  5307  001E7C  0100               	movlb	0	; () banked
  5308  001E7E  6F88               	movwf	(??_can_interpreter+3)& (0+255),b
  5309  001E80  0100               	movlb	0	; () banked
  5310  001E82  3185               	rrcf	??_can_interpreter& (0+255),w,b
  5311  001E84  0100               	movlb	0	; () banked
  5312  001E86  6F87               	movwf	(??_can_interpreter+2)& (0+255),b
  5313  001E88  C088  F087         	movff	??_can_interpreter+3,??_can_interpreter+2
  5314  001E8C  0100               	movlb	0	; () banked
  5315  001E8E  6B88               	clrf	(??_can_interpreter+3)& (0+255),b
  5316  001E90  0100               	movlb	0	; () banked
  5317  001E92  5187               	movf	(??_can_interpreter+2)& (0+255),w,b
  5318  001E94  0100               	movlb	0	; () banked
  5319  001E96  6FC8               	movwf	(_SerialOutput+2)& (0+255),b
  5320  001E98                     l3691:
  5321                           
  5322                           ; BSR set to: 0
  5323                           ;CanToSerial.c: 221: }
  5324                           ;CanToSerial.c: 222: if (id == 0b00000000000000000000000001001) {
  5325  001E98  0E09               	movlw	9
  5326  001E9A  0100               	movlb	0	; () banked
  5327  001E9C  1992               	xorwf	_id& (0+255),w,b	;volatile
  5328  001E9E  0100               	movlb	0	; () banked
  5329  001EA0  1193               	iorwf	(_id+1)& (0+255),w,b	;volatile
  5330  001EA2  0100               	movlb	0	; () banked
  5331  001EA4  1194               	iorwf	(_id+2)& (0+255),w,b	;volatile
  5332  001EA6  0100               	movlb	0	; () banked
  5333  001EA8  1195               	iorwf	(_id+3)& (0+255),w,b	;volatile
  5334  001EAA  A4D8               	btfss	status,2,c
  5335  001EAC  0012               	return	
  5336                           
  5337                           ; BSR set to: 0
  5338                           ;CanToSerial.c: 223: SerialOutput[5] = data[0];
  5339  001EAE  C01A  F0CB         	movff	_data,_SerialOutput+5
  5340  001EB2  0012               	return	
  5341  001EB4                     __end_of_can_interpreter:
  5342                           	opt stack 0
  5343                           tblptru	equ	0xFF8
  5344                           tblptrh	equ	0xFF7
  5345                           tblptrl	equ	0xFF6
  5346                           tablat	equ	0xFF5
  5347                           prodh	equ	0xFF4
  5348                           prodl	equ	0xFF3
  5349                           intcon	equ	0xFF2
  5350                           postinc0	equ	0xFEE
  5351                           wreg	equ	0xFE8
  5352                           indf1	equ	0xFE7
  5353                           postinc1	equ	0xFE6
  5354                           postdec1	equ	0xFE5
  5355                           fsr1h	equ	0xFE2
  5356                           fsr1l	equ	0xFE1
  5357                           indf2	equ	0xFDF
  5358                           postinc2	equ	0xFDE
  5359                           fsr2h	equ	0xFDA
  5360                           fsr2l	equ	0xFD9
  5361                           status	equ	0xFD8
  5362                           
  5363 ;; *************** function _CANsendMessage *****************
  5364 ;; Defined at:
  5365 ;;		line 295 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;  identifier      4   21[BANK0 ] unsigned long 
  5368 ;;  data            2   25[BANK0 ] PTR unsigned char 
  5369 ;;		 -> data(8), analogic_brake(8), set_speed(8), set_steering(8), 
  5370 ;;  dataLength      1   27[BANK0 ] unsigned char 
  5371 ;;  flags           1   28[BANK0 ] enum E16866
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;  tamp            4   33[BANK0 ] unsigned long 
  5374 ;; Return value:  Size  Location     Type
  5375 ;;		None               void
  5376 ;; Registers used:
  5377 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5383 ;;      Params:         0       8       0       0
  5384 ;;      Locals:         0       4       0       0
  5385 ;;      Temps:          0       4       0       0
  5386 ;;      Totals:         0      16       0       0
  5387 ;;Total ram usage:       16 bytes
  5388 ;; Hardware stack levels used:    1
  5389 ;; Hardware stack levels required when called:    5
  5390 ;; This function calls:
  5391 ;;		Nothing
  5392 ;; This function is called by:
  5393 ;;		_main
  5394 ;;		_can_interpreter
  5395 ;; This function uses a non-reentrant model
  5396 ;;
  5397                           
  5398                           	psect	text12
  5399  000C5E                     __ptext12:
  5400                           	opt stack 0
  5401  000C5E                     _CANsendMessage:
  5402                           	opt stack 24
  5403                           
  5404                           ;inc\CANlib.h: 297: unsigned long tamp;
  5405                           ;inc\CANlib.h: 299: if (TXB0CONbits.TXREQ == 0)
  5406                           
  5407                           ; BSR set to: 0
  5408                           ;incstack = 0
  5409  000C5E  010F               	movlb	15	; () banked
  5410  000C60  B740               	btfsc	64,3,b	;volatile
  5411  000C62  D13F               	goto	l367
  5412                           
  5413                           ; BSR set to: 15
  5414                           ;inc\CANlib.h: 300: { TXB0DLC = dataLength;
  5415  000C64  C07B  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  5416                           
  5417                           ;inc\CANlib.h: 301: if (0b01000000 & flags)
  5418  000C68  0100               	movlb	0	; () banked
  5419  000C6A  AD7C               	btfss	CANsendMessage@flags& (0+255),6,b
  5420  000C6C  D003               	goto	l368
  5421                           
  5422                           ; BSR set to: 0
  5423                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x01;
  5424  000C6E  010F               	movlb	15	; () banked
  5425  000C70  8D45               	bsf	69,6,b	;volatile
  5426  000C72  D002               	goto	l369
  5427  000C74                     l368:
  5428                           
  5429                           ; BSR set to: 0
  5430                           ;inc\CANlib.h: 303: else
  5431                           ;inc\CANlib.h: 304: TXB0DLCbits.TXRTR = 0x00;
  5432  000C74  010F               	movlb	15	; () banked
  5433  000C76  9D45               	bcf	69,6,b	;volatile
  5434  000C78                     l369:
  5435                           
  5436                           ; BSR set to: 15
  5437                           ;inc\CANlib.h: 306: if (CAN_TX_FRAME_MASK & flags)
  5438  000C78  0100               	movlb	0	; () banked
  5439  000C7A  A77C               	btfss	CANsendMessage@flags& (0+255),3,b
  5440  000C7C  D079               	goto	l370
  5441                           
  5442                           ; BSR set to: 0
  5443                           ;inc\CANlib.h: 307: {
  5444                           ;inc\CANlib.h: 309: tamp = identifier & 0x000000FF;
  5445  000C7E  0100               	movlb	0	; () banked
  5446  000C80  5175               	movf	CANsendMessage@identifier& (0+255),w,b
  5447  000C82  0100               	movlb	0	; () banked
  5448  000C84  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  5449  000C86  6B82               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5450  000C88  6B83               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5451  000C8A  6B84               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5452                           
  5453                           ; BSR set to: 0
  5454                           ;inc\CANlib.h: 310: TXB0EIDL = (unsigned char) tamp;
  5455  000C8C  C081  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;inc\CANlib.h: 312: tamp = identifier & 0x0000FF00;
  5459  000C90  0E00               	movlw	0
  5460  000C92  0100               	movlb	0	; () banked
  5461  000C94  1575               	andwf	CANsendMessage@identifier& (0+255),w,b
  5462  000C96  0100               	movlb	0	; () banked
  5463  000C98  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  5464  000C9A  0EFF               	movlw	255
  5465  000C9C  0100               	movlb	0	; () banked
  5466  000C9E  1576               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5467  000CA0  0100               	movlb	0	; () banked
  5468  000CA2  6F82               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5469  000CA4  0E00               	movlw	0
  5470  000CA6  0100               	movlb	0	; () banked
  5471  000CA8  1577               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5472  000CAA  0100               	movlb	0	; () banked
  5473  000CAC  6F83               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5474  000CAE  0E00               	movlw	0
  5475  000CB0  0100               	movlb	0	; () banked
  5476  000CB2  1578               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5477  000CB4  0100               	movlb	0	; () banked
  5478  000CB6  6F84               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;inc\CANlib.h: 313: tamp = tamp >> 8;
  5482  000CB8  C081  F07D         	movff	CANsendMessage@tamp,??_CANsendMessage
  5483  000CBC  C082  F07E         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5484  000CC0  C083  F07F         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5485  000CC4  C084  F080         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5486  000CC8  C07E  F07D         	movff	??_CANsendMessage+1,??_CANsendMessage
  5487  000CCC  C07F  F07E         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  5488  000CD0  C080  F07F         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  5489  000CD4  0100               	movlb	0	; () banked
  5490  000CD6  6B80               	clrf	(??_CANsendMessage+3)& (0+255),b
  5491  000CD8  C07D  F081         	movff	??_CANsendMessage,CANsendMessage@tamp
  5492  000CDC  C07E  F082         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5493  000CE0  C07F  F083         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5494  000CE4  C080  F084         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5495                           
  5496                           ; BSR set to: 0
  5497                           ;inc\CANlib.h: 314: TXB0EIDH = (unsigned char) tamp;
  5498  000CE8  C081  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  5499                           
  5500                           ; BSR set to: 0
  5501                           ;inc\CANlib.h: 316: TXB0SIDL = 0x00;
  5502  000CEC  0E00               	movlw	0
  5503  000CEE  010F               	movlb	15	; () banked
  5504  000CF0  6F42               	movwf	66,b	;volatile
  5505                           
  5506                           ; BSR set to: 15
  5507                           ;inc\CANlib.h: 317: TXB0SIDLbits.EXIDE = 0x01;
  5508  000CF2  010F               	movlb	15	; () banked
  5509  000CF4  8742               	bsf	66,3,b	;volatile
  5510                           
  5511                           ; BSR set to: 15
  5512                           ;inc\CANlib.h: 319: if (identifier & 0x00010000)
  5513  000CF6  0100               	movlb	0	; () banked
  5514  000CF8  A177               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  5515  000CFA  D002               	goto	l371
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID16 = 0x01;
  5519  000CFC  010F               	movlb	15	; () banked
  5520  000CFE  8142               	bsf	66,0,b	;volatile
  5521  000D00                     l371:
  5522                           
  5523                           ;inc\CANlib.h: 321: if (identifier & 0x00020000)
  5524  000D00  0100               	movlb	0	; () banked
  5525  000D02  A377               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  5526  000D04  D002               	goto	l372
  5527                           
  5528                           ; BSR set to: 0
  5529                           ;inc\CANlib.h: 322: TXB0SIDLbits.EID17 = 0x01;
  5530  000D06  010F               	movlb	15	; () banked
  5531  000D08  8342               	bsf	66,1,b	;volatile
  5532  000D0A                     l372:
  5533                           
  5534                           ;inc\CANlib.h: 323: if (identifier & 0x00040000)
  5535  000D0A  0100               	movlb	0	; () banked
  5536  000D0C  A577               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  5537  000D0E  D002               	goto	l373
  5538                           
  5539                           ; BSR set to: 0
  5540                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID0 = 0x01;
  5541  000D10  010F               	movlb	15	; () banked
  5542  000D12  8B42               	bsf	66,5,b	;volatile
  5543  000D14                     l373:
  5544                           
  5545                           ;inc\CANlib.h: 325: if (identifier & 0x00080000)
  5546  000D14  0100               	movlb	0	; () banked
  5547  000D16  A777               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  5548  000D18  D002               	goto	l374
  5549                           
  5550                           ; BSR set to: 0
  5551                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID1 = 0x01;
  5552  000D1A  010F               	movlb	15	; () banked
  5553  000D1C  8D42               	bsf	66,6,b	;volatile
  5554  000D1E                     l374:
  5555                           
  5556                           ;inc\CANlib.h: 327: if (identifier & 0x00100000)
  5557  000D1E  0100               	movlb	0	; () banked
  5558  000D20  A977               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  5559  000D22  D002               	goto	l3139
  5560                           
  5561                           ; BSR set to: 0
  5562                           ;inc\CANlib.h: 328: TXB0SIDLbits.SID2 = 0x01;
  5563  000D24  010F               	movlb	15	; () banked
  5564  000D26  8F42               	bsf	66,7,b	;volatile
  5565  000D28                     l3139:
  5566                           
  5567                           ;inc\CANlib.h: 330: tamp = (identifier >> 21);
  5568  000D28  C075  F07D         	movff	CANsendMessage@identifier,??_CANsendMessage
  5569  000D2C  C076  F07E         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5570  000D30  C077  F07F         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5571  000D34  C078  F080         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5572  000D38  0E16               	movlw	22
  5573  000D3A  D006               	goto	u3410
  5574  000D3C                     u3415:
  5575  000D3C  0100               	movlb	0	; () banked
  5576  000D3E  90D8               	bcf	status,0,c
  5577  000D40  3380               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5578  000D42  337F               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5579  000D44  337E               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5580  000D46  337D               	rrcf	??_CANsendMessage& (0+255),f,b
  5581  000D48                     u3410:
  5582  000D48  2EE8               	decfsz	wreg,f,c
  5583  000D4A  D7F8               	goto	u3415
  5584  000D4C  C07D  F081         	movff	??_CANsendMessage,CANsendMessage@tamp
  5585  000D50  C07E  F082         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5586  000D54  C07F  F083         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5587  000D58  C080  F084         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5588                           
  5589                           ; BSR set to: 0
  5590                           ;inc\CANlib.h: 331: tamp = tamp & 0x000000FF;
  5591  000D5C  0100               	movlb	0	; () banked
  5592  000D5E  5181               	movf	CANsendMessage@tamp& (0+255),w,b
  5593  000D60  0100               	movlb	0	; () banked
  5594  000D62  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  5595  000D64  6B82               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5596  000D66  6B83               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5597  000D68  6B84               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;inc\CANlib.h: 332: TXB0SIDH = (unsigned char) tamp;
  5601  000D6A  C081  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5602                           
  5603                           ;inc\CANlib.h: 333: }
  5604  000D6E  D059               	goto	l3159
  5605  000D70                     l370:
  5606                           
  5607                           ; BSR set to: 0
  5608                           ;inc\CANlib.h: 335: else
  5609                           ;inc\CANlib.h: 337: {
  5610                           ;inc\CANlib.h: 338: TXB0SIDLbits.EXIDE = 0x00;
  5611  000D70  010F               	movlb	15	; () banked
  5612  000D72  9742               	bcf	66,3,b	;volatile
  5613                           
  5614                           ; BSR set to: 15
  5615                           ;inc\CANlib.h: 340: tamp = (identifier >> 3);
  5616  000D74  C075  F07D         	movff	CANsendMessage@identifier,??_CANsendMessage
  5617  000D78  C076  F07E         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5618  000D7C  C077  F07F         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5619  000D80  C078  F080         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5620  000D84  0E04               	movlw	4
  5621  000D86  D006               	goto	u3420
  5622  000D88                     u3425:
  5623  000D88  0100               	movlb	0	; () banked
  5624  000D8A  90D8               	bcf	status,0,c
  5625  000D8C  3380               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5626  000D8E  337F               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5627  000D90  337E               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5628  000D92  337D               	rrcf	??_CANsendMessage& (0+255),f,b
  5629  000D94                     u3420:
  5630  000D94  2EE8               	decfsz	wreg,f,c
  5631  000D96  D7F8               	goto	u3425
  5632  000D98  C07D  F081         	movff	??_CANsendMessage,CANsendMessage@tamp
  5633  000D9C  C07E  F082         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5634  000DA0  C07F  F083         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5635  000DA4  C080  F084         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5636                           
  5637                           ; BSR set to: 0
  5638                           ;inc\CANlib.h: 341: tamp = tamp & 0x000000FF;
  5639  000DA8  0100               	movlb	0	; () banked
  5640  000DAA  5181               	movf	CANsendMessage@tamp& (0+255),w,b
  5641  000DAC  0100               	movlb	0	; () banked
  5642  000DAE  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  5643  000DB0  6B82               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5644  000DB2  6B83               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5645  000DB4  6B84               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5646                           
  5647                           ; BSR set to: 0
  5648                           ;inc\CANlib.h: 342: TXB0SIDH = (unsigned char) tamp;
  5649  000DB6  C081  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5650                           
  5651                           ; BSR set to: 0
  5652                           ;inc\CANlib.h: 344: tamp = identifier & 0x00000007;
  5653  000DBA  0E07               	movlw	7
  5654  000DBC  0100               	movlb	0	; () banked
  5655  000DBE  1575               	andwf	CANsendMessage@identifier& (0+255),w,b
  5656  000DC0  0100               	movlb	0	; () banked
  5657  000DC2  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  5658  000DC4  0E00               	movlw	0
  5659  000DC6  0100               	movlb	0	; () banked
  5660  000DC8  1576               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5661  000DCA  0100               	movlb	0	; () banked
  5662  000DCC  6F82               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5663  000DCE  0E00               	movlw	0
  5664  000DD0  0100               	movlb	0	; () banked
  5665  000DD2  1577               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5666  000DD4  0100               	movlb	0	; () banked
  5667  000DD6  6F83               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5668  000DD8  0E00               	movlw	0
  5669  000DDA  0100               	movlb	0	; () banked
  5670  000DDC  1578               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5671  000DDE  0100               	movlb	0	; () banked
  5672  000DE0  6F84               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5673                           
  5674                           ; BSR set to: 0
  5675                           ;inc\CANlib.h: 345: tamp = tamp << 5;
  5676  000DE2  C081  F07D         	movff	CANsendMessage@tamp,??_CANsendMessage
  5677  000DE6  C082  F07E         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5678  000DEA  C083  F07F         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5679  000DEE  C084  F080         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5680  000DF2  0E05               	movlw	5
  5681  000DF4                     u3435:
  5682  000DF4  90D8               	bcf	status,0,c
  5683  000DF6  0100               	movlb	0	; () banked
  5684  000DF8  377D               	rlcf	??_CANsendMessage& (0+255),f,b
  5685  000DFA  377E               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  5686  000DFC  377F               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  5687  000DFE  3780               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  5688  000E00  2EE8               	decfsz	wreg,f,c
  5689  000E02  D7F8               	goto	u3435
  5690  000E04  C07D  F081         	movff	??_CANsendMessage,CANsendMessage@tamp
  5691  000E08  C07E  F082         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5692  000E0C  C07F  F083         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5693  000E10  C080  F084         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5694                           
  5695                           ; BSR set to: 0
  5696                           ;inc\CANlib.h: 346: TXB0SIDL = TXB0SIDL & 0b00011111;
  5697  000E14  010F               	movlb	15	; () banked
  5698  000E16  5142               	movf	66,w,b	;volatile
  5699  000E18  0B1F               	andlw	31
  5700  000E1A  010F               	movlb	15	; () banked
  5701  000E1C  6F42               	movwf	66,b	;volatile
  5702                           
  5703                           ; BSR set to: 15
  5704                           ;inc\CANlib.h: 347: TXB0SIDL = (unsigned char) tamp;
  5705  000E1E  C081  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  5706  000E22                     l3159:
  5707                           
  5708                           ;inc\CANlib.h: 348: }
  5709                           ;inc\CANlib.h: 350: if (0b00000001 & flags)
  5710  000E22  0100               	movlb	0	; () banked
  5711  000E24  A17C               	btfss	CANsendMessage@flags& (0+255),0,b
  5712  000E26  D003               	goto	l377
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x01;
  5716  000E28  010F               	movlb	15	; () banked
  5717  000E2A  8140               	bsf	64,0,b	;volatile
  5718  000E2C  D002               	goto	l378
  5719  000E2E                     l377:
  5720                           
  5721                           ; BSR set to: 0
  5722                           ;inc\CANlib.h: 352: else
  5723                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI0 = 0x00;
  5724  000E2E  010F               	movlb	15	; () banked
  5725  000E30  9140               	bcf	64,0,b	;volatile
  5726  000E32                     l378:
  5727                           
  5728                           ; BSR set to: 15
  5729                           ;inc\CANlib.h: 354: if (0b00000010 & flags)
  5730  000E32  0100               	movlb	0	; () banked
  5731  000E34  A37C               	btfss	CANsendMessage@flags& (0+255),1,b
  5732  000E36  D003               	goto	l379
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x01;
  5736  000E38  010F               	movlb	15	; () banked
  5737  000E3A  8340               	bsf	64,1,b	;volatile
  5738  000E3C  D002               	goto	l3165
  5739  000E3E                     l379:
  5740                           
  5741                           ; BSR set to: 0
  5742                           ;inc\CANlib.h: 356: else
  5743                           ;inc\CANlib.h: 357: TXB0CONbits.TXPRI1 = 0x00;
  5744  000E3E  010F               	movlb	15	; () banked
  5745  000E40  9340               	bcf	64,1,b	;volatile
  5746  000E42                     l3165:
  5747                           
  5748                           ; BSR set to: 15
  5749                           ;inc\CANlib.h: 359: TXB0D0 = data[0];
  5750  000E42  C079  FFD9         	movff	CANsendMessage@data,fsr2l
  5751  000E46  C07A  FFDA         	movff	CANsendMessage@data+1,fsr2h
  5752  000E4A  50DF               	movf	indf2,w,c
  5753  000E4C  010F               	movlb	15	; () banked
  5754  000E4E  6F46               	movwf	70,b	;volatile
  5755                           
  5756                           ; BSR set to: 15
  5757                           ;inc\CANlib.h: 360: TXB0D1 = data[1];
  5758  000E50  0100               	movlb	0	; () banked
  5759  000E52  EE20 F001          	lfsr	2,1
  5760  000E56  5179               	movf	CANsendMessage@data& (0+255),w,b
  5761  000E58  26D9               	addwf	fsr2l,f,c
  5762  000E5A  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5763  000E5C  22DA               	addwfc	fsr2h,f,c
  5764  000E5E  50DF               	movf	indf2,w,c
  5765  000E60  010F               	movlb	15	; () banked
  5766  000E62  6F47               	movwf	71,b	;volatile
  5767                           
  5768                           ; BSR set to: 15
  5769                           ;inc\CANlib.h: 361: TXB0D2 = data[2];
  5770  000E64  0100               	movlb	0	; () banked
  5771  000E66  EE20 F002          	lfsr	2,2
  5772  000E6A  5179               	movf	CANsendMessage@data& (0+255),w,b
  5773  000E6C  26D9               	addwf	fsr2l,f,c
  5774  000E6E  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5775  000E70  22DA               	addwfc	fsr2h,f,c
  5776  000E72  50DF               	movf	indf2,w,c
  5777  000E74  010F               	movlb	15	; () banked
  5778  000E76  6F48               	movwf	72,b	;volatile
  5779                           
  5780                           ; BSR set to: 15
  5781                           ;inc\CANlib.h: 362: TXB0D3 = data[3];
  5782  000E78  0100               	movlb	0	; () banked
  5783  000E7A  EE20 F003          	lfsr	2,3
  5784  000E7E  5179               	movf	CANsendMessage@data& (0+255),w,b
  5785  000E80  26D9               	addwf	fsr2l,f,c
  5786  000E82  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5787  000E84  22DA               	addwfc	fsr2h,f,c
  5788  000E86  50DF               	movf	indf2,w,c
  5789  000E88  010F               	movlb	15	; () banked
  5790  000E8A  6F49               	movwf	73,b	;volatile
  5791                           
  5792                           ; BSR set to: 15
  5793                           ;inc\CANlib.h: 363: TXB0D4 = data[4];
  5794  000E8C  0100               	movlb	0	; () banked
  5795  000E8E  EE20 F004          	lfsr	2,4
  5796  000E92  5179               	movf	CANsendMessage@data& (0+255),w,b
  5797  000E94  26D9               	addwf	fsr2l,f,c
  5798  000E96  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5799  000E98  22DA               	addwfc	fsr2h,f,c
  5800  000E9A  50DF               	movf	indf2,w,c
  5801  000E9C  010F               	movlb	15	; () banked
  5802  000E9E  6F4A               	movwf	74,b	;volatile
  5803                           
  5804                           ; BSR set to: 15
  5805                           ;inc\CANlib.h: 364: TXB0D5 = data[5];
  5806  000EA0  0100               	movlb	0	; () banked
  5807  000EA2  EE20 F005          	lfsr	2,5
  5808  000EA6  5179               	movf	CANsendMessage@data& (0+255),w,b
  5809  000EA8  26D9               	addwf	fsr2l,f,c
  5810  000EAA  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5811  000EAC  22DA               	addwfc	fsr2h,f,c
  5812  000EAE  50DF               	movf	indf2,w,c
  5813  000EB0  010F               	movlb	15	; () banked
  5814  000EB2  6F4B               	movwf	75,b	;volatile
  5815                           
  5816                           ; BSR set to: 15
  5817                           ;inc\CANlib.h: 365: TXB0D6 = data[6];
  5818  000EB4  0100               	movlb	0	; () banked
  5819  000EB6  EE20 F006          	lfsr	2,6
  5820  000EBA  5179               	movf	CANsendMessage@data& (0+255),w,b
  5821  000EBC  26D9               	addwf	fsr2l,f,c
  5822  000EBE  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5823  000EC0  22DA               	addwfc	fsr2h,f,c
  5824  000EC2  50DF               	movf	indf2,w,c
  5825  000EC4  010F               	movlb	15	; () banked
  5826  000EC6  6F4C               	movwf	76,b	;volatile
  5827                           
  5828                           ; BSR set to: 15
  5829                           ;inc\CANlib.h: 366: TXB0D7 = data[7];
  5830  000EC8  0100               	movlb	0	; () banked
  5831  000ECA  EE20 F007          	lfsr	2,7
  5832  000ECE  5179               	movf	CANsendMessage@data& (0+255),w,b
  5833  000ED0  26D9               	addwf	fsr2l,f,c
  5834  000ED2  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5835  000ED4  22DA               	addwfc	fsr2h,f,c
  5836  000ED6  50DF               	movf	indf2,w,c
  5837  000ED8  010F               	movlb	15	; () banked
  5838  000EDA  6F4D               	movwf	77,b	;volatile
  5839                           
  5840                           ; BSR set to: 15
  5841                           ;inc\CANlib.h: 368: TXB0CONbits.TXREQ = 0x01;
  5842  000EDC  010F               	movlb	15	; () banked
  5843  000EDE  8740               	bsf	64,3,b	;volatile
  5844                           
  5845                           ; BSR set to: 15
  5846                           ;inc\CANlib.h: 369: return;
  5847  000EE0  0012               	return	
  5848  000EE2                     l367:
  5849                           
  5850                           ; BSR set to: 15
  5851                           ;inc\CANlib.h: 370: }
  5852                           ;inc\CANlib.h: 374: if (TXB1CONbits.TXREQ == 0)
  5853  000EE2  010F               	movlb	15	; () banked
  5854  000EE4  B730               	btfsc	48,3,b	;volatile
  5855  000EE6  D13F               	goto	l382
  5856                           
  5857                           ; BSR set to: 15
  5858                           ;inc\CANlib.h: 375: { TXB1DLC = dataLength;
  5859  000EE8  C07B  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  5860                           
  5861                           ;inc\CANlib.h: 377: if (0b01000000 & flags)
  5862  000EEC  0100               	movlb	0	; () banked
  5863  000EEE  AD7C               	btfss	CANsendMessage@flags& (0+255),6,b
  5864  000EF0  D003               	goto	l383
  5865                           
  5866                           ; BSR set to: 0
  5867                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x01;
  5868  000EF2  010F               	movlb	15	; () banked
  5869  000EF4  8D35               	bsf	53,6,b	;volatile
  5870  000EF6  D002               	goto	l384
  5871  000EF8                     l383:
  5872                           
  5873                           ; BSR set to: 0
  5874                           ;inc\CANlib.h: 379: else
  5875                           ;inc\CANlib.h: 380: TXB1DLCbits.TXRTR = 0x00;
  5876  000EF8  010F               	movlb	15	; () banked
  5877  000EFA  9D35               	bcf	53,6,b	;volatile
  5878  000EFC                     l384:
  5879                           
  5880                           ; BSR set to: 15
  5881                           ;inc\CANlib.h: 382: if (CAN_TX_FRAME_MASK & flags)
  5882  000EFC  0100               	movlb	0	; () banked
  5883  000EFE  A77C               	btfss	CANsendMessage@flags& (0+255),3,b
  5884  000F00  D079               	goto	l385
  5885                           
  5886                           ; BSR set to: 0
  5887                           ;inc\CANlib.h: 383: {
  5888                           ;inc\CANlib.h: 384: tamp = identifier & 0x000000FF;
  5889  000F02  0100               	movlb	0	; () banked
  5890  000F04  5175               	movf	CANsendMessage@identifier& (0+255),w,b
  5891  000F06  0100               	movlb	0	; () banked
  5892  000F08  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  5893  000F0A  6B82               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5894  000F0C  6B83               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5895  000F0E  6B84               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5896                           
  5897                           ; BSR set to: 0
  5898                           ;inc\CANlib.h: 385: TXB1EIDL = (unsigned char) tamp;
  5899  000F10  C081  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  5900                           
  5901                           ; BSR set to: 0
  5902                           ;inc\CANlib.h: 387: tamp = identifier & 0x0000FF00;
  5903  000F14  0E00               	movlw	0
  5904  000F16  0100               	movlb	0	; () banked
  5905  000F18  1575               	andwf	CANsendMessage@identifier& (0+255),w,b
  5906  000F1A  0100               	movlb	0	; () banked
  5907  000F1C  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  5908  000F1E  0EFF               	movlw	255
  5909  000F20  0100               	movlb	0	; () banked
  5910  000F22  1576               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5911  000F24  0100               	movlb	0	; () banked
  5912  000F26  6F82               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5913  000F28  0E00               	movlw	0
  5914  000F2A  0100               	movlb	0	; () banked
  5915  000F2C  1577               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5916  000F2E  0100               	movlb	0	; () banked
  5917  000F30  6F83               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5918  000F32  0E00               	movlw	0
  5919  000F34  0100               	movlb	0	; () banked
  5920  000F36  1578               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5921  000F38  0100               	movlb	0	; () banked
  5922  000F3A  6F84               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5923                           
  5924                           ; BSR set to: 0
  5925                           ;inc\CANlib.h: 388: tamp = tamp >> 8;
  5926  000F3C  C081  F07D         	movff	CANsendMessage@tamp,??_CANsendMessage
  5927  000F40  C082  F07E         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5928  000F44  C083  F07F         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5929  000F48  C084  F080         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5930  000F4C  C07E  F07D         	movff	??_CANsendMessage+1,??_CANsendMessage
  5931  000F50  C07F  F07E         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  5932  000F54  C080  F07F         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  5933  000F58  0100               	movlb	0	; () banked
  5934  000F5A  6B80               	clrf	(??_CANsendMessage+3)& (0+255),b
  5935  000F5C  C07D  F081         	movff	??_CANsendMessage,CANsendMessage@tamp
  5936  000F60  C07E  F082         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5937  000F64  C07F  F083         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5938  000F68  C080  F084         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5939                           
  5940                           ; BSR set to: 0
  5941                           ;inc\CANlib.h: 389: TXB1EIDH = (unsigned char) tamp;
  5942  000F6C  C081  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  5943                           
  5944                           ; BSR set to: 0
  5945                           ;inc\CANlib.h: 391: TXB1SIDL = 0x00;
  5946  000F70  0E00               	movlw	0
  5947  000F72  010F               	movlb	15	; () banked
  5948  000F74  6F32               	movwf	50,b	;volatile
  5949                           
  5950                           ; BSR set to: 15
  5951                           ;inc\CANlib.h: 392: TXB1SIDLbits.EXIDE = 0x01;
  5952  000F76  010F               	movlb	15	; () banked
  5953  000F78  8732               	bsf	50,3,b	;volatile
  5954                           
  5955                           ; BSR set to: 15
  5956                           ;inc\CANlib.h: 394: if (identifier & 0x00010000)
  5957  000F7A  0100               	movlb	0	; () banked
  5958  000F7C  A177               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  5959  000F7E  D002               	goto	l386
  5960                           
  5961                           ; BSR set to: 0
  5962                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID16 = 0x01;
  5963  000F80  010F               	movlb	15	; () banked
  5964  000F82  8132               	bsf	50,0,b	;volatile
  5965  000F84                     l386:
  5966                           
  5967                           ;inc\CANlib.h: 396: if (identifier & 0x00020000)
  5968  000F84  0100               	movlb	0	; () banked
  5969  000F86  A377               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  5970  000F88  D002               	goto	l387
  5971                           
  5972                           ; BSR set to: 0
  5973                           ;inc\CANlib.h: 397: TXB1SIDLbits.EID17 = 0x01;
  5974  000F8A  010F               	movlb	15	; () banked
  5975  000F8C  8332               	bsf	50,1,b	;volatile
  5976  000F8E                     l387:
  5977                           
  5978                           ;inc\CANlib.h: 398: if (identifier & 0x00040000)
  5979  000F8E  0100               	movlb	0	; () banked
  5980  000F90  A577               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  5981  000F92  D002               	goto	l388
  5982                           
  5983                           ; BSR set to: 0
  5984                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID0 = 0x01;
  5985  000F94  010F               	movlb	15	; () banked
  5986  000F96  8B32               	bsf	50,5,b	;volatile
  5987  000F98                     l388:
  5988                           
  5989                           ;inc\CANlib.h: 400: if (identifier & 0x00080000)
  5990  000F98  0100               	movlb	0	; () banked
  5991  000F9A  A777               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  5992  000F9C  D002               	goto	l389
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID1 = 0x01;
  5996  000F9E  010F               	movlb	15	; () banked
  5997  000FA0  8D32               	bsf	50,6,b	;volatile
  5998  000FA2                     l389:
  5999                           
  6000                           ;inc\CANlib.h: 402: if (identifier & 0x00100000)
  6001  000FA2  0100               	movlb	0	; () banked
  6002  000FA4  A977               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6003  000FA6  D002               	goto	l3215
  6004                           
  6005                           ; BSR set to: 0
  6006                           ;inc\CANlib.h: 403: TXB1SIDLbits.SID2 = 0x01;
  6007  000FA8  010F               	movlb	15	; () banked
  6008  000FAA  8F32               	bsf	50,7,b	;volatile
  6009  000FAC                     l3215:
  6010                           
  6011                           ;inc\CANlib.h: 405: tamp = (identifier >> 21);
  6012  000FAC  C075  F07D         	movff	CANsendMessage@identifier,??_CANsendMessage
  6013  000FB0  C076  F07E         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6014  000FB4  C077  F07F         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6015  000FB8  C078  F080         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6016  000FBC  0E16               	movlw	22
  6017  000FBE  D006               	goto	u3540
  6018  000FC0                     u3545:
  6019  000FC0  0100               	movlb	0	; () banked
  6020  000FC2  90D8               	bcf	status,0,c
  6021  000FC4  3380               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6022  000FC6  337F               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6023  000FC8  337E               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6024  000FCA  337D               	rrcf	??_CANsendMessage& (0+255),f,b
  6025  000FCC                     u3540:
  6026  000FCC  2EE8               	decfsz	wreg,f,c
  6027  000FCE  D7F8               	goto	u3545
  6028  000FD0  C07D  F081         	movff	??_CANsendMessage,CANsendMessage@tamp
  6029  000FD4  C07E  F082         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6030  000FD8  C07F  F083         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6031  000FDC  C080  F084         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6032                           
  6033                           ; BSR set to: 0
  6034                           ;inc\CANlib.h: 406: tamp = tamp & 0x000000FF;
  6035  000FE0  0100               	movlb	0	; () banked
  6036  000FE2  5181               	movf	CANsendMessage@tamp& (0+255),w,b
  6037  000FE4  0100               	movlb	0	; () banked
  6038  000FE6  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  6039  000FE8  6B82               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6040  000FEA  6B83               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6041  000FEC  6B84               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6042                           
  6043                           ; BSR set to: 0
  6044                           ;inc\CANlib.h: 407: TXB1SIDH = (unsigned char) tamp;
  6045  000FEE  C081  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6046                           
  6047                           ;inc\CANlib.h: 408: }
  6048  000FF2  D059               	goto	l3235
  6049  000FF4                     l385:
  6050                           
  6051                           ; BSR set to: 0
  6052                           ;inc\CANlib.h: 410: else
  6053                           ;inc\CANlib.h: 412: {
  6054                           ;inc\CANlib.h: 413: TXB1SIDLbits.EXIDE = 0x00;
  6055  000FF4  010F               	movlb	15	; () banked
  6056  000FF6  9732               	bcf	50,3,b	;volatile
  6057                           
  6058                           ; BSR set to: 15
  6059                           ;inc\CANlib.h: 415: tamp = (identifier >> 3);
  6060  000FF8  C075  F07D         	movff	CANsendMessage@identifier,??_CANsendMessage
  6061  000FFC  C076  F07E         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6062  001000  C077  F07F         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6063  001004  C078  F080         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6064  001008  0E04               	movlw	4
  6065  00100A  D006               	goto	u3550
  6066  00100C                     u3555:
  6067  00100C  0100               	movlb	0	; () banked
  6068  00100E  90D8               	bcf	status,0,c
  6069  001010  3380               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6070  001012  337F               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6071  001014  337E               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6072  001016  337D               	rrcf	??_CANsendMessage& (0+255),f,b
  6073  001018                     u3550:
  6074  001018  2EE8               	decfsz	wreg,f,c
  6075  00101A  D7F8               	goto	u3555
  6076  00101C  C07D  F081         	movff	??_CANsendMessage,CANsendMessage@tamp
  6077  001020  C07E  F082         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6078  001024  C07F  F083         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6079  001028  C080  F084         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6080                           
  6081                           ; BSR set to: 0
  6082                           ;inc\CANlib.h: 416: tamp = tamp & 0x000000FF;
  6083  00102C  0100               	movlb	0	; () banked
  6084  00102E  5181               	movf	CANsendMessage@tamp& (0+255),w,b
  6085  001030  0100               	movlb	0	; () banked
  6086  001032  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  6087  001034  6B82               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6088  001036  6B83               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6089  001038  6B84               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6090                           
  6091                           ; BSR set to: 0
  6092                           ;inc\CANlib.h: 417: TXB1SIDH = (unsigned char) tamp;
  6093  00103A  C081  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;inc\CANlib.h: 419: tamp = identifier & 0x00000007;
  6097  00103E  0E07               	movlw	7
  6098  001040  0100               	movlb	0	; () banked
  6099  001042  1575               	andwf	CANsendMessage@identifier& (0+255),w,b
  6100  001044  0100               	movlb	0	; () banked
  6101  001046  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  6102  001048  0E00               	movlw	0
  6103  00104A  0100               	movlb	0	; () banked
  6104  00104C  1576               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6105  00104E  0100               	movlb	0	; () banked
  6106  001050  6F82               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6107  001052  0E00               	movlw	0
  6108  001054  0100               	movlb	0	; () banked
  6109  001056  1577               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6110  001058  0100               	movlb	0	; () banked
  6111  00105A  6F83               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6112  00105C  0E00               	movlw	0
  6113  00105E  0100               	movlb	0	; () banked
  6114  001060  1578               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6115  001062  0100               	movlb	0	; () banked
  6116  001064  6F84               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6117                           
  6118                           ; BSR set to: 0
  6119                           ;inc\CANlib.h: 420: tamp = tamp << 5;
  6120  001066  C081  F07D         	movff	CANsendMessage@tamp,??_CANsendMessage
  6121  00106A  C082  F07E         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6122  00106E  C083  F07F         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6123  001072  C084  F080         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6124  001076  0E05               	movlw	5
  6125  001078                     u3565:
  6126  001078  90D8               	bcf	status,0,c
  6127  00107A  0100               	movlb	0	; () banked
  6128  00107C  377D               	rlcf	??_CANsendMessage& (0+255),f,b
  6129  00107E  377E               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  6130  001080  377F               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  6131  001082  3780               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  6132  001084  2EE8               	decfsz	wreg,f,c
  6133  001086  D7F8               	goto	u3565
  6134  001088  C07D  F081         	movff	??_CANsendMessage,CANsendMessage@tamp
  6135  00108C  C07E  F082         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6136  001090  C07F  F083         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6137  001094  C080  F084         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6138                           
  6139                           ; BSR set to: 0
  6140                           ;inc\CANlib.h: 421: TXB1SIDL = TXB1SIDL & 0b00011111;
  6141  001098  010F               	movlb	15	; () banked
  6142  00109A  5132               	movf	50,w,b	;volatile
  6143  00109C  0B1F               	andlw	31
  6144  00109E  010F               	movlb	15	; () banked
  6145  0010A0  6F32               	movwf	50,b	;volatile
  6146                           
  6147                           ; BSR set to: 15
  6148                           ;inc\CANlib.h: 422: TXB1SIDL = (unsigned char) tamp;
  6149  0010A2  C081  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  6150  0010A6                     l3235:
  6151                           
  6152                           ;inc\CANlib.h: 423: }
  6153                           ;inc\CANlib.h: 425: if (0b00000001 & flags)
  6154  0010A6  0100               	movlb	0	; () banked
  6155  0010A8  A17C               	btfss	CANsendMessage@flags& (0+255),0,b
  6156  0010AA  D003               	goto	l392
  6157                           
  6158                           ; BSR set to: 0
  6159                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x01;
  6160  0010AC  010F               	movlb	15	; () banked
  6161  0010AE  8130               	bsf	48,0,b	;volatile
  6162  0010B0  D002               	goto	l393
  6163  0010B2                     l392:
  6164                           
  6165                           ; BSR set to: 0
  6166                           ;inc\CANlib.h: 427: else
  6167                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI0 = 0x00;
  6168  0010B2  010F               	movlb	15	; () banked
  6169  0010B4  9130               	bcf	48,0,b	;volatile
  6170  0010B6                     l393:
  6171                           
  6172                           ; BSR set to: 15
  6173                           ;inc\CANlib.h: 429: if (0b00000010 & flags)
  6174  0010B6  0100               	movlb	0	; () banked
  6175  0010B8  A37C               	btfss	CANsendMessage@flags& (0+255),1,b
  6176  0010BA  D003               	goto	l394
  6177                           
  6178                           ; BSR set to: 0
  6179                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x01;
  6180  0010BC  010F               	movlb	15	; () banked
  6181  0010BE  8330               	bsf	48,1,b	;volatile
  6182  0010C0  D002               	goto	l3241
  6183  0010C2                     l394:
  6184                           
  6185                           ; BSR set to: 0
  6186                           ;inc\CANlib.h: 431: else
  6187                           ;inc\CANlib.h: 432: TXB1CONbits.TXPRI1 = 0x00;
  6188  0010C2  010F               	movlb	15	; () banked
  6189  0010C4  9330               	bcf	48,1,b	;volatile
  6190  0010C6                     l3241:
  6191                           
  6192                           ; BSR set to: 15
  6193                           ;inc\CANlib.h: 434: TXB1D0 = data[0];
  6194  0010C6  C079  FFD9         	movff	CANsendMessage@data,fsr2l
  6195  0010CA  C07A  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6196  0010CE  50DF               	movf	indf2,w,c
  6197  0010D0  010F               	movlb	15	; () banked
  6198  0010D2  6F36               	movwf	54,b	;volatile
  6199                           
  6200                           ; BSR set to: 15
  6201                           ;inc\CANlib.h: 435: TXB1D1 = data[1];
  6202  0010D4  0100               	movlb	0	; () banked
  6203  0010D6  EE20 F001          	lfsr	2,1
  6204  0010DA  5179               	movf	CANsendMessage@data& (0+255),w,b
  6205  0010DC  26D9               	addwf	fsr2l,f,c
  6206  0010DE  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6207  0010E0  22DA               	addwfc	fsr2h,f,c
  6208  0010E2  50DF               	movf	indf2,w,c
  6209  0010E4  010F               	movlb	15	; () banked
  6210  0010E6  6F37               	movwf	55,b	;volatile
  6211                           
  6212                           ; BSR set to: 15
  6213                           ;inc\CANlib.h: 436: TXB1D2 = data[2];
  6214  0010E8  0100               	movlb	0	; () banked
  6215  0010EA  EE20 F002          	lfsr	2,2
  6216  0010EE  5179               	movf	CANsendMessage@data& (0+255),w,b
  6217  0010F0  26D9               	addwf	fsr2l,f,c
  6218  0010F2  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6219  0010F4  22DA               	addwfc	fsr2h,f,c
  6220  0010F6  50DF               	movf	indf2,w,c
  6221  0010F8  010F               	movlb	15	; () banked
  6222  0010FA  6F38               	movwf	56,b	;volatile
  6223                           
  6224                           ; BSR set to: 15
  6225                           ;inc\CANlib.h: 437: TXB1D3 = data[3];
  6226  0010FC  0100               	movlb	0	; () banked
  6227  0010FE  EE20 F003          	lfsr	2,3
  6228  001102  5179               	movf	CANsendMessage@data& (0+255),w,b
  6229  001104  26D9               	addwf	fsr2l,f,c
  6230  001106  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6231  001108  22DA               	addwfc	fsr2h,f,c
  6232  00110A  50DF               	movf	indf2,w,c
  6233  00110C  010F               	movlb	15	; () banked
  6234  00110E  6F39               	movwf	57,b	;volatile
  6235                           
  6236                           ; BSR set to: 15
  6237                           ;inc\CANlib.h: 438: TXB1D4 = data[4];
  6238  001110  0100               	movlb	0	; () banked
  6239  001112  EE20 F004          	lfsr	2,4
  6240  001116  5179               	movf	CANsendMessage@data& (0+255),w,b
  6241  001118  26D9               	addwf	fsr2l,f,c
  6242  00111A  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6243  00111C  22DA               	addwfc	fsr2h,f,c
  6244  00111E  50DF               	movf	indf2,w,c
  6245  001120  010F               	movlb	15	; () banked
  6246  001122  6F3A               	movwf	58,b	;volatile
  6247                           
  6248                           ; BSR set to: 15
  6249                           ;inc\CANlib.h: 439: TXB1D5 = data[5];
  6250  001124  0100               	movlb	0	; () banked
  6251  001126  EE20 F005          	lfsr	2,5
  6252  00112A  5179               	movf	CANsendMessage@data& (0+255),w,b
  6253  00112C  26D9               	addwf	fsr2l,f,c
  6254  00112E  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6255  001130  22DA               	addwfc	fsr2h,f,c
  6256  001132  50DF               	movf	indf2,w,c
  6257  001134  010F               	movlb	15	; () banked
  6258  001136  6F3B               	movwf	59,b	;volatile
  6259                           
  6260                           ; BSR set to: 15
  6261                           ;inc\CANlib.h: 440: TXB1D6 = data[6];
  6262  001138  0100               	movlb	0	; () banked
  6263  00113A  EE20 F006          	lfsr	2,6
  6264  00113E  5179               	movf	CANsendMessage@data& (0+255),w,b
  6265  001140  26D9               	addwf	fsr2l,f,c
  6266  001142  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6267  001144  22DA               	addwfc	fsr2h,f,c
  6268  001146  50DF               	movf	indf2,w,c
  6269  001148  010F               	movlb	15	; () banked
  6270  00114A  6F3C               	movwf	60,b	;volatile
  6271                           
  6272                           ; BSR set to: 15
  6273                           ;inc\CANlib.h: 441: TXB1D7 = data[7];
  6274  00114C  0100               	movlb	0	; () banked
  6275  00114E  EE20 F007          	lfsr	2,7
  6276  001152  5179               	movf	CANsendMessage@data& (0+255),w,b
  6277  001154  26D9               	addwf	fsr2l,f,c
  6278  001156  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6279  001158  22DA               	addwfc	fsr2h,f,c
  6280  00115A  50DF               	movf	indf2,w,c
  6281  00115C  010F               	movlb	15	; () banked
  6282  00115E  6F3D               	movwf	61,b	;volatile
  6283                           
  6284                           ; BSR set to: 15
  6285                           ;inc\CANlib.h: 443: TXB1CONbits.TXREQ = 0x01;
  6286  001160  010F               	movlb	15	; () banked
  6287  001162  8730               	bsf	48,3,b	;volatile
  6288                           
  6289                           ; BSR set to: 15
  6290                           ;inc\CANlib.h: 445: return;
  6291  001164  0012               	return	
  6292  001166                     l382:
  6293                           
  6294                           ; BSR set to: 15
  6295                           ;inc\CANlib.h: 446: }
  6296                           ;inc\CANlib.h: 450: if (TXB2CONbits.TXREQ == 0)
  6297  001166  010F               	movlb	15	; () banked
  6298  001168  B720               	btfsc	32,3,b	;volatile
  6299  00116A  0012               	return	
  6300                           
  6301                           ; BSR set to: 15
  6302                           ;inc\CANlib.h: 451: { TXB2DLC = dataLength;
  6303  00116C  C07B  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  6304                           
  6305                           ;inc\CANlib.h: 453: if (0b01000000 & flags)
  6306  001170  0100               	movlb	0	; () banked
  6307  001172  AD7C               	btfss	CANsendMessage@flags& (0+255),6,b
  6308  001174  D003               	goto	l397
  6309                           
  6310                           ; BSR set to: 0
  6311                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x01;
  6312  001176  010F               	movlb	15	; () banked
  6313  001178  8D25               	bsf	37,6,b	;volatile
  6314  00117A  D002               	goto	l398
  6315  00117C                     l397:
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;inc\CANlib.h: 455: else
  6319                           ;inc\CANlib.h: 456: TXB2DLCbits.TXRTR = 0x00;
  6320  00117C  010F               	movlb	15	; () banked
  6321  00117E  9D25               	bcf	37,6,b	;volatile
  6322  001180                     l398:
  6323                           
  6324                           ; BSR set to: 15
  6325                           ;inc\CANlib.h: 458: if (CAN_TX_FRAME_MASK & flags)
  6326  001180  0100               	movlb	0	; () banked
  6327  001182  A77C               	btfss	CANsendMessage@flags& (0+255),3,b
  6328  001184  D079               	goto	l399
  6329                           
  6330                           ; BSR set to: 0
  6331                           ;inc\CANlib.h: 459: {
  6332                           ;inc\CANlib.h: 460: tamp = identifier & 0x000000FF;
  6333  001186  0100               	movlb	0	; () banked
  6334  001188  5175               	movf	CANsendMessage@identifier& (0+255),w,b
  6335  00118A  0100               	movlb	0	; () banked
  6336  00118C  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  6337  00118E  6B82               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6338  001190  6B83               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6339  001192  6B84               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6340                           
  6341                           ; BSR set to: 0
  6342                           ;inc\CANlib.h: 461: TXB2EIDL = (unsigned char) tamp;
  6343  001194  C081  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  6344                           
  6345                           ; BSR set to: 0
  6346                           ;inc\CANlib.h: 463: tamp = identifier & 0x0000FF00;
  6347  001198  0E00               	movlw	0
  6348  00119A  0100               	movlb	0	; () banked
  6349  00119C  1575               	andwf	CANsendMessage@identifier& (0+255),w,b
  6350  00119E  0100               	movlb	0	; () banked
  6351  0011A0  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  6352  0011A2  0EFF               	movlw	255
  6353  0011A4  0100               	movlb	0	; () banked
  6354  0011A6  1576               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6355  0011A8  0100               	movlb	0	; () banked
  6356  0011AA  6F82               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6357  0011AC  0E00               	movlw	0
  6358  0011AE  0100               	movlb	0	; () banked
  6359  0011B0  1577               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6360  0011B2  0100               	movlb	0	; () banked
  6361  0011B4  6F83               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6362  0011B6  0E00               	movlw	0
  6363  0011B8  0100               	movlb	0	; () banked
  6364  0011BA  1578               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6365  0011BC  0100               	movlb	0	; () banked
  6366  0011BE  6F84               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6367                           
  6368                           ; BSR set to: 0
  6369                           ;inc\CANlib.h: 464: tamp = tamp >> 8;
  6370  0011C0  C081  F07D         	movff	CANsendMessage@tamp,??_CANsendMessage
  6371  0011C4  C082  F07E         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6372  0011C8  C083  F07F         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6373  0011CC  C084  F080         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6374  0011D0  C07E  F07D         	movff	??_CANsendMessage+1,??_CANsendMessage
  6375  0011D4  C07F  F07E         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6376  0011D8  C080  F07F         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6377  0011DC  0100               	movlb	0	; () banked
  6378  0011DE  6B80               	clrf	(??_CANsendMessage+3)& (0+255),b
  6379  0011E0  C07D  F081         	movff	??_CANsendMessage,CANsendMessage@tamp
  6380  0011E4  C07E  F082         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6381  0011E8  C07F  F083         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6382  0011EC  C080  F084         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6383                           
  6384                           ; BSR set to: 0
  6385                           ;inc\CANlib.h: 465: TXB2EIDH = (unsigned char) tamp;
  6386  0011F0  C081  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  6387                           
  6388                           ; BSR set to: 0
  6389                           ;inc\CANlib.h: 467: TXB2SIDL = 0x00;
  6390  0011F4  0E00               	movlw	0
  6391  0011F6  010F               	movlb	15	; () banked
  6392  0011F8  6F22               	movwf	34,b	;volatile
  6393                           
  6394                           ; BSR set to: 15
  6395                           ;inc\CANlib.h: 468: TXB2SIDLbits.EXIDE = 0x01;
  6396  0011FA  010F               	movlb	15	; () banked
  6397  0011FC  8722               	bsf	34,3,b	;volatile
  6398                           
  6399                           ; BSR set to: 15
  6400                           ;inc\CANlib.h: 470: if (identifier & 0x00010000)
  6401  0011FE  0100               	movlb	0	; () banked
  6402  001200  A177               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6403  001202  D002               	goto	l400
  6404                           
  6405                           ; BSR set to: 0
  6406                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID16 = 0x01;
  6407  001204  010F               	movlb	15	; () banked
  6408  001206  8122               	bsf	34,0,b	;volatile
  6409  001208                     l400:
  6410                           
  6411                           ;inc\CANlib.h: 472: if (identifier & 0x00020000)
  6412  001208  0100               	movlb	0	; () banked
  6413  00120A  A377               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6414  00120C  D002               	goto	l401
  6415                           
  6416                           ; BSR set to: 0
  6417                           ;inc\CANlib.h: 473: TXB2SIDLbits.EID17 = 0x01;
  6418  00120E  010F               	movlb	15	; () banked
  6419  001210  8322               	bsf	34,1,b	;volatile
  6420  001212                     l401:
  6421                           
  6422                           ;inc\CANlib.h: 474: if (identifier & 0x00040000)
  6423  001212  0100               	movlb	0	; () banked
  6424  001214  A577               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6425  001216  D002               	goto	l402
  6426                           
  6427                           ; BSR set to: 0
  6428                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID0 = 0x01;
  6429  001218  010F               	movlb	15	; () banked
  6430  00121A  8B22               	bsf	34,5,b	;volatile
  6431  00121C                     l402:
  6432                           
  6433                           ;inc\CANlib.h: 476: if (identifier & 0x00080000)
  6434  00121C  0100               	movlb	0	; () banked
  6435  00121E  A777               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6436  001220  D002               	goto	l403
  6437                           
  6438                           ; BSR set to: 0
  6439                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID1 = 0x01;
  6440  001222  010F               	movlb	15	; () banked
  6441  001224  8D22               	bsf	34,6,b	;volatile
  6442  001226                     l403:
  6443                           
  6444                           ;inc\CANlib.h: 478: if (identifier & 0x00100000)
  6445  001226  0100               	movlb	0	; () banked
  6446  001228  A977               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6447  00122A  D002               	goto	l3291
  6448                           
  6449                           ; BSR set to: 0
  6450                           ;inc\CANlib.h: 479: TXB2SIDLbits.SID2 = 0x01;
  6451  00122C  010F               	movlb	15	; () banked
  6452  00122E  8F22               	bsf	34,7,b	;volatile
  6453  001230                     l3291:
  6454                           
  6455                           ;inc\CANlib.h: 481: tamp = (identifier >> 21);
  6456  001230  C075  F07D         	movff	CANsendMessage@identifier,??_CANsendMessage
  6457  001234  C076  F07E         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6458  001238  C077  F07F         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6459  00123C  C078  F080         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6460  001240  0E16               	movlw	22
  6461  001242  D006               	goto	u3670
  6462  001244                     u3675:
  6463  001244  0100               	movlb	0	; () banked
  6464  001246  90D8               	bcf	status,0,c
  6465  001248  3380               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6466  00124A  337F               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6467  00124C  337E               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6468  00124E  337D               	rrcf	??_CANsendMessage& (0+255),f,b
  6469  001250                     u3670:
  6470  001250  2EE8               	decfsz	wreg,f,c
  6471  001252  D7F8               	goto	u3675
  6472  001254  C07D  F081         	movff	??_CANsendMessage,CANsendMessage@tamp
  6473  001258  C07E  F082         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6474  00125C  C07F  F083         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6475  001260  C080  F084         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6476                           
  6477                           ; BSR set to: 0
  6478                           ;inc\CANlib.h: 482: tamp = tamp & 0x000000FF;
  6479  001264  0100               	movlb	0	; () banked
  6480  001266  5181               	movf	CANsendMessage@tamp& (0+255),w,b
  6481  001268  0100               	movlb	0	; () banked
  6482  00126A  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  6483  00126C  6B82               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6484  00126E  6B83               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6485  001270  6B84               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6486                           
  6487                           ; BSR set to: 0
  6488                           ;inc\CANlib.h: 483: TXB2SIDH = (unsigned char) tamp;
  6489  001272  C081  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6490                           
  6491                           ;inc\CANlib.h: 484: }
  6492  001276  D059               	goto	l3311
  6493  001278                     l399:
  6494                           
  6495                           ; BSR set to: 0
  6496                           ;inc\CANlib.h: 486: else
  6497                           ;inc\CANlib.h: 488: {
  6498                           ;inc\CANlib.h: 489: TXB2SIDLbits.EXIDE = 0x00;
  6499  001278  010F               	movlb	15	; () banked
  6500  00127A  9722               	bcf	34,3,b	;volatile
  6501                           
  6502                           ; BSR set to: 15
  6503                           ;inc\CANlib.h: 491: tamp = (identifier >> 3);
  6504  00127C  C075  F07D         	movff	CANsendMessage@identifier,??_CANsendMessage
  6505  001280  C076  F07E         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6506  001284  C077  F07F         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6507  001288  C078  F080         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6508  00128C  0E04               	movlw	4
  6509  00128E  D006               	goto	u3680
  6510  001290                     u3685:
  6511  001290  0100               	movlb	0	; () banked
  6512  001292  90D8               	bcf	status,0,c
  6513  001294  3380               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6514  001296  337F               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6515  001298  337E               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6516  00129A  337D               	rrcf	??_CANsendMessage& (0+255),f,b
  6517  00129C                     u3680:
  6518  00129C  2EE8               	decfsz	wreg,f,c
  6519  00129E  D7F8               	goto	u3685
  6520  0012A0  C07D  F081         	movff	??_CANsendMessage,CANsendMessage@tamp
  6521  0012A4  C07E  F082         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6522  0012A8  C07F  F083         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6523  0012AC  C080  F084         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6524                           
  6525                           ; BSR set to: 0
  6526                           ;inc\CANlib.h: 492: tamp = tamp & 0x000000FF;
  6527  0012B0  0100               	movlb	0	; () banked
  6528  0012B2  5181               	movf	CANsendMessage@tamp& (0+255),w,b
  6529  0012B4  0100               	movlb	0	; () banked
  6530  0012B6  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  6531  0012B8  6B82               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6532  0012BA  6B83               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6533  0012BC  6B84               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6534                           
  6535                           ; BSR set to: 0
  6536                           ;inc\CANlib.h: 493: TXB2SIDH = (unsigned char) tamp;
  6537  0012BE  C081  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6538                           
  6539                           ; BSR set to: 0
  6540                           ;inc\CANlib.h: 495: tamp = identifier & 0x00000007;
  6541  0012C2  0E07               	movlw	7
  6542  0012C4  0100               	movlb	0	; () banked
  6543  0012C6  1575               	andwf	CANsendMessage@identifier& (0+255),w,b
  6544  0012C8  0100               	movlb	0	; () banked
  6545  0012CA  6F81               	movwf	CANsendMessage@tamp& (0+255),b
  6546  0012CC  0E00               	movlw	0
  6547  0012CE  0100               	movlb	0	; () banked
  6548  0012D0  1576               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6549  0012D2  0100               	movlb	0	; () banked
  6550  0012D4  6F82               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6551  0012D6  0E00               	movlw	0
  6552  0012D8  0100               	movlb	0	; () banked
  6553  0012DA  1577               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6554  0012DC  0100               	movlb	0	; () banked
  6555  0012DE  6F83               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6556  0012E0  0E00               	movlw	0
  6557  0012E2  0100               	movlb	0	; () banked
  6558  0012E4  1578               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6559  0012E6  0100               	movlb	0	; () banked
  6560  0012E8  6F84               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6561                           
  6562                           ; BSR set to: 0
  6563                           ;inc\CANlib.h: 496: tamp = tamp << 5;
  6564  0012EA  C081  F07D         	movff	CANsendMessage@tamp,??_CANsendMessage
  6565  0012EE  C082  F07E         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6566  0012F2  C083  F07F         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6567  0012F6  C084  F080         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6568  0012FA  0E05               	movlw	5
  6569  0012FC                     u3695:
  6570  0012FC  90D8               	bcf	status,0,c
  6571  0012FE  0100               	movlb	0	; () banked
  6572  001300  377D               	rlcf	??_CANsendMessage& (0+255),f,b
  6573  001302  377E               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  6574  001304  377F               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  6575  001306  3780               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  6576  001308  2EE8               	decfsz	wreg,f,c
  6577  00130A  D7F8               	goto	u3695
  6578  00130C  C07D  F081         	movff	??_CANsendMessage,CANsendMessage@tamp
  6579  001310  C07E  F082         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6580  001314  C07F  F083         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6581  001318  C080  F084         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6582                           
  6583                           ; BSR set to: 0
  6584                           ;inc\CANlib.h: 497: TXB2SIDL = TXB2SIDL & 0b00011111;
  6585  00131C  010F               	movlb	15	; () banked
  6586  00131E  5122               	movf	34,w,b	;volatile
  6587  001320  0B1F               	andlw	31
  6588  001322  010F               	movlb	15	; () banked
  6589  001324  6F22               	movwf	34,b	;volatile
  6590                           
  6591                           ; BSR set to: 15
  6592                           ;inc\CANlib.h: 498: TXB2SIDL = (unsigned char) tamp;
  6593  001326  C081  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  6594  00132A                     l3311:
  6595                           
  6596                           ;inc\CANlib.h: 499: }
  6597                           ;inc\CANlib.h: 501: if (0b00000001 & flags)
  6598  00132A  0100               	movlb	0	; () banked
  6599  00132C  A17C               	btfss	CANsendMessage@flags& (0+255),0,b
  6600  00132E  D003               	goto	l406
  6601                           
  6602                           ; BSR set to: 0
  6603                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x01;
  6604  001330  010F               	movlb	15	; () banked
  6605  001332  8120               	bsf	32,0,b	;volatile
  6606  001334  D002               	goto	l407
  6607  001336                     l406:
  6608                           
  6609                           ; BSR set to: 0
  6610                           ;inc\CANlib.h: 503: else
  6611                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI0 = 0x00;
  6612  001336  010F               	movlb	15	; () banked
  6613  001338  9120               	bcf	32,0,b	;volatile
  6614  00133A                     l407:
  6615                           
  6616                           ; BSR set to: 15
  6617                           ;inc\CANlib.h: 505: if (0b00000010 & flags)
  6618  00133A  0100               	movlb	0	; () banked
  6619  00133C  A37C               	btfss	CANsendMessage@flags& (0+255),1,b
  6620  00133E  D003               	goto	l408
  6621                           
  6622                           ; BSR set to: 0
  6623                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x01;
  6624  001340  010F               	movlb	15	; () banked
  6625  001342  8320               	bsf	32,1,b	;volatile
  6626  001344  D002               	goto	l3317
  6627  001346                     l408:
  6628                           
  6629                           ; BSR set to: 0
  6630                           ;inc\CANlib.h: 507: else
  6631                           ;inc\CANlib.h: 508: TXB2CONbits.TXPRI1 = 0x00;
  6632  001346  010F               	movlb	15	; () banked
  6633  001348  9320               	bcf	32,1,b	;volatile
  6634  00134A                     l3317:
  6635                           
  6636                           ; BSR set to: 15
  6637                           ;inc\CANlib.h: 510: TXB2D0 = data[0];
  6638  00134A  C079  FFD9         	movff	CANsendMessage@data,fsr2l
  6639  00134E  C07A  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6640  001352  50DF               	movf	indf2,w,c
  6641  001354  010F               	movlb	15	; () banked
  6642  001356  6F26               	movwf	38,b	;volatile
  6643                           
  6644                           ; BSR set to: 15
  6645                           ;inc\CANlib.h: 511: TXB2D1 = data[1];
  6646  001358  0100               	movlb	0	; () banked
  6647  00135A  EE20 F001          	lfsr	2,1
  6648  00135E  5179               	movf	CANsendMessage@data& (0+255),w,b
  6649  001360  26D9               	addwf	fsr2l,f,c
  6650  001362  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6651  001364  22DA               	addwfc	fsr2h,f,c
  6652  001366  50DF               	movf	indf2,w,c
  6653  001368  010F               	movlb	15	; () banked
  6654  00136A  6F27               	movwf	39,b	;volatile
  6655                           
  6656                           ; BSR set to: 15
  6657                           ;inc\CANlib.h: 512: TXB2D2 = data[2];
  6658  00136C  0100               	movlb	0	; () banked
  6659  00136E  EE20 F002          	lfsr	2,2
  6660  001372  5179               	movf	CANsendMessage@data& (0+255),w,b
  6661  001374  26D9               	addwf	fsr2l,f,c
  6662  001376  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6663  001378  22DA               	addwfc	fsr2h,f,c
  6664  00137A  50DF               	movf	indf2,w,c
  6665  00137C  010F               	movlb	15	; () banked
  6666  00137E  6F28               	movwf	40,b	;volatile
  6667                           
  6668                           ; BSR set to: 15
  6669                           ;inc\CANlib.h: 513: TXB2D3 = data[3];
  6670  001380  0100               	movlb	0	; () banked
  6671  001382  EE20 F003          	lfsr	2,3
  6672  001386  5179               	movf	CANsendMessage@data& (0+255),w,b
  6673  001388  26D9               	addwf	fsr2l,f,c
  6674  00138A  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6675  00138C  22DA               	addwfc	fsr2h,f,c
  6676  00138E  50DF               	movf	indf2,w,c
  6677  001390  010F               	movlb	15	; () banked
  6678  001392  6F29               	movwf	41,b	;volatile
  6679                           
  6680                           ; BSR set to: 15
  6681                           ;inc\CANlib.h: 514: TXB2D4 = data[4];
  6682  001394  0100               	movlb	0	; () banked
  6683  001396  EE20 F004          	lfsr	2,4
  6684  00139A  5179               	movf	CANsendMessage@data& (0+255),w,b
  6685  00139C  26D9               	addwf	fsr2l,f,c
  6686  00139E  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6687  0013A0  22DA               	addwfc	fsr2h,f,c
  6688  0013A2  50DF               	movf	indf2,w,c
  6689  0013A4  010F               	movlb	15	; () banked
  6690  0013A6  6F2A               	movwf	42,b	;volatile
  6691                           
  6692                           ; BSR set to: 15
  6693                           ;inc\CANlib.h: 515: TXB2D5 = data[5];
  6694  0013A8  0100               	movlb	0	; () banked
  6695  0013AA  EE20 F005          	lfsr	2,5
  6696  0013AE  5179               	movf	CANsendMessage@data& (0+255),w,b
  6697  0013B0  26D9               	addwf	fsr2l,f,c
  6698  0013B2  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6699  0013B4  22DA               	addwfc	fsr2h,f,c
  6700  0013B6  50DF               	movf	indf2,w,c
  6701  0013B8  010F               	movlb	15	; () banked
  6702  0013BA  6F2B               	movwf	43,b	;volatile
  6703                           
  6704                           ; BSR set to: 15
  6705                           ;inc\CANlib.h: 516: TXB2D6 = data[6];
  6706  0013BC  0100               	movlb	0	; () banked
  6707  0013BE  EE20 F006          	lfsr	2,6
  6708  0013C2  5179               	movf	CANsendMessage@data& (0+255),w,b
  6709  0013C4  26D9               	addwf	fsr2l,f,c
  6710  0013C6  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6711  0013C8  22DA               	addwfc	fsr2h,f,c
  6712  0013CA  50DF               	movf	indf2,w,c
  6713  0013CC  010F               	movlb	15	; () banked
  6714  0013CE  6F2C               	movwf	44,b	;volatile
  6715                           
  6716                           ; BSR set to: 15
  6717                           ;inc\CANlib.h: 517: TXB2D7 = data[7];
  6718  0013D0  0100               	movlb	0	; () banked
  6719  0013D2  EE20 F007          	lfsr	2,7
  6720  0013D6  5179               	movf	CANsendMessage@data& (0+255),w,b
  6721  0013D8  26D9               	addwf	fsr2l,f,c
  6722  0013DA  517A               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6723  0013DC  22DA               	addwfc	fsr2h,f,c
  6724  0013DE  50DF               	movf	indf2,w,c
  6725  0013E0  010F               	movlb	15	; () banked
  6726  0013E2  6F2D               	movwf	45,b	;volatile
  6727                           
  6728                           ; BSR set to: 15
  6729                           ;inc\CANlib.h: 519: TXB2CONbits.TXREQ = 0x01;
  6730  0013E4  010F               	movlb	15	; () banked
  6731  0013E6  8720               	bsf	32,3,b	;volatile
  6732                           
  6733                           ; BSR set to: 15
  6734                           ;inc\CANlib.h: 521: return;
  6735  0013E8  0012               	return	
  6736  0013EA                     __end_of_CANsendMessage:
  6737                           	opt stack 0
  6738                           tblptru	equ	0xFF8
  6739                           tblptrh	equ	0xFF7
  6740                           tblptrl	equ	0xFF6
  6741                           tablat	equ	0xFF5
  6742                           prodh	equ	0xFF4
  6743                           prodl	equ	0xFF3
  6744                           intcon	equ	0xFF2
  6745                           postinc0	equ	0xFEE
  6746                           wreg	equ	0xFE8
  6747                           indf1	equ	0xFE7
  6748                           postinc1	equ	0xFE6
  6749                           postdec1	equ	0xFE5
  6750                           fsr1h	equ	0xFE2
  6751                           fsr1l	equ	0xFE1
  6752                           indf2	equ	0xFDF
  6753                           postinc2	equ	0xFDE
  6754                           fsr2h	equ	0xFDA
  6755                           fsr2l	equ	0xFD9
  6756                           status	equ	0xFD8
  6757                           
  6758 ;; *************** function _CANisTxReady *****************
  6759 ;; Defined at:
  6760 ;;		line 1155 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6761 ;; Parameters:    Size  Location     Type
  6762 ;;		None
  6763 ;; Auto vars:     Size  Location     Type
  6764 ;;		None
  6765 ;; Return value:  Size  Location     Type
  6766 ;;                  1    wreg      unsigned char 
  6767 ;; Registers used:
  6768 ;;		wreg, status,2
  6769 ;; Tracked objects:
  6770 ;;		On entry : 0/0
  6771 ;;		On exit  : 0/0
  6772 ;;		Unchanged: 0/0
  6773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6774 ;;      Params:         0       0       0       0
  6775 ;;      Locals:         0       1       0       0
  6776 ;;      Temps:          0       0       0       0
  6777 ;;      Totals:         0       1       0       0
  6778 ;;Total ram usage:        1 bytes
  6779 ;; Hardware stack levels used:    1
  6780 ;; Hardware stack levels required when called:    5
  6781 ;; This function calls:
  6782 ;;		Nothing
  6783 ;; This function is called by:
  6784 ;;		_can_interpreter
  6785 ;; This function uses a non-reentrant model
  6786 ;;
  6787                           
  6788                           	psect	text13
  6789  002556                     __ptext13:
  6790                           	opt stack 0
  6791  002556                     _CANisTxReady:
  6792                           	opt stack 24
  6793                           
  6794                           ;inc\CANlib.h: 1157: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  6795                           
  6796                           ; BSR set to: 15
  6797                           ;incstack = 0
  6798  002556  0E01               	movlw	1
  6799  002558  0100               	movlb	0	; () banked
  6800  00255A  6F75               	movwf	_CANisTxReady$3180& (0+255),b
  6801                           
  6802                           ; BSR set to: 0
  6803  00255C  010F               	movlb	15	; () banked
  6804  00255E  A740               	btfss	64,3,b	;volatile
  6805  002560  D009               	goto	l560
  6806                           
  6807                           ; BSR set to: 15
  6808  002562  010F               	movlb	15	; () banked
  6809  002564  A730               	btfss	48,3,b	;volatile
  6810  002566  D006               	goto	l560
  6811                           
  6812                           ; BSR set to: 15
  6813  002568  010F               	movlb	15	; () banked
  6814  00256A  A720               	btfss	32,3,b	;volatile
  6815  00256C  D003               	goto	l560
  6816                           
  6817                           ; BSR set to: 15
  6818  00256E  0E00               	movlw	0
  6819  002570  0100               	movlb	0	; () banked
  6820  002572  6F75               	movwf	_CANisTxReady$3180& (0+255),b
  6821  002574                     l560:
  6822  002574  0100               	movlb	0	; () banked
  6823  002576  5175               	movf	_CANisTxReady$3180& (0+255),w,b
  6824  002578  0012               	return	
  6825  00257A                     __end_of_CANisTxReady:
  6826                           	opt stack 0
  6827                           tblptru	equ	0xFF8
  6828                           tblptrh	equ	0xFF7
  6829                           tblptrl	equ	0xFF6
  6830                           tablat	equ	0xFF5
  6831                           prodh	equ	0xFF4
  6832                           prodl	equ	0xFF3
  6833                           intcon	equ	0xFF2
  6834                           postinc0	equ	0xFEE
  6835                           wreg	equ	0xFE8
  6836                           indf1	equ	0xFE7
  6837                           postinc1	equ	0xFE6
  6838                           postdec1	equ	0xFE5
  6839                           fsr1h	equ	0xFE2
  6840                           fsr1l	equ	0xFE1
  6841                           indf2	equ	0xFDF
  6842                           postinc2	equ	0xFDE
  6843                           fsr2h	equ	0xFDA
  6844                           fsr2l	equ	0xFD9
  6845                           status	equ	0xFD8
  6846                           
  6847 ;; *************** function _ISR_bassa *****************
  6848 ;; Defined at:
  6849 ;;		line 90 in file "CanToSerial.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;		None
  6852 ;; Auto vars:     Size  Location     Type
  6853 ;;  i               1   30[COMRAM] unsigned char 
  6854 ;; Return value:  Size  Location     Type
  6855 ;;		None               void
  6856 ;; Registers used:
  6857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6863 ;;      Params:         0       0       0       0
  6864 ;;      Locals:         1       0       0       0
  6865 ;;      Temps:         18       0       0       0
  6866 ;;      Totals:        19       0       0       0
  6867 ;;Total ram usage:       19 bytes
  6868 ;; Hardware stack levels used:    1
  6869 ;; Hardware stack levels required when called:    4
  6870 ;; This function calls:
  6871 ;;		_CANisRxReady
  6872 ;;		_CANreceiveMessage
  6873 ;; This function is called by:
  6874 ;;		Interrupt level 1
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878                           	psect	intcodelo
  6879  000018                     __pintcodelo:
  6880                           	opt stack 0
  6881  000018                     _ISR_bassa:
  6882                           	opt stack 23
  6883                           
  6884                           ; BSR set to: 0
  6885                           ;incstack = 0
  6886  000018  804A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  6887  00001A  CFD8 F037          	movff	status,??_ISR_bassa+1
  6888  00001E  CFE8 F038          	movff	wreg,??_ISR_bassa+2
  6889  000022  CFE0 F039          	movff	bsr,??_ISR_bassa+3
  6890  000026  CFFA F03A          	movff	pclath,??_ISR_bassa+4
  6891  00002A  CFFB F03B          	movff	pclatu,??_ISR_bassa+5
  6892  00002E  CFE9 F03C          	movff	fsr0l,??_ISR_bassa+6
  6893  000032  CFEA F03D          	movff	fsr0h,??_ISR_bassa+7
  6894  000036  CFE1 F03E          	movff	fsr1l,??_ISR_bassa+8
  6895  00003A  CFE2 F03F          	movff	fsr1h,??_ISR_bassa+9
  6896  00003E  CFD9 F040          	movff	fsr2l,??_ISR_bassa+10
  6897  000042  CFDA F041          	movff	fsr2h,??_ISR_bassa+11
  6898  000046  CFF3 F042          	movff	prodl,??_ISR_bassa+12
  6899  00004A  CFF4 F043          	movff	prodh,??_ISR_bassa+13
  6900  00004E  CFF6 F044          	movff	tblptrl,??_ISR_bassa+14
  6901  000052  CFF7 F045          	movff	tblptrh,??_ISR_bassa+15
  6902  000056  CFF8 F046          	movff	tblptru,??_ISR_bassa+16
  6903  00005A  CFF5 F047          	movff	tablat,??_ISR_bassa+17
  6904                           
  6905                           ;CanToSerial.c: 91: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  6906  00005E  A0A4               	btfss	4004,0,c	;volatile
  6907  000060  B2A4               	btfsc	4004,1,c	;volatile
  6908  000062  D001               	goto	i1l3745
  6909  000064  D045               	goto	i1l635
  6910  000066                     i1l3745:
  6911                           
  6912                           ;CanToSerial.c: 92: LATDbits.LATD3 = ~LATDbits.LATD3;
  6913  000066  A68C               	btfss	3980,3,c	;volatile
  6914  000068  D002               	goto	i1u444_20
  6915  00006A  0E01               	movlw	1
  6916  00006C  D001               	goto	i1u444_26
  6917  00006E                     i1u444_20:
  6918  00006E  0E00               	movlw	0
  6919  000070                     i1u444_26:
  6920  000070  0AFF               	xorlw	255
  6921  000072  6E36               	movwf	??_ISR_bassa& (0+255),c
  6922  000074  4636               	rlncf	??_ISR_bassa,f,c
  6923  000076  4636               	rlncf	??_ISR_bassa,f,c
  6924  000078  4636               	rlncf	??_ISR_bassa,f,c
  6925  00007A  508C               	movf	3980,w,c	;volatile
  6926  00007C  1836               	xorwf	??_ISR_bassa,w,c
  6927  00007E  0BF7               	andlw	-9
  6928  000080  1836               	xorwf	??_ISR_bassa,w,c
  6929  000082  6E8C               	movwf	3980,c	;volatile
  6930                           
  6931                           ;CanToSerial.c: 93: if (CANisRxReady()) {
  6932  000084  ECD8  F012         	call	_CANisRxReady	;wreg free
  6933  000088  0900               	iorlw	0
  6934  00008A  B4D8               	btfsc	status,2,c
  6935  00008C  D02F               	goto	i1l638
  6936                           
  6937                           ;CanToSerial.c: 94: CANreceiveMessage(&msg);
  6938  00008E  0EA6               	movlw	low _msg
  6939  000090  6E2A               	movwf	CANreceiveMessage@msg,c
  6940  000092  0E00               	movlw	high _msg
  6941  000094  6E2B               	movwf	CANreceiveMessage@msg+1,c
  6942  000096  ECF5  F009         	call	_CANreceiveMessage	;wreg free
  6943                           
  6944                           ;CanToSerial.c: 107: RTR_Flag = msg.RTR;
  6945  00009A  0100               	movlb	0	; () banked
  6946  00009C  A1B4               	btfss	(_msg+14)& (0+255),0,b
  6947  00009E  D002               	goto	i1u446_20
  6948  0000A0  8049               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
  6949  0000A2  D001               	goto	i1l3753
  6950  0000A4                     i1u446_20:
  6951  0000A4  9049               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
  6952  0000A6                     i1l3753:
  6953                           
  6954                           ;CanToSerial.c: 108: id = msg.identifier;
  6955  0000A6  C0A6  F092         	movff	_msg,_id	;volatile
  6956  0000AA  C0A7  F093         	movff	_msg+1,_id+1	;volatile
  6957  0000AE  C0A8  F094         	movff	_msg+2,_id+2	;volatile
  6958  0000B2  C0A9  F095         	movff	_msg+3,_id+3	;volatile
  6959                           
  6960                           ;CanToSerial.c: 109: newMessageCan = 1;
  6961  0000B6  8449               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  6962                           
  6963                           ;CanToSerial.c: 110: for (unsigned char i = 0; i < 8; i++) {
  6964  0000B8  0E00               	movlw	0
  6965  0000BA  6E48               	movwf	ISR_bassa@i,c
  6966  0000BC                     i1l3759:
  6967  0000BC  0E07               	movlw	7
  6968  0000BE  6448               	cpfsgt	ISR_bassa@i,c
  6969  0000C0  D001               	goto	i1l3763
  6970  0000C2  D014               	goto	i1l638
  6971  0000C4                     i1l3763:
  6972                           
  6973                           ;CanToSerial.c: 111: data[i] = msg.data[i];
  6974  0000C4  5048               	movf	ISR_bassa@i,w,c
  6975  0000C6  0D01               	mullw	1
  6976  0000C8  0EAA               	movlw	low (_msg+4)
  6977  0000CA  24F3               	addwf	prodl,w,c
  6978  0000CC  6ED9               	movwf	fsr2l,c
  6979  0000CE  0E00               	movlw	high (_msg+4)
  6980  0000D0  20F4               	addwfc	prodh,w,c
  6981  0000D2  6EDA               	movwf	fsr2h,c
  6982  0000D4  5048               	movf	ISR_bassa@i,w,c
  6983  0000D6  0D01               	mullw	1
  6984  0000D8  0E1A               	movlw	low _data
  6985  0000DA  24F3               	addwf	prodl,w,c
  6986  0000DC  6EE1               	movwf	fsr1l,c
  6987  0000DE  0E00               	movlw	high _data
  6988  0000E0  20F4               	addwfc	prodh,w,c
  6989  0000E2  6EE2               	movwf	fsr1h,c
  6990  0000E4  CFDF FFE7          	movff	indf2,indf1
  6991  0000E8  2A48               	incf	ISR_bassa@i,f,c
  6992  0000EA  D7E8               	goto	i1l3759
  6993  0000EC                     i1l638:
  6994                           
  6995                           ;CanToSerial.c: 112: }
  6996                           ;CanToSerial.c: 115: }
  6997                           ;CanToSerial.c: 116: PIR3bits.RXB0IF = 0;
  6998  0000EC  90A4               	bcf	4004,0,c	;volatile
  6999                           
  7000                           ;CanToSerial.c: 117: PIR3bits.RXB1IF = 0;
  7001  0000EE  92A4               	bcf	4004,1,c	;volatile
  7002  0000F0                     i1l635:
  7003                           
  7004                           ;CanToSerial.c: 118: }
  7005                           ;CanToSerial.c: 120: if (PIR2bits.TMR3IF == 1) {
  7006  0000F0  A2A1               	btfss	4001,1,c	;volatile
  7007  0000F2  D00C               	goto	i1l642
  7008                           
  7009                           ;CanToSerial.c: 121: timeCounter++;
  7010  0000F4  0E01               	movlw	1
  7011  0000F6  0100               	movlb	0	; () banked
  7012  0000F8  279A               	addwf	_timeCounter& (0+255),f,b	;volatile
  7013  0000FA  0E00               	movlw	0
  7014  0000FC  239B               	addwfc	(_timeCounter+1)& (0+255),f,b	;volatile
  7015  0000FE  239C               	addwfc	(_timeCounter+2)& (0+255),f,b	;volatile
  7016  000100  239D               	addwfc	(_timeCounter+3)& (0+255),f,b	;volatile
  7017                           
  7018                           ; BSR set to: 0
  7019                           ;CanToSerial.c: 122: TMR3H = 0x63;
  7020  000102  0E63               	movlw	99
  7021  000104  6EB3               	movwf	4019,c	;volatile
  7022                           
  7023                           ; BSR set to: 0
  7024                           ;CanToSerial.c: 123: TMR3L = 0xC0;
  7025  000106  0EC0               	movlw	192
  7026  000108  6EB2               	movwf	4018,c	;volatile
  7027                           
  7028                           ; BSR set to: 0
  7029                           ;CanToSerial.c: 124: PIR2bits.TMR3IF = 0;
  7030  00010A  92A1               	bcf	4001,1,c	;volatile
  7031  00010C                     i1l642:
  7032  00010C  C047  FFF5         	movff	??_ISR_bassa+17,tablat
  7033  000110  C046  FFF8         	movff	??_ISR_bassa+16,tblptru
  7034  000114  C045  FFF7         	movff	??_ISR_bassa+15,tblptrh
  7035  000118  C044  FFF6         	movff	??_ISR_bassa+14,tblptrl
  7036  00011C  C043  FFF4         	movff	??_ISR_bassa+13,prodh
  7037  000120  C042  FFF3         	movff	??_ISR_bassa+12,prodl
  7038  000124  C041  FFDA         	movff	??_ISR_bassa+11,fsr2h
  7039  000128  C040  FFD9         	movff	??_ISR_bassa+10,fsr2l
  7040  00012C  C03F  FFE2         	movff	??_ISR_bassa+9,fsr1h
  7041  000130  C03E  FFE1         	movff	??_ISR_bassa+8,fsr1l
  7042  000134  C03D  FFEA         	movff	??_ISR_bassa+7,fsr0h
  7043  000138  C03C  FFE9         	movff	??_ISR_bassa+6,fsr0l
  7044  00013C  C03B  FFFB         	movff	??_ISR_bassa+5,pclatu
  7045  000140  C03A  FFFA         	movff	??_ISR_bassa+4,pclath
  7046  000144  C039  FFE0         	movff	??_ISR_bassa+3,bsr
  7047  000148  C038  FFE8         	movff	??_ISR_bassa+2,wreg
  7048  00014C  C037  FFD8         	movff	??_ISR_bassa+1,status
  7049  000150  904A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7050  000152  0010               	retfie	
  7051  000154                     __end_of_ISR_bassa:
  7052                           	opt stack 0
  7053                           pclatu	equ	0xFFB
  7054                           pclath	equ	0xFFA
  7055                           tblptru	equ	0xFF8
  7056                           tblptrh	equ	0xFF7
  7057                           tblptrl	equ	0xFF6
  7058                           tablat	equ	0xFF5
  7059                           prodh	equ	0xFF4
  7060                           prodl	equ	0xFF3
  7061                           intcon	equ	0xFF2
  7062                           postinc0	equ	0xFEE
  7063                           fsr0h	equ	0xFEA
  7064                           fsr0l	equ	0xFE9
  7065                           wreg	equ	0xFE8
  7066                           indf1	equ	0xFE7
  7067                           postinc1	equ	0xFE6
  7068                           postdec1	equ	0xFE5
  7069                           fsr1h	equ	0xFE2
  7070                           fsr1l	equ	0xFE1
  7071                           bsr	equ	0xFE0
  7072                           indf2	equ	0xFDF
  7073                           postinc2	equ	0xFDE
  7074                           fsr2h	equ	0xFDA
  7075                           fsr2l	equ	0xFD9
  7076                           status	equ	0xFD8
  7077                           
  7078 ;; *************** function _CANreceiveMessage *****************
  7079 ;; Defined at:
  7080 ;;		line 529 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;  msg             2    0[COMRAM] PTR struct .
  7083 ;;		 -> msg(15), 
  7084 ;; Auto vars:     Size  Location     Type
  7085 ;;  tamp            1   11[COMRAM] unsigned char 
  7086 ;;  error           1   10[COMRAM] unsigned char 
  7087 ;; Return value:  Size  Location     Type
  7088 ;;                  1    wreg      unsigned char 
  7089 ;; Registers used:
  7090 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7091 ;; Tracked objects:
  7092 ;;		On entry : 0/0
  7093 ;;		On exit  : 0/0
  7094 ;;		Unchanged: 0/0
  7095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7096 ;;      Params:         2       0       0       0
  7097 ;;      Locals:         2       0       0       0
  7098 ;;      Temps:          8       0       0       0
  7099 ;;      Totals:        12       0       0       0
  7100 ;;Total ram usage:       12 bytes
  7101 ;; Hardware stack levels used:    1
  7102 ;; Hardware stack levels required when called:    3
  7103 ;; This function calls:
  7104 ;;		Nothing
  7105 ;; This function is called by:
  7106 ;;		_ISR_bassa
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           	psect	text15
  7111  0013EA                     __ptext15:
  7112                           	opt stack 0
  7113  0013EA                     _CANreceiveMessage:
  7114                           	opt stack 23
  7115                           
  7116                           ;inc\CANlib.h: 531: BYTE tamp;
  7117                           ;inc\CANlib.h: 532: BYTE error = 0;
  7118                           
  7119                           ;incstack = 0
  7120  0013EA  0E00               	movlw	0
  7121  0013EC  6E34               	movwf	CANreceiveMessage@error,c
  7122                           
  7123                           ;inc\CANlib.h: 534: if (COMSTATbits.RXB0OVFL == 0x01)
  7124  0013EE  BE74               	btfsc	3956,7,c	;volatile
  7125                           
  7126                           ;inc\CANlib.h: 535: error |= CAN_RX_BUFFER_1_OVFL;
  7127  0013F0  8034               	bsf	CANreceiveMessage@error,0,c
  7128                           
  7129                           ;inc\CANlib.h: 537: if (COMSTATbits.RXB1OVFL == 0x01)
  7130  0013F2  BC74               	btfsc	3956,6,c	;volatile
  7131                           
  7132                           ;inc\CANlib.h: 538: error |= CAN_RX_BUFFER_2_OVFL;
  7133  0013F4  8234               	bsf	CANreceiveMessage@error,1,c
  7134                           
  7135                           ;inc\CANlib.h: 541: if (RXB1CONbits.RXFUL ==0x01)
  7136  0013F6  010F               	movlb	15	; () banked
  7137  0013F8  AF50               	btfss	80,7,b	;volatile
  7138  0013FA  D143               	goto	i1l414
  7139                           
  7140                           ; BSR set to: 15
  7141                           ;inc\CANlib.h: 542: {
  7142                           ;inc\CANlib.h: 543: msg->identifier = 0;
  7143  0013FC  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7144  001400  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7145  001404  6ADE               	clrf	postinc2,c
  7146  001406  6ADE               	clrf	postinc2,c
  7147  001408  6ADE               	clrf	postinc2,c
  7148  00140A  6ADD               	clrf	postdec2,c
  7149                           
  7150                           ; BSR set to: 15
  7151                           ;inc\CANlib.h: 544: msg->data[0] =RXB1D0;
  7152  00140C  EE20 F004          	lfsr	2,4
  7153  001410  502A               	movf	CANreceiveMessage@msg,w,c
  7154  001412  26D9               	addwf	fsr2l,f,c
  7155  001414  502B               	movf	CANreceiveMessage@msg+1,w,c
  7156  001416  22DA               	addwfc	fsr2h,f,c
  7157  001418  CF56 FFDF          	movff	3926,indf2	;volatile
  7158                           
  7159                           ; BSR set to: 15
  7160                           ;inc\CANlib.h: 545: msg->data[1] =RXB1D1;
  7161  00141C  EE20 F005          	lfsr	2,5
  7162  001420  502A               	movf	CANreceiveMessage@msg,w,c
  7163  001422  26D9               	addwf	fsr2l,f,c
  7164  001424  502B               	movf	CANreceiveMessage@msg+1,w,c
  7165  001426  22DA               	addwfc	fsr2h,f,c
  7166  001428  CF57 FFDF          	movff	3927,indf2	;volatile
  7167                           
  7168                           ; BSR set to: 15
  7169                           ;inc\CANlib.h: 546: msg->data[2] =RXB1D2;
  7170  00142C  EE20 F006          	lfsr	2,6
  7171  001430  502A               	movf	CANreceiveMessage@msg,w,c
  7172  001432  26D9               	addwf	fsr2l,f,c
  7173  001434  502B               	movf	CANreceiveMessage@msg+1,w,c
  7174  001436  22DA               	addwfc	fsr2h,f,c
  7175  001438  CF58 FFDF          	movff	3928,indf2	;volatile
  7176                           
  7177                           ; BSR set to: 15
  7178                           ;inc\CANlib.h: 547: msg->data[3] =RXB1D3;
  7179  00143C  EE20 F007          	lfsr	2,7
  7180  001440  502A               	movf	CANreceiveMessage@msg,w,c
  7181  001442  26D9               	addwf	fsr2l,f,c
  7182  001444  502B               	movf	CANreceiveMessage@msg+1,w,c
  7183  001446  22DA               	addwfc	fsr2h,f,c
  7184  001448  CF59 FFDF          	movff	3929,indf2	;volatile
  7185                           
  7186                           ; BSR set to: 15
  7187                           ;inc\CANlib.h: 548: msg->data[4] =RXB1D4;
  7188  00144C  EE20 F008          	lfsr	2,8
  7189  001450  502A               	movf	CANreceiveMessage@msg,w,c
  7190  001452  26D9               	addwf	fsr2l,f,c
  7191  001454  502B               	movf	CANreceiveMessage@msg+1,w,c
  7192  001456  22DA               	addwfc	fsr2h,f,c
  7193  001458  CF5A FFDF          	movff	3930,indf2	;volatile
  7194                           
  7195                           ; BSR set to: 15
  7196                           ;inc\CANlib.h: 549: msg->data[5] =RXB1D5;
  7197  00145C  EE20 F009          	lfsr	2,9
  7198  001460  502A               	movf	CANreceiveMessage@msg,w,c
  7199  001462  26D9               	addwf	fsr2l,f,c
  7200  001464  502B               	movf	CANreceiveMessage@msg+1,w,c
  7201  001466  22DA               	addwfc	fsr2h,f,c
  7202  001468  CF5B FFDF          	movff	3931,indf2	;volatile
  7203                           
  7204                           ; BSR set to: 15
  7205                           ;inc\CANlib.h: 550: msg->data[6] =RXB1D6;
  7206  00146C  EE20 F00A          	lfsr	2,10
  7207  001470  502A               	movf	CANreceiveMessage@msg,w,c
  7208  001472  26D9               	addwf	fsr2l,f,c
  7209  001474  502B               	movf	CANreceiveMessage@msg+1,w,c
  7210  001476  22DA               	addwfc	fsr2h,f,c
  7211  001478  CF5C FFDF          	movff	3932,indf2	;volatile
  7212                           
  7213                           ; BSR set to: 15
  7214                           ;inc\CANlib.h: 551: msg->data[7] =RXB1D7;
  7215  00147C  EE20 F00B          	lfsr	2,11
  7216  001480  502A               	movf	CANreceiveMessage@msg,w,c
  7217  001482  26D9               	addwf	fsr2l,f,c
  7218  001484  502B               	movf	CANreceiveMessage@msg+1,w,c
  7219  001486  22DA               	addwfc	fsr2h,f,c
  7220  001488  CF5D FFDF          	movff	3933,indf2	;volatile
  7221                           
  7222                           ; BSR set to: 15
  7223                           ;inc\CANlib.h: 553: msg->RTR = RXB1DLCbits.RXRTR;
  7224  00148C  EE20 F00E          	lfsr	2,14
  7225  001490  502A               	movf	CANreceiveMessage@msg,w,c
  7226  001492  26D9               	addwf	fsr2l,f,c
  7227  001494  502B               	movf	CANreceiveMessage@msg+1,w,c
  7228  001496  22DA               	addwfc	fsr2h,f,c
  7229  001498  010F               	movlb	15	; () banked
  7230  00149A  AD55               	btfss	85,6,b	;volatile
  7231  00149C  D002               	goto	i1u394_20
  7232  00149E  0E01               	movlw	1
  7233  0014A0  D001               	goto	i1u394_26
  7234  0014A2                     i1u394_20:
  7235  0014A2  0E00               	movlw	0
  7236  0014A4                     i1u394_26:
  7237  0014A4  6EDF               	movwf	indf2,c
  7238                           
  7239                           ; BSR set to: 15
  7240                           ;inc\CANlib.h: 555: msg->length = RXB1DLC & 0x0F;
  7241  0014A6  EE20 F00D          	lfsr	2,13
  7242  0014AA  502A               	movf	CANreceiveMessage@msg,w,c
  7243  0014AC  26D9               	addwf	fsr2l,f,c
  7244  0014AE  502B               	movf	CANreceiveMessage@msg+1,w,c
  7245  0014B0  22DA               	addwfc	fsr2h,f,c
  7246  0014B2  010F               	movlb	15	; () banked
  7247  0014B4  5155               	movf	85,w,b	;volatile
  7248  0014B6  0B0F               	andlw	15
  7249  0014B8  6EDF               	movwf	indf2,c
  7250                           
  7251                           ; BSR set to: 15
  7252                           ;inc\CANlib.h: 557: msg->type = RXB1SIDLbits.EXID;
  7253  0014BA  EE20 F00C          	lfsr	2,12
  7254  0014BE  502A               	movf	CANreceiveMessage@msg,w,c
  7255  0014C0  26D9               	addwf	fsr2l,f,c
  7256  0014C2  502B               	movf	CANreceiveMessage@msg+1,w,c
  7257  0014C4  22DA               	addwfc	fsr2h,f,c
  7258  0014C6  010F               	movlb	15	; () banked
  7259  0014C8  A752               	btfss	82,3,b	;volatile
  7260  0014CA  D002               	goto	i1u395_20
  7261  0014CC  0E01               	movlw	1
  7262  0014CE  D001               	goto	i1u395_26
  7263  0014D0                     i1u395_20:
  7264  0014D0  0E00               	movlw	0
  7265  0014D2                     i1u395_26:
  7266  0014D2  6EDF               	movwf	indf2,c
  7267                           
  7268                           ; BSR set to: 15
  7269                           ;inc\CANlib.h: 559: if (RXB1SIDLbits.EXID == 0)
  7270  0014D4  010F               	movlb	15	; () banked
  7271  0014D6  B752               	btfsc	82,3,b	;volatile
  7272  0014D8  D044               	goto	i1l3473
  7273                           
  7274                           ; BSR set to: 15
  7275                           ;inc\CANlib.h: 560: {
  7276                           ;inc\CANlib.h: 561: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7277  0014DA  CF51 F02C          	movff	3921,??_CANreceiveMessage	;volatile
  7278  0014DE  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7279  0014E0  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7280  0014E2  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7281  0014E4  0E03               	movlw	3
  7282  0014E6                     i1u397_25:
  7283  0014E6  90D8               	bcf	status,0,c
  7284  0014E8  362C               	rlcf	??_CANreceiveMessage,f,c
  7285  0014EA  362D               	rlcf	??_CANreceiveMessage+1,f,c
  7286  0014EC  362E               	rlcf	??_CANreceiveMessage+2,f,c
  7287  0014EE  362F               	rlcf	??_CANreceiveMessage+3,f,c
  7288  0014F0  2EE8               	decfsz	wreg,f,c
  7289  0014F2  D7F9               	goto	i1u397_25
  7290  0014F4  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7291  0014F8  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7292  0014FC  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  7293  001500  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7294  001504  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7295  001508  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7296                           
  7297                           ; BSR set to: 15
  7298                           ;inc\CANlib.h: 562: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7299  00150C  010F               	movlb	15	; () banked
  7300  00150E  3952               	swapf	82,w,b	;volatile
  7301  001510  42E8               	rrncf	wreg,f,c
  7302  001512  0B07               	andlw	7
  7303  001514  0B07               	andlw	7
  7304  001516  6E35               	movwf	CANreceiveMessage@tamp,c
  7305                           
  7306                           ; BSR set to: 15
  7307                           ;inc\CANlib.h: 563: msg->identifier = msg->identifier + tamp;
  7308  001518  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7309  00151C  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7310  001520  CFDE F02C          	movff	postinc2,??_CANreceiveMessage
  7311  001524  CFDE F02D          	movff	postinc2,??_CANreceiveMessage+1
  7312  001528  CFDE F02E          	movff	postinc2,??_CANreceiveMessage+2
  7313  00152C  CFDE F02F          	movff	postinc2,??_CANreceiveMessage+3
  7314  001530  5035               	movf	CANreceiveMessage@tamp,w,c
  7315  001532  242C               	addwf	??_CANreceiveMessage,w,c
  7316  001534  6E30               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7317  001536  0E00               	movlw	0
  7318  001538  202D               	addwfc	??_CANreceiveMessage+1,w,c
  7319  00153A  6E31               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7320  00153C  0E00               	movlw	0
  7321  00153E  202E               	addwfc	??_CANreceiveMessage+2,w,c
  7322  001540  6E32               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7323  001542  0E00               	movlw	0
  7324  001544  202F               	addwfc	??_CANreceiveMessage+3,w,c
  7325  001546  6E33               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7326  001548  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7327  00154C  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7328  001550  C030  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7329  001554  C031  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7330  001558  C032  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7331  00155C  C033  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7332                           
  7333                           ;inc\CANlib.h: 564: }
  7334  001560  D08D               	goto	i1l3499
  7335  001562                     i1l3473:
  7336                           
  7337                           ; BSR set to: 15
  7338                           ;inc\CANlib.h: 565: else
  7339                           ;inc\CANlib.h: 566: {
  7340                           ;inc\CANlib.h: 567: msg->identifier = (unsigned long) RXB1EIDL;
  7341  001562  CF54 F02C          	movff	3924,??_CANreceiveMessage	;volatile
  7342  001566  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7343  001568  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7344  00156A  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7345  00156C  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7346  001570  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7347  001574  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  7348  001578  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7349  00157C  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7350  001580  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7351                           
  7352                           ; BSR set to: 15
  7353                           ;inc\CANlib.h: 568: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7354  001584  CF53 F02C          	movff	3923,??_CANreceiveMessage	;volatile
  7355  001588  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7356  00158A  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7357  00158C  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7358  00158E  C02E  F02F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7359  001592  C02D  F02E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7360  001596  C02C  F02D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7361  00159A  6A2C               	clrf	??_CANreceiveMessage,c
  7362  00159C  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7363  0015A0  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7364  0015A4  502C               	movf	??_CANreceiveMessage,w,c
  7365  0015A6  26DE               	addwf	postinc2,f,c
  7366  0015A8  502D               	movf	??_CANreceiveMessage+1,w,c
  7367  0015AA  22DE               	addwfc	postinc2,f,c
  7368  0015AC  502E               	movf	??_CANreceiveMessage+2,w,c
  7369  0015AE  22DE               	addwfc	postinc2,f,c
  7370  0015B0  502F               	movf	??_CANreceiveMessage+3,w,c
  7371  0015B2  22DE               	addwfc	postinc2,f,c
  7372                           
  7373                           ; BSR set to: 15
  7374                           ;inc\CANlib.h: 570: if (RXB1SIDLbits.EID16)
  7375  0015B4  010F               	movlb	15	; () banked
  7376  0015B6  A152               	btfss	82,0,b	;volatile
  7377  0015B8  D00C               	goto	i1l3481
  7378                           
  7379                           ; BSR set to: 15
  7380                           ;inc\CANlib.h: 571: msg->identifier |= 0x00010000;
  7381  0015BA  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7382  0015BE  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7383  0015C2  0E00               	movlw	0
  7384  0015C4  12DE               	iorwf	postinc2,f,c
  7385  0015C6  0E00               	movlw	0
  7386  0015C8  12DE               	iorwf	postinc2,f,c
  7387  0015CA  0E01               	movlw	1
  7388  0015CC  12DE               	iorwf	postinc2,f,c
  7389  0015CE  0E00               	movlw	0
  7390  0015D0  12DE               	iorwf	postinc2,f,c
  7391  0015D2                     i1l3481:
  7392                           
  7393                           ; BSR set to: 15
  7394                           ;inc\CANlib.h: 572: if (RXB1SIDLbits.EID17)
  7395  0015D2  010F               	movlb	15	; () banked
  7396  0015D4  A352               	btfss	82,1,b	;volatile
  7397  0015D6  D00C               	goto	i1l3485
  7398                           
  7399                           ; BSR set to: 15
  7400                           ;inc\CANlib.h: 573: msg->identifier |= 0x00020000;
  7401  0015D8  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7402  0015DC  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7403  0015E0  0E00               	movlw	0
  7404  0015E2  12DE               	iorwf	postinc2,f,c
  7405  0015E4  0E00               	movlw	0
  7406  0015E6  12DE               	iorwf	postinc2,f,c
  7407  0015E8  0E02               	movlw	2
  7408  0015EA  12DE               	iorwf	postinc2,f,c
  7409  0015EC  0E00               	movlw	0
  7410  0015EE  12DE               	iorwf	postinc2,f,c
  7411  0015F0                     i1l3485:
  7412                           
  7413                           ; BSR set to: 15
  7414                           ;inc\CANlib.h: 574: if (RXB1SIDLbits.SID0)
  7415  0015F0  010F               	movlb	15	; () banked
  7416  0015F2  AB52               	btfss	82,5,b	;volatile
  7417  0015F4  D00C               	goto	i1l3489
  7418                           
  7419                           ; BSR set to: 15
  7420                           ;inc\CANlib.h: 575: msg->identifier |= 0x00040000;
  7421  0015F6  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7422  0015FA  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7423  0015FE  0E00               	movlw	0
  7424  001600  12DE               	iorwf	postinc2,f,c
  7425  001602  0E00               	movlw	0
  7426  001604  12DE               	iorwf	postinc2,f,c
  7427  001606  0E04               	movlw	4
  7428  001608  12DE               	iorwf	postinc2,f,c
  7429  00160A  0E00               	movlw	0
  7430  00160C  12DE               	iorwf	postinc2,f,c
  7431  00160E                     i1l3489:
  7432                           
  7433                           ; BSR set to: 15
  7434                           ;inc\CANlib.h: 576: if (RXB1SIDLbits.SID1)
  7435  00160E  010F               	movlb	15	; () banked
  7436  001610  AD52               	btfss	82,6,b	;volatile
  7437  001612  D00C               	goto	i1l3493
  7438                           
  7439                           ; BSR set to: 15
  7440                           ;inc\CANlib.h: 577: msg->identifier |= 0x00080000;
  7441  001614  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7442  001618  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7443  00161C  0E00               	movlw	0
  7444  00161E  12DE               	iorwf	postinc2,f,c
  7445  001620  0E00               	movlw	0
  7446  001622  12DE               	iorwf	postinc2,f,c
  7447  001624  0E08               	movlw	8
  7448  001626  12DE               	iorwf	postinc2,f,c
  7449  001628  0E00               	movlw	0
  7450  00162A  12DE               	iorwf	postinc2,f,c
  7451  00162C                     i1l3493:
  7452                           
  7453                           ; BSR set to: 15
  7454                           ;inc\CANlib.h: 578: if (RXB1SIDLbits.SID2)
  7455  00162C  010F               	movlb	15	; () banked
  7456  00162E  AF52               	btfss	82,7,b	;volatile
  7457  001630  D00C               	goto	i1l3497
  7458                           
  7459                           ; BSR set to: 15
  7460                           ;inc\CANlib.h: 579: msg->identifier |= 0x00100000;
  7461  001632  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7462  001636  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7463  00163A  0E00               	movlw	0
  7464  00163C  12DE               	iorwf	postinc2,f,c
  7465  00163E  0E00               	movlw	0
  7466  001640  12DE               	iorwf	postinc2,f,c
  7467  001642  0E10               	movlw	16
  7468  001644  12DE               	iorwf	postinc2,f,c
  7469  001646  0E00               	movlw	0
  7470  001648  12DE               	iorwf	postinc2,f,c
  7471  00164A                     i1l3497:
  7472                           
  7473                           ; BSR set to: 15
  7474                           ;inc\CANlib.h: 581: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  7475  00164A  CF51 F02C          	movff	3921,??_CANreceiveMessage	;volatile
  7476  00164E  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7477  001650  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7478  001652  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7479  001654  0E15               	movlw	21
  7480  001656                     i1u403_25:
  7481  001656  90D8               	bcf	status,0,c
  7482  001658  362C               	rlcf	??_CANreceiveMessage,f,c
  7483  00165A  362D               	rlcf	??_CANreceiveMessage+1,f,c
  7484  00165C  362E               	rlcf	??_CANreceiveMessage+2,f,c
  7485  00165E  362F               	rlcf	??_CANreceiveMessage+3,f,c
  7486  001660  2EE8               	decfsz	wreg,f,c
  7487  001662  D7F9               	goto	i1u403_25
  7488  001664  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7489  001668  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7490  00166C  502C               	movf	??_CANreceiveMessage,w,c
  7491  00166E  12DE               	iorwf	postinc2,f,c
  7492  001670  502D               	movf	??_CANreceiveMessage+1,w,c
  7493  001672  12DE               	iorwf	postinc2,f,c
  7494  001674  502E               	movf	??_CANreceiveMessage+2,w,c
  7495  001676  12DE               	iorwf	postinc2,f,c
  7496  001678  502F               	movf	??_CANreceiveMessage+3,w,c
  7497  00167A  12DE               	iorwf	postinc2,f,c
  7498  00167C                     i1l3499:
  7499                           
  7500                           ; BSR set to: 15
  7501                           ;inc\CANlib.h: 582: }
  7502                           ;inc\CANlib.h: 584: RXB1CONbits.RXFUL = 0x00;
  7503  00167C  010F               	movlb	15	; () banked
  7504  00167E  9F50               	bcf	80,7,b	;volatile
  7505                           
  7506                           ; BSR set to: 15
  7507                           ;inc\CANlib.h: 585: return (error);
  7508                           ;	Return value of _CANreceiveMessage is never used
  7509  001680  0012               	return	
  7510  001682                     i1l414:
  7511                           
  7512                           ; BSR set to: 15
  7513                           ;inc\CANlib.h: 586: }
  7514                           ;inc\CANlib.h: 588: if (RXB0CONbits.RXFUL ==0x01)
  7515  001682  AE60               	btfss	3936,7,c	;volatile
  7516  001684  0012               	return	
  7517                           
  7518                           ; BSR set to: 15
  7519                           ;inc\CANlib.h: 589: {
  7520                           ;inc\CANlib.h: 590: msg->identifier = 0;
  7521  001686  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7522  00168A  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7523  00168E  6ADE               	clrf	postinc2,c
  7524  001690  6ADE               	clrf	postinc2,c
  7525  001692  6ADE               	clrf	postinc2,c
  7526  001694  6ADD               	clrf	postdec2,c
  7527                           
  7528                           ; BSR set to: 15
  7529                           ;inc\CANlib.h: 591: msg->data[0] =RXB0D0;
  7530  001696  EE20 F004          	lfsr	2,4
  7531  00169A  502A               	movf	CANreceiveMessage@msg,w,c
  7532  00169C  26D9               	addwf	fsr2l,f,c
  7533  00169E  502B               	movf	CANreceiveMessage@msg+1,w,c
  7534  0016A0  22DA               	addwfc	fsr2h,f,c
  7535  0016A2  CF66 FFDF          	movff	3942,indf2	;volatile
  7536                           
  7537                           ; BSR set to: 15
  7538                           ;inc\CANlib.h: 592: msg->data[1] =RXB0D1;
  7539  0016A6  EE20 F005          	lfsr	2,5
  7540  0016AA  502A               	movf	CANreceiveMessage@msg,w,c
  7541  0016AC  26D9               	addwf	fsr2l,f,c
  7542  0016AE  502B               	movf	CANreceiveMessage@msg+1,w,c
  7543  0016B0  22DA               	addwfc	fsr2h,f,c
  7544  0016B2  CF67 FFDF          	movff	3943,indf2	;volatile
  7545                           
  7546                           ; BSR set to: 15
  7547                           ;inc\CANlib.h: 593: msg->data[2] =RXB0D2;
  7548  0016B6  EE20 F006          	lfsr	2,6
  7549  0016BA  502A               	movf	CANreceiveMessage@msg,w,c
  7550  0016BC  26D9               	addwf	fsr2l,f,c
  7551  0016BE  502B               	movf	CANreceiveMessage@msg+1,w,c
  7552  0016C0  22DA               	addwfc	fsr2h,f,c
  7553  0016C2  CF68 FFDF          	movff	3944,indf2	;volatile
  7554                           
  7555                           ; BSR set to: 15
  7556                           ;inc\CANlib.h: 594: msg->data[3] =RXB0D3;
  7557  0016C6  EE20 F007          	lfsr	2,7
  7558  0016CA  502A               	movf	CANreceiveMessage@msg,w,c
  7559  0016CC  26D9               	addwf	fsr2l,f,c
  7560  0016CE  502B               	movf	CANreceiveMessage@msg+1,w,c
  7561  0016D0  22DA               	addwfc	fsr2h,f,c
  7562  0016D2  CF69 FFDF          	movff	3945,indf2	;volatile
  7563                           
  7564                           ; BSR set to: 15
  7565                           ;inc\CANlib.h: 595: msg->data[4] =RXB0D4;
  7566  0016D6  EE20 F008          	lfsr	2,8
  7567  0016DA  502A               	movf	CANreceiveMessage@msg,w,c
  7568  0016DC  26D9               	addwf	fsr2l,f,c
  7569  0016DE  502B               	movf	CANreceiveMessage@msg+1,w,c
  7570  0016E0  22DA               	addwfc	fsr2h,f,c
  7571  0016E2  CF6A FFDF          	movff	3946,indf2	;volatile
  7572                           
  7573                           ; BSR set to: 15
  7574                           ;inc\CANlib.h: 596: msg->data[5] =RXB0D5;
  7575  0016E6  EE20 F009          	lfsr	2,9
  7576  0016EA  502A               	movf	CANreceiveMessage@msg,w,c
  7577  0016EC  26D9               	addwf	fsr2l,f,c
  7578  0016EE  502B               	movf	CANreceiveMessage@msg+1,w,c
  7579  0016F0  22DA               	addwfc	fsr2h,f,c
  7580  0016F2  CF6B FFDF          	movff	3947,indf2	;volatile
  7581                           
  7582                           ; BSR set to: 15
  7583                           ;inc\CANlib.h: 597: msg->data[6] =RXB0D6;
  7584  0016F6  EE20 F00A          	lfsr	2,10
  7585  0016FA  502A               	movf	CANreceiveMessage@msg,w,c
  7586  0016FC  26D9               	addwf	fsr2l,f,c
  7587  0016FE  502B               	movf	CANreceiveMessage@msg+1,w,c
  7588  001700  22DA               	addwfc	fsr2h,f,c
  7589  001702  CF6C FFDF          	movff	3948,indf2	;volatile
  7590                           
  7591                           ; BSR set to: 15
  7592                           ;inc\CANlib.h: 598: msg->data[7] =RXB0D7;
  7593  001706  EE20 F00B          	lfsr	2,11
  7594  00170A  502A               	movf	CANreceiveMessage@msg,w,c
  7595  00170C  26D9               	addwf	fsr2l,f,c
  7596  00170E  502B               	movf	CANreceiveMessage@msg+1,w,c
  7597  001710  22DA               	addwfc	fsr2h,f,c
  7598  001712  CF6D FFDF          	movff	3949,indf2	;volatile
  7599                           
  7600                           ; BSR set to: 15
  7601                           ;inc\CANlib.h: 600: msg->RTR = RXB0DLCbits.RXRTR;
  7602  001716  EE20 F00E          	lfsr	2,14
  7603  00171A  502A               	movf	CANreceiveMessage@msg,w,c
  7604  00171C  26D9               	addwf	fsr2l,f,c
  7605  00171E  502B               	movf	CANreceiveMessage@msg+1,w,c
  7606  001720  22DA               	addwfc	fsr2h,f,c
  7607  001722  AC65               	btfss	3941,6,c	;volatile
  7608  001724  D002               	goto	i1u405_20
  7609  001726  0E01               	movlw	1
  7610  001728  D001               	goto	i1u405_26
  7611  00172A                     i1u405_20:
  7612  00172A  0E00               	movlw	0
  7613  00172C                     i1u405_26:
  7614  00172C  6EDF               	movwf	indf2,c
  7615                           
  7616                           ; BSR set to: 15
  7617                           ;inc\CANlib.h: 602: msg->length = RXB0DLC & 0x0F;
  7618  00172E  EE20 F00D          	lfsr	2,13
  7619  001732  502A               	movf	CANreceiveMessage@msg,w,c
  7620  001734  26D9               	addwf	fsr2l,f,c
  7621  001736  502B               	movf	CANreceiveMessage@msg+1,w,c
  7622  001738  22DA               	addwfc	fsr2h,f,c
  7623  00173A  5065               	movf	3941,w,c	;volatile
  7624  00173C  0B0F               	andlw	15
  7625  00173E  6EDF               	movwf	indf2,c
  7626                           
  7627                           ; BSR set to: 15
  7628                           ;inc\CANlib.h: 604: msg->type = RXB0SIDLbits.EXID;
  7629  001740  EE20 F00C          	lfsr	2,12
  7630  001744  502A               	movf	CANreceiveMessage@msg,w,c
  7631  001746  26D9               	addwf	fsr2l,f,c
  7632  001748  502B               	movf	CANreceiveMessage@msg+1,w,c
  7633  00174A  22DA               	addwfc	fsr2h,f,c
  7634  00174C  A662               	btfss	3938,3,c	;volatile
  7635  00174E  D002               	goto	i1u406_20
  7636  001750  0E01               	movlw	1
  7637  001752  D001               	goto	i1u406_26
  7638  001754                     i1u406_20:
  7639  001754  0E00               	movlw	0
  7640  001756                     i1u406_26:
  7641  001756  6EDF               	movwf	indf2,c
  7642                           
  7643                           ; BSR set to: 15
  7644                           ;inc\CANlib.h: 606: if (RXB0SIDLbits.EXID == 0)
  7645  001758  B662               	btfsc	3938,3,c	;volatile
  7646  00175A  D043               	goto	i1l3535
  7647                           
  7648                           ; BSR set to: 15
  7649                           ;inc\CANlib.h: 607: {
  7650                           ;inc\CANlib.h: 608: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  7651  00175C  CF61 F02C          	movff	3937,??_CANreceiveMessage	;volatile
  7652  001760  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7653  001762  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7654  001764  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7655  001766  0E03               	movlw	3
  7656  001768                     i1u408_25:
  7657  001768  90D8               	bcf	status,0,c
  7658  00176A  362C               	rlcf	??_CANreceiveMessage,f,c
  7659  00176C  362D               	rlcf	??_CANreceiveMessage+1,f,c
  7660  00176E  362E               	rlcf	??_CANreceiveMessage+2,f,c
  7661  001770  362F               	rlcf	??_CANreceiveMessage+3,f,c
  7662  001772  2EE8               	decfsz	wreg,f,c
  7663  001774  D7F9               	goto	i1u408_25
  7664  001776  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7665  00177A  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7666  00177E  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  7667  001782  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7668  001786  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7669  00178A  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7670                           
  7671                           ; BSR set to: 15
  7672                           ;inc\CANlib.h: 609: tamp = (RXB0SIDL >> 5 ) & 0x07;
  7673  00178E  3862               	swapf	3938,w,c	;volatile
  7674  001790  42E8               	rrncf	wreg,f,c
  7675  001792  0B07               	andlw	7
  7676  001794  0B07               	andlw	7
  7677  001796  6E35               	movwf	CANreceiveMessage@tamp,c
  7678                           
  7679                           ; BSR set to: 15
  7680                           ;inc\CANlib.h: 610: msg->identifier = msg->identifier + tamp;
  7681  001798  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7682  00179C  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7683  0017A0  CFDE F02C          	movff	postinc2,??_CANreceiveMessage
  7684  0017A4  CFDE F02D          	movff	postinc2,??_CANreceiveMessage+1
  7685  0017A8  CFDE F02E          	movff	postinc2,??_CANreceiveMessage+2
  7686  0017AC  CFDE F02F          	movff	postinc2,??_CANreceiveMessage+3
  7687  0017B0  5035               	movf	CANreceiveMessage@tamp,w,c
  7688  0017B2  242C               	addwf	??_CANreceiveMessage,w,c
  7689  0017B4  6E30               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7690  0017B6  0E00               	movlw	0
  7691  0017B8  202D               	addwfc	??_CANreceiveMessage+1,w,c
  7692  0017BA  6E31               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7693  0017BC  0E00               	movlw	0
  7694  0017BE  202E               	addwfc	??_CANreceiveMessage+2,w,c
  7695  0017C0  6E32               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7696  0017C2  0E00               	movlw	0
  7697  0017C4  202F               	addwfc	??_CANreceiveMessage+3,w,c
  7698  0017C6  6E33               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7699  0017C8  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7700  0017CC  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7701  0017D0  C030  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7702  0017D4  C031  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7703  0017D8  C032  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7704  0017DC  C033  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7705                           
  7706                           ;inc\CANlib.h: 611: }
  7707  0017E0  D088               	goto	i1l3561
  7708  0017E2                     i1l3535:
  7709                           
  7710                           ; BSR set to: 15
  7711                           ;inc\CANlib.h: 612: else
  7712                           ;inc\CANlib.h: 613: {
  7713                           ;inc\CANlib.h: 614: msg->identifier = (unsigned long) RXB0EIDL;
  7714  0017E2  CF64 F02C          	movff	3940,??_CANreceiveMessage	;volatile
  7715  0017E6  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7716  0017E8  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7717  0017EA  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7718  0017EC  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7719  0017F0  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7720  0017F4  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  7721  0017F8  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7722  0017FC  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7723  001800  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7724                           
  7725                           ; BSR set to: 15
  7726                           ;inc\CANlib.h: 615: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  7727  001804  CF63 F02C          	movff	3939,??_CANreceiveMessage	;volatile
  7728  001808  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7729  00180A  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7730  00180C  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7731  00180E  C02E  F02F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7732  001812  C02D  F02E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7733  001816  C02C  F02D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7734  00181A  6A2C               	clrf	??_CANreceiveMessage,c
  7735  00181C  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7736  001820  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7737  001824  502C               	movf	??_CANreceiveMessage,w,c
  7738  001826  26DE               	addwf	postinc2,f,c
  7739  001828  502D               	movf	??_CANreceiveMessage+1,w,c
  7740  00182A  22DE               	addwfc	postinc2,f,c
  7741  00182C  502E               	movf	??_CANreceiveMessage+2,w,c
  7742  00182E  22DE               	addwfc	postinc2,f,c
  7743  001830  502F               	movf	??_CANreceiveMessage+3,w,c
  7744  001832  22DE               	addwfc	postinc2,f,c
  7745                           
  7746                           ; BSR set to: 15
  7747                           ;inc\CANlib.h: 617: if (RXB0SIDLbits.EID16)
  7748  001834  A062               	btfss	3938,0,c	;volatile
  7749  001836  D00C               	goto	i1l3543
  7750                           
  7751                           ; BSR set to: 15
  7752                           ;inc\CANlib.h: 618: msg->identifier |= 0x00010000;
  7753  001838  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7754  00183C  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7755  001840  0E00               	movlw	0
  7756  001842  12DE               	iorwf	postinc2,f,c
  7757  001844  0E00               	movlw	0
  7758  001846  12DE               	iorwf	postinc2,f,c
  7759  001848  0E01               	movlw	1
  7760  00184A  12DE               	iorwf	postinc2,f,c
  7761  00184C  0E00               	movlw	0
  7762  00184E  12DE               	iorwf	postinc2,f,c
  7763  001850                     i1l3543:
  7764                           
  7765                           ; BSR set to: 15
  7766                           ;inc\CANlib.h: 619: if (RXB0SIDLbits.EID17)
  7767  001850  A262               	btfss	3938,1,c	;volatile
  7768  001852  D00C               	goto	i1l3547
  7769                           
  7770                           ; BSR set to: 15
  7771                           ;inc\CANlib.h: 620: msg->identifier |= 0x00020000;
  7772  001854  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7773  001858  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7774  00185C  0E00               	movlw	0
  7775  00185E  12DE               	iorwf	postinc2,f,c
  7776  001860  0E00               	movlw	0
  7777  001862  12DE               	iorwf	postinc2,f,c
  7778  001864  0E02               	movlw	2
  7779  001866  12DE               	iorwf	postinc2,f,c
  7780  001868  0E00               	movlw	0
  7781  00186A  12DE               	iorwf	postinc2,f,c
  7782  00186C                     i1l3547:
  7783                           
  7784                           ; BSR set to: 15
  7785                           ;inc\CANlib.h: 621: if (RXB0SIDLbits.SID0)
  7786  00186C  AA62               	btfss	3938,5,c	;volatile
  7787  00186E  D00C               	goto	i1l3551
  7788                           
  7789                           ; BSR set to: 15
  7790                           ;inc\CANlib.h: 622: msg->identifier |= 0x00040000;
  7791  001870  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7792  001874  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7793  001878  0E00               	movlw	0
  7794  00187A  12DE               	iorwf	postinc2,f,c
  7795  00187C  0E00               	movlw	0
  7796  00187E  12DE               	iorwf	postinc2,f,c
  7797  001880  0E04               	movlw	4
  7798  001882  12DE               	iorwf	postinc2,f,c
  7799  001884  0E00               	movlw	0
  7800  001886  12DE               	iorwf	postinc2,f,c
  7801  001888                     i1l3551:
  7802                           
  7803                           ; BSR set to: 15
  7804                           ;inc\CANlib.h: 623: if (RXB0SIDLbits.SID1)
  7805  001888  AC62               	btfss	3938,6,c	;volatile
  7806  00188A  D00C               	goto	i1l3555
  7807                           
  7808                           ; BSR set to: 15
  7809                           ;inc\CANlib.h: 624: msg->identifier |= 0x00080000;
  7810  00188C  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7811  001890  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7812  001894  0E00               	movlw	0
  7813  001896  12DE               	iorwf	postinc2,f,c
  7814  001898  0E00               	movlw	0
  7815  00189A  12DE               	iorwf	postinc2,f,c
  7816  00189C  0E08               	movlw	8
  7817  00189E  12DE               	iorwf	postinc2,f,c
  7818  0018A0  0E00               	movlw	0
  7819  0018A2  12DE               	iorwf	postinc2,f,c
  7820  0018A4                     i1l3555:
  7821                           
  7822                           ; BSR set to: 15
  7823                           ;inc\CANlib.h: 625: if (RXB0SIDLbits.SID2)
  7824  0018A4  AE62               	btfss	3938,7,c	;volatile
  7825  0018A6  D00C               	goto	i1l3559
  7826                           
  7827                           ; BSR set to: 15
  7828                           ;inc\CANlib.h: 626: msg->identifier |= 0x00100000;
  7829  0018A8  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7830  0018AC  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7831  0018B0  0E00               	movlw	0
  7832  0018B2  12DE               	iorwf	postinc2,f,c
  7833  0018B4  0E00               	movlw	0
  7834  0018B6  12DE               	iorwf	postinc2,f,c
  7835  0018B8  0E10               	movlw	16
  7836  0018BA  12DE               	iorwf	postinc2,f,c
  7837  0018BC  0E00               	movlw	0
  7838  0018BE  12DE               	iorwf	postinc2,f,c
  7839  0018C0                     i1l3559:
  7840                           
  7841                           ; BSR set to: 15
  7842                           ;inc\CANlib.h: 628: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  7843  0018C0  CF61 F02C          	movff	3937,??_CANreceiveMessage	;volatile
  7844  0018C4  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7845  0018C6  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7846  0018C8  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7847  0018CA  0E15               	movlw	21
  7848  0018CC                     i1u414_25:
  7849  0018CC  90D8               	bcf	status,0,c
  7850  0018CE  362C               	rlcf	??_CANreceiveMessage,f,c
  7851  0018D0  362D               	rlcf	??_CANreceiveMessage+1,f,c
  7852  0018D2  362E               	rlcf	??_CANreceiveMessage+2,f,c
  7853  0018D4  362F               	rlcf	??_CANreceiveMessage+3,f,c
  7854  0018D6  2EE8               	decfsz	wreg,f,c
  7855  0018D8  D7F9               	goto	i1u414_25
  7856  0018DA  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7857  0018DE  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7858  0018E2  502C               	movf	??_CANreceiveMessage,w,c
  7859  0018E4  12DE               	iorwf	postinc2,f,c
  7860  0018E6  502D               	movf	??_CANreceiveMessage+1,w,c
  7861  0018E8  12DE               	iorwf	postinc2,f,c
  7862  0018EA  502E               	movf	??_CANreceiveMessage+2,w,c
  7863  0018EC  12DE               	iorwf	postinc2,f,c
  7864  0018EE  502F               	movf	??_CANreceiveMessage+3,w,c
  7865  0018F0  12DE               	iorwf	postinc2,f,c
  7866  0018F2                     i1l3561:
  7867                           
  7868                           ; BSR set to: 15
  7869                           ;inc\CANlib.h: 630: }
  7870                           ;inc\CANlib.h: 631: RXB0CONbits.RXFUL = 0x00;
  7871  0018F2  9E60               	bcf	3936,7,c	;volatile
  7872                           
  7873                           ; BSR set to: 15
  7874                           ;inc\CANlib.h: 633: return (error);
  7875                           ;	Return value of _CANreceiveMessage is never used
  7876  0018F4  0012               	return	
  7877  0018F6                     __end_of_CANreceiveMessage:
  7878                           	opt stack 0
  7879                           pclatu	equ	0xFFB
  7880                           pclath	equ	0xFFA
  7881                           tblptru	equ	0xFF8
  7882                           tblptrh	equ	0xFF7
  7883                           tblptrl	equ	0xFF6
  7884                           tablat	equ	0xFF5
  7885                           prodh	equ	0xFF4
  7886                           prodl	equ	0xFF3
  7887                           intcon	equ	0xFF2
  7888                           postinc0	equ	0xFEE
  7889                           fsr0h	equ	0xFEA
  7890                           fsr0l	equ	0xFE9
  7891                           wreg	equ	0xFE8
  7892                           indf1	equ	0xFE7
  7893                           postinc1	equ	0xFE6
  7894                           postdec1	equ	0xFE5
  7895                           fsr1h	equ	0xFE2
  7896                           fsr1l	equ	0xFE1
  7897                           bsr	equ	0xFE0
  7898                           indf2	equ	0xFDF
  7899                           postinc2	equ	0xFDE
  7900                           postdec2	equ	0xFDD
  7901                           fsr2h	equ	0xFDA
  7902                           fsr2l	equ	0xFD9
  7903                           status	equ	0xFD8
  7904                           
  7905 ;; *************** function _CANisRxReady *****************
  7906 ;; Defined at:
  7907 ;;		line 1164 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7908 ;; Parameters:    Size  Location     Type
  7909 ;;		None
  7910 ;; Auto vars:     Size  Location     Type
  7911 ;;		None
  7912 ;; Return value:  Size  Location     Type
  7913 ;;                  1    wreg      unsigned char 
  7914 ;; Registers used:
  7915 ;;		wreg, status,2
  7916 ;; Tracked objects:
  7917 ;;		On entry : 0/0
  7918 ;;		On exit  : 0/0
  7919 ;;		Unchanged: 0/0
  7920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7921 ;;      Params:         0       0       0       0
  7922 ;;      Locals:         1       0       0       0
  7923 ;;      Temps:          0       0       0       0
  7924 ;;      Totals:         1       0       0       0
  7925 ;;Total ram usage:        1 bytes
  7926 ;; Hardware stack levels used:    1
  7927 ;; Hardware stack levels required when called:    3
  7928 ;; This function calls:
  7929 ;;		Nothing
  7930 ;; This function is called by:
  7931 ;;		_ISR_bassa
  7932 ;; This function uses a non-reentrant model
  7933 ;;
  7934                           
  7935                           	psect	text16
  7936  0025B0                     __ptext16:
  7937                           	opt stack 0
  7938  0025B0                     _CANisRxReady:
  7939                           	opt stack 23
  7940                           
  7941                           ;inc\CANlib.h: 1166: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  7942                           
  7943                           ; BSR set to: 15
  7944                           ;incstack = 0
  7945  0025B0  0E01               	movlw	1
  7946  0025B2  6E2A               	movwf	_CANisRxReady$3182,c
  7947  0025B4  BE60               	btfsc	3936,7,c	;volatile
  7948  0025B6  D005               	goto	i1l565
  7949  0025B8  010F               	movlb	15	; () banked
  7950  0025BA  BF50               	btfsc	80,7,b	;volatile
  7951  0025BC  D002               	goto	i1l565
  7952                           
  7953                           ; BSR set to: 15
  7954  0025BE  0E00               	movlw	0
  7955  0025C0  6E2A               	movwf	_CANisRxReady$3182,c
  7956  0025C2                     i1l565:
  7957  0025C2  502A               	movf	_CANisRxReady$3182,w,c
  7958  0025C4  0012               	return	
  7959  0025C6                     __end_of_CANisRxReady:
  7960                           	opt stack 0
  7961                           pclatu	equ	0xFFB
  7962                           pclath	equ	0xFFA
  7963                           tblptru	equ	0xFF8
  7964                           tblptrh	equ	0xFF7
  7965                           tblptrl	equ	0xFF6
  7966                           tablat	equ	0xFF5
  7967                           prodh	equ	0xFF4
  7968                           prodl	equ	0xFF3
  7969                           intcon	equ	0xFF2
  7970                           postinc0	equ	0xFEE
  7971                           fsr0h	equ	0xFEA
  7972                           fsr0l	equ	0xFE9
  7973                           wreg	equ	0xFE8
  7974                           indf1	equ	0xFE7
  7975                           postinc1	equ	0xFE6
  7976                           postdec1	equ	0xFE5
  7977                           fsr1h	equ	0xFE2
  7978                           fsr1l	equ	0xFE1
  7979                           bsr	equ	0xFE0
  7980                           indf2	equ	0xFDF
  7981                           postinc2	equ	0xFDE
  7982                           postdec2	equ	0xFDD
  7983                           fsr2h	equ	0xFDA
  7984                           fsr2l	equ	0xFD9
  7985                           status	equ	0xFD8
  7986                           
  7987 ;; *************** function _ISR_alta *****************
  7988 ;; Defined at:
  7989 ;;		line 68 in file "CanToSerial.c"
  7990 ;; Parameters:    Size  Location     Type
  7991 ;;		None
  7992 ;; Auto vars:     Size  Location     Type
  7993 ;;		None
  7994 ;; Return value:  Size  Location     Type
  7995 ;;		None               void
  7996 ;; Registers used:
  7997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7998 ;; Tracked objects:
  7999 ;;		On entry : 0/0
  8000 ;;		On exit  : 0/0
  8001 ;;		Unchanged: 0/0
  8002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8003 ;;      Params:         0       0       0       0
  8004 ;;      Locals:         0       0       0       0
  8005 ;;      Temps:          0      15       0       0
  8006 ;;      Totals:         0      15       0       0
  8007 ;;Total ram usage:       15 bytes
  8008 ;; Hardware stack levels used:    1
  8009 ;; Hardware stack levels required when called:    2
  8010 ;; This function calls:
  8011 ;;		_getsUSART
  8012 ;; This function is called by:
  8013 ;;		Interrupt level 2
  8014 ;; This function uses a non-reentrant model
  8015 ;;
  8016                           
  8017                           	psect	intcode
  8018  000008                     __pintcode:
  8019                           	opt stack 0
  8020  000008                     _ISR_alta:
  8021                           	opt stack 23
  8022                           
  8023                           ;incstack = 0
  8024  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8025  00000A  CFFA F067          	movff	pclath,??_ISR_alta+1
  8026  00000E  CFFB F068          	movff	pclatu,??_ISR_alta+2
  8027  000012  ED27  F011         	call	int_func,f	;refresh shadow registers
  8028                           pclatu	equ	0xFFB
  8029                           pclath	equ	0xFFA
  8030                           tblptru	equ	0xFF8
  8031                           tblptrh	equ	0xFF7
  8032                           tblptrl	equ	0xFF6
  8033                           tablat	equ	0xFF5
  8034                           prodh	equ	0xFF4
  8035                           prodl	equ	0xFF3
  8036                           intcon	equ	0xFF2
  8037                           postinc0	equ	0xFEE
  8038                           fsr0h	equ	0xFEA
  8039                           fsr0l	equ	0xFE9
  8040                           wreg	equ	0xFE8
  8041                           indf1	equ	0xFE7
  8042                           postinc1	equ	0xFE6
  8043                           postdec1	equ	0xFE5
  8044                           fsr1h	equ	0xFE2
  8045                           fsr1l	equ	0xFE1
  8046                           bsr	equ	0xFE0
  8047                           indf2	equ	0xFDF
  8048                           postinc2	equ	0xFDE
  8049                           postdec2	equ	0xFDD
  8050                           fsr2h	equ	0xFDA
  8051                           fsr2l	equ	0xFD9
  8052                           status	equ	0xFD8
  8053                           
  8054                           	psect	intcode_body
  8055  00224E                     __pintcode_body:
  8056                           	opt stack 23
  8057  00224E                     int_func:
  8058                           	opt stack 23
  8059  00224E  0006               	pop		; remove dummy address from shadow register refresh
  8060  002250  CFE9 F069          	movff	fsr0l,??_ISR_alta+3
  8061  002254  CFEA F06A          	movff	fsr0h,??_ISR_alta+4
  8062  002258  CFE1 F06B          	movff	fsr1l,??_ISR_alta+5
  8063  00225C  CFE2 F06C          	movff	fsr1h,??_ISR_alta+6
  8064  002260  CFD9 F06D          	movff	fsr2l,??_ISR_alta+7
  8065  002264  CFDA F06E          	movff	fsr2h,??_ISR_alta+8
  8066  002268  CFF3 F06F          	movff	prodl,??_ISR_alta+9
  8067  00226C  CFF4 F070          	movff	prodh,??_ISR_alta+10
  8068  002270  CFF6 F071          	movff	tblptrl,??_ISR_alta+11
  8069  002274  CFF7 F072          	movff	tblptrh,??_ISR_alta+12
  8070  002278  CFF8 F073          	movff	tblptru,??_ISR_alta+13
  8071  00227C  CFF5 F074          	movff	tablat,??_ISR_alta+14
  8072                           
  8073                           ;CanToSerial.c: 69: if (PIR1bits.RC1IF == 1) {
  8074  002280  AA9E               	btfss	3998,5,c	;volatile
  8075  002282  D037               	goto	i2l632
  8076                           
  8077                           ;CanToSerial.c: 71: getsUSART(USART_Rx, 8);
  8078  002284  0E0A               	movlw	low _USART_Rx
  8079  002286  0100               	movlb	0	; () banked
  8080  002288  6F61               	movwf	getsUSART@buffer& (0+255),b
  8081  00228A  0E00               	movlw	high _USART_Rx
  8082  00228C  0100               	movlb	0	; () banked
  8083  00228E  6F62               	movwf	(getsUSART@buffer+1)& (0+255),b
  8084  002290  0E08               	movlw	8
  8085  002292  0100               	movlb	0	; () banked
  8086  002294  6F63               	movwf	getsUSART@len& (0+255),b
  8087  002296  EC60  F012         	call	_getsUSART	;wreg free
  8088                           
  8089                           ;CanToSerial.c: 72: if ((USART_Rx[0] == 0xAA)&&(USART_Rx[6] == 0xAA)) {
  8090  00229A  0EAA               	movlw	170
  8091  00229C  180A               	xorwf	_USART_Rx,w,c
  8092  00229E  A4D8               	btfss	status,2,c
  8093  0022A0  D027               	goto	i2l3941
  8094  0022A2  0EAA               	movlw	170
  8095  0022A4  1810               	xorwf	_USART_Rx+6,w,c
  8096  0022A6  A4D8               	btfss	status,2,c
  8097  0022A8  D023               	goto	i2l3941
  8098                           
  8099                           ;CanToSerial.c: 73: LATDbits.LATD1 = ~LATDbits.LATD1;
  8100  0022AA  A28C               	btfss	3980,1,c	;volatile
  8101  0022AC  D002               	goto	i2u472_40
  8102  0022AE  0E01               	movlw	1
  8103  0022B0  D001               	goto	i2u472_46
  8104  0022B2                     i2u472_40:
  8105  0022B2  0E00               	movlw	0
  8106  0022B4                     i2u472_46:
  8107  0022B4  0AFF               	xorlw	255
  8108  0022B6  0100               	movlb	0	; () banked
  8109  0022B8  6F66               	movwf	??_ISR_alta& (0+255),b
  8110  0022BA  0100               	movlb	0	; () banked
  8111  0022BC  4766               	rlncf	??_ISR_alta& (0+255),f,b
  8112  0022BE  508C               	movf	3980,w,c	;volatile
  8113  0022C0  0100               	movlb	0	; () banked
  8114  0022C2  1966               	xorwf	??_ISR_alta& (0+255),w,b
  8115  0022C4  0BFD               	andlw	-3
  8116  0022C6  1966               	xorwf	??_ISR_alta& (0+255),w,b
  8117  0022C8  6E8C               	movwf	3980,c	;volatile
  8118                           
  8119                           ; BSR set to: 0
  8120                           ;CanToSerial.c: 74: set_steering_old = set_steering[0];
  8121  0022CA  C0B5  F0A5         	movff	_set_steering,_set_steering_old	;volatile
  8122                           
  8123                           ; BSR set to: 0
  8124                           ;CanToSerial.c: 75: set_speed_old[0] = set_speed[0];
  8125  0022CE  C022  F001         	movff	_set_speed,_set_speed_old	;volatile
  8126                           
  8127                           ; BSR set to: 0
  8128                           ;CanToSerial.c: 76: set_speed_old[1] = set_speed[1];
  8129  0022D2  C023  F002         	movff	_set_speed+1,_set_speed_old+1	;volatile
  8130                           
  8131                           ; BSR set to: 0
  8132                           ;CanToSerial.c: 77: analogic_brake_old = analogic_brake[0];
  8133  0022D6  C012  F0A4         	movff	_analogic_brake,_analogic_brake_old	;volatile
  8134                           
  8135                           ; BSR set to: 0
  8136                           ;CanToSerial.c: 79: set_speed[2] = USART_Rx[1];
  8137  0022DA  C00B  F024         	movff	_USART_Rx+1,_set_speed+2
  8138                           
  8139                           ; BSR set to: 0
  8140                           ;CanToSerial.c: 80: set_speed[0] = USART_Rx[2];
  8141  0022DE  C00C  F022         	movff	_USART_Rx+2,_set_speed
  8142                           
  8143                           ; BSR set to: 0
  8144                           ;CanToSerial.c: 81: set_speed[1] = USART_Rx[3];
  8145  0022E2  C00D  F023         	movff	_USART_Rx+3,_set_speed+1
  8146                           
  8147                           ; BSR set to: 0
  8148                           ;CanToSerial.c: 82: set_steering[0] = USART_Rx[4];
  8149  0022E6  C00E  F0B5         	movff	_USART_Rx+4,_set_steering
  8150                           
  8151                           ; BSR set to: 0
  8152                           ;CanToSerial.c: 83: analogic_brake[0] = USART_Rx[5];
  8153  0022EA  C00F  F012         	movff	_USART_Rx+5,_analogic_brake
  8154                           
  8155                           ; BSR set to: 0
  8156                           ;CanToSerial.c: 84: newMessageUsart = 1;
  8157  0022EE  8649               	bsf	_newMessageUsart/(0+8),_newMessageUsart& (0+7),c	;volatile
  8158  0022F0                     i2l3941:
  8159                           
  8160                           ;CanToSerial.c: 85: }
  8161                           ;CanToSerial.c: 86: PIR1bits.RC1IF = 0;
  8162  0022F0  9A9E               	bcf	3998,5,c	;volatile
  8163  0022F2                     i2l632:
  8164  0022F2  C074  FFF5         	movff	??_ISR_alta+14,tablat
  8165  0022F6  C073  FFF8         	movff	??_ISR_alta+13,tblptru
  8166  0022FA  C072  FFF7         	movff	??_ISR_alta+12,tblptrh
  8167  0022FE  C071  FFF6         	movff	??_ISR_alta+11,tblptrl
  8168  002302  C070  FFF4         	movff	??_ISR_alta+10,prodh
  8169  002306  C06F  FFF3         	movff	??_ISR_alta+9,prodl
  8170  00230A  C06E  FFDA         	movff	??_ISR_alta+8,fsr2h
  8171  00230E  C06D  FFD9         	movff	??_ISR_alta+7,fsr2l
  8172  002312  C06C  FFE2         	movff	??_ISR_alta+6,fsr1h
  8173  002316  C06B  FFE1         	movff	??_ISR_alta+5,fsr1l
  8174  00231A  C06A  FFEA         	movff	??_ISR_alta+4,fsr0h
  8175  00231E  C069  FFE9         	movff	??_ISR_alta+3,fsr0l
  8176  002322  C068  FFFB         	movff	??_ISR_alta+2,pclatu
  8177  002326  C067  FFFA         	movff	??_ISR_alta+1,pclath
  8178  00232A  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8179  00232C  0011               	retfie		f
  8180  00232E                     __end_of_ISR_alta:
  8181                           	opt stack 0
  8182                           pclatu	equ	0xFFB
  8183                           pclath	equ	0xFFA
  8184                           tblptru	equ	0xFF8
  8185                           tblptrh	equ	0xFF7
  8186                           tblptrl	equ	0xFF6
  8187                           tablat	equ	0xFF5
  8188                           prodh	equ	0xFF4
  8189                           prodl	equ	0xFF3
  8190                           intcon	equ	0xFF2
  8191                           postinc0	equ	0xFEE
  8192                           fsr0h	equ	0xFEA
  8193                           fsr0l	equ	0xFE9
  8194                           wreg	equ	0xFE8
  8195                           indf1	equ	0xFE7
  8196                           postinc1	equ	0xFE6
  8197                           postdec1	equ	0xFE5
  8198                           fsr1h	equ	0xFE2
  8199                           fsr1l	equ	0xFE1
  8200                           bsr	equ	0xFE0
  8201                           indf2	equ	0xFDF
  8202                           postinc2	equ	0xFDE
  8203                           postdec2	equ	0xFDD
  8204                           fsr2h	equ	0xFDA
  8205                           fsr2l	equ	0xFD9
  8206                           status	equ	0xFD8
  8207                           
  8208 ;; *************** function _getsUSART *****************
  8209 ;; Defined at:
  8210 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\ugets.c"
  8211 ;; Parameters:    Size  Location     Type
  8212 ;;  buffer          2    1[BANK0 ] PTR unsigned char 
  8213 ;;		 -> USART_Rx(8), 
  8214 ;;  len             1    3[BANK0 ] unsigned char 
  8215 ;; Auto vars:     Size  Location     Type
  8216 ;;  i               1    5[BANK0 ] unsigned char 
  8217 ;;  data            1    4[BANK0 ] unsigned char 
  8218 ;; Return value:  Size  Location     Type
  8219 ;;		None               void
  8220 ;; Registers used:
  8221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8222 ;; Tracked objects:
  8223 ;;		On entry : 0/0
  8224 ;;		On exit  : 0/0
  8225 ;;		Unchanged: 0/0
  8226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8227 ;;      Params:         0       3       0       0
  8228 ;;      Locals:         0       2       0       0
  8229 ;;      Temps:          0       0       0       0
  8230 ;;      Totals:         0       5       0       0
  8231 ;;Total ram usage:        5 bytes
  8232 ;; Hardware stack levels used:    1
  8233 ;; Hardware stack levels required when called:    1
  8234 ;; This function calls:
  8235 ;;		_ReadUSART
  8236 ;; This function is called by:
  8237 ;;		_ISR_alta
  8238 ;; This function uses a non-reentrant model
  8239 ;;
  8240                           
  8241                           	psect	text18
  8242  0024C0                     __ptext18:
  8243                           	opt stack 0
  8244  0024C0                     _getsUSART:
  8245                           	opt stack 23
  8246                           
  8247                           ;incstack = 0
  8248  0024C0  0E00               	movlw	0
  8249  0024C2  0100               	movlb	0	; () banked
  8250  0024C4  6F65               	movwf	getsUSART@i& (0+255),b
  8251  0024C6  D011               	goto	i2l3909
  8252  0024C8                     i2l684:
  8253  0024C8  AA9E               	btfss	3998,5,c	;volatile
  8254  0024CA  D7FE               	goto	i2l684
  8255  0024CC  ECBD  F012         	call	_ReadUSART	;wreg free
  8256  0024D0  0100               	movlb	0	; () banked
  8257  0024D2  6F64               	movwf	getsUSART@data& (0+255),b
  8258                           
  8259                           ; BSR set to: 0
  8260  0024D4  C061  FFD9         	movff	getsUSART@buffer,fsr2l
  8261  0024D8  C062  FFDA         	movff	getsUSART@buffer+1,fsr2h
  8262  0024DC  C064  FFDF         	movff	getsUSART@data,indf2
  8263                           
  8264                           ; BSR set to: 0
  8265  0024E0  0100               	movlb	0	; () banked
  8266  0024E2  4B61               	infsnz	getsUSART@buffer& (0+255),f,b
  8267  0024E4  2B62               	incf	(getsUSART@buffer+1)& (0+255),f,b
  8268                           
  8269                           ; BSR set to: 0
  8270  0024E6  0100               	movlb	0	; () banked
  8271  0024E8  2B65               	incf	getsUSART@i& (0+255),f,b
  8272  0024EA                     i2l3909:
  8273                           
  8274                           ; BSR set to: 0
  8275  0024EA  0100               	movlb	0	; () banked
  8276  0024EC  5163               	movf	getsUSART@len& (0+255),w,b
  8277  0024EE  0100               	movlb	0	; () banked
  8278  0024F0  5D65               	subwf	getsUSART@i& (0+255),w,b
  8279  0024F2  B0D8               	btfsc	status,0,c
  8280  0024F4  0012               	return	
  8281  0024F6  D7E8               	goto	i2l684
  8282  0024F8                     __end_of_getsUSART:
  8283                           	opt stack 0
  8284                           pclatu	equ	0xFFB
  8285                           pclath	equ	0xFFA
  8286                           tblptru	equ	0xFF8
  8287                           tblptrh	equ	0xFF7
  8288                           tblptrl	equ	0xFF6
  8289                           tablat	equ	0xFF5
  8290                           prodh	equ	0xFF4
  8291                           prodl	equ	0xFF3
  8292                           intcon	equ	0xFF2
  8293                           postinc0	equ	0xFEE
  8294                           fsr0h	equ	0xFEA
  8295                           fsr0l	equ	0xFE9
  8296                           wreg	equ	0xFE8
  8297                           indf1	equ	0xFE7
  8298                           postinc1	equ	0xFE6
  8299                           postdec1	equ	0xFE5
  8300                           fsr1h	equ	0xFE2
  8301                           fsr1l	equ	0xFE1
  8302                           bsr	equ	0xFE0
  8303                           indf2	equ	0xFDF
  8304                           postinc2	equ	0xFDE
  8305                           postdec2	equ	0xFDD
  8306                           fsr2h	equ	0xFDA
  8307                           fsr2l	equ	0xFD9
  8308                           status	equ	0xFD8
  8309                           
  8310 ;; *************** function _ReadUSART *****************
  8311 ;; Defined at:
  8312 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uread.c"
  8313 ;; Parameters:    Size  Location     Type
  8314 ;;		None
  8315 ;; Auto vars:     Size  Location     Type
  8316 ;;  data            1    0[BANK0 ] unsigned char 
  8317 ;; Return value:  Size  Location     Type
  8318 ;;                  1    wreg      unsigned char 
  8319 ;; Registers used:
  8320 ;;		wreg, status,2, status,0
  8321 ;; Tracked objects:
  8322 ;;		On entry : 0/0
  8323 ;;		On exit  : 0/0
  8324 ;;		Unchanged: 0/0
  8325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8326 ;;      Params:         0       0       0       0
  8327 ;;      Locals:         0       1       0       0
  8328 ;;      Temps:          0       0       0       0
  8329 ;;      Totals:         0       1       0       0
  8330 ;;Total ram usage:        1 bytes
  8331 ;; Hardware stack levels used:    1
  8332 ;; This function calls:
  8333 ;;		Nothing
  8334 ;; This function is called by:
  8335 ;;		_getsUSART
  8336 ;; This function uses a non-reentrant model
  8337 ;;
  8338                           
  8339                           	psect	text19
  8340  00257A                     __ptext19:
  8341                           	opt stack 0
  8342  00257A                     _ReadUSART:
  8343                           	opt stack 23
  8344                           
  8345                           ; BSR set to: 0
  8346                           ;incstack = 0
  8347  00257A  0EF2               	movlw	242
  8348  00257C  1609               	andwf	_USART_Status,f,c
  8349  00257E  ACAB               	btfss	4011,6,c	;volatile
  8350  002580  D003               	goto	i2l742
  8351  002582  9009               	bcf	_USART_Status,0,c
  8352  002584  B0AB               	btfsc	4011,0,c	;volatile
  8353  002586  8009               	bsf	_USART_Status,0,c
  8354  002588                     i2l742:
  8355  002588  B4AB               	btfsc	4011,2,c	;volatile
  8356  00258A  8409               	bsf	_USART_Status,2,c
  8357  00258C  B2AB               	btfsc	4011,1,c	;volatile
  8358  00258E  8609               	bsf	_USART_Status,3,c
  8359  002590  CFAE F060          	movff	4014,ReadUSART@data	;volatile
  8360  002594  0100               	movlb	0	; () banked
  8361  002596  5160               	movf	ReadUSART@data& (0+255),w,b
  8362  002598  0012               	return	
  8363  00259A                     __end_of_ReadUSART:
  8364                           	opt stack 0
  8365  0000                     pclatu	equ	0xFFB
  8366                           pclath	equ	0xFFA
  8367                           tblptru	equ	0xFF8
  8368                           tblptrh	equ	0xFF7
  8369                           tblptrl	equ	0xFF6
  8370                           tablat	equ	0xFF5
  8371                           prodh	equ	0xFF4
  8372                           prodl	equ	0xFF3
  8373                           intcon	equ	0xFF2
  8374                           postinc0	equ	0xFEE
  8375                           fsr0h	equ	0xFEA
  8376                           fsr0l	equ	0xFE9
  8377                           wreg	equ	0xFE8
  8378                           indf1	equ	0xFE7
  8379                           postinc1	equ	0xFE6
  8380                           postdec1	equ	0xFE5
  8381                           fsr1h	equ	0xFE2
  8382                           fsr1l	equ	0xFE1
  8383                           bsr	equ	0xFE0
  8384                           indf2	equ	0xFDF
  8385                           postinc2	equ	0xFDE
  8386                           postdec2	equ	0xFDD
  8387                           fsr2h	equ	0xFDA
  8388                           fsr2l	equ	0xFD9
  8389                           status	equ	0xFD8
  8390                           pclatu	equ	0xFFB
  8391                           pclath	equ	0xFFA
  8392                           tblptru	equ	0xFF8
  8393                           tblptrh	equ	0xFF7
  8394                           tblptrl	equ	0xFF6
  8395                           tablat	equ	0xFF5
  8396                           prodh	equ	0xFF4
  8397                           prodl	equ	0xFF3
  8398                           intcon	equ	0xFF2
  8399                           postinc0	equ	0xFEE
  8400                           fsr0h	equ	0xFEA
  8401                           fsr0l	equ	0xFE9
  8402                           wreg	equ	0xFE8
  8403                           indf1	equ	0xFE7
  8404                           postinc1	equ	0xFE6
  8405                           postdec1	equ	0xFE5
  8406                           fsr1h	equ	0xFE2
  8407                           fsr1l	equ	0xFE1
  8408                           bsr	equ	0xFE0
  8409                           indf2	equ	0xFDF
  8410                           postinc2	equ	0xFDE
  8411                           postdec2	equ	0xFDD
  8412                           fsr2h	equ	0xFDA
  8413                           fsr2l	equ	0xFD9
  8414                           status	equ	0xFD8
  8415                           
  8416                           	psect	param0
  8417  0000                     pclatu	equ	0xFFB
  8418                           pclath	equ	0xFFA
  8419                           tblptru	equ	0xFF8
  8420                           tblptrh	equ	0xFF7
  8421                           tblptrl	equ	0xFF6
  8422                           tablat	equ	0xFF5
  8423                           prodh	equ	0xFF4
  8424                           prodl	equ	0xFF3
  8425                           intcon	equ	0xFF2
  8426                           postinc0	equ	0xFEE
  8427                           fsr0h	equ	0xFEA
  8428                           fsr0l	equ	0xFE9
  8429                           wreg	equ	0xFE8
  8430                           indf1	equ	0xFE7
  8431                           postinc1	equ	0xFE6
  8432                           postdec1	equ	0xFE5
  8433                           fsr1h	equ	0xFE2
  8434                           fsr1l	equ	0xFE1
  8435                           bsr	equ	0xFE0
  8436                           indf2	equ	0xFDF
  8437                           postinc2	equ	0xFDE
  8438                           postdec2	equ	0xFDD
  8439                           fsr2h	equ	0xFDA
  8440                           fsr2l	equ	0xFD9
  8441                           status	equ	0xFD8
  8442                           
  8443                           	psect	temp
  8444  00004A                     btemp:
  8445                           	opt stack 0
  8446  00004A                     	ds	1
  8447  0000                     int$flags	set	btemp
  8448                           pclatu	equ	0xFFB
  8449                           pclath	equ	0xFFA
  8450                           tblptru	equ	0xFF8
  8451                           tblptrh	equ	0xFF7
  8452                           tblptrl	equ	0xFF6
  8453                           tablat	equ	0xFF5
  8454                           prodh	equ	0xFF4
  8455                           prodl	equ	0xFF3
  8456                           intcon	equ	0xFF2
  8457                           postinc0	equ	0xFEE
  8458                           fsr0h	equ	0xFEA
  8459                           fsr0l	equ	0xFE9
  8460                           wreg	equ	0xFE8
  8461                           indf1	equ	0xFE7
  8462                           postinc1	equ	0xFE6
  8463                           postdec1	equ	0xFE5
  8464                           fsr1h	equ	0xFE2
  8465                           fsr1l	equ	0xFE1
  8466                           bsr	equ	0xFE0
  8467                           indf2	equ	0xFDF
  8468                           postinc2	equ	0xFDE
  8469                           postdec2	equ	0xFDD
  8470                           fsr2h	equ	0xFDA
  8471                           fsr2l	equ	0xFD9
  8472                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         84
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      73
    BANK0           160     50     110
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    putsUSART@data	PTR unsigned char  size(2) Largest target is 8
		 -> SerialOutput(BANK0[8]), 

    getsUSART@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> USART_Rx(COMRAM[8]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data(COMRAM[8]), analogic_brake(COMRAM[8]), set_speed(COMRAM[8]), set_steering(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _putsUSART->_WriteUSART
    _delay_ms->___wmul
    _configurazione_iniziale->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _can_interpreter->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    _ISR_alta->_getsUSART
    _getsUSART->_ReadUSART

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   13313
                                             47 BANK0      3     3      0
                     _CANsendMessage
                    _can_interpreter
            _configurazione_iniziale
                           _delay_ms
                          _putsUSART
 ---------------------------------------------------------------------------------
 (1) _putsUSART                                            2     0      2     130
                                             22 BANK0      2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      22
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     437
                                             27 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     287
                                             21 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    6218
                      _CANInitialize
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                             21 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             35 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             21 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             21 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      8     8      0    3187
                                             37 BANK0      8     8      0
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    3163
                                             21 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           19    19      0    1251
                                             12 COMRAM    19    19      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_alta                                            15    15      0     324
                                              6 BANK0     15    15      0
                          _getsUSART
 ---------------------------------------------------------------------------------
 (7) _getsUSART                                            5     2      3     324
                                              1 BANK0      5     2      3
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (8) _ReadUSART                                            1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANsendMessage
   _can_interpreter
     _CANisTxReady
     _CANsendMessage
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _OpenUSART
   _delay_ms
     ___wmul
   _putsUSART
     _WriteUSART

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 _ISR_alta (ROOT)
   _getsUSART
     _ReadUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     32      6E       4       68.8%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     1F      49       1       77.7%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B7       9        0.0%
DATA                 0      0      B7      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Mar 20 16:39:36 2016

            __end_of_CANSetFilter 0C5E                                _id 0092  
                              bsr 000FE0               ___wmul@multiplicand 0077  
                     __CFG_BORV$3 000000                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                       __CFG_OSC$HS 000000  
                             l400 1208                               l401 1212  
                             l402 121C                               l403 1226  
                             l500 099A                               l501 099E  
                             l406 1336                               l502 09AA  
                             l407 133A                               l511 0AB6  
                             l503 09AE                               l408 1346  
                             l512 0ABA                               l504 09BA  
                             l440 1B10                               l513 0AC6  
                             l505 09BE                               l441 1B14  
                             l370 0D70                               l530 0C12  
                             l522 0BD2                               l514 0ACA  
                             l506 09CA                               l450 1C1C  
                             l442 1B20                               l362 2144  
                             l371 0D00                               l523 0BD6  
                             l515 0AD6                               l507 09CE  
                             l451 1C28                               l443 1B24  
                             l363 214E                               l372 0D0A  
                             l524 0BE2                               l516 0ADA  
                             l508 09DA                               l452 1C2C  
                             l444 1B30                               l436 1AF0  
                             l373 0D14                               l525 0BE6  
                             l517 0AE6                               l453 1C38  
                             l437 1AF4                               l382 1166  
                             l374 0D1E                               l526 0BF2  
                             l518 0AEA                               l470 065C  
                             l454 1C3C                               l438 1B00  
                             l383 0EF8                               l367 0EE2  
                             l527 0BF6                               l519 0AF6  
                             l471 0668                               l455 1C48  
                             l447 1C08                               l439 1B04  
                             l560 2574                               l392 10B2  
                             l384 0EFC                               l368 0C74  
                             l528 0C02                               l480 0772  
                             l472 066C                               l448 1C0C  
                             l712 23F6                               l393 10B6  
                             l385 0FF4                               l377 0E2E  
                             l369 0C78                               l529 0C06  
                             l481 0776                               l473 0678  
                             l449 1C18                               l394 10C2  
                             l386 0F84                               l378 0E32  
                             l490 0882                               l482 0782  
                             l474 067C                               l387 0F8E  
                             l379 0E3E                               l491 088E  
                             l483 0786                               l475 0688  
                             l467 0648                               l388 0F98  
                             l492 0892                               l484 0792  
                             l468 064C                               l716 2410  
                             l397 117C                               l389 0FA2  
                             l493 089E                               l485 0796  
                             l469 0658                               l717 2412  
                             l573 24B2                               l398 1180  
                             l494 08A2                               l486 07A2  
                             l478 0762                               l718 241E  
                             l399 1278                               l495 08AE  
                             l479 0766                               l719 2420  
                             l496 08B2                               l648 1F94  
                             l497 08BE                               l489 087E  
                             l729 252E                      getsUSART@len 0063  
                    __CFG_CPB$OFF 000000                      __CFG_CPD$OFF 000000  
                             _dir 0249                               _msg 00A6  
                             prod 000FF3                               wreg 000FE8  
                    __CFG_LVP$OFF 000000                      __CFG_WDT$OFF 000000  
                            l3021 0B40                              l3101 219E  
                            l3015 0AFA                              l3311 132A  
                            l3215 0FAC                              l3241 10C6  
                            l3049 0C16                              l3235 10A6  
                            l3139 0D28                              l3317 134A  
                            l3165 0E42                              l3093 213C  
                            l3421 25D4                              l3159 0E22  
                            l2711 1B7A                              l3095 2152  
                            l2705 1B34                              l3291 1230  
                            l3099 215A                              l2645 25A2  
                            l2815 0442                              l2663 19AE  
                            l3367 23F8                              l3359 23E6  
                            l2913 07A6                              l2833 04FC  
                            l2761 0216                              l2737 1C4C  
                            l2851 05B6                              l3661 1D06  
                            l3821 1F02                              l2919 07EC  
                            l2679 1A64                              l3665 1D10  
                            l3649 1CC4                              l2953 0908  
                            l3577 24A4                              l3841 1FA8  
                            l3825 1F0C                              l3809 1EE2  
                            l3691 1E98                              l2947 08C2  
                            l2779 02CE                              l3835 1F8E  
                            l3843 1FAA                              l3669 1D1C  
                            l3677 1DE0                              l2981 09DE  
                            l2885 06D2                              l2797 0388  
                            l3861 2084                              l2879 068C  
                            l3855 2048                              l3849 200A  
                            l2987 0A24                     getsUSART@data 0064  
                            _LATA 000F89                              _LATB 000F8A  
                            _LATC 000F8B                              u3200 0B1A  
                            u3120 09FE                              u3040 08E2  
                            _LATD 000F8C                              _LATE 000F8D  
                            u3205 0B0E                              u3125 09F2  
                            u3045 08D6                              u2405 1A40  
                            u2350 192A                              u3410 0D48  
                            u2355 191E                              u3420 0D94  
                            u4300 1DD6                              u2605 01F2  
                            u2365 198A                              u4310 1DD8  
                            u2710 03BE                              u2630 024A  
                            u2390 19E0                              u3415 0D3C  
                            _PIE1 000F9D                              u3280 0C36  
                            u2560 1C6C                              u2480 1B54  
                            u3425 0D88                              u4250 1D8A  
                            u3435 0DF4                              u2715 03B2  
                            u2635 023E                              u2395 19D4  
                            u3540 0FCC                              u4260 1DA0  
                            u3285 0C2A                              u2805 0592  
                            u2725 041E                              u2645 02AA  
                            u2565 1C60                              u2485 1B48  
                            u3550 1018                              u4270 1DB0  
                            u2750 0478                              u2670 0304  
                            u2590 0192                              u4280 1DB2  
                            u3545 0FC0                              u4290 1DC6  
                            u3555 100C                              u2755 046C  
                            u2675 02F8                              u2595 0186  
                            u4268 1DA4                              u3565 1078  
                            u2765 04D8                              u2685 0364  
                            u3670 1250                              u2790 0532  
                            u3680 129C                              u2960 07C6  
                            u2880 06AC                              u4298 1DCA  
                            u3675 1244                              u2795 0526  
                            u4580 1FB6                              u3685 1290  
                            u2965 07BA                              u2885 06A0  
                            u3695 12FC                              u4737 24A6  
                            u4586 1FB8               __size_of_CANSetMask 039E  
                            _data 001A                              _main 1EB4  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            indf1 000FE7                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            btemp 004A                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 0154                     __CFG_IESO$OFF 000000  
                   __CFG_MCLRE$ON 000000                      ___param_bank 000000  
                _CANOperationMode 259A        __size_of_CANreceiveMessage 050C  
                           ?_main 002A                             _T3CON 000FB1  
                           i1l414 1682                             i1l642 010C  
                           i1l635 00F0                             i1l565 25C2  
                           i1l638 00EC                             i2l632 22F2  
                           i2l742 2588                             i2l684 24C8  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _TMR3H 000FB3                             _TMR3L 000FB2  
                           _SPBRG 000FAF                 _CANisRxReady$3182 002A  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                             _TXREG 000FAD  
                           _TXSTA 000FAC                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
              __size_of_ISR_bassa 013C                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
              CANInitialize@flags 0087                  __end_of_ISR_alta 232E  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                    __CFG_EBTRB$OFF 000000  
                           main@i 0091                    __pbitbssCOMRAM 0248  
            __end_of_CANisRxReady 25C6                             tablat 000FF5  
            __end_of_CANisTxReady 257A                             status 000FD8  
                  __CFG_PBADEN$ON 000000                    WriteUSART@data 0075  
                 __initialization 243E                      __end_of_main 2088  
                          ??_main 008F                     __activetblptr 000002  
               _CANisTxReady$3180 0075                            _CANCON 000F6F  
                 __CFG_BBSIZ$1024 000000                   getsUSART@buffer 0061  
                          i1l3551 1888                            i1l3543 1850  
                          i1l3535 17E2                            i1l3561 18F2  
                          i1l3481 15D2                            i1l3473 1562  
                          i1l3555 18A4                            i1l3547 186C  
                          i1l3493 162C                            i1l3485 15F0  
                          i1l3559 18C0                            i1l3497 164A  
                          i1l3489 160E                            i1l3753 00A6  
                          i1l3745 0066                            i1l3499 167C  
                          i1l3763 00C4                            i1l3759 00BC  
                          i2l3909 24EA                            i2l3941 22F0  
              __size_of_ReadUSART 0020                   _newMessageUsart 024B  
                          _RXB0D0 000F66                            _RXB0D1 000F67  
                          _RXB0D2 000F68                            _RXB0D3 000F69  
                          _RXB0D4 000F6A                            _RXB1D0 000F56  
                          _RXB0D5 000F6B                            _RXB1D1 000F57  
                          _RXB0D6 000F6C                            _RXB1D2 000F58  
                          _RXB0D7 000F6D                            _RXB1D3 000F59  
                          _RXB1D4 000F5A                            _RXB1D5 000F5B  
                          _RXB1D6 000F5C                            _RXB1D7 000F5D  
                  __CFG_WDTPS$128 000000                            _TXB0D0 000F46  
                          _TXB0D1 000F47                            _TXB0D2 000F48  
                          _TXB0D3 000F49                            _TXB1D0 000F36  
                          _TXB0D4 000F4A                            _TXB1D1 000F37  
                          _TXB0D5 000F4B                            _SPBRGH 000FB0  
                          _TXB1D2 000F38                            _TXB0D6 000F4C  
                          _TXB1D3 000F39                            _TXB0D7 000F4D  
                          _TXB2D0 000F26                            _TXB1D4 000F3A  
                          _TXB2D1 000F27                            _TXB1D5 000F3B  
                          _TXB2D2 000F28                            _TXB1D6 000F3C  
                          _TXB2D3 000F29                            _TXB1D7 000F3D  
                          _TXB2D4 000F2A                            _TXB2D5 000F2B  
                          _TXB2D6 000F2C                            _TXB2D7 000F2D  
              CANsendMessage@data 0079                CANsendMessage@tamp 0081  
                __end_of_delay_ms 24C0             __size_of_CANSetFilter 0B06  
                  __CFG_XINST$OFF 000000                 __end_of_ISR_bassa 0154  
              __size_of_OpenUSART 0074                            ___wmul 24F8  
                  __CFG_STVREN$ON 000000                      ??_CANSetMask 007A  
                          clear_0 2444                            clear_1 2452  
        ?_configurazione_iniziale 002A                   __CFG_BOREN$BOHW 000000  
                          tblptrh 000FF7                    _analogic_brake 0012  
                          tblptrl 000FF6                            tblptru 000FF8  
                    _CANSetFilter 0158                        __accesstop 0060  
         __end_of__initialization 2478                __end_of_CANSetMask 1C94  
                   ___rparam_used 000000                        _WriteUSART 25C6  
                  __pcstackCOMRAM 002A                   _SerialOutputOld 00BD  
                    __pidataBANK0 25DA                         ?_ISR_alta 002A  
               __end_of_ReadUSART 259A             CANSetFilter@numBuffer 007E  
                   _newMessageCan 024A             __size_of_CANisRxReady 0016  
              __size_of_getsUSART 0038             __size_of_CANisTxReady 0024  
                   ReadUSART@data 0060                 __end_of_OpenUSART 243E  
        __end_of_CANOperationMode 25B0                        __pbssBANK0 0092  
                _set_steering_old 00A5           __size_of_CANsendMessage 078C  
        __size_of_can_interpreter 0220                           ?___wmul 0075  
                      ??_ISR_alta 0066                     putsUSART@data 0076  
                    _CANisRxReady 25B0                           _CANSTAT 000F6E  
                    _CANisTxReady 2556                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
          __size_of_CANInitialize 01C6                         ?_delay_ms 007B  
                         _RXB0DLC 000F65                           _RXB1DLC 000F55  
                         _RXB0CON 000F60                           _RXB1CON 000F50  
                         _TXB0DLC 000F45                           _TXB1DLC 000F35  
                         _TXB2DLC 000F25                __size_of_putsUSART 0028  
             CANsendMessage@flags 007C                           __Hparam 0000  
                      _left_speed 00A0                           __Lparam 0000  
                delay_ms@value_ms 007B                 __end_of_getsUSART 24F8  
                     ?_WriteUSART 002A                   __size_of___wmul 0036  
            CANInitialize@propSeg 008C                           __pcinit 243E  
                         __ramtop 0300                           __ptext0 1EB4  
                         __ptext1 252E                           __ptext2 25C6  
                         __ptext3 2486                           __ptext4 24F8  
                         __ptext5 232E                           __ptext6 23CA  
                         __ptext7 2088                           __ptext8 18F6  
                         __ptext9 0158                        ??_delay_ms 007D  
          CANreceiveMessage@error 0034                    __pintcode_body 224E  
            end_of_initialization 2478                     __Lmediumconst 0000  
                         int_func 224E                     _CANInitialize 2088  
                       _RCSTAbits 000FAB                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
               __end_of_putsUSART 2556                         _ISR_bassa 0018  
               ??_can_interpreter 0085                    CANSetMask@mask 0075  
                       _PORTCbits 000F82                    CANSetMask@tamp 007F  
                  CANSetMask@type 0079                         _TRISCbits 000F94  
                      getsUSART@i 0065               __size_of_WriteUSART 0014  
__size_of_configurazione_iniziale 009C               _previousTimeCounter 0096  
         _clock_counter_reference 009E                    _CANsendMessage 0C5E  
                CANInitialize@BRP 0086                  CANInitialize@SJW 0085  
                       _TXSTAbits 000FAC                    ?_CANInitialize 0083  
                      ?_ISR_bassa 002A                    __end_of___wmul 252E  
               __size_of_ISR_alta 2326               start_initialization 243E  
                       _ReadUSART 257A               CANSetMask@numBuffer 007E  
          __end_of_CANsendMessage 13EA                 ?_CANOperationMode 002A  
                       _OpenUSART 23CA                ??_CANOperationMode 0075  
      CANInitialize@FilterConfig1 008D        CANInitialize@FilterConfig2 008E  
                        ??___wmul 0079                       __pdataBANK0 00BD  
                __CFG_LPT1OSC$OFF 000000            CANInitialize@phaseSeg1 0083  
          CANInitialize@phaseSeg2 0084                       __pbssCOMRAM 0001  
                      ?_ReadUSART 002A                     __pcstackBANK0 0060  
                     _BRGCON2bits 000F71                       _BRGCON3bits 000F72  
               __size_of_delay_ms 003A                   ?_CANsendMessage 0075  
                 ??_CANInitialize 0088                        ?_OpenUSART 0075  
              CANSetFilter@filter 0075                      ??_WriteUSART 0075  
                       __pintcode 0008                       ??_ISR_bassa 0036  
                       _getsUSART 24C0                       __pintcodelo 0018  
                     _COMSTATbits 000F74                        ISR_bassa@i 0048  
         _configurazione_iniziale 232E                __end_of_WriteUSART 25DA  
           CANreceiveMessage@tamp 0035                    ___wmul@product 0079  
                        _LATAbits 000F89                          _LATDbits 000F8C  
                 _can_interpreter 1C94                          _IPR1bits 000F9F  
              _analogic_brake_old 00A4                          _IPR2bits 000FA2  
    _delay_quartz_frequency_value 00C5                          _PIE1bits 000F9D  
                        _IPR3bits 000FA5                          _PIE2bits 000FA0  
                        _PIE3bits 000FA3                          i1u403_25 1656  
                        i1u405_20 172A                          i1u405_26 172C  
                        i1u406_20 1754                          i1u414_25 18CC  
                        i1u406_26 1756                          i1u408_25 1768  
                        i1u444_20 006E                          i1u444_26 0070  
                        i1u446_20 00A4                          i1u394_20 14A2  
                        i1u394_26 14A4                          i1u395_20 14D0  
                        i1u395_26 14D2                          i1u397_25 14E6  
                        _PIR1bits 000F9E                          _PIR2bits 000FA1  
                        _PIR3bits 000FA4                          i2u472_40 22B2  
                        i2u472_46 22B4                          _RXB0EIDH 000F63  
                        _RXB0EIDL 000F64                          _RXB1EIDH 000F53  
                        _RXB1EIDL 000F54                         _set_speed 0022  
                        _RCONbits 000FD0                          _RXB0SIDH 000F61  
                        _RXB0SIDL 000F62                          _RXF0EIDH 000F02  
                        _RXB1SIDH 000F51                          _RXF0EIDL 000F03  
                        _RXB1SIDL 000F52                          _RXF1EIDH 000F06  
                        _RXF1EIDL 000F07                          _RXF2EIDH 000F0A  
                        _RXF2EIDL 000F0B                          _RXF3EIDH 000F0E  
                        _RXF3EIDL 000F0F                          _RXF4EIDH 000F12  
                        _RXF4EIDL 000F13                          _RXF5EIDH 000F16  
                        _RXF5EIDL 000F17                          _RXF0SIDH 000F00  
                        _RXF0SIDL 000F01                          _TXB0EIDH 000F43  
                        _RXF1SIDH 000F04                          _TXB0EIDL 000F44  
                        _RXF1SIDL 000F05                          _TXB1EIDH 000F33  
                        _RXF2SIDH 000F08                          _TXB1EIDL 000F34  
                        _RXF2SIDL 000F09                          _ISR_alta 0008  
                        _TXB2EIDH 000F23                          _RXF3SIDH 000F0C  
                        _TXB2EIDL 000F24                          _RXF3SIDL 000F0D  
                        _RXF4SIDH 000F10                          _RXF4SIDL 000F11  
                        _RXF5SIDH 000F14                          _RXF5SIDL 000F15  
                        _RXM0EIDH 000F1A                          _RXM0EIDL 000F1B  
                        _TXB0SIDH 000F41                          _RXM1EIDH 000F1E  
                        _TXB0SIDL 000F42                          _RXM1EIDL 000F1F  
                        _TXB1SIDH 000F31                          _TXB1SIDL 000F32  
                        _TXB2SIDH 000F21                          _TXB2SIDL 000F22  
                        _RXM0SIDH 000F18                          _RXM0SIDL 000F19  
                        _RXM1SIDH 000F1C                          _RXM1SIDL 000F1D  
                      ?_getsUSART 0061                          _RXERRCNT 000F75  
                        _USART_Rx 000A                          _TXERRCNT 000F76  
                       _putsUSART 252E                        _ADCON1bits 000FC1  
               ___wmul@multiplier 0075                          _RTR_Flag 0248  
                     ??_ReadUSART 0060                     ?_CANSetFilter 0075  
                       copy_data0 246C                     _set_speed_old 0001  
                      _CANCONbits 000F6F                       ??_OpenUSART 0077  
                    _SerialOutput 00C6                   OpenUSART@config 0077  
                        __Hparam0 0000                          __Lparam0 0000  
                    _RXB0SIDLbits 000F62                      _RXB1SIDLbits 000F52  
                      _CANSetMask 18F6                        ?_putsUSART 0076  
       ??_configurazione_iniziale 008F                      _RXF0SIDLbits 000F01  
                        _delay_ms 2486                      _RXF1SIDLbits 000F05  
                  ??_CANSetFilter 007A                          __ptext10 259A  
                        __ptext11 1C94                          __ptext12 0C5E  
                        __ptext13 2556                          __ptext15 13EA  
                        __ptext16 25B0                          __ptext18 24C0  
                        __ptext19 257A                      _RXF2SIDLbits 000F09  
         __end_of_can_interpreter 1EB4                      _RXF3SIDLbits 000F0D  
                    _RXF4SIDLbits 000F11                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 007B                     __size_of_main 01D4  
            CANreceiveMessage@msg 002A                      _TXB0SIDLbits 000F42  
                    _TXB1SIDLbits 000F32                      _TXB2SIDLbits 000F22  
                        int$flags 004A         __size_of_CANOperationMode 0016  
                   ?_CANisRxReady 002A                       ??_getsUSART 0064  
                   ?_CANisTxReady 002A                       _RXB0DLCbits 000F65  
                     _sendMessage 024C                       _RXB1DLCbits 000F55  
                    _RXM0SIDLbits 000F19                       _RXB0CONbits 000F60  
                     _RXB1CONbits 000F50                 _CANreceiveMessage 13EA  
                    _RXM1SIDLbits 000F1D                        _INTCONbits 000FF2  
                    _set_steering 00B5                  ??_CANsendMessage 007D  
                  OpenUSART@spbrg 0075                ?_CANreceiveMessage 002A  
        CANsendMessage@identifier 0075                          intlevel1 0000  
                        intlevel2 0000                  CANSetFilter@tamp 007F  
                CANSetFilter@type 0079               ??_CANreceiveMessage 002C  
                     _TXB0DLCbits 000F45                       _right_speed 00A2  
                     _TXB1DLCbits 000F35                       _TXB0CONbits 000F40  
                     _TXB2DLCbits 000F25   __end_of_configurazione_iniziale 23CA  
                     _TXB1CONbits 000F30                       _TXB2CONbits 000F20  
                     _timeCounter 009A              CANOperationMode@mode 0075  
                  ??_CANisRxReady 002A                       ?_CANSetMask 0075  
                  ??_CANisTxReady 0075         __end_of_CANreceiveMessage 18F6  
                     ??_putsUSART 0078                  ?_can_interpreter 002A  
           __end_of_CANInitialize 224E                      _USART_Status 0009  
