

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Mar 24 22:37:31 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           	psect	idataCOMRAM
    41  00248E                     __pidataCOMRAM:
    42                           	opt stack 0
    43                           
    44                           ;initializer for _delay_quartz_frequency_value
    45  00248E  10                 	db	16
    46                           
    47                           ;initializer for _SerialOutput
    48  00248F  AA                 	db	170
    49  002490  00                 	db	0
    50  002491  00                 	db	0
    51  002492  00                 	db	0
    52  002493  00                 	db	0
    53  002494  00                 	db	0
    54  002495  AA                 	db	170
    55  002496  00                 	db	0
    56                           
    57                           	psect	idataBANK0
    58  002497                     __pidataBANK0:
    59                           	opt stack 0
    60                           
    61                           ;initializer for _SerialOutputOld
    62  002497  AA                 	db	170
    63  002498  00                 	db	0
    64  002499  00                 	db	0
    65  00249A  00                 	db	0
    66  00249B  00                 	db	0
    67  00249C  00                 	db	0
    68  00249D  AA                 	db	170
    69  00249E  00                 	db	0
    70  0000                     _RXB1CON	set	3920
    71  0000                     _RXB1CONbits	set	3920
    72  0000                     _RXB1D0	set	3926
    73  0000                     _RXB1D1	set	3927
    74  0000                     _RXB1D2	set	3928
    75  0000                     _RXB1D3	set	3929
    76  0000                     _RXB1D4	set	3930
    77  0000                     _RXB1D5	set	3931
    78  0000                     _RXB1D6	set	3932
    79  0000                     _RXB1D7	set	3933
    80  0000                     _RXB1DLC	set	3925
    81  0000                     _RXB1DLCbits	set	3925
    82  0000                     _RXB1EIDH	set	3923
    83  0000                     _RXB1EIDL	set	3924
    84  0000                     _RXB1SIDH	set	3921
    85  0000                     _RXB1SIDL	set	3922
    86  0000                     _RXB1SIDLbits	set	3922
    87  0000                     _RXF0EIDH	set	3842
    88  0000                     _RXF0EIDL	set	3843
    89  0000                     _RXF0SIDH	set	3840
    90  0000                     _RXF0SIDL	set	3841
    91  0000                     _RXF0SIDLbits	set	3841
    92  0000                     _RXF1EIDH	set	3846
    93  0000                     _RXF1EIDL	set	3847
    94  0000                     _RXF1SIDH	set	3844
    95  0000                     _RXF1SIDL	set	3845
    96  0000                     _RXF1SIDLbits	set	3845
    97  0000                     _RXF2EIDH	set	3850
    98  0000                     _RXF2EIDL	set	3851
    99  0000                     _RXF2SIDH	set	3848
   100  0000                     _RXF2SIDL	set	3849
   101  0000                     _RXF2SIDLbits	set	3849
   102  0000                     _RXF3EIDH	set	3854
   103  0000                     _RXF3EIDL	set	3855
   104  0000                     _RXF3SIDH	set	3852
   105  0000                     _RXF3SIDL	set	3853
   106  0000                     _RXF3SIDLbits	set	3853
   107  0000                     _RXF4EIDH	set	3858
   108  0000                     _RXF4EIDL	set	3859
   109  0000                     _RXF4SIDH	set	3856
   110  0000                     _RXF4SIDL	set	3857
   111  0000                     _RXF4SIDLbits	set	3857
   112  0000                     _RXF5EIDH	set	3862
   113  0000                     _RXF5EIDL	set	3863
   114  0000                     _RXF5SIDH	set	3860
   115  0000                     _RXF5SIDL	set	3861
   116  0000                     _RXF5SIDLbits	set	3861
   117  0000                     _RXM0EIDH	set	3866
   118  0000                     _RXM0EIDL	set	3867
   119  0000                     _RXM0SIDH	set	3864
   120  0000                     _RXM0SIDL	set	3865
   121  0000                     _RXM0SIDLbits	set	3865
   122  0000                     _RXM1EIDH	set	3870
   123  0000                     _RXM1EIDL	set	3871
   124  0000                     _RXM1SIDH	set	3868
   125  0000                     _RXM1SIDL	set	3869
   126  0000                     _RXM1SIDLbits	set	3869
   127  0000                     _TXB0CONbits	set	3904
   128  0000                     _TXB0D0	set	3910
   129  0000                     _TXB0D1	set	3911
   130  0000                     _TXB0D2	set	3912
   131  0000                     _TXB0D3	set	3913
   132  0000                     _TXB0D4	set	3914
   133  0000                     _TXB0D5	set	3915
   134  0000                     _TXB0D6	set	3916
   135  0000                     _TXB0D7	set	3917
   136  0000                     _TXB0DLC	set	3909
   137  0000                     _TXB0DLCbits	set	3909
   138  0000                     _TXB0EIDH	set	3907
   139  0000                     _TXB0EIDL	set	3908
   140  0000                     _TXB0SIDH	set	3905
   141  0000                     _TXB0SIDL	set	3906
   142  0000                     _TXB0SIDLbits	set	3906
   143  0000                     _TXB1CONbits	set	3888
   144  0000                     _TXB1D0	set	3894
   145  0000                     _TXB1D1	set	3895
   146  0000                     _TXB1D2	set	3896
   147  0000                     _TXB1D3	set	3897
   148  0000                     _TXB1D4	set	3898
   149  0000                     _TXB1D5	set	3899
   150  0000                     _TXB1D6	set	3900
   151  0000                     _TXB1D7	set	3901
   152  0000                     _TXB1DLC	set	3893
   153  0000                     _TXB1DLCbits	set	3893
   154  0000                     _TXB1EIDH	set	3891
   155  0000                     _TXB1EIDL	set	3892
   156  0000                     _TXB1SIDH	set	3889
   157  0000                     _TXB1SIDL	set	3890
   158  0000                     _TXB1SIDLbits	set	3890
   159  0000                     _TXB2CONbits	set	3872
   160  0000                     _TXB2D0	set	3878
   161  0000                     _TXB2D1	set	3879
   162  0000                     _TXB2D2	set	3880
   163  0000                     _TXB2D3	set	3881
   164  0000                     _TXB2D4	set	3882
   165  0000                     _TXB2D5	set	3883
   166  0000                     _TXB2D6	set	3884
   167  0000                     _TXB2D7	set	3885
   168  0000                     _TXB2DLC	set	3877
   169  0000                     _TXB2DLCbits	set	3877
   170  0000                     _TXB2EIDH	set	3875
   171  0000                     _TXB2EIDL	set	3876
   172  0000                     _TXB2SIDH	set	3873
   173  0000                     _TXB2SIDL	set	3874
   174  0000                     _TXB2SIDLbits	set	3874
   175  0000                     _ADCON1bits	set	4033
   176  0000                     _BRGCON1	set	3952
   177  0000                     _BRGCON2	set	3953
   178  0000                     _BRGCON2bits	set	3953
   179  0000                     _BRGCON3	set	3954
   180  0000                     _BRGCON3bits	set	3954
   181  0000                     _CANCON	set	3951
   182  0000                     _CANCONbits	set	3951
   183  0000                     _CANSTAT	set	3950
   184  0000                     _COMSTATbits	set	3956
   185  0000                     _INTCONbits	set	4082
   186  0000                     _IPR1bits	set	3999
   187  0000                     _IPR2bits	set	4002
   188  0000                     _IPR3bits	set	4005
   189  0000                     _LATA	set	3977
   190  0000                     _LATB	set	3978
   191  0000                     _LATC	set	3979
   192  0000                     _LATD	set	3980
   193  0000                     _LATDbits	set	3980
   194  0000                     _LATE	set	3981
   195  0000                     _PIE1	set	3997
   196  0000                     _PIE1bits	set	3997
   197  0000                     _PIE2bits	set	4000
   198  0000                     _PIE3bits	set	4003
   199  0000                     _PIR1bits	set	3998
   200  0000                     _PIR2bits	set	4001
   201  0000                     _PIR3bits	set	4004
   202  0000                     _PORTAbits	set	3968
   203  0000                     _PORTCbits	set	3970
   204  0000                     _RCONbits	set	4048
   205  0000                     _RCREG	set	4014
   206  0000                     _RCSTA	set	4011
   207  0000                     _RCSTAbits	set	4011
   208  0000                     _RXB0CON	set	3936
   209  0000                     _RXB0CONbits	set	3936
   210  0000                     _RXB0D0	set	3942
   211  0000                     _RXB0D1	set	3943
   212  0000                     _RXB0D2	set	3944
   213  0000                     _RXB0D3	set	3945
   214  0000                     _RXB0D4	set	3946
   215  0000                     _RXB0D5	set	3947
   216  0000                     _RXB0D6	set	3948
   217  0000                     _RXB0D7	set	3949
   218  0000                     _RXB0DLC	set	3941
   219  0000                     _RXB0DLCbits	set	3941
   220  0000                     _RXB0EIDH	set	3939
   221  0000                     _RXB0EIDL	set	3940
   222  0000                     _RXB0SIDH	set	3937
   223  0000                     _RXB0SIDL	set	3938
   224  0000                     _RXB0SIDLbits	set	3938
   225  0000                     _RXERRCNT	set	3957
   226  0000                     _SPBRG	set	4015
   227  0000                     _SPBRGH	set	4016
   228  0000                     _T3CON	set	4017
   229  0000                     _TMR3H	set	4019
   230  0000                     _TMR3L	set	4018
   231  0000                     _TRISA	set	3986
   232  0000                     _TRISB	set	3987
   233  0000                     _TRISC	set	3988
   234  0000                     _TRISCbits	set	3988
   235  0000                     _TRISD	set	3989
   236  0000                     _TRISE	set	3990
   237  0000                     _TXERRCNT	set	3958
   238  0000                     _TXREG	set	4013
   239  0000                     _TXSTA	set	4012
   240  0000                     _TXSTAbits	set	4012
   241                           
   242                           ; #config settings
   243  0000                     
   244                           	psect	cinit
   245  002234                     __pcinit:
   246                           	opt stack 0
   247  002234                     start_initialization:
   248                           	opt stack 0
   249  002234                     __initialization:
   250                           	opt stack 0
   251                           
   252                           ; Clear objects allocated to BANK0 (62 bytes)
   253  002234  EE00  F060         	lfsr	0,__pbssBANK0
   254  002238  0E3E               	movlw	62
   255  00223A                     clear_0:
   256  00223A  6AEE               	clrf	postinc0,c
   257  00223C  06E8               	decf	wreg,f,c
   258  00223E  E1FD               	bnz	clear_0
   259                           
   260                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   261  002240  6A42               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   262                           
   263                           ; Clear objects allocated to COMRAM (23 bytes)
   264  002242  EE00  F022         	lfsr	0,__pbssCOMRAM
   265  002246  0E17               	movlw	23
   266  002248                     clear_1:
   267  002248  6AEE               	clrf	postinc0,c
   268  00224A  06E8               	decf	wreg,f,c
   269  00224C  E1FD               	bnz	clear_1
   270                           
   271                           ; Initialize objects allocated to BANK0 (8 bytes)
   272                           ; load TBLPTR registers with __pidataBANK0
   273  00224E  0E97               	movlw	low __pidataBANK0
   274  002250  6EF6               	movwf	tblptrl,c
   275  002252  0E24               	movlw	high __pidataBANK0
   276  002254  6EF7               	movwf	tblptrh,c
   277  002256  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   278  002258  6EF8               	movwf	tblptru,c
   279  00225A  EE00  F0B4         	lfsr	0,__pdataBANK0
   280  00225E  EE10 F008          	lfsr	1,8
   281  002262                     copy_data0:
   282  002262  0009               	tblrd		*+
   283  002264  CFF5 FFEE          	movff	tablat,postinc0
   284  002268  50E5               	movf	postdec1,w,c
   285  00226A  50E1               	movf	fsr1l,w,c
   286  00226C  E1FA               	bnz	copy_data0
   287                           
   288                           ; Initialize objects allocated to COMRAM (9 bytes)
   289                           ; load TBLPTR registers with __pidataCOMRAM
   290  00226E  0E8E               	movlw	low __pidataCOMRAM
   291  002270  6EF6               	movwf	tblptrl,c
   292  002272  0E24               	movlw	high __pidataCOMRAM
   293  002274  6EF7               	movwf	tblptrh,c
   294  002276  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   295  002278  6EF8               	movwf	tblptru,c
   296  00227A  EE00  F039         	lfsr	0,__pdataCOMRAM
   297  00227E  EE10 F009          	lfsr	1,9
   298  002282                     copy_data1:
   299  002282  0009               	tblrd		*+
   300  002284  CFF5 FFEE          	movff	tablat,postinc0
   301  002288  50E5               	movf	postdec1,w,c
   302  00228A  50E1               	movf	fsr1l,w,c
   303  00228C  E1FA               	bnz	copy_data1
   304  00228E                     end_of_initialization:
   305                           	opt stack 0
   306  00228E                     __end_of__initialization:
   307                           	opt stack 0
   308  00228E  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   309  002290  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   310  002292  0E00               	movlw	low (__Lmediumconst shr (0+16))
   311  002294  6EF8               	movwf	tblptru,c
   312  002296  0100               	movlb	0
   313  002298  EFEC  F00E         	goto	_main	;jump to C main() function
   314                           tblptru	equ	0xFF8
   315                           tblptrh	equ	0xFF7
   316                           tblptrl	equ	0xFF6
   317                           tablat	equ	0xFF5
   318                           postinc0	equ	0xFEE
   319                           wreg	equ	0xFE8
   320                           postdec1	equ	0xFE5
   321                           fsr1l	equ	0xFE1
   322                           
   323                           	psect	bitbssCOMRAM
   324  000210                     __pbitbssCOMRAM:
   325                           	opt stack 0
   326  000210                     _RTR_Flag:
   327                           	opt stack 0
   328  000210                     	ds	1
   329  000211                     _dir:
   330                           	opt stack 0
   331  000211                     	ds	1
   332  000212                     _newMessageCan:
   333                           	opt stack 0
   334  000212                     	ds	1
   335  000213                     _newMessageUsart:
   336                           	opt stack 0
   337  000213                     	ds	1
   338  000214                     _sendMessage:
   339                           	opt stack 0
   340  000214                     	ds	1
   341                           tblptru	equ	0xFF8
   342                           tblptrh	equ	0xFF7
   343                           tblptrl	equ	0xFF6
   344                           tablat	equ	0xFF5
   345                           postinc0	equ	0xFEE
   346                           wreg	equ	0xFE8
   347                           postdec1	equ	0xFE5
   348                           fsr1l	equ	0xFE1
   349                           
   350                           	psect	bssCOMRAM
   351  000022                     __pbssCOMRAM:
   352                           	opt stack 0
   353  000022                     _id:
   354                           	opt stack 0
   355  000022                     	ds	4
   356  000026                     _previousTimeCounter:
   357                           	opt stack 0
   358  000026                     	ds	4
   359  00002A                     _timeCounter:
   360                           	opt stack 0
   361  00002A                     	ds	4
   362  00002E                     _clock_counter_reference:
   363                           	opt stack 0
   364  00002E                     	ds	2
   365  000030                     _left_speed:
   366                           	opt stack 0
   367  000030                     	ds	2
   368  000032                     _right_speed:
   369                           	opt stack 0
   370  000032                     	ds	2
   371  000034                     _USART_Status:
   372                           	opt stack 0
   373  000034                     	ds	1
   374  000035                     _analogic_brake_old:
   375                           	opt stack 0
   376  000035                     	ds	1
   377  000036                     _buffer:
   378                           	opt stack 0
   379  000036                     	ds	1
   380  000037                     _set_steering_old:
   381                           	opt stack 0
   382  000037                     	ds	1
   383  000038                     _spam_counter:
   384                           	opt stack 0
   385  000038                     	ds	1
   386                           tblptru	equ	0xFF8
   387                           tblptrh	equ	0xFF7
   388                           tblptrl	equ	0xFF6
   389                           tablat	equ	0xFF5
   390                           postinc0	equ	0xFEE
   391                           wreg	equ	0xFE8
   392                           postdec1	equ	0xFE5
   393                           fsr1l	equ	0xFE1
   394                           
   395                           	psect	dataCOMRAM
   396  000039                     __pdataCOMRAM:
   397                           	opt stack 0
   398  000039                     _delay_quartz_frequency_value:
   399                           	opt stack 0
   400  000039                     	ds	1
   401  00003A                     _SerialOutput:
   402                           	opt stack 0
   403  00003A                     	ds	8
   404                           tblptru	equ	0xFF8
   405                           tblptrh	equ	0xFF7
   406                           tblptrl	equ	0xFF6
   407                           tablat	equ	0xFF5
   408                           postinc0	equ	0xFEE
   409                           wreg	equ	0xFE8
   410                           postdec1	equ	0xFE5
   411                           fsr1l	equ	0xFE1
   412                           
   413                           	psect	bssBANK0
   414  000060                     __pbssBANK0:
   415                           	opt stack 0
   416  000060                     _set_speed_old:
   417                           	opt stack 0
   418  000060                     	ds	8
   419  000068                     _USART_Rx:
   420                           	opt stack 0
   421  000068                     	ds	7
   422  00006F                     _msg:
   423                           	opt stack 0
   424  00006F                     	ds	15
   425  00007E                     _analogic_brake:
   426                           	opt stack 0
   427  00007E                     	ds	8
   428  000086                     _data:
   429                           	opt stack 0
   430  000086                     	ds	8
   431  00008E                     _set_speed:
   432                           	opt stack 0
   433  00008E                     	ds	8
   434  000096                     _set_steering:
   435                           	opt stack 0
   436  000096                     	ds	8
   437                           tblptru	equ	0xFF8
   438                           tblptrh	equ	0xFF7
   439                           tblptrl	equ	0xFF6
   440                           tablat	equ	0xFF5
   441                           postinc0	equ	0xFEE
   442                           wreg	equ	0xFE8
   443                           postdec1	equ	0xFE5
   444                           fsr1l	equ	0xFE1
   445                           
   446                           	psect	dataBANK0
   447  0000B4                     __pdataBANK0:
   448                           	opt stack 0
   449  0000B4                     _SerialOutputOld:
   450                           	opt stack 0
   451  0000B4                     	ds	8
   452                           tblptru	equ	0xFF8
   453                           tblptrh	equ	0xFF7
   454                           tblptrl	equ	0xFF6
   455                           tablat	equ	0xFF5
   456                           postinc0	equ	0xFEE
   457                           wreg	equ	0xFE8
   458                           postdec1	equ	0xFE5
   459                           fsr1l	equ	0xFE1
   460                           
   461                           	psect	cstackBANK0
   462  00009E                     __pcstackBANK0:
   463                           	opt stack 0
   464  00009E                     ??_CANSetMask:
   465  00009E                     ??_CANSetFilter:
   466  00009E                     usart_tx@i:
   467                           	opt stack 0
   468  00009E                     ___wmul@product:
   469                           	opt stack 0
   470  00009E                     CANsendMessage@identifier:
   471                           	opt stack 0
   472                           
   473                           ; 4 bytes @ 0x0
   474  00009E                     	ds	1
   475  00009F                     usart_tx@i_3324:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x1
   479  00009F                     	ds	1
   480  0000A0                     usart_tx@i_3341:
   481                           	opt stack 0
   482  0000A0                     delay_ms@value_ms:
   483                           	opt stack 0
   484                           
   485                           ; 2 bytes @ 0x2
   486  0000A0                     	ds	2
   487  0000A2                     CANSetMask@numBuffer:
   488                           	opt stack 0
   489  0000A2                     CANSetFilter@numBuffer:
   490                           	opt stack 0
   491  0000A2                     CANsendMessage@data:
   492                           	opt stack 0
   493                           
   494                           ; 2 bytes @ 0x4
   495  0000A2                     	ds	1
   496  0000A3                     CANSetMask@tamp:
   497                           	opt stack 0
   498  0000A3                     CANSetFilter@tamp:
   499                           	opt stack 0
   500                           
   501                           ; 4 bytes @ 0x5
   502  0000A3                     	ds	1
   503  0000A4                     CANsendMessage@dataLength:
   504                           	opt stack 0
   505                           
   506                           ; 1 bytes @ 0x6
   507  0000A4                     	ds	1
   508  0000A5                     CANsendMessage@flags:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x7
   512  0000A5                     	ds	1
   513  0000A6                     CANsendMessage@tamp:
   514                           	opt stack 0
   515                           
   516                           ; 4 bytes @ 0x8
   517  0000A6                     	ds	1
   518  0000A7                     CANInitialize@phaseSeg1:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0x9
   522  0000A7                     	ds	1
   523  0000A8                     CANInitialize@phaseSeg2:
   524                           	opt stack 0
   525                           
   526                           ; 1 bytes @ 0xA
   527  0000A8                     	ds	1
   528  0000A9                     CANInitialize@SJW:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0xB
   532  0000A9                     	ds	1
   533  0000AA                     ??_can_interpreter:
   534  0000AA                     CANInitialize@BRP:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0xC
   538  0000AA                     	ds	1
   539  0000AB                     CANInitialize@flags:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0xD
   543  0000AB                     	ds	1
   544  0000AC                     ??_CANInitialize:
   545                           
   546                           ; 0 bytes @ 0xE
   547  0000AC                     	ds	4
   548  0000B0                     CANInitialize@propSeg:
   549                           	opt stack 0
   550                           
   551                           ; 1 bytes @ 0x12
   552  0000B0                     	ds	1
   553  0000B1                     CANInitialize@FilterConfig1:
   554                           	opt stack 0
   555                           
   556                           ; 1 bytes @ 0x13
   557  0000B1                     	ds	1
   558  0000B2                     CANInitialize@FilterConfig2:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x14
   562  0000B2                     	ds	1
   563  0000B3                     ??_main:
   564                           
   565                           ; 0 bytes @ 0x15
   566  0000B3                     	ds	1
   567                           tblptru	equ	0xFF8
   568                           tblptrh	equ	0xFF7
   569                           tblptrl	equ	0xFF6
   570                           tablat	equ	0xFF5
   571                           postinc0	equ	0xFEE
   572                           wreg	equ	0xFE8
   573                           postdec1	equ	0xFE5
   574                           fsr1l	equ	0xFE1
   575                           
   576                           	psect	cstackCOMRAM
   577  000001                     __pcstackCOMRAM:
   578                           	opt stack 0
   579  000001                     ??_usart_rx:
   580  000001                     _CANisRxReady$3215:
   581                           	opt stack 0
   582  000001                     CANreceiveMessage@msg:
   583                           	opt stack 0
   584                           
   585                           ; 2 bytes @ 0x0
   586  000001                     	ds	1
   587  000002                     usart_rx@i:
   588                           	opt stack 0
   589                           
   590                           ; 1 bytes @ 0x1
   591  000002                     	ds	1
   592  000003                     ??_CANreceiveMessage:
   593                           
   594                           ; 0 bytes @ 0x2
   595  000003                     	ds	8
   596  00000B                     CANreceiveMessage@error:
   597                           	opt stack 0
   598                           
   599                           ; 1 bytes @ 0xA
   600  00000B                     	ds	1
   601  00000C                     CANreceiveMessage@tamp:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0xB
   605  00000C                     	ds	1
   606  00000D                     ??_ISR_alta:
   607                           
   608                           ; 0 bytes @ 0xC
   609  00000D                     	ds	15
   610  00001C                     ISR_alta@i:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0x1B
   614  00001C                     	ds	1
   615  00001D                     ??_CANsendMessage:
   616  00001D                     ?___wmul:
   617                           	opt stack 0
   618  00001D                     CANOperationMode@mode:
   619                           	opt stack 0
   620  00001D                     _CANisTxReady$3213:
   621                           	opt stack 0
   622  00001D                     WriteUSART@data:
   623                           	opt stack 0
   624  00001D                     OpenUSART@spbrg:
   625                           	opt stack 0
   626  00001D                     ___wmul@multiplier:
   627                           	opt stack 0
   628  00001D                     CANSetMask@mask:
   629                           	opt stack 0
   630  00001D                     CANSetFilter@filter:
   631                           	opt stack 0
   632                           
   633                           ; 4 bytes @ 0x1C
   634  00001D                     	ds	1
   635  00001E                     putsUSART@data:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x1D
   639  00001E                     	ds	1
   640  00001F                     OpenUSART@config:
   641                           	opt stack 0
   642  00001F                     ___wmul@multiplicand:
   643                           	opt stack 0
   644                           
   645                           ; 2 bytes @ 0x1E
   646  00001F                     	ds	1
   647  000020                     ??_usart_tx:
   648  000020                     
   649                           ; 0 bytes @ 0x1F
   650  000020                     	ds	1
   651  000021                     CANSetMask@type:
   652                           	opt stack 0
   653  000021                     CANSetFilter@type:
   654                           	opt stack 0
   655                           
   656                           ; 1 bytes @ 0x20
   657  000021                     	ds	1
   658  000022                     tblptru	equ	0xFF8
   659                           tblptrh	equ	0xFF7
   660                           tblptrl	equ	0xFF6
   661                           tablat	equ	0xFF5
   662                           postinc0	equ	0xFEE
   663                           wreg	equ	0xFE8
   664                           postdec1	equ	0xFE5
   665                           fsr1l	equ	0xFE1
   666                           
   667                           ; 0 bytes @ 0x21
   668 ;;
   669 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   670 ;;
   671 ;; *************** function _main *****************
   672 ;; Defined at:
   673 ;;		line 99 in file "CanToSerial.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;		None               void
   680 ;; Registers used:
   681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   687 ;;      Params:         0       0       0       0
   688 ;;      Locals:         0       0       0       0
   689 ;;      Temps:          0       1       0       0
   690 ;;      Totals:         0       1       0       0
   691 ;;Total ram usage:        1 bytes
   692 ;; Hardware stack levels required when called:    5
   693 ;; This function calls:
   694 ;;		_CANisTxReady
   695 ;;		_CANsendMessage
   696 ;;		_can_interpreter
   697 ;;		_configurazione_iniziale
   698 ;;		_delay_ms
   699 ;;		_usart_interpreter
   700 ;;		_usart_tx
   701 ;; This function is called by:
   702 ;;		Startup code after reset
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           	psect	text0
   707  001DD8                     __ptext0:
   708                           	opt stack 0
   709  001DD8                     _main:
   710                           	opt stack 26
   711                           
   712                           ;CanToSerial.c: 100: configurazione_iniziale();
   713                           
   714                           ;incstack = 0
   715  001DD8  ECC6  F010         	call	_configurazione_iniziale	;wreg free
   716                           
   717                           ;CanToSerial.c: 101: LATDbits.LATD2 = 1;
   718  001DDC  848C               	bsf	3980,2,c	;volatile
   719                           
   720                           ;CanToSerial.c: 102: LATDbits.LATD3 = 1;
   721  001DDE  868C               	bsf	3980,3,c	;volatile
   722                           
   723                           ;CanToSerial.c: 103: LATDbits.LATD0 = 1;
   724  001DE0  808C               	bsf	3980,0,c	;volatile
   725                           
   726                           ;CanToSerial.c: 104: LATDbits.LATD1 = 1;
   727  001DE2  828C               	bsf	3980,1,c	;volatile
   728                           
   729                           ;CanToSerial.c: 105: LATDbits.LATD4 = 1;
   730  001DE4  888C               	bsf	3980,4,c	;volatile
   731                           
   732                           ;CanToSerial.c: 106: LATDbits.LATD6 = 1;
   733  001DE6  8C8C               	bsf	3980,6,c	;volatile
   734                           
   735                           ;CanToSerial.c: 107: LATDbits.LATD5 = 1;
   736  001DE8  8A8C               	bsf	3980,5,c	;volatile
   737                           
   738                           ;CanToSerial.c: 108: delay_ms(500);
   739  001DEA  0E01               	movlw	1
   740  001DEC  0100               	movlb	0	; () banked
   741  001DEE  6FA1               	movwf	(delay_ms@value_ms+1)& (0+255),b
   742  001DF0  0EF4               	movlw	244
   743  001DF2  6FA0               	movwf	delay_ms@value_ms& (0+255),b
   744  001DF4  ECDA  F011         	call	_delay_ms	;wreg free
   745                           
   746                           ;CanToSerial.c: 109: LATDbits.LATD2 = 0;
   747  001DF8  948C               	bcf	3980,2,c	;volatile
   748                           
   749                           ;CanToSerial.c: 110: LATDbits.LATD3 = 0;
   750  001DFA  968C               	bcf	3980,3,c	;volatile
   751                           
   752                           ;CanToSerial.c: 111: LATDbits.LATD0 = 0;
   753  001DFC  908C               	bcf	3980,0,c	;volatile
   754                           
   755                           ;CanToSerial.c: 112: LATDbits.LATD1 = 0;
   756  001DFE  928C               	bcf	3980,1,c	;volatile
   757                           
   758                           ;CanToSerial.c: 113: LATDbits.LATD4 = 0;
   759  001E00  988C               	bcf	3980,4,c	;volatile
   760                           
   761                           ;CanToSerial.c: 114: LATDbits.LATD6 = 0;
   762  001E02  9C8C               	bcf	3980,6,c	;volatile
   763                           
   764                           ;CanToSerial.c: 115: LATDbits.LATD5 = 0;
   765  001E04  9A8C               	bcf	3980,5,c	;volatile
   766  001E06                     l4873:
   767                           
   768                           ;CanToSerial.c: 117: if (newMessageCan == 1) {
   769  001E06  A442               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
   770  001E08  D00B               	goto	l4887
   771                           
   772                           ;CanToSerial.c: 118: can_interpreter();
   773  001E0A  EC1F  F00D         	call	_can_interpreter	;wreg free
   774                           
   775                           ;CanToSerial.c: 119: SerialOutput[0] = 0xAA;
   776  001E0E  0EAA               	movlw	170
   777  001E10  6E3A               	movwf	_SerialOutput,c
   778                           
   779                           ;CanToSerial.c: 120: SerialOutput[6] = 0xAA;
   780  001E12  0EAA               	movlw	170
   781  001E14  6E40               	movwf	_SerialOutput+6,c
   782                           
   783                           ;CanToSerial.c: 121: SerialOutput[7] = '\0';
   784  001E16  0E00               	movlw	0
   785  001E18  6E41               	movwf	_SerialOutput+7,c
   786                           
   787                           ;CanToSerial.c: 122: usart_tx();
   788  001E1A  EC45  F010         	call	_usart_tx	;wreg free
   789                           
   790                           ;CanToSerial.c: 123: newMessageCan = 0;
   791  001E1E  9442               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
   792  001E20                     l4887:
   793                           
   794                           ;CanToSerial.c: 124: }
   795                           ;CanToSerial.c: 126: if (newMessageUsart == 1) {
   796  001E20  A642               	btfss	_newMessageUsart/(0+8),_newMessageUsart& (0+7),c	;volatile
   797  001E22  D7F1               	goto	l4873
   798                           
   799                           ;CanToSerial.c: 127: usart_interpreter();
   800  001E24  ECB2  F011         	call	_usart_interpreter	;wreg free
   801                           
   802                           ;CanToSerial.c: 128: if (set_steering_old != set_steering[0]) {
   803  001E28  5037               	movf	_set_steering_old,w,c	;volatile
   804  001E2A  0100               	movlb	0	; () banked
   805  001E2C  1996               	xorwf	_set_steering& (0+255),w,b
   806  001E2E  B4D8               	btfsc	status,2,c
   807  001E30  D02D               	goto	l4901
   808  001E32                     l4895:
   809  001E32  EC1B  F012         	call	_CANisTxReady	;wreg free
   810  001E36  06E8               	decf	wreg,f,c
   811  001E38  A4D8               	btfss	status,2,c
   812  001E3A  D7FB               	goto	l4895
   813                           
   814                           ;CanToSerial.c: 130: CANsendMessage(0b00000000101, set_steering, 8, CAN_CONFIG_STD_MSG &
      +                           CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
   815  001E3C  0E05               	movlw	5
   816  001E3E  0100               	movlb	0	; () banked
   817  001E40  6F9E               	movwf	CANsendMessage@identifier& (0+255),b
   818  001E42  0E00               	movlw	0
   819  001E44  6F9F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   820  001E46  0E00               	movlw	0
   821  001E48  6FA0               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   822  001E4A  0E00               	movlw	0
   823  001E4C  6FA1               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   824  001E4E  0E96               	movlw	low _set_steering
   825  001E50  0100               	movlb	0	; () banked
   826  001E52  6FA2               	movwf	CANsendMessage@data& (0+255),b
   827  001E54  0E00               	movlw	high _set_steering
   828  001E56  0100               	movlb	0	; () banked
   829  001E58  6FA3               	movwf	(CANsendMessage@data+1)& (0+255),b
   830  001E5A  0E08               	movlw	8
   831  001E5C  0100               	movlb	0	; () banked
   832  001E5E  6FA4               	movwf	CANsendMessage@dataLength& (0+255),b
   833  001E60  0EBC               	movlw	188
   834  001E62  0100               	movlb	0	; () banked
   835  001E64  6FA5               	movwf	CANsendMessage@flags& (0+255),b
   836  001E66  EC30  F005         	call	_CANsendMessage	;wreg free
   837                           
   838                           ;CanToSerial.c: 131: LATDbits.LATD2 = ~LATDbits.LATD2;
   839  001E6A  A48C               	btfss	3980,2,c	;volatile
   840  001E6C  D002               	goto	u6640
   841  001E6E  0E01               	movlw	1
   842  001E70  D001               	goto	u6646
   843  001E72                     u6640:
   844  001E72  0E00               	movlw	0
   845  001E74                     u6646:
   846  001E74  0AFF               	xorlw	255
   847  001E76  0100               	movlb	0	; () banked
   848  001E78  6FB3               	movwf	??_main& (0+255),b
   849  001E7A  0100               	movlb	0	; () banked
   850  001E7C  47B3               	rlncf	??_main& (0+255),f,b
   851  001E7E  47B3               	rlncf	??_main& (0+255),f,b
   852  001E80  508C               	movf	3980,w,c	;volatile
   853  001E82  0100               	movlb	0	; () banked
   854  001E84  19B3               	xorwf	??_main& (0+255),w,b
   855  001E86  0BFB               	andlw	-5
   856  001E88  19B3               	xorwf	??_main& (0+255),w,b
   857  001E8A  6E8C               	movwf	3980,c	;volatile
   858  001E8C                     l4901:
   859                           
   860                           ; BSR set to: 0
   861                           ;CanToSerial.c: 132: }
   862                           ;CanToSerial.c: 133: if ((set_speed_old[0] != set_speed[0])&&(set_speed_old[1] != set_sp
      +                          eed[1])) {
   863  001E8C  0100               	movlb	0	; () banked
   864  001E8E  518E               	movf	_set_speed& (0+255),w,b
   865  001E90  0100               	movlb	0	; () banked
   866  001E92  1960               	xorwf	_set_speed_old& (0+255),w,b	;volatile
   867  001E94  B4D8               	btfsc	status,2,c
   868  001E96  D033               	goto	l4913
   869                           
   870                           ; BSR set to: 0
   871  001E98  0100               	movlb	0	; () banked
   872  001E9A  518F               	movf	(_set_speed+1)& (0+255),w,b
   873  001E9C  0100               	movlb	0	; () banked
   874  001E9E  1961               	xorwf	(_set_speed_old+1)& (0+255),w,b	;volatile
   875  001EA0  B4D8               	btfsc	status,2,c
   876  001EA2  D02D               	goto	l4913
   877  001EA4                     l4907:
   878  001EA4  EC1B  F012         	call	_CANisTxReady	;wreg free
   879  001EA8  06E8               	decf	wreg,f,c
   880  001EAA  A4D8               	btfss	status,2,c
   881  001EAC  D7FB               	goto	l4907
   882                           
   883                           ;CanToSerial.c: 135: CANsendMessage(0b00000000011, set_speed, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
   884  001EAE  0E03               	movlw	3
   885  001EB0  0100               	movlb	0	; () banked
   886  001EB2  6F9E               	movwf	CANsendMessage@identifier& (0+255),b
   887  001EB4  0E00               	movlw	0
   888  001EB6  6F9F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   889  001EB8  0E00               	movlw	0
   890  001EBA  6FA0               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   891  001EBC  0E00               	movlw	0
   892  001EBE  6FA1               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   893  001EC0  0E8E               	movlw	low _set_speed
   894  001EC2  0100               	movlb	0	; () banked
   895  001EC4  6FA2               	movwf	CANsendMessage@data& (0+255),b
   896  001EC6  0E00               	movlw	high _set_speed
   897  001EC8  0100               	movlb	0	; () banked
   898  001ECA  6FA3               	movwf	(CANsendMessage@data+1)& (0+255),b
   899  001ECC  0E08               	movlw	8
   900  001ECE  0100               	movlb	0	; () banked
   901  001ED0  6FA4               	movwf	CANsendMessage@dataLength& (0+255),b
   902  001ED2  0EBC               	movlw	188
   903  001ED4  0100               	movlb	0	; () banked
   904  001ED6  6FA5               	movwf	CANsendMessage@flags& (0+255),b
   905  001ED8  EC30  F005         	call	_CANsendMessage	;wreg free
   906                           
   907                           ;CanToSerial.c: 136: LATDbits.LATD2 = ~LATDbits.LATD2;
   908  001EDC  A48C               	btfss	3980,2,c	;volatile
   909  001EDE  D002               	goto	u6680
   910  001EE0  0E01               	movlw	1
   911  001EE2  D001               	goto	u6686
   912  001EE4                     u6680:
   913  001EE4  0E00               	movlw	0
   914  001EE6                     u6686:
   915  001EE6  0AFF               	xorlw	255
   916  001EE8  0100               	movlb	0	; () banked
   917  001EEA  6FB3               	movwf	??_main& (0+255),b
   918  001EEC  0100               	movlb	0	; () banked
   919  001EEE  47B3               	rlncf	??_main& (0+255),f,b
   920  001EF0  47B3               	rlncf	??_main& (0+255),f,b
   921  001EF2  508C               	movf	3980,w,c	;volatile
   922  001EF4  0100               	movlb	0	; () banked
   923  001EF6  19B3               	xorwf	??_main& (0+255),w,b
   924  001EF8  0BFB               	andlw	-5
   925  001EFA  19B3               	xorwf	??_main& (0+255),w,b
   926  001EFC  6E8C               	movwf	3980,c	;volatile
   927  001EFE                     l4913:
   928                           
   929                           ; BSR set to: 0
   930                           ;CanToSerial.c: 137: }
   931                           ;CanToSerial.c: 138: if (analogic_brake_old != analogic_brake[0]) {
   932  001EFE  5035               	movf	_analogic_brake_old,w,c	;volatile
   933  001F00  0100               	movlb	0	; () banked
   934  001F02  197E               	xorwf	_analogic_brake& (0+255),w,b
   935  001F04  B4D8               	btfsc	status,2,c
   936  001F06  D030               	goto	l4923
   937                           
   938                           ; BSR set to: 0
   939                           ;CanToSerial.c: 139: analogic_brake[1] = 0x01;
   940  001F08  0E01               	movlw	1
   941  001F0A  0100               	movlb	0	; () banked
   942  001F0C  6F7F               	movwf	(_analogic_brake+1)& (0+255),b
   943  001F0E                     l4917:
   944  001F0E  EC1B  F012         	call	_CANisTxReady	;wreg free
   945  001F12  06E8               	decf	wreg,f,c
   946  001F14  A4D8               	btfss	status,2,c
   947  001F16  D7FB               	goto	l4917
   948                           
   949                           ;CanToSerial.c: 141: CANsendMessage(0b00000000100, analogic_brake, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
   950  001F18  0E04               	movlw	4
   951  001F1A  0100               	movlb	0	; () banked
   952  001F1C  6F9E               	movwf	CANsendMessage@identifier& (0+255),b
   953  001F1E  0E00               	movlw	0
   954  001F20  6F9F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   955  001F22  0E00               	movlw	0
   956  001F24  6FA0               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   957  001F26  0E00               	movlw	0
   958  001F28  6FA1               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   959  001F2A  0E7E               	movlw	low _analogic_brake
   960  001F2C  0100               	movlb	0	; () banked
   961  001F2E  6FA2               	movwf	CANsendMessage@data& (0+255),b
   962  001F30  0E00               	movlw	high _analogic_brake
   963  001F32  0100               	movlb	0	; () banked
   964  001F34  6FA3               	movwf	(CANsendMessage@data+1)& (0+255),b
   965  001F36  0E08               	movlw	8
   966  001F38  0100               	movlb	0	; () banked
   967  001F3A  6FA4               	movwf	CANsendMessage@dataLength& (0+255),b
   968  001F3C  0EBC               	movlw	188
   969  001F3E  0100               	movlb	0	; () banked
   970  001F40  6FA5               	movwf	CANsendMessage@flags& (0+255),b
   971  001F42  EC30  F005         	call	_CANsendMessage	;wreg free
   972                           
   973                           ;CanToSerial.c: 142: LATDbits.LATD2 = ~LATDbits.LATD2;
   974  001F46  A48C               	btfss	3980,2,c	;volatile
   975  001F48  D002               	goto	u6710
   976  001F4A  0E01               	movlw	1
   977  001F4C  D001               	goto	u6716
   978  001F4E                     u6710:
   979  001F4E  0E00               	movlw	0
   980  001F50                     u6716:
   981  001F50  0AFF               	xorlw	255
   982  001F52  0100               	movlb	0	; () banked
   983  001F54  6FB3               	movwf	??_main& (0+255),b
   984  001F56  0100               	movlb	0	; () banked
   985  001F58  47B3               	rlncf	??_main& (0+255),f,b
   986  001F5A  47B3               	rlncf	??_main& (0+255),f,b
   987  001F5C  508C               	movf	3980,w,c	;volatile
   988  001F5E  0100               	movlb	0	; () banked
   989  001F60  19B3               	xorwf	??_main& (0+255),w,b
   990  001F62  0BFB               	andlw	-5
   991  001F64  19B3               	xorwf	??_main& (0+255),w,b
   992  001F66  6E8C               	movwf	3980,c	;volatile
   993  001F68                     l4923:
   994                           
   995                           ; BSR set to: 0
   996                           ;CanToSerial.c: 143: }
   997                           ;CanToSerial.c: 144: newMessageUsart = 0;
   998  001F68  9642               	bcf	_newMessageUsart/(0+8),_newMessageUsart& (0+7),c	;volatile
   999                           
  1000                           ; BSR set to: 0
  1001                           
  1002                           ; BSR set to: 0
  1003  001F6A  D74D               	goto	l4873
  1004  001F6C                     __end_of_main:
  1005                           	opt stack 0
  1006                           tblptru	equ	0xFF8
  1007                           tblptrh	equ	0xFF7
  1008                           tblptrl	equ	0xFF6
  1009                           tablat	equ	0xFF5
  1010                           postinc0	equ	0xFEE
  1011                           wreg	equ	0xFE8
  1012                           postdec1	equ	0xFE5
  1013                           fsr1l	equ	0xFE1
  1014                           status	equ	0xFD8
  1015                           
  1016 ;; *************** function _usart_tx *****************
  1017 ;; Defined at:
  1018 ;;		line 242 in file "CanToSerial.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;  i               1    2[BANK0 ] unsigned char 
  1023 ;;  i               1    1[BANK0 ] unsigned char 
  1024 ;;  i               1    0[BANK0 ] unsigned char 
  1025 ;; Return value:  Size  Location     Type
  1026 ;;		None               void
  1027 ;; Registers used:
  1028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1034 ;;      Params:         0       0       0       0
  1035 ;;      Locals:         0       3       0       0
  1036 ;;      Temps:          2       0       0       0
  1037 ;;      Totals:         2       3       0       0
  1038 ;;Total ram usage:        5 bytes
  1039 ;; Hardware stack levels used:    1
  1040 ;; Hardware stack levels required when called:    4
  1041 ;; This function calls:
  1042 ;;		_putsUSART
  1043 ;; This function is called by:
  1044 ;;		_main
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text1
  1049  00208A                     __ptext1:
  1050                           	opt stack 0
  1051  00208A                     _usart_tx:
  1052                           	opt stack 26
  1053                           
  1054                           ;CanToSerial.c: 249: for (char i = 0; i < 6; i++) {
  1055                           
  1056                           ; BSR set to: 0
  1057                           ;incstack = 0
  1058  00208A  0E00               	movlw	0
  1059  00208C  0100               	movlb	0	; () banked
  1060  00208E  6F9E               	movwf	usart_tx@i& (0+255),b
  1061  002090                     l4791:
  1062                           
  1063                           ; BSR set to: 0
  1064  002090  0E05               	movlw	5
  1065  002092  0100               	movlb	0	; () banked
  1066  002094  659E               	cpfsgt	usart_tx@i& (0+255),b
  1067  002096  D001               	goto	l4795
  1068  002098  D01A               	goto	l4803
  1069  00209A                     l4795:
  1070                           
  1071                           ; BSR set to: 0
  1072                           ;CanToSerial.c: 250: if (SerialOutput[i] == 0) {
  1073  00209A  0100               	movlb	0	; () banked
  1074  00209C  519E               	movf	usart_tx@i& (0+255),w,b
  1075  00209E  0D01               	mullw	1
  1076  0020A0  0E3A               	movlw	low _SerialOutput
  1077  0020A2  24F3               	addwf	prodl,w,c
  1078  0020A4  6ED9               	movwf	fsr2l,c
  1079  0020A6  0E00               	movlw	high _SerialOutput
  1080  0020A8  20F4               	addwfc	prodh,w,c
  1081  0020AA  6EDA               	movwf	fsr2h,c
  1082  0020AC  50DF               	movf	indf2,w,c
  1083  0020AE  A4D8               	btfss	status,2,c
  1084  0020B0  D00B               	goto	l4799
  1085                           
  1086                           ; BSR set to: 0
  1087                           ;CanToSerial.c: 251: SerialOutput[i] = 1;
  1088  0020B2  0100               	movlb	0	; () banked
  1089  0020B4  519E               	movf	usart_tx@i& (0+255),w,b
  1090  0020B6  0D01               	mullw	1
  1091  0020B8  0E3A               	movlw	low _SerialOutput
  1092  0020BA  24F3               	addwf	prodl,w,c
  1093  0020BC  6ED9               	movwf	fsr2l,c
  1094  0020BE  0E00               	movlw	high _SerialOutput
  1095  0020C0  20F4               	addwfc	prodh,w,c
  1096  0020C2  6EDA               	movwf	fsr2h,c
  1097  0020C4  0E01               	movlw	1
  1098  0020C6  6EDF               	movwf	indf2,c
  1099  0020C8                     l4799:
  1100                           
  1101                           ; BSR set to: 0
  1102  0020C8  0100               	movlb	0	; () banked
  1103  0020CA  2B9E               	incf	usart_tx@i& (0+255),f,b
  1104  0020CC  D7E1               	goto	l4791
  1105  0020CE                     l4803:
  1106                           
  1107                           ; BSR set to: 0
  1108                           ;CanToSerial.c: 252: }
  1109                           ;CanToSerial.c: 253: }
  1110                           ;CanToSerial.c: 263: spam_counter = 0;
  1111  0020CE  0E00               	movlw	0
  1112  0020D0  6E38               	movwf	_spam_counter,c
  1113                           
  1114                           ;CanToSerial.c: 264: for (char i = 1; i < 6; i++) {
  1115  0020D2  0E01               	movlw	1
  1116  0020D4  0100               	movlb	0	; () banked
  1117  0020D6  6F9F               	movwf	usart_tx@i_3324& (0+255),b
  1118  0020D8                     l4805:
  1119                           
  1120                           ; BSR set to: 0
  1121  0020D8  0E05               	movlw	5
  1122  0020DA  0100               	movlb	0	; () banked
  1123  0020DC  659F               	cpfsgt	usart_tx@i_3324& (0+255),b
  1124  0020DE  D001               	goto	l4809
  1125  0020E0  D019               	goto	l705
  1126  0020E2                     l4809:
  1127                           
  1128                           ; BSR set to: 0
  1129                           ;CanToSerial.c: 265: if (SerialOutput[i] == SerialOutputOld[i]) {
  1130  0020E2  0100               	movlb	0	; () banked
  1131  0020E4  519F               	movf	usart_tx@i_3324& (0+255),w,b
  1132  0020E6  0D01               	mullw	1
  1133  0020E8  0EB4               	movlw	low _SerialOutputOld
  1134  0020EA  24F3               	addwf	prodl,w,c
  1135  0020EC  6ED9               	movwf	fsr2l,c
  1136  0020EE  0E00               	movlw	high _SerialOutputOld
  1137  0020F0  20F4               	addwfc	prodh,w,c
  1138  0020F2  6EDA               	movwf	fsr2h,c
  1139  0020F4  0100               	movlb	0	; () banked
  1140  0020F6  519F               	movf	usart_tx@i_3324& (0+255),w,b
  1141  0020F8  0D01               	mullw	1
  1142  0020FA  0E3A               	movlw	low _SerialOutput
  1143  0020FC  24F3               	addwf	prodl,w,c
  1144  0020FE  6EE1               	movwf	fsr1l,c
  1145  002100  0E00               	movlw	high _SerialOutput
  1146  002102  20F4               	addwfc	prodh,w,c
  1147  002104  6EE2               	movwf	fsr1h,c
  1148  002106  50DE               	movf	postinc2,w,c
  1149  002108  18E6               	xorwf	postinc1,w,c
  1150  00210A  B4D8               	btfsc	status,2,c
  1151                           
  1152                           ; BSR set to: 0
  1153                           ;CanToSerial.c: 266: spam_counter++;
  1154  00210C  2A38               	incf	_spam_counter,f,c
  1155                           
  1156                           ; BSR set to: 0
  1157  00210E  0100               	movlb	0	; () banked
  1158  002110  2B9F               	incf	usart_tx@i_3324& (0+255),f,b
  1159  002112  D7E2               	goto	l4805
  1160  002114                     l705:
  1161                           
  1162                           ; BSR set to: 0
  1163                           ;CanToSerial.c: 267: }
  1164                           ;CanToSerial.c: 268: }
  1165                           ;CanToSerial.c: 269: if (((!TXSTAbits.TRMT) != 1)&&(spam_counter != 5)) {
  1166  002114  A2AC               	btfss	4012,1,c	;volatile
  1167  002116  D037               	goto	l707
  1168                           
  1169                           ; BSR set to: 0
  1170  002118  0E05               	movlw	5
  1171  00211A  1838               	xorwf	_spam_counter,w,c
  1172  00211C  B4D8               	btfsc	status,2,c
  1173  00211E  D033               	goto	l707
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;CanToSerial.c: 270: INTCONbits.GIEH = 0;
  1177  002120  9EF2               	bcf	intcon,7,c	;volatile
  1178                           
  1179                           ;CanToSerial.c: 271: INTCONbits.GIEL = 0;
  1180  002122  9CF2               	bcf	intcon,6,c	;volatile
  1181                           
  1182                           ; BSR set to: 0
  1183                           ;CanToSerial.c: 272: LATDbits.LATD0 = ~LATDbits.LATD0;
  1184  002124  A08C               	btfss	3980,0,c	;volatile
  1185  002126  D002               	goto	u6560
  1186  002128  0E01               	movlw	1
  1187  00212A  D001               	goto	u6566
  1188  00212C                     u6560:
  1189  00212C  0E00               	movlw	0
  1190  00212E                     u6566:
  1191  00212E  0AFF               	xorlw	255
  1192  002130  6E20               	movwf	??_usart_tx& (0+255),c
  1193  002132  508C               	movf	3980,w,c	;volatile
  1194  002134  1820               	xorwf	??_usart_tx,w,c
  1195  002136  0BFE               	andlw	-2
  1196  002138  1820               	xorwf	??_usart_tx,w,c
  1197  00213A  6E8C               	movwf	3980,c	;volatile
  1198                           
  1199                           ; BSR set to: 0
  1200                           ;CanToSerial.c: 273: putsUSART(SerialOutput);
  1201  00213C  0E3A               	movlw	low _SerialOutput
  1202  00213E  6E1E               	movwf	putsUSART@data,c
  1203  002140  0E00               	movlw	high _SerialOutput
  1204  002142  6E1F               	movwf	putsUSART@data+1,c
  1205  002144  EC08  F012         	call	_putsUSART	;wreg free
  1206                           
  1207                           ;CanToSerial.c: 274: for (char i = 0; i < 6; i++) {
  1208  002148  0E00               	movlw	0
  1209  00214A  0100               	movlb	0	; () banked
  1210  00214C  6FA0               	movwf	usart_tx@i_3341& (0+255),b
  1211  00214E                     l4825:
  1212                           
  1213                           ; BSR set to: 0
  1214  00214E  0E05               	movlw	5
  1215  002150  0100               	movlb	0	; () banked
  1216  002152  65A0               	cpfsgt	usart_tx@i_3341& (0+255),b
  1217  002154  D001               	goto	l4829
  1218  002156  D017               	goto	l707
  1219  002158                     l4829:
  1220                           
  1221                           ; BSR set to: 0
  1222                           ;CanToSerial.c: 275: SerialOutputOld[i] = SerialOutput[i];
  1223  002158  0100               	movlb	0	; () banked
  1224  00215A  51A0               	movf	usart_tx@i_3341& (0+255),w,b
  1225  00215C  0D01               	mullw	1
  1226  00215E  0E3A               	movlw	low _SerialOutput
  1227  002160  24F3               	addwf	prodl,w,c
  1228  002162  6ED9               	movwf	fsr2l,c
  1229  002164  0E00               	movlw	high _SerialOutput
  1230  002166  20F4               	addwfc	prodh,w,c
  1231  002168  6EDA               	movwf	fsr2h,c
  1232  00216A  0100               	movlb	0	; () banked
  1233  00216C  51A0               	movf	usart_tx@i_3341& (0+255),w,b
  1234  00216E  0D01               	mullw	1
  1235  002170  0EB4               	movlw	low _SerialOutputOld
  1236  002172  24F3               	addwf	prodl,w,c
  1237  002174  6EE1               	movwf	fsr1l,c
  1238  002176  0E00               	movlw	high _SerialOutputOld
  1239  002178  20F4               	addwfc	prodh,w,c
  1240  00217A  6EE2               	movwf	fsr1h,c
  1241  00217C  CFDF FFE7          	movff	indf2,indf1
  1242                           
  1243                           ; BSR set to: 0
  1244  002180  0100               	movlb	0	; () banked
  1245  002182  2BA0               	incf	usart_tx@i_3341& (0+255),f,b
  1246  002184  D7E4               	goto	l4825
  1247  002186                     l707:
  1248                           
  1249                           ; BSR set to: 0
  1250                           ;CanToSerial.c: 276: }
  1251                           ;CanToSerial.c: 277: }
  1252                           ;CanToSerial.c: 278: INTCONbits.GIEH = 1;
  1253  002186  8EF2               	bsf	intcon,7,c	;volatile
  1254                           
  1255                           ;CanToSerial.c: 279: INTCONbits.GIEL = 1;
  1256  002188  8CF2               	bsf	intcon,6,c	;volatile
  1257                           
  1258                           ; BSR set to: 0
  1259  00218A  0012               	return		;funcret
  1260  00218C                     __end_of_usart_tx:
  1261                           	opt stack 0
  1262                           tblptru	equ	0xFF8
  1263                           tblptrh	equ	0xFF7
  1264                           tblptrl	equ	0xFF6
  1265                           tablat	equ	0xFF5
  1266                           prodh	equ	0xFF4
  1267                           prodl	equ	0xFF3
  1268                           intcon	equ	0xFF2
  1269                           postinc0	equ	0xFEE
  1270                           wreg	equ	0xFE8
  1271                           indf1	equ	0xFE7
  1272                           postinc1	equ	0xFE6
  1273                           postdec1	equ	0xFE5
  1274                           fsr1h	equ	0xFE2
  1275                           fsr1l	equ	0xFE1
  1276                           indf2	equ	0xFDF
  1277                           postinc2	equ	0xFDE
  1278                           fsr2h	equ	0xFDA
  1279                           fsr2l	equ	0xFD9
  1280                           status	equ	0xFD8
  1281                           
  1282 ;; *************** function _putsUSART *****************
  1283 ;; Defined at:
  1284 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uputs.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;  data            2   29[COMRAM] PTR unsigned char 
  1287 ;;		 -> SerialOutput(8), 
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;		None               void
  1292 ;; Registers used:
  1293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1299 ;;      Params:         2       0       0       0
  1300 ;;      Locals:         0       0       0       0
  1301 ;;      Temps:          0       0       0       0
  1302 ;;      Totals:         2       0       0       0
  1303 ;;Total ram usage:        2 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    3
  1306 ;; This function calls:
  1307 ;;		_WriteUSART
  1308 ;; This function is called by:
  1309 ;;		_usart_tx
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           	psect	text2
  1314  002410                     __ptext2:
  1315                           	opt stack 0
  1316  002410                     _putsUSART:
  1317                           	opt stack 26
  1318  002410                     l754:
  1319  002410  A2AC               	btfss	4012,1,c	;volatile
  1320  002412  D7FE               	goto	l754
  1321  002414  C01E  FFD9         	movff	putsUSART@data,fsr2l
  1322  002418  C01F  FFDA         	movff	putsUSART@data+1,fsr2h
  1323  00241C  50DF               	movf	indf2,w,c
  1324  00241E  EC35  F012         	call	_WriteUSART
  1325  002422  C01E  FFD9         	movff	putsUSART@data,fsr2l
  1326  002426  C01F  FFDA         	movff	putsUSART@data+1,fsr2h
  1327  00242A  4A1E               	infsnz	putsUSART@data,f,c
  1328  00242C  2A1F               	incf	putsUSART@data+1,f,c
  1329  00242E  50DF               	movf	indf2,w,c
  1330  002430  B4D8               	btfsc	status,2,c
  1331  002432  0012               	return	
  1332  002434  D7ED               	goto	l754
  1333  002436                     __end_of_putsUSART:
  1334                           	opt stack 0
  1335                           tblptru	equ	0xFF8
  1336                           tblptrh	equ	0xFF7
  1337                           tblptrl	equ	0xFF6
  1338                           tablat	equ	0xFF5
  1339                           prodh	equ	0xFF4
  1340                           prodl	equ	0xFF3
  1341                           intcon	equ	0xFF2
  1342                           postinc0	equ	0xFEE
  1343                           wreg	equ	0xFE8
  1344                           indf1	equ	0xFE7
  1345                           postinc1	equ	0xFE6
  1346                           postdec1	equ	0xFE5
  1347                           fsr1h	equ	0xFE2
  1348                           fsr1l	equ	0xFE1
  1349                           indf2	equ	0xFDF
  1350                           postinc2	equ	0xFDE
  1351                           fsr2h	equ	0xFDA
  1352                           fsr2l	equ	0xFD9
  1353                           status	equ	0xFD8
  1354                           
  1355 ;; *************** function _WriteUSART *****************
  1356 ;; Defined at:
  1357 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uwrite.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;  data            1    wreg     unsigned char 
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;  data            1   28[COMRAM] unsigned char 
  1362 ;; Return value:  Size  Location     Type
  1363 ;;		None               void
  1364 ;; Registers used:
  1365 ;;		wreg
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1371 ;;      Params:         0       0       0       0
  1372 ;;      Locals:         1       0       0       0
  1373 ;;      Temps:          0       0       0       0
  1374 ;;      Totals:         1       0       0       0
  1375 ;;Total ram usage:        1 bytes
  1376 ;; Hardware stack levels used:    1
  1377 ;; Hardware stack levels required when called:    2
  1378 ;; This function calls:
  1379 ;;		Nothing
  1380 ;; This function is called by:
  1381 ;;		_putsUSART
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text3
  1386  00246A                     __ptext3:
  1387                           	opt stack 0
  1388  00246A                     _WriteUSART:
  1389                           	opt stack 26
  1390                           
  1391                           ;incstack = 0
  1392                           ;WriteUSART@data stored from wreg
  1393  00246A  6E1D               	movwf	WriteUSART@data,c
  1394  00246C  ACAC               	btfss	4012,6,c	;volatile
  1395  00246E  D003               	goto	l4383
  1396  002470  90AC               	bcf	4012,0,c	;volatile
  1397  002472  B234               	btfsc	_USART_Status,1,c
  1398  002474  80AC               	bsf	4012,0,c	;volatile
  1399  002476                     l4383:
  1400  002476  C01D  FFAD         	movff	WriteUSART@data,4013	;volatile
  1401  00247A  0012               	return		;funcret
  1402  00247C                     __end_of_WriteUSART:
  1403                           	opt stack 0
  1404                           tblptru	equ	0xFF8
  1405                           tblptrh	equ	0xFF7
  1406                           tblptrl	equ	0xFF6
  1407                           tablat	equ	0xFF5
  1408                           prodh	equ	0xFF4
  1409                           prodl	equ	0xFF3
  1410                           intcon	equ	0xFF2
  1411                           postinc0	equ	0xFEE
  1412                           wreg	equ	0xFE8
  1413                           indf1	equ	0xFE7
  1414                           postinc1	equ	0xFE6
  1415                           postdec1	equ	0xFE5
  1416                           fsr1h	equ	0xFE2
  1417                           fsr1l	equ	0xFE1
  1418                           indf2	equ	0xFDF
  1419                           postinc2	equ	0xFDE
  1420                           fsr2h	equ	0xFDA
  1421                           fsr2l	equ	0xFD9
  1422                           status	equ	0xFD8
  1423                           
  1424 ;; *************** function _usart_interpreter *****************
  1425 ;; Defined at:
  1426 ;;		line 193 in file "CanToSerial.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;		None               void
  1433 ;; Registers used:
  1434 ;;		wreg, status,2, status,0
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1440 ;;      Params:         0       0       0       0
  1441 ;;      Locals:         0       0       0       0
  1442 ;;      Temps:          0       0       0       0
  1443 ;;      Totals:         0       0       0       0
  1444 ;;Total ram usage:        0 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; Hardware stack levels required when called:    2
  1447 ;; This function calls:
  1448 ;;		Nothing
  1449 ;; This function is called by:
  1450 ;;		_main
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text4
  1455  002364                     __ptext4:
  1456                           	opt stack 0
  1457  002364                     _usart_interpreter:
  1458                           	opt stack 28
  1459                           
  1460                           ;CanToSerial.c: 195: set_steering_old = set_steering[0];
  1461                           
  1462                           ;incstack = 0
  1463  002364  C096  F037         	movff	_set_steering,_set_steering_old	;volatile
  1464                           
  1465                           ;CanToSerial.c: 196: set_speed_old[0] = set_speed[0];
  1466  002368  C08E  F060         	movff	_set_speed,_set_speed_old	;volatile
  1467                           
  1468                           ;CanToSerial.c: 197: set_speed_old[1] = set_speed[1];
  1469  00236C  C08F  F061         	movff	_set_speed+1,_set_speed_old+1	;volatile
  1470                           
  1471                           ;CanToSerial.c: 198: analogic_brake_old = analogic_brake[0];
  1472  002370  C07E  F035         	movff	_analogic_brake,_analogic_brake_old	;volatile
  1473                           
  1474                           ;CanToSerial.c: 202: if (USART_Rx[1] == 1) {
  1475  002374  0100               	movlb	0	; () banked
  1476  002376  0569               	decf	(_USART_Rx+1)& (0+255),w,b
  1477  002378  A4D8               	btfss	status,2,c
  1478  00237A  D003               	goto	l3801
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;CanToSerial.c: 203: set_speed[2] = 0;
  1482  00237C  0E00               	movlw	0
  1483  00237E  0100               	movlb	0	; () banked
  1484  002380  6F90               	movwf	(_set_speed+2)& (0+255),b
  1485  002382                     l3801:
  1486                           
  1487                           ; BSR set to: 0
  1488                           ;CanToSerial.c: 204: }
  1489                           ;CanToSerial.c: 205: if (USART_Rx[1] == 2) {
  1490  002382  0E02               	movlw	2
  1491  002384  0100               	movlb	0	; () banked
  1492  002386  1969               	xorwf	(_USART_Rx+1)& (0+255),w,b
  1493  002388  A4D8               	btfss	status,2,c
  1494  00238A  D003               	goto	l3805
  1495                           
  1496                           ; BSR set to: 0
  1497                           ;CanToSerial.c: 206: set_speed[2] = 1;
  1498  00238C  0E01               	movlw	1
  1499  00238E  0100               	movlb	0	; () banked
  1500  002390  6F90               	movwf	(_set_speed+2)& (0+255),b
  1501  002392                     l3805:
  1502                           
  1503                           ; BSR set to: 0
  1504                           ;CanToSerial.c: 207: }
  1505                           ;CanToSerial.c: 210: set_speed[0] = USART_Rx[3];
  1506  002392  C06B  F08E         	movff	_USART_Rx+3,_set_speed
  1507                           
  1508                           ; BSR set to: 0
  1509                           ;CanToSerial.c: 211: set_speed[1] = USART_Rx[2];
  1510  002396  C06A  F08F         	movff	_USART_Rx+2,_set_speed+1
  1511                           
  1512                           ; BSR set to: 0
  1513                           ;CanToSerial.c: 213: if (set_speed [1] == 0b10000000) {
  1514  00239A  0E80               	movlw	128
  1515  00239C  0100               	movlb	0	; () banked
  1516  00239E  198F               	xorwf	(_set_speed+1)& (0+255),w,b
  1517  0023A0  A4D8               	btfss	status,2,c
  1518  0023A2  D003               	goto	l3813
  1519                           
  1520                           ; BSR set to: 0
  1521                           ;CanToSerial.c: 214: set_speed[1] = 0b00000000;
  1522  0023A4  0E00               	movlw	0
  1523  0023A6  0100               	movlb	0	; () banked
  1524  0023A8  6F8F               	movwf	(_set_speed+1)& (0+255),b
  1525  0023AA                     l3813:
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;CanToSerial.c: 215: }
  1529                           ;CanToSerial.c: 217: set_steering[0] = USART_Rx[4];
  1530  0023AA  C06C  F096         	movff	_USART_Rx+4,_set_steering
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;CanToSerial.c: 219: analogic_brake[0] = USART_Rx[5];
  1534  0023AE  C06D  F07E         	movff	_USART_Rx+5,_analogic_brake
  1535                           
  1536                           ; BSR set to: 0
  1537  0023B2  0012               	return		;funcret
  1538  0023B4                     __end_of_usart_interpreter:
  1539                           	opt stack 0
  1540                           tblptru	equ	0xFF8
  1541                           tblptrh	equ	0xFF7
  1542                           tblptrl	equ	0xFF6
  1543                           tablat	equ	0xFF5
  1544                           prodh	equ	0xFF4
  1545                           prodl	equ	0xFF3
  1546                           intcon	equ	0xFF2
  1547                           postinc0	equ	0xFEE
  1548                           wreg	equ	0xFE8
  1549                           indf1	equ	0xFE7
  1550                           postinc1	equ	0xFE6
  1551                           postdec1	equ	0xFE5
  1552                           fsr1h	equ	0xFE2
  1553                           fsr1l	equ	0xFE1
  1554                           indf2	equ	0xFDF
  1555                           postinc2	equ	0xFDE
  1556                           fsr2h	equ	0xFDA
  1557                           fsr2l	equ	0xFD9
  1558                           status	equ	0xFD8
  1559                           
  1560 ;; *************** function _configurazione_iniziale *****************
  1561 ;; Defined at:
  1562 ;;		line 283 in file "CanToSerial.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;		None
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;		None
  1567 ;; Return value:  Size  Location     Type
  1568 ;;		None               void
  1569 ;; Registers used:
  1570 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1576 ;;      Params:         0       0       0       0
  1577 ;;      Locals:         0       0       0       0
  1578 ;;      Temps:          0       0       0       0
  1579 ;;      Totals:         0       0       0       0
  1580 ;;Total ram usage:        0 bytes
  1581 ;; Hardware stack levels used:    1
  1582 ;; Hardware stack levels required when called:    4
  1583 ;; This function calls:
  1584 ;;		_CANInitialize
  1585 ;;		_OpenUSART
  1586 ;;		_delay_ms
  1587 ;; This function is called by:
  1588 ;;		_main
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           	psect	text5
  1593  00218C                     __ptext5:
  1594                           	opt stack 0
  1595  00218C                     _configurazione_iniziale:
  1596                           	opt stack 26
  1597                           
  1598                           ;CanToSerial.c: 284: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1599                           
  1600                           ; BSR set to: 0
  1601                           ;incstack = 0
  1602  00218C  0E4F               	movlw	79
  1603  00218E  16AB               	andwf	4011,f,c	;volatile
  1604  002190  9AAC               	bcf	4012,5,c	;volatile
  1605  002192  0ECF               	movlw	207
  1606  002194  169D               	andwf	3997,f,c	;volatile
  1607                           
  1608                           ;CanToSerial.c: 285: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFI
      +                          G_SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  1609  002196  0E06               	movlw	6
  1610  002198  0100               	movlb	0	; () banked
  1611  00219A  6FA7               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1612  00219C  0E05               	movlw	5
  1613  00219E  0100               	movlb	0	; () banked
  1614  0021A0  6FA8               	movwf	CANInitialize@phaseSeg2& (0+255),b
  1615  0021A2  0E01               	movlw	1
  1616  0021A4  0100               	movlb	0	; () banked
  1617  0021A6  6FA9               	movwf	CANInitialize@SJW& (0+255),b
  1618  0021A8  0E03               	movlw	3
  1619  0021AA  0100               	movlb	0	; () banked
  1620  0021AC  6FAA               	movwf	CANInitialize@BRP& (0+255),b
  1621  0021AE  0E9D               	movlw	157
  1622  0021B0  0100               	movlb	0	; () banked
  1623  0021B2  6FAB               	movwf	CANInitialize@flags& (0+255),b
  1624  0021B4  0E04               	movlw	4
  1625  0021B6  EC13  F00E         	call	_CANInitialize
  1626                           
  1627                           ;CanToSerial.c: 289: OpenUSART(0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b111
      +                          11111 & 0b11111111, 25);
  1628  0021BA  0E00               	movlw	0
  1629  0021BC  6E1E               	movwf	OpenUSART@spbrg+1,c
  1630  0021BE  0E19               	movlw	25
  1631  0021C0  6E1D               	movwf	OpenUSART@spbrg,c
  1632  0021C2  0E3C               	movlw	60
  1633  0021C4  EC82  F011         	call	_OpenUSART
  1634                           
  1635                           ;CanToSerial.c: 291: RCSTAbits.SPEN = 1;
  1636  0021C8  8EAB               	bsf	4011,7,c	;volatile
  1637                           
  1638                           ;CanToSerial.c: 294: RCONbits.IPEN = 1;
  1639  0021CA  8ED0               	bsf	4048,7,c	;volatile
  1640                           
  1641                           ;CanToSerial.c: 295: PIR3bits.RXB1IF = 0;
  1642  0021CC  92A4               	bcf	4004,1,c	;volatile
  1643                           
  1644                           ;CanToSerial.c: 296: PIR3bits.RXB0IF = 0;
  1645  0021CE  90A4               	bcf	4004,0,c	;volatile
  1646                           
  1647                           ;CanToSerial.c: 297: PIR1bits.RCIF = 0;
  1648  0021D0  9A9E               	bcf	3998,5,c	;volatile
  1649                           
  1650                           ;CanToSerial.c: 299: IPR3bits.RXB1IP = 1;
  1651  0021D2  82A5               	bsf	4005,1,c	;volatile
  1652                           
  1653                           ;CanToSerial.c: 300: IPR3bits.RXB0IP = 1;
  1654  0021D4  80A5               	bsf	4005,0,c	;volatile
  1655                           
  1656                           ;CanToSerial.c: 301: IPR1bits.RCIP = 1;
  1657  0021D6  8A9F               	bsf	3999,5,c	;volatile
  1658                           
  1659                           ;CanToSerial.c: 305: LATA = 0x00;
  1660  0021D8  0E00               	movlw	0
  1661  0021DA  6E89               	movwf	3977,c	;volatile
  1662                           
  1663                           ;CanToSerial.c: 306: TRISA = 0b01111101;
  1664  0021DC  0E7D               	movlw	125
  1665  0021DE  6E92               	movwf	3986,c	;volatile
  1666                           
  1667                           ;CanToSerial.c: 308: LATB = 0x00;
  1668  0021E0  0E00               	movlw	0
  1669  0021E2  6E8A               	movwf	3978,c	;volatile
  1670                           
  1671                           ;CanToSerial.c: 309: TRISB = 0b11111011;
  1672  0021E4  0EFB               	movlw	251
  1673  0021E6  6E93               	movwf	3987,c	;volatile
  1674                           
  1675                           ;CanToSerial.c: 311: LATC = 0x00;
  1676  0021E8  0E00               	movlw	0
  1677  0021EA  6E8B               	movwf	3979,c	;volatile
  1678                           
  1679                           ;CanToSerial.c: 312: TRISC = 0b10111111;
  1680  0021EC  0EBF               	movlw	191
  1681  0021EE  6E94               	movwf	3988,c	;volatile
  1682                           
  1683                           ;CanToSerial.c: 314: LATD = 0x00;
  1684  0021F0  0E00               	movlw	0
  1685  0021F2  6E8C               	movwf	3980,c	;volatile
  1686                           
  1687                           ;CanToSerial.c: 315: TRISD = 0x00;
  1688  0021F4  0E00               	movlw	0
  1689  0021F6  6E95               	movwf	3989,c	;volatile
  1690                           
  1691                           ;CanToSerial.c: 317: LATE = 0x00;
  1692  0021F8  0E00               	movlw	0
  1693  0021FA  6E8D               	movwf	3981,c	;volatile
  1694                           
  1695                           ;CanToSerial.c: 318: TRISE = 0b00000100;
  1696  0021FC  0E04               	movlw	4
  1697  0021FE  6E96               	movwf	3990,c	;volatile
  1698                           
  1699                           ;CanToSerial.c: 320: ADCON1bits.PCFG0 = 1;
  1700  002200  80C1               	bsf	4033,0,c	;volatile
  1701                           
  1702                           ;CanToSerial.c: 321: ADCON1bits.PCFG1 = 1;
  1703  002202  82C1               	bsf	4033,1,c	;volatile
  1704                           
  1705                           ;CanToSerial.c: 322: ADCON1bits.PCFG2 = 1;
  1706  002204  84C1               	bsf	4033,2,c	;volatile
  1707                           
  1708                           ;CanToSerial.c: 323: ADCON1bits.PCFG3 = 1;
  1709  002206  86C1               	bsf	4033,3,c	;volatile
  1710                           
  1711                           ;CanToSerial.c: 326: T3CON = 0x01;
  1712  002208  0E01               	movlw	1
  1713  00220A  6EB1               	movwf	4017,c	;volatile
  1714                           
  1715                           ;CanToSerial.c: 327: PIR2bits.TMR3IF = 0;
  1716  00220C  92A1               	bcf	4001,1,c	;volatile
  1717                           
  1718                           ;CanToSerial.c: 328: IPR2bits.TMR3IP = 0;
  1719  00220E  92A2               	bcf	4002,1,c	;volatile
  1720                           
  1721                           ;CanToSerial.c: 330: TMR3H = 0x63;
  1722  002210  0E63               	movlw	99
  1723  002212  6EB3               	movwf	4019,c	;volatile
  1724                           
  1725                           ;CanToSerial.c: 331: TMR3L = 0xC0;
  1726  002214  0EC0               	movlw	192
  1727  002216  6EB2               	movwf	4018,c	;volatile
  1728                           
  1729                           ;CanToSerial.c: 333: PIE2bits.TMR3IE = 1;
  1730  002218  82A0               	bsf	4000,1,c	;volatile
  1731                           
  1732                           ;CanToSerial.c: 335: INTCONbits.GIEH = 1;
  1733  00221A  8EF2               	bsf	intcon,7,c	;volatile
  1734                           
  1735                           ;CanToSerial.c: 336: INTCONbits.GIEL = 1;
  1736  00221C  8CF2               	bsf	intcon,6,c	;volatile
  1737                           
  1738                           ;CanToSerial.c: 339: PIE3bits.RXB1IE = 1;
  1739  00221E  82A3               	bsf	4003,1,c	;volatile
  1740                           
  1741                           ;CanToSerial.c: 340: PIE3bits.RXB0IE = 1;
  1742  002220  80A3               	bsf	4003,0,c	;volatile
  1743                           
  1744                           ;CanToSerial.c: 341: PIE1bits.RCIE = 1;
  1745  002222  8A9D               	bsf	3997,5,c	;volatile
  1746                           
  1747                           ;CanToSerial.c: 342: delay_ms(300);
  1748  002224  0E01               	movlw	1
  1749  002226  0100               	movlb	0	; () banked
  1750  002228  6FA1               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1751  00222A  0E2C               	movlw	44
  1752  00222C  6FA0               	movwf	delay_ms@value_ms& (0+255),b
  1753  00222E  ECDA  F011         	call	_delay_ms	;wreg free
  1754  002232  0012               	return		;funcret
  1755  002234                     __end_of_configurazione_iniziale:
  1756                           	opt stack 0
  1757                           tblptru	equ	0xFF8
  1758                           tblptrh	equ	0xFF7
  1759                           tblptrl	equ	0xFF6
  1760                           tablat	equ	0xFF5
  1761                           prodh	equ	0xFF4
  1762                           prodl	equ	0xFF3
  1763                           intcon	equ	0xFF2
  1764                           postinc0	equ	0xFEE
  1765                           wreg	equ	0xFE8
  1766                           indf1	equ	0xFE7
  1767                           postinc1	equ	0xFE6
  1768                           postdec1	equ	0xFE5
  1769                           fsr1h	equ	0xFE2
  1770                           fsr1l	equ	0xFE1
  1771                           indf2	equ	0xFDF
  1772                           postinc2	equ	0xFDE
  1773                           fsr2h	equ	0xFDA
  1774                           fsr2l	equ	0xFD9
  1775                           status	equ	0xFD8
  1776                           
  1777 ;; *************** function _delay_ms *****************
  1778 ;; Defined at:
  1779 ;;		line 61 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;  value_ms        2    2[BANK0 ] unsigned int 
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;		None
  1784 ;; Return value:  Size  Location     Type
  1785 ;;		None               void
  1786 ;; Registers used:
  1787 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1793 ;;      Params:         0       2       0       0
  1794 ;;      Locals:         0       0       0       0
  1795 ;;      Temps:          0       0       0       0
  1796 ;;      Totals:         0       2       0       0
  1797 ;;Total ram usage:        2 bytes
  1798 ;; Hardware stack levels used:    1
  1799 ;; Hardware stack levels required when called:    3
  1800 ;; This function calls:
  1801 ;;		___wmul
  1802 ;; This function is called by:
  1803 ;;		_main
  1804 ;;		_configurazione_iniziale
  1805 ;;		_delay_s
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           	psect	text6
  1810  0023B4                     __ptext6:
  1811                           	opt stack 0
  1812  0023B4                     _delay_ms:
  1813                           	opt stack 27
  1814                           
  1815                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  1816                           
  1817                           ;incstack = 0
  1818  0023B4  C039  F01D         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  1819  0023B8  6A1E               	clrf	___wmul@multiplier+1,c
  1820  0023BA  C0A0  F01F         	movff	delay_ms@value_ms,___wmul@multiplicand
  1821  0023BE  C0A1  F020         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  1822  0023C2  ECF3  F011         	call	___wmul	;wreg free
  1823  0023C6  C01D  F02E         	movff	?___wmul,_clock_counter_reference	;volatile
  1824  0023CA  C01E  F02F         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  1825                           
  1826                           ;src\delay.c: 75: while (clock_counter_reference) {
  1827  0023CE  D006               	goto	l579
  1828  0023D0                     l4675:
  1829                           
  1830                           ;src\delay.c: 85: _delay(240);
  1831  0023D0  0E50               	movlw	80
  1832  0023D2                     u6727:
  1833  0023D2  2EE8               	decfsz	wreg,f,c
  1834  0023D4  D7FE               	goto	u6727
  1835                           
  1836                           ;src\delay.c: 88: clock_counter_reference--;
  1837  0023D6  062E               	decf	_clock_counter_reference,f,c	;volatile
  1838  0023D8  A0D8               	btfss	status,0,c
  1839  0023DA  062F               	decf	_clock_counter_reference+1,f,c	;volatile
  1840  0023DC                     l579:
  1841  0023DC  502E               	movf	_clock_counter_reference,w,c	;volatile
  1842  0023DE  102F               	iorwf	_clock_counter_reference+1,w,c	;volatile
  1843  0023E0  B4D8               	btfsc	status,2,c
  1844  0023E2  0012               	return	
  1845  0023E4  D7F5               	goto	l4675
  1846  0023E6                     __end_of_delay_ms:
  1847                           	opt stack 0
  1848                           tblptru	equ	0xFF8
  1849                           tblptrh	equ	0xFF7
  1850                           tblptrl	equ	0xFF6
  1851                           tablat	equ	0xFF5
  1852                           prodh	equ	0xFF4
  1853                           prodl	equ	0xFF3
  1854                           intcon	equ	0xFF2
  1855                           postinc0	equ	0xFEE
  1856                           wreg	equ	0xFE8
  1857                           indf1	equ	0xFE7
  1858                           postinc1	equ	0xFE6
  1859                           postdec1	equ	0xFE5
  1860                           fsr1h	equ	0xFE2
  1861                           fsr1l	equ	0xFE1
  1862                           indf2	equ	0xFDF
  1863                           postinc2	equ	0xFDE
  1864                           fsr2h	equ	0xFDA
  1865                           fsr2l	equ	0xFD9
  1866                           status	equ	0xFD8
  1867                           
  1868 ;; *************** function ___wmul *****************
  1869 ;; Defined at:
  1870 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  multiplier      2   28[COMRAM] unsigned int 
  1873 ;;  multiplicand    2   30[COMRAM] unsigned int 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  product         2    0[BANK0 ] unsigned int 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  2   28[COMRAM] unsigned int 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0, prodl, prodh
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1885 ;;      Params:         4       0       0       0
  1886 ;;      Locals:         0       2       0       0
  1887 ;;      Temps:          0       0       0       0
  1888 ;;      Totals:         4       2       0       0
  1889 ;;Total ram usage:        6 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    2
  1892 ;; This function calls:
  1893 ;;		Nothing
  1894 ;; This function is called by:
  1895 ;;		_delay_ms
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text7
  1900  0023E6                     __ptext7:
  1901                           	opt stack 0
  1902  0023E6                     ___wmul:
  1903                           	opt stack 27
  1904                           
  1905                           ;incstack = 0
  1906  0023E6  501D               	movf	___wmul@multiplier,w,c
  1907  0023E8  021F               	mulwf	___wmul@multiplicand,c
  1908  0023EA  CFF3 F09E          	movff	prodl,___wmul@product
  1909  0023EE  CFF4 F09F          	movff	prodh,___wmul@product+1
  1910  0023F2  501D               	movf	___wmul@multiplier,w,c
  1911  0023F4  0220               	mulwf	___wmul@multiplicand+1,c
  1912  0023F6  50F3               	movf	prodl,w,c
  1913  0023F8  0100               	movlb	0	; () banked
  1914  0023FA  279F               	addwf	(___wmul@product+1)& (0+255),f,b
  1915  0023FC  501E               	movf	___wmul@multiplier+1,w,c
  1916  0023FE  021F               	mulwf	___wmul@multiplicand,c
  1917  002400  50F3               	movf	prodl,w,c
  1918  002402  0100               	movlb	0	; () banked
  1919  002404  279F               	addwf	(___wmul@product+1)& (0+255),f,b
  1920                           
  1921                           ; BSR set to: 0
  1922  002406  C09E  F01D         	movff	___wmul@product,?___wmul
  1923  00240A  C09F  F01E         	movff	___wmul@product+1,?___wmul+1
  1924  00240E  0012               	return	
  1925  002410                     __end_of___wmul:
  1926                           	opt stack 0
  1927                           tblptru	equ	0xFF8
  1928                           tblptrh	equ	0xFF7
  1929                           tblptrl	equ	0xFF6
  1930                           tablat	equ	0xFF5
  1931                           prodh	equ	0xFF4
  1932                           prodl	equ	0xFF3
  1933                           intcon	equ	0xFF2
  1934                           postinc0	equ	0xFEE
  1935                           wreg	equ	0xFE8
  1936                           indf1	equ	0xFE7
  1937                           postinc1	equ	0xFE6
  1938                           postdec1	equ	0xFE5
  1939                           fsr1h	equ	0xFE2
  1940                           fsr1l	equ	0xFE1
  1941                           indf2	equ	0xFDF
  1942                           postinc2	equ	0xFDE
  1943                           fsr2h	equ	0xFDA
  1944                           fsr2l	equ	0xFD9
  1945                           status	equ	0xFD8
  1946                           
  1947 ;; *************** function _OpenUSART *****************
  1948 ;; Defined at:
  1949 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uopen.c"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;  config          1    wreg     unsigned char 
  1952 ;;  spbrg           2   28[COMRAM] unsigned int 
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;  config          1   30[COMRAM] unsigned char 
  1955 ;; Return value:  Size  Location     Type
  1956 ;;		None               void
  1957 ;; Registers used:
  1958 ;;		wreg, status,2
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1964 ;;      Params:         2       0       0       0
  1965 ;;      Locals:         1       0       0       0
  1966 ;;      Temps:          0       0       0       0
  1967 ;;      Totals:         3       0       0       0
  1968 ;;Total ram usage:        3 bytes
  1969 ;; Hardware stack levels used:    1
  1970 ;; Hardware stack levels required when called:    2
  1971 ;; This function calls:
  1972 ;;		Nothing
  1973 ;; This function is called by:
  1974 ;;		_configurazione_iniziale
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           	psect	text8
  1979  002304                     __ptext8:
  1980                           	opt stack 0
  1981  002304                     _OpenUSART:
  1982                           	opt stack 27
  1983                           
  1984                           ; BSR set to: 0
  1985                           ;incstack = 0
  1986                           ;OpenUSART@config stored from wreg
  1987  002304  6E1F               	movwf	OpenUSART@config,c
  1988  002306  0E00               	movlw	0
  1989  002308  6EAC               	movwf	4012,c	;volatile
  1990  00230A  0E00               	movlw	0
  1991  00230C  6EAB               	movwf	4011,c	;volatile
  1992  00230E  B01F               	btfsc	OpenUSART@config,0,c
  1993  002310  88AC               	bsf	4012,4,c	;volatile
  1994  002312  A21F               	btfss	OpenUSART@config,1,c
  1995  002314  D002               	goto	l3431
  1996  002316  8CAC               	bsf	4012,6,c	;volatile
  1997  002318  8CAB               	bsf	4011,6,c	;volatile
  1998  00231A                     l3431:
  1999  00231A  B41F               	btfsc	OpenUSART@config,2,c
  2000  00231C  8EAC               	bsf	4012,7,c	;volatile
  2001  00231E  A61F               	btfss	OpenUSART@config,3,c
  2002  002320  D002               	goto	l737
  2003  002322  88AB               	bsf	4011,4,c	;volatile
  2004  002324  D001               	goto	l3439
  2005  002326                     l737:
  2006  002326  8AAB               	bsf	4011,5,c	;volatile
  2007  002328                     l3439:
  2008  002328  B81F               	btfsc	OpenUSART@config,4,c
  2009  00232A  84AC               	bsf	4012,2,c	;volatile
  2010  00232C  989E               	bcf	3998,4,c	;volatile
  2011  00232E  BA1F               	btfsc	OpenUSART@config,5,c
  2012  002330  86AB               	bsf	4011,3,c	;volatile
  2013  002332  AC1F               	btfss	OpenUSART@config,6,c
  2014  002334  D002               	goto	l741
  2015  002336  8A9D               	bsf	3997,5,c	;volatile
  2016  002338  D001               	goto	l742
  2017  00233A                     l741:
  2018  00233A  9A9D               	bcf	3997,5,c	;volatile
  2019  00233C                     l742:
  2020  00233C  9A9E               	bcf	3998,5,c	;volatile
  2021  00233E  AE1F               	btfss	OpenUSART@config,7,c
  2022  002340  D002               	goto	l743
  2023  002342  889D               	bsf	3997,4,c	;volatile
  2024  002344  D001               	goto	l744
  2025  002346                     l743:
  2026  002346  989D               	bcf	3997,4,c	;volatile
  2027  002348                     l744:
  2028  002348  C01D  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2029  00234C  501E               	movf	OpenUSART@spbrg+1,w,c
  2030  00234E  6EB0               	movwf	4016,c	;volatile
  2031  002350  8AAC               	bsf	4012,5,c	;volatile
  2032  002352  8EAB               	bsf	4011,7,c	;volatile
  2033  002354  9C94               	bcf	3988,6,c	;volatile
  2034  002356  8E94               	bsf	3988,7,c	;volatile
  2035  002358  A8AC               	btfss	4012,4,c	;volatile
  2036  00235A  0012               	return	
  2037  00235C  BEAC               	btfsc	4012,7,c	;volatile
  2038  00235E  0012               	return	
  2039  002360  8C94               	bsf	3988,6,c	;volatile
  2040  002362  0012               	return	
  2041  002364                     __end_of_OpenUSART:
  2042                           	opt stack 0
  2043                           tblptru	equ	0xFF8
  2044                           tblptrh	equ	0xFF7
  2045                           tblptrl	equ	0xFF6
  2046                           tablat	equ	0xFF5
  2047                           prodh	equ	0xFF4
  2048                           prodl	equ	0xFF3
  2049                           intcon	equ	0xFF2
  2050                           postinc0	equ	0xFEE
  2051                           wreg	equ	0xFE8
  2052                           indf1	equ	0xFE7
  2053                           postinc1	equ	0xFE6
  2054                           postdec1	equ	0xFE5
  2055                           fsr1h	equ	0xFE2
  2056                           fsr1l	equ	0xFE1
  2057                           indf2	equ	0xFDF
  2058                           postinc2	equ	0xFDE
  2059                           fsr2h	equ	0xFDA
  2060                           fsr2l	equ	0xFD9
  2061                           status	equ	0xFD8
  2062                           
  2063 ;; *************** function _CANInitialize *****************
  2064 ;; Defined at:
  2065 ;;		line 219 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  propSeg         1    wreg     unsigned char 
  2068 ;;  phaseSeg1       1    9[BANK0 ] unsigned char 
  2069 ;;  phaseSeg2       1   10[BANK0 ] unsigned char 
  2070 ;;  SJW             1   11[BANK0 ] unsigned char 
  2071 ;;  BRP             1   12[BANK0 ] unsigned char 
  2072 ;;  flags           1   13[BANK0 ] enum E16844
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;  propSeg         1   18[BANK0 ] unsigned char 
  2075 ;;  FilterConfig    1   20[BANK0 ] unsigned char 
  2076 ;;  FilterConfig    1   19[BANK0 ] unsigned char 
  2077 ;; Return value:  Size  Location     Type
  2078 ;;		None               void
  2079 ;; Registers used:
  2080 ;;		wreg, status,2, status,0, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2086 ;;      Params:         0       5       0       0
  2087 ;;      Locals:         0       3       0       0
  2088 ;;      Temps:          0       4       0       0
  2089 ;;      Totals:         0      12       0       0
  2090 ;;Total ram usage:       12 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    3
  2093 ;; This function calls:
  2094 ;;		_CANOperationMode
  2095 ;;		_CANSetFilter
  2096 ;;		_CANSetMask
  2097 ;; This function is called by:
  2098 ;;		_configurazione_iniziale
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	text9
  2103  001C26                     __ptext9:
  2104                           	opt stack 0
  2105  001C26                     _CANInitialize:
  2106                           	opt stack 26
  2107                           
  2108                           ;incstack = 0
  2109                           ;CANInitialize@propSeg stored from wreg
  2110  001C26  0100               	movlb	0	; () banked
  2111  001C28  6FB0               	movwf	CANInitialize@propSeg& (0+255),b
  2112                           
  2113                           ;inc\CANlib.h: 221: BYTE FilterConfig1;
  2114                           ;inc\CANlib.h: 222: BYTE FilterConfig2;
  2115                           ;inc\CANlib.h: 224: CANOperationMode(CAN_OP_MODE_CONFIG);
  2116  001C2A  0E80               	movlw	128
  2117  001C2C  EC3E  F012         	call	_CANOperationMode
  2118                           
  2119                           ;inc\CANlib.h: 226: BRGCON1 = 0x00;
  2120  001C30  0E00               	movlw	0
  2121  001C32  6E70               	movwf	3952,c	;volatile
  2122                           
  2123                           ;inc\CANlib.h: 227: BRGCON2 = 0x00;
  2124  001C34  0E00               	movlw	0
  2125  001C36  6E71               	movwf	3953,c	;volatile
  2126                           
  2127                           ;inc\CANlib.h: 228: BRGCON3 = 0x00;
  2128  001C38  0E00               	movlw	0
  2129  001C3A  6E72               	movwf	3954,c	;volatile
  2130                           
  2131                           ;inc\CANlib.h: 230: SJW= SJW << 6;
  2132  001C3C  0100               	movlb	0	; () banked
  2133  001C3E  41A9               	rrncf	CANInitialize@SJW& (0+255),w,b
  2134  001C40  42E8               	rrncf	wreg,f,c
  2135  001C42  0BC0               	andlw	192
  2136  001C44  0100               	movlb	0	; () banked
  2137  001C46  6FA9               	movwf	CANInitialize@SJW& (0+255),b
  2138                           
  2139                           ; BSR set to: 0
  2140                           ;inc\CANlib.h: 231: BRGCON1 |= SJW;
  2141  001C48  0100               	movlb	0	; () banked
  2142  001C4A  51A9               	movf	CANInitialize@SJW& (0+255),w,b
  2143  001C4C  1270               	iorwf	3952,f,c	;volatile
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;inc\CANlib.h: 232: BRGCON1 |= BRP;
  2147  001C4E  0100               	movlb	0	; () banked
  2148  001C50  51AA               	movf	CANInitialize@BRP& (0+255),w,b
  2149  001C52  1270               	iorwf	3952,f,c	;volatile
  2150                           
  2151                           ; BSR set to: 0
  2152                           ;inc\CANlib.h: 234: BRGCON2 |= propSeg;
  2153  001C54  0100               	movlb	0	; () banked
  2154  001C56  51B0               	movf	CANInitialize@propSeg& (0+255),w,b
  2155  001C58  1271               	iorwf	3953,f,c	;volatile
  2156                           
  2157                           ; BSR set to: 0
  2158                           ;inc\CANlib.h: 235: phaseSeg1 = phaseSeg1 <<3;
  2159  001C5A  0100               	movlb	0	; () banked
  2160  001C5C  39A7               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2161  001C5E  42E8               	rrncf	wreg,f,c
  2162  001C60  0BF8               	andlw	248
  2163  001C62  0100               	movlb	0	; () banked
  2164  001C64  6FA7               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;inc\CANlib.h: 236: BRGCON2 |= phaseSeg1;
  2168  001C66  0100               	movlb	0	; () banked
  2169  001C68  51A7               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2170  001C6A  1271               	iorwf	3953,f,c	;volatile
  2171                           
  2172                           ; BSR set to: 0
  2173                           ;inc\CANlib.h: 238: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2174  001C6C  0100               	movlb	0	; () banked
  2175  001C6E  A5AB               	btfss	CANInitialize@flags& (0+255),2,b
  2176                           
  2177                           ; BSR set to: 0
  2178                           ;inc\CANlib.h: 239: BRGCON2bits.SAM= 1;
  2179  001C70  8C71               	bsf	3953,6,c	;volatile
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;inc\CANlib.h: 241: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2183  001C72  0100               	movlb	0	; () banked
  2184  001C74  B1AB               	btfsc	CANInitialize@flags& (0+255),0,b
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;inc\CANlib.h: 242: BRGCON2bits.SEG2PHTS = 1;
  2188  001C76  8E71               	bsf	3953,7,c	;volatile
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;inc\CANlib.h: 244: BRGCON3 |= phaseSeg2;
  2192                           
  2193                           ; BSR set to: 0
  2194  001C78  0100               	movlb	0	; () banked
  2195  001C7A  51A8               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2196  001C7C  1272               	iorwf	3954,f,c	;volatile
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;inc\CANlib.h: 246: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2200  001C7E  0100               	movlb	0	; () banked
  2201  001C80  B3AB               	btfsc	CANInitialize@flags& (0+255),1,b
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;inc\CANlib.h: 247: BRGCON3bits.WAKFIL = 1;
  2205  001C82  8C72               	bsf	3954,6,c	;volatile
  2206                           
  2207                           ; BSR set to: 0
  2208                           ;inc\CANlib.h: 252: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2209                           
  2210                           ; BSR set to: 0
  2211  001C84  0100               	movlb	0	; () banked
  2212  001C86  51AB               	movf	CANInitialize@flags& (0+255),w,b
  2213  001C88  0B60               	andlw	96
  2214  001C8A  6E60               	movwf	3936,c	;volatile
  2215                           
  2216                           ;inc\CANlib.h: 253: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  2217  001C8C  0100               	movlb	0	; () banked
  2218  001C8E  51AB               	movf	CANInitialize@flags& (0+255),w,b
  2219  001C90  0B10               	andlw	16
  2220  001C92  0AFF               	xorlw	255
  2221  001C94  B4D8               	btfsc	status,2,c
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;inc\CANlib.h: 254: RXB0CONbits.RXB0DBEN = 1;
  2225  001C96  8460               	bsf	3936,2,c	;volatile
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;inc\CANlib.h: 256: RXB1CON = RXB0CON;
  2229  001C98  CF60 FF50          	movff	3936,3920	;volatile
  2230                           
  2231                           ; BSR set to: 0
  2232                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2233  001C9C  0E00               	movlw	0
  2234  001C9E  6E1D               	movwf	CANSetMask@mask,c
  2235  001CA0  0E00               	movlw	0
  2236  001CA2  6E1E               	movwf	CANSetMask@mask+1,c
  2237  001CA4  0E00               	movlw	0
  2238  001CA6  6E1F               	movwf	CANSetMask@mask+2,c
  2239  001CA8  0E00               	movlw	0
  2240  001CAA  6E20               	movwf	CANSetMask@mask+3,c
  2241  001CAC  0EF7               	movlw	247
  2242  001CAE  6E21               	movwf	CANSetMask@type,c
  2243  001CB0  0E01               	movlw	1
  2244  001CB2  EC70  F00B         	call	_CANSetMask
  2245                           
  2246                           ;inc\CANlib.h: 261: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2247  001CB6  0E00               	movlw	0
  2248  001CB8  6E1D               	movwf	CANSetMask@mask,c
  2249  001CBA  0E00               	movlw	0
  2250  001CBC  6E1E               	movwf	CANSetMask@mask+1,c
  2251  001CBE  0E00               	movlw	0
  2252  001CC0  6E1F               	movwf	CANSetMask@mask+2,c
  2253  001CC2  0E00               	movlw	0
  2254  001CC4  6E20               	movwf	CANSetMask@mask+3,c
  2255  001CC6  0EF7               	movlw	247
  2256  001CC8  6E21               	movwf	CANSetMask@type,c
  2257  001CCA  0E02               	movlw	2
  2258  001CCC  EC70  F00B         	call	_CANSetMask
  2259                           
  2260                           ;inc\CANlib.h: 264: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2261  001CD0  D00F               	goto	l4435
  2262  001CD2                     l4429:
  2263                           
  2264                           ;inc\CANlib.h: 267: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2265  001CD2  0EF7               	movlw	247
  2266  001CD4  0100               	movlb	0	; () banked
  2267  001CD6  6FB1               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2268  001CD8  D007               	goto	l4431
  2269  001CDA                     l368:
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;inc\CANlib.h: 272: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2273  001CDA  0100               	movlb	0	; () banked
  2274  001CDC  69B1               	setf	CANInitialize@FilterConfig1& (0+255),b
  2275                           
  2276                           ;inc\CANlib.h: 273: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2277  001CDE  0100               	movlb	0	; () banked
  2278  001CE0  69B2               	setf	CANInitialize@FilterConfig2& (0+255),b
  2279                           
  2280                           ;inc\CANlib.h: 274: break;
  2281  001CE2  D028               	goto	l4437
  2282  001CE4                     l369:
  2283                           
  2284                           ; BSR set to: 0
  2285                           ;inc\CANlib.h: 276: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2286  001CE4  0100               	movlb	0	; () banked
  2287  001CE6  69B1               	setf	CANInitialize@FilterConfig1& (0+255),b
  2288  001CE8                     l4431:
  2289                           
  2290                           ; BSR set to: 0
  2291                           ;inc\CANlib.h: 277: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2292  001CE8  0EF7               	movlw	247
  2293  001CEA  0100               	movlb	0	; () banked
  2294  001CEC  6FB2               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;inc\CANlib.h: 279: }
  2298                           
  2299                           ;inc\CANlib.h: 278: break;
  2300  001CEE  D022               	goto	l4437
  2301  001CF0                     l4435:
  2302  001CF0  0E9F               	movlw	159
  2303  001CF2  0100               	movlb	0	; () banked
  2304  001CF4  6FAC               	movwf	??_CANInitialize& (0+255),b
  2305  001CF6  0EFF               	movlw	255
  2306  001CF8  0100               	movlb	0	; () banked
  2307  001CFA  6FAD               	movwf	(??_CANInitialize+1)& (0+255),b
  2308  001CFC  0100               	movlb	0	; () banked
  2309  001CFE  51AB               	movf	CANInitialize@flags& (0+255),w,b
  2310  001D00  0B60               	andlw	96
  2311  001D02  0100               	movlb	0	; () banked
  2312  001D04  6FAE               	movwf	(??_CANInitialize+2)& (0+255),b
  2313  001D06  6BAF               	clrf	(??_CANInitialize+3)& (0+255),b
  2314  001D08  0100               	movlb	0	; () banked
  2315  001D0A  51AC               	movf	??_CANInitialize& (0+255),w,b
  2316  001D0C  0100               	movlb	0	; () banked
  2317  001D0E  13AE               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2318  001D10  0100               	movlb	0	; () banked
  2319  001D12  51AD               	movf	(??_CANInitialize+1)& (0+255),w,b
  2320  001D14  0100               	movlb	0	; () banked
  2321  001D16  13AF               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2322                           
  2323                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2324                           ; Switch size 1, requested type "space"
  2325                           ; Number of cases is 1, Range of values is 0 to 0
  2326                           ; switch strategies available:
  2327                           ; Name         Instructions Cycles
  2328                           ; simple_byte            4     3 (average)
  2329                           ;	Chosen strategy is simple_byte
  2330  001D18  0100               	movlb	0	; () banked
  2331  001D1A  51AF               	movf	(??_CANInitialize+3)& (0+255),w,b
  2332  001D1C  0A00               	xorlw	0	; case 0
  2333  001D1E  A4D8               	btfss	status,2,c
  2334  001D20  D7E1               	goto	l369
  2335                           
  2336                           ; BSR set to: 0
  2337                           ; Switch size 1, requested type "space"
  2338                           ; Number of cases is 2, Range of values is 191 to 223
  2339                           ; switch strategies available:
  2340                           ; Name         Instructions Cycles
  2341                           ; simple_byte            7     4 (average)
  2342                           ;	Chosen strategy is simple_byte
  2343  001D22  0100               	movlb	0	; () banked
  2344  001D24  51AE               	movf	(??_CANInitialize+2)& (0+255),w,b
  2345  001D26  0ABF               	xorlw	191	; case 191
  2346  001D28  B4D8               	btfsc	status,2,c
  2347  001D2A  D7D7               	goto	l368
  2348  001D2C  0A60               	xorlw	96	; case 223
  2349  001D2E  B4D8               	btfsc	status,2,c
  2350  001D30  D7D0               	goto	l4429
  2351  001D32  D7D8               	goto	l369
  2352  001D34                     l4437:
  2353                           
  2354                           ; BSR set to: 0
  2355                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2356  001D34  0E00               	movlw	0
  2357  001D36  6E1D               	movwf	CANSetFilter@filter,c
  2358  001D38  0E00               	movlw	0
  2359  001D3A  6E1E               	movwf	CANSetFilter@filter+1,c
  2360  001D3C  0E00               	movlw	0
  2361  001D3E  6E1F               	movwf	CANSetFilter@filter+2,c
  2362  001D40  0E00               	movlw	0
  2363  001D42  6E20               	movwf	CANSetFilter@filter+3,c
  2364  001D44  C0B1  F021         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2365  001D48  0E00               	movlw	0
  2366  001D4A  EC0D  F000         	call	_CANSetFilter
  2367                           
  2368                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2369  001D4E  0E00               	movlw	0
  2370  001D50  6E1D               	movwf	CANSetFilter@filter,c
  2371  001D52  0E00               	movlw	0
  2372  001D54  6E1E               	movwf	CANSetFilter@filter+1,c
  2373  001D56  0E00               	movlw	0
  2374  001D58  6E1F               	movwf	CANSetFilter@filter+2,c
  2375  001D5A  0E00               	movlw	0
  2376  001D5C  6E20               	movwf	CANSetFilter@filter+3,c
  2377  001D5E  C0B1  F021         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2378  001D62  0E01               	movlw	1
  2379  001D64  EC0D  F000         	call	_CANSetFilter
  2380                           
  2381                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2382  001D68  0E00               	movlw	0
  2383  001D6A  6E1D               	movwf	CANSetFilter@filter,c
  2384  001D6C  0E00               	movlw	0
  2385  001D6E  6E1E               	movwf	CANSetFilter@filter+1,c
  2386  001D70  0E00               	movlw	0
  2387  001D72  6E1F               	movwf	CANSetFilter@filter+2,c
  2388  001D74  0E00               	movlw	0
  2389  001D76  6E20               	movwf	CANSetFilter@filter+3,c
  2390  001D78  C0B2  F021         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2391  001D7C  0E02               	movlw	2
  2392  001D7E  EC0D  F000         	call	_CANSetFilter
  2393                           
  2394                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2395  001D82  0E00               	movlw	0
  2396  001D84  6E1D               	movwf	CANSetFilter@filter,c
  2397  001D86  0E00               	movlw	0
  2398  001D88  6E1E               	movwf	CANSetFilter@filter+1,c
  2399  001D8A  0E00               	movlw	0
  2400  001D8C  6E1F               	movwf	CANSetFilter@filter+2,c
  2401  001D8E  0E00               	movlw	0
  2402  001D90  6E20               	movwf	CANSetFilter@filter+3,c
  2403  001D92  C0B2  F021         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2404  001D96  0E03               	movlw	3
  2405  001D98  EC0D  F000         	call	_CANSetFilter
  2406                           
  2407                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  2408  001D9C  0E00               	movlw	0
  2409  001D9E  6E1D               	movwf	CANSetFilter@filter,c
  2410  001DA0  0E00               	movlw	0
  2411  001DA2  6E1E               	movwf	CANSetFilter@filter+1,c
  2412  001DA4  0E00               	movlw	0
  2413  001DA6  6E1F               	movwf	CANSetFilter@filter+2,c
  2414  001DA8  0E00               	movlw	0
  2415  001DAA  6E20               	movwf	CANSetFilter@filter+3,c
  2416  001DAC  C0B2  F021         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2417  001DB0  0E04               	movlw	4
  2418  001DB2  EC0D  F000         	call	_CANSetFilter
  2419                           
  2420                           ;inc\CANlib.h: 286: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  2421  001DB6  0E00               	movlw	0
  2422  001DB8  6E1D               	movwf	CANSetFilter@filter,c
  2423  001DBA  0E00               	movlw	0
  2424  001DBC  6E1E               	movwf	CANSetFilter@filter+1,c
  2425  001DBE  0E00               	movlw	0
  2426  001DC0  6E1F               	movwf	CANSetFilter@filter+2,c
  2427  001DC2  0E00               	movlw	0
  2428  001DC4  6E20               	movwf	CANSetFilter@filter+3,c
  2429  001DC6  C0B2  F021         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2430  001DCA  0E05               	movlw	5
  2431  001DCC  EC0D  F000         	call	_CANSetFilter
  2432                           
  2433                           ;inc\CANlib.h: 288: CANOperationMode(CAN_OP_MODE_NORMAL);
  2434  001DD0  0E00               	movlw	0
  2435  001DD2  EC3E  F012         	call	_CANOperationMode
  2436  001DD6  0012               	return		;funcret
  2437  001DD8                     __end_of_CANInitialize:
  2438                           	opt stack 0
  2439                           tblptru	equ	0xFF8
  2440                           tblptrh	equ	0xFF7
  2441                           tblptrl	equ	0xFF6
  2442                           tablat	equ	0xFF5
  2443                           prodh	equ	0xFF4
  2444                           prodl	equ	0xFF3
  2445                           intcon	equ	0xFF2
  2446                           postinc0	equ	0xFEE
  2447                           wreg	equ	0xFE8
  2448                           indf1	equ	0xFE7
  2449                           postinc1	equ	0xFE6
  2450                           postdec1	equ	0xFE5
  2451                           fsr1h	equ	0xFE2
  2452                           fsr1l	equ	0xFE1
  2453                           indf2	equ	0xFDF
  2454                           postinc2	equ	0xFDE
  2455                           fsr2h	equ	0xFDA
  2456                           fsr2l	equ	0xFD9
  2457                           status	equ	0xFD8
  2458                           
  2459 ;; *************** function _CANSetMask *****************
  2460 ;; Defined at:
  2461 ;;		line 641 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;  numBuffer       1    wreg     enum E16878
  2464 ;;  mask            4   28[COMRAM] unsigned long 
  2465 ;;  type            1   32[COMRAM] enum E16844
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;  numBuffer       1    4[BANK0 ] enum E16878
  2468 ;;  tamp            4    5[BANK0 ] unsigned long 
  2469 ;; Return value:  Size  Location     Type
  2470 ;;		None               void
  2471 ;; Registers used:
  2472 ;;		wreg, status,2, status,0
  2473 ;; Tracked objects:
  2474 ;;		On entry : 0/0
  2475 ;;		On exit  : 0/0
  2476 ;;		Unchanged: 0/0
  2477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2478 ;;      Params:         5       0       0       0
  2479 ;;      Locals:         0       5       0       0
  2480 ;;      Temps:          0       4       0       0
  2481 ;;      Totals:         5       9       0       0
  2482 ;;Total ram usage:       14 bytes
  2483 ;; Hardware stack levels used:    1
  2484 ;; Hardware stack levels required when called:    2
  2485 ;; This function calls:
  2486 ;;		Nothing
  2487 ;; This function is called by:
  2488 ;;		_CANInitialize
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492                           	psect	text10
  2493  0016E0                     __ptext10:
  2494                           	opt stack 0
  2495  0016E0                     _CANSetMask:
  2496                           	opt stack 26
  2497                           
  2498                           ;incstack = 0
  2499                           ;CANSetMask@numBuffer stored from wreg
  2500  0016E0  0100               	movlb	0	; () banked
  2501  0016E2  6FA2               	movwf	CANSetMask@numBuffer& (0+255),b
  2502                           
  2503                           ;inc\CANlib.h: 644: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  2504  0016E4  0100               	movlb	0	; () banked
  2505  0016E6  05A2               	decf	CANSetMask@numBuffer& (0+255),w,b
  2506  0016E8  A4D8               	btfss	status,2,c
  2507  0016EA  D051               	goto	l3985
  2508                           
  2509                           ; BSR set to: 0
  2510  0016EC  2821               	incf	CANSetMask@type,w,c
  2511  0016EE  A4D8               	btfss	status,2,c
  2512  0016F0  D04E               	goto	l3985
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;inc\CANlib.h: 645: {
  2516                           ;inc\CANlib.h: 646: tamp = (mask >> 3);
  2517  0016F2  C01D  F09E         	movff	CANSetMask@mask,??_CANSetMask
  2518  0016F6  C01E  F09F         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2519  0016FA  C01F  F0A0         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2520  0016FE  C020  F0A1         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2521  001702  0E04               	movlw	4
  2522  001704  D006               	goto	u4900
  2523  001706                     u4905:
  2524  001706  0100               	movlb	0	; () banked
  2525  001708  90D8               	bcf	status,0,c
  2526  00170A  33A1               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2527  00170C  33A0               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2528  00170E  339F               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2529  001710  339E               	rrcf	??_CANSetMask& (0+255),f,b
  2530  001712                     u4900:
  2531  001712  2EE8               	decfsz	wreg,f,c
  2532  001714  D7F8               	goto	u4905
  2533  001716  C09E  F0A3         	movff	??_CANSetMask,CANSetMask@tamp
  2534  00171A  C09F  F0A4         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2535  00171E  C0A0  F0A5         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2536  001722  C0A1  F0A6         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2537                           
  2538                           ; BSR set to: 0
  2539                           ;inc\CANlib.h: 647: tamp = tamp & 0x000000FF;
  2540  001726  0100               	movlb	0	; () banked
  2541  001728  51A3               	movf	CANSetMask@tamp& (0+255),w,b
  2542  00172A  0100               	movlb	0	; () banked
  2543  00172C  6FA3               	movwf	CANSetMask@tamp& (0+255),b
  2544  00172E  6BA4               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2545  001730  6BA5               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2546  001732  6BA6               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2547                           
  2548                           ; BSR set to: 0
  2549                           ;inc\CANlib.h: 648: RXM0SIDH = (unsigned char) tamp;
  2550  001734  C0A3  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2551                           
  2552                           ; BSR set to: 0
  2553                           ;inc\CANlib.h: 650: tamp = mask & 0x00000007;
  2554  001738  0E07               	movlw	7
  2555  00173A  141D               	andwf	CANSetMask@mask,w,c
  2556  00173C  0100               	movlb	0	; () banked
  2557  00173E  6FA3               	movwf	CANSetMask@tamp& (0+255),b
  2558  001740  0E00               	movlw	0
  2559  001742  141E               	andwf	CANSetMask@mask+1,w,c
  2560  001744  0100               	movlb	0	; () banked
  2561  001746  6FA4               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2562  001748  0E00               	movlw	0
  2563  00174A  141F               	andwf	CANSetMask@mask+2,w,c
  2564  00174C  0100               	movlb	0	; () banked
  2565  00174E  6FA5               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2566  001750  0E00               	movlw	0
  2567  001752  1420               	andwf	CANSetMask@mask+3,w,c
  2568  001754  0100               	movlb	0	; () banked
  2569  001756  6FA6               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2570                           
  2571                           ; BSR set to: 0
  2572                           ;inc\CANlib.h: 651: tamp = tamp << 5;
  2573  001758  C0A3  F09E         	movff	CANSetMask@tamp,??_CANSetMask
  2574  00175C  C0A4  F09F         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2575  001760  C0A5  F0A0         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2576  001764  C0A6  F0A1         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2577  001768  0E05               	movlw	5
  2578  00176A                     u4915:
  2579  00176A  90D8               	bcf	status,0,c
  2580  00176C  0100               	movlb	0	; () banked
  2581  00176E  379E               	rlcf	??_CANSetMask& (0+255),f,b
  2582  001770  379F               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2583  001772  37A0               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2584  001774  37A1               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2585  001776  2EE8               	decfsz	wreg,f,c
  2586  001778  D7F8               	goto	u4915
  2587  00177A  C09E  F0A3         	movff	??_CANSetMask,CANSetMask@tamp
  2588  00177E  C09F  F0A4         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2589  001782  C0A0  F0A5         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2590  001786  C0A1  F0A6         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2591                           
  2592                           ; BSR set to: 0
  2593                           ;inc\CANlib.h: 652: RXM0SIDL = (unsigned char) tamp;
  2594  00178A  C0A3  FF19         	movff	CANSetMask@tamp,3865	;volatile
  2595  00178E                     l3985:
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;inc\CANlib.h: 653: }
  2599                           ;inc\CANlib.h: 655: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  2600  00178E  0E02               	movlw	2
  2601  001790  0100               	movlb	0	; () banked
  2602  001792  19A2               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2603  001794  A4D8               	btfss	status,2,c
  2604  001796  D051               	goto	l4001
  2605                           
  2606                           ; BSR set to: 0
  2607  001798  2821               	incf	CANSetMask@type,w,c
  2608  00179A  A4D8               	btfss	status,2,c
  2609  00179C  D04E               	goto	l4001
  2610                           
  2611                           ; BSR set to: 0
  2612                           ;inc\CANlib.h: 656: {
  2613                           ;inc\CANlib.h: 657: tamp = (mask >> 3);
  2614  00179E  C01D  F09E         	movff	CANSetMask@mask,??_CANSetMask
  2615  0017A2  C01E  F09F         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2616  0017A6  C01F  F0A0         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2617  0017AA  C020  F0A1         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2618  0017AE  0E04               	movlw	4
  2619  0017B0  D006               	goto	u4940
  2620  0017B2                     u4945:
  2621  0017B2  0100               	movlb	0	; () banked
  2622  0017B4  90D8               	bcf	status,0,c
  2623  0017B6  33A1               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2624  0017B8  33A0               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2625  0017BA  339F               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2626  0017BC  339E               	rrcf	??_CANSetMask& (0+255),f,b
  2627  0017BE                     u4940:
  2628  0017BE  2EE8               	decfsz	wreg,f,c
  2629  0017C0  D7F8               	goto	u4945
  2630  0017C2  C09E  F0A3         	movff	??_CANSetMask,CANSetMask@tamp
  2631  0017C6  C09F  F0A4         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2632  0017CA  C0A0  F0A5         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2633  0017CE  C0A1  F0A6         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2634                           
  2635                           ; BSR set to: 0
  2636                           ;inc\CANlib.h: 658: tamp = tamp & 0x000000FF;
  2637  0017D2  0100               	movlb	0	; () banked
  2638  0017D4  51A3               	movf	CANSetMask@tamp& (0+255),w,b
  2639  0017D6  0100               	movlb	0	; () banked
  2640  0017D8  6FA3               	movwf	CANSetMask@tamp& (0+255),b
  2641  0017DA  6BA4               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2642  0017DC  6BA5               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2643  0017DE  6BA6               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2644                           
  2645                           ; BSR set to: 0
  2646                           ;inc\CANlib.h: 659: RXM1SIDH = (unsigned char) tamp;
  2647  0017E0  C0A3  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;inc\CANlib.h: 661: tamp = mask & 0x00000007;
  2651  0017E4  0E07               	movlw	7
  2652  0017E6  141D               	andwf	CANSetMask@mask,w,c
  2653  0017E8  0100               	movlb	0	; () banked
  2654  0017EA  6FA3               	movwf	CANSetMask@tamp& (0+255),b
  2655  0017EC  0E00               	movlw	0
  2656  0017EE  141E               	andwf	CANSetMask@mask+1,w,c
  2657  0017F0  0100               	movlb	0	; () banked
  2658  0017F2  6FA4               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2659  0017F4  0E00               	movlw	0
  2660  0017F6  141F               	andwf	CANSetMask@mask+2,w,c
  2661  0017F8  0100               	movlb	0	; () banked
  2662  0017FA  6FA5               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2663  0017FC  0E00               	movlw	0
  2664  0017FE  1420               	andwf	CANSetMask@mask+3,w,c
  2665  001800  0100               	movlb	0	; () banked
  2666  001802  6FA6               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;inc\CANlib.h: 662: tamp = tamp << 5;
  2670  001804  C0A3  F09E         	movff	CANSetMask@tamp,??_CANSetMask
  2671  001808  C0A4  F09F         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2672  00180C  C0A5  F0A0         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2673  001810  C0A6  F0A1         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2674  001814  0E05               	movlw	5
  2675  001816                     u4955:
  2676  001816  90D8               	bcf	status,0,c
  2677  001818  0100               	movlb	0	; () banked
  2678  00181A  379E               	rlcf	??_CANSetMask& (0+255),f,b
  2679  00181C  379F               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2680  00181E  37A0               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2681  001820  37A1               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2682  001822  2EE8               	decfsz	wreg,f,c
  2683  001824  D7F8               	goto	u4955
  2684  001826  C09E  F0A3         	movff	??_CANSetMask,CANSetMask@tamp
  2685  00182A  C09F  F0A4         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2686  00182E  C0A0  F0A5         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2687  001832  C0A1  F0A6         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;inc\CANlib.h: 663: RXM1SIDL = (unsigned char) tamp;
  2691  001836  C0A3  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  2692  00183A                     l4001:
  2693                           
  2694                           ; BSR set to: 0
  2695                           ;inc\CANlib.h: 664: }
  2696                           ;inc\CANlib.h: 666: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  2697  00183A  0100               	movlb	0	; () banked
  2698  00183C  05A2               	decf	CANSetMask@numBuffer& (0+255),w,b
  2699  00183E  A4D8               	btfss	status,2,c
  2700  001840  D07C               	goto	l4033
  2701                           
  2702                           ; BSR set to: 0
  2703  001842  0EF7               	movlw	247
  2704  001844  1821               	xorwf	CANSetMask@type,w,c
  2705  001846  A4D8               	btfss	status,2,c
  2706  001848  D078               	goto	l4033
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;inc\CANlib.h: 667: {
  2710                           ;inc\CANlib.h: 668: tamp = mask & 0x000000FF;
  2711  00184A  501D               	movf	CANSetMask@mask,w,c
  2712  00184C  0100               	movlb	0	; () banked
  2713  00184E  6FA3               	movwf	CANSetMask@tamp& (0+255),b
  2714  001850  6BA4               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2715  001852  6BA5               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2716  001854  6BA6               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;inc\CANlib.h: 669: RXM0EIDL = (unsigned char) tamp;
  2720  001856  C0A3  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;inc\CANlib.h: 671: tamp = mask & 0x0000FF00;
  2724  00185A  0E00               	movlw	0
  2725  00185C  141D               	andwf	CANSetMask@mask,w,c
  2726  00185E  0100               	movlb	0	; () banked
  2727  001860  6FA3               	movwf	CANSetMask@tamp& (0+255),b
  2728  001862  0EFF               	movlw	255
  2729  001864  141E               	andwf	CANSetMask@mask+1,w,c
  2730  001866  0100               	movlb	0	; () banked
  2731  001868  6FA4               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2732  00186A  0E00               	movlw	0
  2733  00186C  141F               	andwf	CANSetMask@mask+2,w,c
  2734  00186E  0100               	movlb	0	; () banked
  2735  001870  6FA5               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2736  001872  0E00               	movlw	0
  2737  001874  1420               	andwf	CANSetMask@mask+3,w,c
  2738  001876  0100               	movlb	0	; () banked
  2739  001878  6FA6               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;inc\CANlib.h: 672: tamp = tamp >> 8;
  2743  00187A  C0A3  F09E         	movff	CANSetMask@tamp,??_CANSetMask
  2744  00187E  C0A4  F09F         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2745  001882  C0A5  F0A0         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2746  001886  C0A6  F0A1         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2747  00188A  C09F  F09E         	movff	??_CANSetMask+1,??_CANSetMask
  2748  00188E  C0A0  F09F         	movff	??_CANSetMask+2,??_CANSetMask+1
  2749  001892  C0A1  F0A0         	movff	??_CANSetMask+3,??_CANSetMask+2
  2750  001896  0100               	movlb	0	; () banked
  2751  001898  6BA1               	clrf	(??_CANSetMask+3)& (0+255),b
  2752  00189A  C09E  F0A3         	movff	??_CANSetMask,CANSetMask@tamp
  2753  00189E  C09F  F0A4         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2754  0018A2  C0A0  F0A5         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2755  0018A6  C0A1  F0A6         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;inc\CANlib.h: 673: RXM0EIDH = (unsigned char) tamp;
  2759  0018AA  C0A3  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;inc\CANlib.h: 675: if (mask & 0x00010000)
  2763  0018AE  A01F               	btfss	CANSetMask@mask+2,0,c
  2764  0018B0  D003               	goto	l442
  2765                           
  2766                           ; BSR set to: 0
  2767                           ;inc\CANlib.h: 676: RXM0SIDLbits.EID16 = 0x01;
  2768  0018B2  010F               	movlb	15	; () banked
  2769  0018B4  8119               	bsf	25,0,b	;volatile
  2770  0018B6  D002               	goto	l443
  2771  0018B8                     l442:
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;inc\CANlib.h: 677: else
  2775                           ;inc\CANlib.h: 678: RXM0SIDLbits.EID16 = 0x00;
  2776  0018B8  010F               	movlb	15	; () banked
  2777  0018BA  9119               	bcf	25,0,b	;volatile
  2778  0018BC                     l443:
  2779                           
  2780                           ; BSR set to: 15
  2781                           ;inc\CANlib.h: 680: if (mask & 0x00020000)
  2782  0018BC  A21F               	btfss	CANSetMask@mask+2,1,c
  2783  0018BE  D003               	goto	l444
  2784                           
  2785                           ; BSR set to: 15
  2786                           ;inc\CANlib.h: 681: RXM0SIDLbits.EID17 = 0x01;
  2787  0018C0  010F               	movlb	15	; () banked
  2788  0018C2  8319               	bsf	25,1,b	;volatile
  2789  0018C4  D002               	goto	l445
  2790  0018C6                     l444:
  2791                           
  2792                           ; BSR set to: 15
  2793                           ;inc\CANlib.h: 682: else
  2794                           ;inc\CANlib.h: 683: RXM0SIDLbits.EID17 = 0x00;
  2795  0018C6  010F               	movlb	15	; () banked
  2796  0018C8  9319               	bcf	25,1,b	;volatile
  2797  0018CA                     l445:
  2798                           
  2799                           ; BSR set to: 15
  2800                           ;inc\CANlib.h: 685: if (mask & 0x00040000)
  2801  0018CA  A41F               	btfss	CANSetMask@mask+2,2,c
  2802  0018CC  D003               	goto	l446
  2803                           
  2804                           ; BSR set to: 15
  2805                           ;inc\CANlib.h: 686: RXM0SIDLbits.SID0 = 0x01;
  2806  0018CE  010F               	movlb	15	; () banked
  2807  0018D0  8B19               	bsf	25,5,b	;volatile
  2808  0018D2  D002               	goto	l447
  2809  0018D4                     l446:
  2810                           
  2811                           ; BSR set to: 15
  2812                           ;inc\CANlib.h: 687: else
  2813                           ;inc\CANlib.h: 688: RXM0SIDLbits.SID0 = 0x00;
  2814  0018D4  010F               	movlb	15	; () banked
  2815  0018D6  9B19               	bcf	25,5,b	;volatile
  2816  0018D8                     l447:
  2817                           
  2818                           ; BSR set to: 15
  2819                           ;inc\CANlib.h: 690: if (mask & 0x00080000)
  2820  0018D8  A61F               	btfss	CANSetMask@mask+2,3,c
  2821  0018DA  D003               	goto	l448
  2822                           
  2823                           ; BSR set to: 15
  2824                           ;inc\CANlib.h: 691: RXM0SIDLbits.SID1 = 0x01;
  2825  0018DC  010F               	movlb	15	; () banked
  2826  0018DE  8D19               	bsf	25,6,b	;volatile
  2827  0018E0  D002               	goto	l449
  2828  0018E2                     l448:
  2829                           
  2830                           ; BSR set to: 15
  2831                           ;inc\CANlib.h: 692: else
  2832                           ;inc\CANlib.h: 693: RXM0SIDLbits.SID1 = 0x00;
  2833  0018E2  010F               	movlb	15	; () banked
  2834  0018E4  9D19               	bcf	25,6,b	;volatile
  2835  0018E6                     l449:
  2836                           
  2837                           ; BSR set to: 15
  2838                           ;inc\CANlib.h: 695: if (mask & 0x00100000)
  2839  0018E6  A81F               	btfss	CANSetMask@mask+2,4,c
  2840  0018E8  D003               	goto	l450
  2841                           
  2842                           ; BSR set to: 15
  2843                           ;inc\CANlib.h: 696: RXM0SIDLbits.SID2 = 0x01 ;
  2844  0018EA  010F               	movlb	15	; () banked
  2845  0018EC  8F19               	bsf	25,7,b	;volatile
  2846  0018EE  D002               	goto	l4027
  2847  0018F0                     l450:
  2848                           
  2849                           ; BSR set to: 15
  2850                           ;inc\CANlib.h: 697: else
  2851                           ;inc\CANlib.h: 698: RXM0SIDLbits.SID2 = 0x00 ;
  2852  0018F0  010F               	movlb	15	; () banked
  2853  0018F2  9F19               	bcf	25,7,b	;volatile
  2854  0018F4                     l4027:
  2855                           
  2856                           ; BSR set to: 15
  2857                           ;inc\CANlib.h: 700: tamp = (mask >> 21);
  2858  0018F4  C01D  F09E         	movff	CANSetMask@mask,??_CANSetMask
  2859  0018F8  C01E  F09F         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2860  0018FC  C01F  F0A0         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2861  001900  C020  F0A1         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2862  001904  0E16               	movlw	22
  2863  001906  D006               	goto	u5030
  2864  001908                     u5035:
  2865  001908  0100               	movlb	0	; () banked
  2866  00190A  90D8               	bcf	status,0,c
  2867  00190C  33A1               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2868  00190E  33A0               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2869  001910  339F               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2870  001912  339E               	rrcf	??_CANSetMask& (0+255),f,b
  2871  001914                     u5030:
  2872  001914  2EE8               	decfsz	wreg,f,c
  2873  001916  D7F8               	goto	u5035
  2874  001918  C09E  F0A3         	movff	??_CANSetMask,CANSetMask@tamp
  2875  00191C  C09F  F0A4         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2876  001920  C0A0  F0A5         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2877  001924  C0A1  F0A6         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;inc\CANlib.h: 701: tamp = tamp & 0x000000FF;
  2881  001928  0100               	movlb	0	; () banked
  2882  00192A  51A3               	movf	CANSetMask@tamp& (0+255),w,b
  2883  00192C  0100               	movlb	0	; () banked
  2884  00192E  6FA3               	movwf	CANSetMask@tamp& (0+255),b
  2885  001930  6BA4               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2886  001932  6BA5               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2887  001934  6BA6               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;inc\CANlib.h: 702: RXM0SIDH = (unsigned char) tamp;
  2891  001936  C0A3  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2892  00193A                     l4033:
  2893                           
  2894                           ; BSR set to: 0
  2895                           ;inc\CANlib.h: 703: }
  2896                           ;inc\CANlib.h: 705: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  2897  00193A  0E02               	movlw	2
  2898  00193C  0100               	movlb	0	; () banked
  2899  00193E  19A2               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2900  001940  A4D8               	btfss	status,2,c
  2901  001942  0012               	return	
  2902                           
  2903                           ; BSR set to: 0
  2904  001944  0EF7               	movlw	247
  2905  001946  1821               	xorwf	CANSetMask@type,w,c
  2906  001948  A4D8               	btfss	status,2,c
  2907  00194A  0012               	return	
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;inc\CANlib.h: 706: {
  2911                           ;inc\CANlib.h: 707: tamp = mask & 0x000000FF;
  2912  00194C  501D               	movf	CANSetMask@mask,w,c
  2913  00194E  0100               	movlb	0	; () banked
  2914  001950  6FA3               	movwf	CANSetMask@tamp& (0+255),b
  2915  001952  6BA4               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2916  001954  6BA5               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2917  001956  6BA6               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2918                           
  2919                           ; BSR set to: 0
  2920                           ;inc\CANlib.h: 708: RXM1EIDL = (unsigned char) tamp;
  2921  001958  C0A3  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;inc\CANlib.h: 710: tamp = mask & 0x0000FF00;
  2925  00195C  0E00               	movlw	0
  2926  00195E  141D               	andwf	CANSetMask@mask,w,c
  2927  001960  0100               	movlb	0	; () banked
  2928  001962  6FA3               	movwf	CANSetMask@tamp& (0+255),b
  2929  001964  0EFF               	movlw	255
  2930  001966  141E               	andwf	CANSetMask@mask+1,w,c
  2931  001968  0100               	movlb	0	; () banked
  2932  00196A  6FA4               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2933  00196C  0E00               	movlw	0
  2934  00196E  141F               	andwf	CANSetMask@mask+2,w,c
  2935  001970  0100               	movlb	0	; () banked
  2936  001972  6FA5               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2937  001974  0E00               	movlw	0
  2938  001976  1420               	andwf	CANSetMask@mask+3,w,c
  2939  001978  0100               	movlb	0	; () banked
  2940  00197A  6FA6               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;inc\CANlib.h: 711: tamp = tamp >> 8;
  2944  00197C  C0A3  F09E         	movff	CANSetMask@tamp,??_CANSetMask
  2945  001980  C0A4  F09F         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2946  001984  C0A5  F0A0         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2947  001988  C0A6  F0A1         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2948  00198C  C09F  F09E         	movff	??_CANSetMask+1,??_CANSetMask
  2949  001990  C0A0  F09F         	movff	??_CANSetMask+2,??_CANSetMask+1
  2950  001994  C0A1  F0A0         	movff	??_CANSetMask+3,??_CANSetMask+2
  2951  001998  0100               	movlb	0	; () banked
  2952  00199A  6BA1               	clrf	(??_CANSetMask+3)& (0+255),b
  2953  00199C  C09E  F0A3         	movff	??_CANSetMask,CANSetMask@tamp
  2954  0019A0  C09F  F0A4         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2955  0019A4  C0A0  F0A5         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2956  0019A8  C0A1  F0A6         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;inc\CANlib.h: 712: RXM1EIDH = (unsigned char) tamp;
  2960  0019AC  C0A3  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  2961                           
  2962                           ; BSR set to: 0
  2963                           ;inc\CANlib.h: 714: if (mask & 0x00010000)
  2964  0019B0  A01F               	btfss	CANSetMask@mask+2,0,c
  2965  0019B2  D003               	goto	l453
  2966                           
  2967                           ; BSR set to: 0
  2968                           ;inc\CANlib.h: 715: RXM1SIDLbits.EID16 = 0x01;
  2969  0019B4  010F               	movlb	15	; () banked
  2970  0019B6  811D               	bsf	29,0,b	;volatile
  2971  0019B8  D002               	goto	l454
  2972  0019BA                     l453:
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;inc\CANlib.h: 716: else
  2976                           ;inc\CANlib.h: 717: RXM1SIDLbits.EID16 = 0x00;
  2977  0019BA  010F               	movlb	15	; () banked
  2978  0019BC  911D               	bcf	29,0,b	;volatile
  2979  0019BE                     l454:
  2980                           
  2981                           ; BSR set to: 15
  2982                           ;inc\CANlib.h: 719: if (mask & 0x00020000)
  2983  0019BE  A21F               	btfss	CANSetMask@mask+2,1,c
  2984  0019C0  D003               	goto	l455
  2985                           
  2986                           ; BSR set to: 15
  2987                           ;inc\CANlib.h: 720: RXM1SIDLbits.EID17 = 0x01;
  2988  0019C2  010F               	movlb	15	; () banked
  2989  0019C4  831D               	bsf	29,1,b	;volatile
  2990  0019C6  D002               	goto	l456
  2991  0019C8                     l455:
  2992                           
  2993                           ; BSR set to: 15
  2994                           ;inc\CANlib.h: 721: else
  2995                           ;inc\CANlib.h: 722: RXM1SIDLbits.EID17 = 0x00;
  2996  0019C8  010F               	movlb	15	; () banked
  2997  0019CA  931D               	bcf	29,1,b	;volatile
  2998  0019CC                     l456:
  2999                           
  3000                           ; BSR set to: 15
  3001                           ;inc\CANlib.h: 724: if (mask & 0x00040000)
  3002  0019CC  A41F               	btfss	CANSetMask@mask+2,2,c
  3003  0019CE  D003               	goto	l457
  3004                           
  3005                           ; BSR set to: 15
  3006                           ;inc\CANlib.h: 725: RXM1SIDLbits.SID0 = 0x01;
  3007  0019D0  010F               	movlb	15	; () banked
  3008  0019D2  8B1D               	bsf	29,5,b	;volatile
  3009  0019D4  D002               	goto	l458
  3010  0019D6                     l457:
  3011                           
  3012                           ; BSR set to: 15
  3013                           ;inc\CANlib.h: 726: else
  3014                           ;inc\CANlib.h: 727: RXM1SIDLbits.SID0 = 0x00;
  3015  0019D6  010F               	movlb	15	; () banked
  3016  0019D8  9B1D               	bcf	29,5,b	;volatile
  3017  0019DA                     l458:
  3018                           
  3019                           ; BSR set to: 15
  3020                           ;inc\CANlib.h: 729: if (mask & 0x00080000)
  3021  0019DA  A61F               	btfss	CANSetMask@mask+2,3,c
  3022  0019DC  D003               	goto	l459
  3023                           
  3024                           ; BSR set to: 15
  3025                           ;inc\CANlib.h: 730: RXM1SIDLbits.SID1 = 0x01;
  3026  0019DE  010F               	movlb	15	; () banked
  3027  0019E0  8D1D               	bsf	29,6,b	;volatile
  3028  0019E2  D002               	goto	l460
  3029  0019E4                     l459:
  3030                           
  3031                           ; BSR set to: 15
  3032                           ;inc\CANlib.h: 731: else
  3033                           ;inc\CANlib.h: 732: RXM1SIDLbits.SID1 = 0x00;
  3034  0019E4  010F               	movlb	15	; () banked
  3035  0019E6  9D1D               	bcf	29,6,b	;volatile
  3036  0019E8                     l460:
  3037                           
  3038                           ; BSR set to: 15
  3039                           ;inc\CANlib.h: 734: if (mask & 0x00100000)
  3040  0019E8  A81F               	btfss	CANSetMask@mask+2,4,c
  3041  0019EA  D003               	goto	l461
  3042                           
  3043                           ; BSR set to: 15
  3044                           ;inc\CANlib.h: 735: RXM1SIDLbits.SID2 = 0x01 ;
  3045  0019EC  010F               	movlb	15	; () banked
  3046  0019EE  8F1D               	bsf	29,7,b	;volatile
  3047  0019F0  D002               	goto	l4059
  3048  0019F2                     l461:
  3049                           
  3050                           ; BSR set to: 15
  3051                           ;inc\CANlib.h: 736: else
  3052                           ;inc\CANlib.h: 737: RXM1SIDLbits.SID2 = 0x00 ;
  3053  0019F2  010F               	movlb	15	; () banked
  3054  0019F4  9F1D               	bcf	29,7,b	;volatile
  3055  0019F6                     l4059:
  3056                           
  3057                           ; BSR set to: 15
  3058                           ;inc\CANlib.h: 739: tamp = (mask >> 21);
  3059  0019F6  C01D  F09E         	movff	CANSetMask@mask,??_CANSetMask
  3060  0019FA  C01E  F09F         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3061  0019FE  C01F  F0A0         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3062  001A02  C020  F0A1         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3063  001A06  0E16               	movlw	22
  3064  001A08  D006               	goto	u5110
  3065  001A0A                     u5115:
  3066  001A0A  0100               	movlb	0	; () banked
  3067  001A0C  90D8               	bcf	status,0,c
  3068  001A0E  33A1               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3069  001A10  33A0               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3070  001A12  339F               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3071  001A14  339E               	rrcf	??_CANSetMask& (0+255),f,b
  3072  001A16                     u5110:
  3073  001A16  2EE8               	decfsz	wreg,f,c
  3074  001A18  D7F8               	goto	u5115
  3075  001A1A  C09E  F0A3         	movff	??_CANSetMask,CANSetMask@tamp
  3076  001A1E  C09F  F0A4         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3077  001A22  C0A0  F0A5         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3078  001A26  C0A1  F0A6         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;inc\CANlib.h: 740: tamp = tamp & 0x000000FF;
  3082  001A2A  0100               	movlb	0	; () banked
  3083  001A2C  51A3               	movf	CANSetMask@tamp& (0+255),w,b
  3084  001A2E  0100               	movlb	0	; () banked
  3085  001A30  6FA3               	movwf	CANSetMask@tamp& (0+255),b
  3086  001A32  6BA4               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3087  001A34  6BA5               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3088  001A36  6BA6               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;inc\CANlib.h: 741: RXM1SIDH = (unsigned char) tamp;
  3092  001A38  C0A3  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3093  001A3C  0012               	return	
  3094  001A3E                     __end_of_CANSetMask:
  3095                           	opt stack 0
  3096                           tblptru	equ	0xFF8
  3097                           tblptrh	equ	0xFF7
  3098                           tblptrl	equ	0xFF6
  3099                           tablat	equ	0xFF5
  3100                           prodh	equ	0xFF4
  3101                           prodl	equ	0xFF3
  3102                           intcon	equ	0xFF2
  3103                           postinc0	equ	0xFEE
  3104                           wreg	equ	0xFE8
  3105                           indf1	equ	0xFE7
  3106                           postinc1	equ	0xFE6
  3107                           postdec1	equ	0xFE5
  3108                           fsr1h	equ	0xFE2
  3109                           fsr1l	equ	0xFE1
  3110                           indf2	equ	0xFDF
  3111                           postinc2	equ	0xFDE
  3112                           fsr2h	equ	0xFDA
  3113                           fsr2l	equ	0xFD9
  3114                           status	equ	0xFD8
  3115                           
  3116 ;; *************** function _CANSetFilter *****************
  3117 ;; Defined at:
  3118 ;;		line 749 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;  numBuffer       1    wreg     enum E16881
  3121 ;;  filter          4   28[COMRAM] unsigned long 
  3122 ;;  type            1   32[COMRAM] enum E16844
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  numBuffer       1    4[BANK0 ] enum E16881
  3125 ;;  tamp            4    5[BANK0 ] unsigned long 
  3126 ;; Return value:  Size  Location     Type
  3127 ;;		None               void
  3128 ;; Registers used:
  3129 ;;		wreg, status,2, status,0
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3135 ;;      Params:         5       0       0       0
  3136 ;;      Locals:         0       5       0       0
  3137 ;;      Temps:          0       4       0       0
  3138 ;;      Totals:         5       9       0       0
  3139 ;;Total ram usage:       14 bytes
  3140 ;; Hardware stack levels used:    1
  3141 ;; Hardware stack levels required when called:    2
  3142 ;; This function calls:
  3143 ;;		Nothing
  3144 ;; This function is called by:
  3145 ;;		_CANInitialize
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           	psect	text11
  3150  00001A                     __ptext11:
  3151                           	opt stack 0
  3152  00001A                     _CANSetFilter:
  3153                           	opt stack 26
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;incstack = 0
  3157                           ;CANSetFilter@numBuffer stored from wreg
  3158  00001A  0100               	movlb	0	; () banked
  3159  00001C  6FA2               	movwf	CANSetFilter@numBuffer& (0+255),b
  3160                           
  3161                           ;inc\CANlib.h: 751: unsigned long tamp;
  3162                           ;inc\CANlib.h: 753: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3163  00001E  0100               	movlb	0	; () banked
  3164  000020  51A2               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3165  000022  0100               	movlb	0	; () banked
  3166  000024  A4D8               	btfss	status,2,c
  3167  000026  D053               	goto	l4083
  3168                           
  3169                           ; BSR set to: 0
  3170  000028  2821               	incf	CANSetFilter@type,w,c
  3171  00002A  A4D8               	btfss	status,2,c
  3172  00002C  D050               	goto	l4083
  3173                           
  3174                           ; BSR set to: 0
  3175                           ;inc\CANlib.h: 754: {
  3176                           ;inc\CANlib.h: 755: RXF0SIDLbits.EXIDEN = 0x00;
  3177  00002E  010F               	movlb	15	; () banked
  3178  000030  9701               	bcf	1,3,b	;volatile
  3179                           
  3180                           ; BSR set to: 15
  3181                           ;inc\CANlib.h: 757: tamp = (filter >> 3);
  3182  000032  C01D  F09E         	movff	CANSetFilter@filter,??_CANSetFilter
  3183  000036  C01E  F09F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3184  00003A  C01F  F0A0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3185  00003E  C020  F0A1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3186  000042  0E04               	movlw	4
  3187  000044  D006               	goto	u5140
  3188  000046                     u5145:
  3189  000046  0100               	movlb	0	; () banked
  3190  000048  90D8               	bcf	status,0,c
  3191  00004A  33A1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3192  00004C  33A0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3193  00004E  339F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3194  000050  339E               	rrcf	??_CANSetFilter& (0+255),f,b
  3195  000052                     u5140:
  3196  000052  2EE8               	decfsz	wreg,f,c
  3197  000054  D7F8               	goto	u5145
  3198  000056  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3199  00005A  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3200  00005E  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3201  000062  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3202                           
  3203                           ; BSR set to: 0
  3204                           ;inc\CANlib.h: 758: tamp = tamp & 0x000000FF;
  3205  000066  0100               	movlb	0	; () banked
  3206  000068  51A3               	movf	CANSetFilter@tamp& (0+255),w,b
  3207  00006A  0100               	movlb	0	; () banked
  3208  00006C  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3209  00006E  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3210  000070  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3211  000072  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;inc\CANlib.h: 759: RXF0SIDH = (unsigned char) tamp;
  3215  000074  C0A3  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3216                           
  3217                           ; BSR set to: 0
  3218                           ;inc\CANlib.h: 761: tamp = filter & 0x00000007;
  3219  000078  0E07               	movlw	7
  3220  00007A  141D               	andwf	CANSetFilter@filter,w,c
  3221  00007C  0100               	movlb	0	; () banked
  3222  00007E  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3223  000080  0E00               	movlw	0
  3224  000082  141E               	andwf	CANSetFilter@filter+1,w,c
  3225  000084  0100               	movlb	0	; () banked
  3226  000086  6FA4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3227  000088  0E00               	movlw	0
  3228  00008A  141F               	andwf	CANSetFilter@filter+2,w,c
  3229  00008C  0100               	movlb	0	; () banked
  3230  00008E  6FA5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3231  000090  0E00               	movlw	0
  3232  000092  1420               	andwf	CANSetFilter@filter+3,w,c
  3233  000094  0100               	movlb	0	; () banked
  3234  000096  6FA6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3235                           
  3236                           ; BSR set to: 0
  3237                           ;inc\CANlib.h: 762: tamp = tamp << 5;
  3238  000098  C0A3  F09E         	movff	CANSetFilter@tamp,??_CANSetFilter
  3239  00009C  C0A4  F09F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3240  0000A0  C0A5  F0A0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3241  0000A4  C0A6  F0A1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3242  0000A8  0E05               	movlw	5
  3243  0000AA                     u5155:
  3244  0000AA  90D8               	bcf	status,0,c
  3245  0000AC  0100               	movlb	0	; () banked
  3246  0000AE  379E               	rlcf	??_CANSetFilter& (0+255),f,b
  3247  0000B0  379F               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3248  0000B2  37A0               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3249  0000B4  37A1               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3250  0000B6  2EE8               	decfsz	wreg,f,c
  3251  0000B8  D7F8               	goto	u5155
  3252  0000BA  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3253  0000BE  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3254  0000C2  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3255  0000C6  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;inc\CANlib.h: 763: RXF0SIDL = (unsigned char) tamp;
  3259  0000CA  C0A3  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3260  0000CE                     l4083:
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;inc\CANlib.h: 764: }
  3264                           ;inc\CANlib.h: 766: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3265  0000CE  0100               	movlb	0	; () banked
  3266  0000D0  05A2               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3267  0000D2  A4D8               	btfss	status,2,c
  3268  0000D4  D053               	goto	l4101
  3269                           
  3270                           ; BSR set to: 0
  3271  0000D6  2821               	incf	CANSetFilter@type,w,c
  3272  0000D8  A4D8               	btfss	status,2,c
  3273  0000DA  D050               	goto	l4101
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;inc\CANlib.h: 767: {
  3277                           ;inc\CANlib.h: 768: RXF1SIDLbits.EXIDEN = 0x00;
  3278  0000DC  010F               	movlb	15	; () banked
  3279  0000DE  9705               	bcf	5,3,b	;volatile
  3280                           
  3281                           ; BSR set to: 15
  3282                           ;inc\CANlib.h: 770: tamp = (filter >> 3);
  3283  0000E0  C01D  F09E         	movff	CANSetFilter@filter,??_CANSetFilter
  3284  0000E4  C01E  F09F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3285  0000E8  C01F  F0A0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3286  0000EC  C020  F0A1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3287  0000F0  0E04               	movlw	4
  3288  0000F2  D006               	goto	u5180
  3289  0000F4                     u5185:
  3290  0000F4  0100               	movlb	0	; () banked
  3291  0000F6  90D8               	bcf	status,0,c
  3292  0000F8  33A1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3293  0000FA  33A0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3294  0000FC  339F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3295  0000FE  339E               	rrcf	??_CANSetFilter& (0+255),f,b
  3296  000100                     u5180:
  3297  000100  2EE8               	decfsz	wreg,f,c
  3298  000102  D7F8               	goto	u5185
  3299  000104  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3300  000108  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3301  00010C  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3302  000110  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;inc\CANlib.h: 771: tamp = tamp & 0x000000FF;
  3306  000114  0100               	movlb	0	; () banked
  3307  000116  51A3               	movf	CANSetFilter@tamp& (0+255),w,b
  3308  000118  0100               	movlb	0	; () banked
  3309  00011A  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3310  00011C  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3311  00011E  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3312  000120  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;inc\CANlib.h: 772: RXF1SIDH = (unsigned char) tamp;
  3316  000122  C0A3  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;inc\CANlib.h: 774: tamp = filter & 0x00000007;
  3320  000126  0E07               	movlw	7
  3321  000128  141D               	andwf	CANSetFilter@filter,w,c
  3322  00012A  0100               	movlb	0	; () banked
  3323  00012C  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3324  00012E  0E00               	movlw	0
  3325  000130  141E               	andwf	CANSetFilter@filter+1,w,c
  3326  000132  0100               	movlb	0	; () banked
  3327  000134  6FA4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3328  000136  0E00               	movlw	0
  3329  000138  141F               	andwf	CANSetFilter@filter+2,w,c
  3330  00013A  0100               	movlb	0	; () banked
  3331  00013C  6FA5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3332  00013E  0E00               	movlw	0
  3333  000140  1420               	andwf	CANSetFilter@filter+3,w,c
  3334  000142  0100               	movlb	0	; () banked
  3335  000144  6FA6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3336                           
  3337                           ; BSR set to: 0
  3338                           ;inc\CANlib.h: 775: tamp = tamp << 5;
  3339  000146  C0A3  F09E         	movff	CANSetFilter@tamp,??_CANSetFilter
  3340  00014A  C0A4  F09F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3341  00014E  C0A5  F0A0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3342  000152  C0A6  F0A1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3343  000156  0E05               	movlw	5
  3344  000158                     u5195:
  3345  000158  90D8               	bcf	status,0,c
  3346  00015A  0100               	movlb	0	; () banked
  3347  00015C  379E               	rlcf	??_CANSetFilter& (0+255),f,b
  3348  00015E  379F               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3349  000160  37A0               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3350  000162  37A1               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3351  000164  2EE8               	decfsz	wreg,f,c
  3352  000166  D7F8               	goto	u5195
  3353  000168  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3354  00016C  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3355  000170  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3356  000174  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;inc\CANlib.h: 776: RXF1SIDL = (unsigned char) tamp;
  3360  000178  C0A3  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3361  00017C                     l4101:
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;inc\CANlib.h: 777: }
  3365                           ;inc\CANlib.h: 779: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3366  00017C  0E02               	movlw	2
  3367  00017E  0100               	movlb	0	; () banked
  3368  000180  19A2               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3369  000182  A4D8               	btfss	status,2,c
  3370  000184  D053               	goto	l4119
  3371                           
  3372                           ; BSR set to: 0
  3373  000186  2821               	incf	CANSetFilter@type,w,c
  3374  000188  A4D8               	btfss	status,2,c
  3375  00018A  D050               	goto	l4119
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;inc\CANlib.h: 780: {
  3379                           ;inc\CANlib.h: 781: RXF2SIDLbits.EXIDEN = 0x00;
  3380  00018C  010F               	movlb	15	; () banked
  3381  00018E  9709               	bcf	9,3,b	;volatile
  3382                           
  3383                           ; BSR set to: 15
  3384                           ;inc\CANlib.h: 783: tamp = (filter >> 3);
  3385  000190  C01D  F09E         	movff	CANSetFilter@filter,??_CANSetFilter
  3386  000194  C01E  F09F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3387  000198  C01F  F0A0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3388  00019C  C020  F0A1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3389  0001A0  0E04               	movlw	4
  3390  0001A2  D006               	goto	u5220
  3391  0001A4                     u5225:
  3392  0001A4  0100               	movlb	0	; () banked
  3393  0001A6  90D8               	bcf	status,0,c
  3394  0001A8  33A1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3395  0001AA  33A0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3396  0001AC  339F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3397  0001AE  339E               	rrcf	??_CANSetFilter& (0+255),f,b
  3398  0001B0                     u5220:
  3399  0001B0  2EE8               	decfsz	wreg,f,c
  3400  0001B2  D7F8               	goto	u5225
  3401  0001B4  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3402  0001B8  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3403  0001BC  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3404  0001C0  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3405                           
  3406                           ; BSR set to: 0
  3407                           ;inc\CANlib.h: 784: tamp = tamp & 0x000000FF;
  3408  0001C4  0100               	movlb	0	; () banked
  3409  0001C6  51A3               	movf	CANSetFilter@tamp& (0+255),w,b
  3410  0001C8  0100               	movlb	0	; () banked
  3411  0001CA  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3412  0001CC  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3413  0001CE  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3414  0001D0  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3415                           
  3416                           ; BSR set to: 0
  3417                           ;inc\CANlib.h: 785: RXF2SIDH = (unsigned char) tamp;
  3418  0001D2  C0A3  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;inc\CANlib.h: 787: tamp = filter & 0x00000007;
  3422  0001D6  0E07               	movlw	7
  3423  0001D8  141D               	andwf	CANSetFilter@filter,w,c
  3424  0001DA  0100               	movlb	0	; () banked
  3425  0001DC  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3426  0001DE  0E00               	movlw	0
  3427  0001E0  141E               	andwf	CANSetFilter@filter+1,w,c
  3428  0001E2  0100               	movlb	0	; () banked
  3429  0001E4  6FA4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3430  0001E6  0E00               	movlw	0
  3431  0001E8  141F               	andwf	CANSetFilter@filter+2,w,c
  3432  0001EA  0100               	movlb	0	; () banked
  3433  0001EC  6FA5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3434  0001EE  0E00               	movlw	0
  3435  0001F0  1420               	andwf	CANSetFilter@filter+3,w,c
  3436  0001F2  0100               	movlb	0	; () banked
  3437  0001F4  6FA6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;inc\CANlib.h: 788: tamp = tamp << 5;
  3441  0001F6  C0A3  F09E         	movff	CANSetFilter@tamp,??_CANSetFilter
  3442  0001FA  C0A4  F09F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3443  0001FE  C0A5  F0A0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3444  000202  C0A6  F0A1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3445  000206  0E05               	movlw	5
  3446  000208                     u5235:
  3447  000208  90D8               	bcf	status,0,c
  3448  00020A  0100               	movlb	0	; () banked
  3449  00020C  379E               	rlcf	??_CANSetFilter& (0+255),f,b
  3450  00020E  379F               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3451  000210  37A0               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3452  000212  37A1               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3453  000214  2EE8               	decfsz	wreg,f,c
  3454  000216  D7F8               	goto	u5235
  3455  000218  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3456  00021C  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3457  000220  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3458  000224  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;inc\CANlib.h: 789: RXF2SIDL = (unsigned char) tamp;
  3462  000228  C0A3  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  3463  00022C                     l4119:
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;inc\CANlib.h: 790: }
  3467                           ;inc\CANlib.h: 792: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  3468  00022C  0E03               	movlw	3
  3469  00022E  0100               	movlb	0	; () banked
  3470  000230  19A2               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3471  000232  A4D8               	btfss	status,2,c
  3472  000234  D053               	goto	l4137
  3473                           
  3474                           ; BSR set to: 0
  3475  000236  2821               	incf	CANSetFilter@type,w,c
  3476  000238  A4D8               	btfss	status,2,c
  3477  00023A  D050               	goto	l4137
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;inc\CANlib.h: 793: {
  3481                           ;inc\CANlib.h: 794: RXF3SIDLbits.EXIDEN = 0x00;
  3482  00023C  010F               	movlb	15	; () banked
  3483  00023E  970D               	bcf	13,3,b	;volatile
  3484                           
  3485                           ; BSR set to: 15
  3486                           ;inc\CANlib.h: 796: tamp = (filter >> 3);
  3487  000240  C01D  F09E         	movff	CANSetFilter@filter,??_CANSetFilter
  3488  000244  C01E  F09F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3489  000248  C01F  F0A0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3490  00024C  C020  F0A1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3491  000250  0E04               	movlw	4
  3492  000252  D006               	goto	u5260
  3493  000254                     u5265:
  3494  000254  0100               	movlb	0	; () banked
  3495  000256  90D8               	bcf	status,0,c
  3496  000258  33A1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3497  00025A  33A0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3498  00025C  339F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3499  00025E  339E               	rrcf	??_CANSetFilter& (0+255),f,b
  3500  000260                     u5260:
  3501  000260  2EE8               	decfsz	wreg,f,c
  3502  000262  D7F8               	goto	u5265
  3503  000264  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3504  000268  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3505  00026C  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3506  000270  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;inc\CANlib.h: 797: tamp = tamp & 0x000000FF;
  3510  000274  0100               	movlb	0	; () banked
  3511  000276  51A3               	movf	CANSetFilter@tamp& (0+255),w,b
  3512  000278  0100               	movlb	0	; () banked
  3513  00027A  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3514  00027C  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3515  00027E  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3516  000280  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;inc\CANlib.h: 798: RXF3SIDH = (unsigned char) tamp;
  3520  000282  C0A3  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  3521                           
  3522                           ; BSR set to: 0
  3523                           ;inc\CANlib.h: 800: tamp = filter & 0x00000007;
  3524  000286  0E07               	movlw	7
  3525  000288  141D               	andwf	CANSetFilter@filter,w,c
  3526  00028A  0100               	movlb	0	; () banked
  3527  00028C  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3528  00028E  0E00               	movlw	0
  3529  000290  141E               	andwf	CANSetFilter@filter+1,w,c
  3530  000292  0100               	movlb	0	; () banked
  3531  000294  6FA4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3532  000296  0E00               	movlw	0
  3533  000298  141F               	andwf	CANSetFilter@filter+2,w,c
  3534  00029A  0100               	movlb	0	; () banked
  3535  00029C  6FA5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3536  00029E  0E00               	movlw	0
  3537  0002A0  1420               	andwf	CANSetFilter@filter+3,w,c
  3538  0002A2  0100               	movlb	0	; () banked
  3539  0002A4  6FA6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;inc\CANlib.h: 801: tamp = tamp << 5;
  3543  0002A6  C0A3  F09E         	movff	CANSetFilter@tamp,??_CANSetFilter
  3544  0002AA  C0A4  F09F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3545  0002AE  C0A5  F0A0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3546  0002B2  C0A6  F0A1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3547  0002B6  0E05               	movlw	5
  3548  0002B8                     u5275:
  3549  0002B8  90D8               	bcf	status,0,c
  3550  0002BA  0100               	movlb	0	; () banked
  3551  0002BC  379E               	rlcf	??_CANSetFilter& (0+255),f,b
  3552  0002BE  379F               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3553  0002C0  37A0               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3554  0002C2  37A1               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3555  0002C4  2EE8               	decfsz	wreg,f,c
  3556  0002C6  D7F8               	goto	u5275
  3557  0002C8  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3558  0002CC  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3559  0002D0  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3560  0002D4  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;inc\CANlib.h: 802: RXF3SIDL = (unsigned char) tamp;
  3564  0002D8  C0A3  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  3565  0002DC                     l4137:
  3566                           
  3567                           ; BSR set to: 0
  3568                           ;inc\CANlib.h: 803: }
  3569                           ;inc\CANlib.h: 805: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  3570  0002DC  0E04               	movlw	4
  3571  0002DE  0100               	movlb	0	; () banked
  3572  0002E0  19A2               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3573  0002E2  A4D8               	btfss	status,2,c
  3574  0002E4  D053               	goto	l4155
  3575                           
  3576                           ; BSR set to: 0
  3577  0002E6  2821               	incf	CANSetFilter@type,w,c
  3578  0002E8  A4D8               	btfss	status,2,c
  3579  0002EA  D050               	goto	l4155
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;inc\CANlib.h: 806: {
  3583                           ;inc\CANlib.h: 807: RXF4SIDLbits.EXIDEN = 0x00;
  3584  0002EC  010F               	movlb	15	; () banked
  3585  0002EE  9711               	bcf	17,3,b	;volatile
  3586                           
  3587                           ; BSR set to: 15
  3588                           ;inc\CANlib.h: 809: tamp = (filter >> 3);
  3589  0002F0  C01D  F09E         	movff	CANSetFilter@filter,??_CANSetFilter
  3590  0002F4  C01E  F09F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3591  0002F8  C01F  F0A0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3592  0002FC  C020  F0A1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3593  000300  0E04               	movlw	4
  3594  000302  D006               	goto	u5300
  3595  000304                     u5305:
  3596  000304  0100               	movlb	0	; () banked
  3597  000306  90D8               	bcf	status,0,c
  3598  000308  33A1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3599  00030A  33A0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3600  00030C  339F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3601  00030E  339E               	rrcf	??_CANSetFilter& (0+255),f,b
  3602  000310                     u5300:
  3603  000310  2EE8               	decfsz	wreg,f,c
  3604  000312  D7F8               	goto	u5305
  3605  000314  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3606  000318  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3607  00031C  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3608  000320  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3609                           
  3610                           ; BSR set to: 0
  3611                           ;inc\CANlib.h: 810: tamp = tamp & 0x000000FF;
  3612  000324  0100               	movlb	0	; () banked
  3613  000326  51A3               	movf	CANSetFilter@tamp& (0+255),w,b
  3614  000328  0100               	movlb	0	; () banked
  3615  00032A  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3616  00032C  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3617  00032E  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3618  000330  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;inc\CANlib.h: 811: RXF4SIDH = (unsigned char) tamp;
  3622  000332  C0A3  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  3623                           
  3624                           ; BSR set to: 0
  3625                           ;inc\CANlib.h: 813: tamp = filter & 0x00000007;
  3626  000336  0E07               	movlw	7
  3627  000338  141D               	andwf	CANSetFilter@filter,w,c
  3628  00033A  0100               	movlb	0	; () banked
  3629  00033C  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3630  00033E  0E00               	movlw	0
  3631  000340  141E               	andwf	CANSetFilter@filter+1,w,c
  3632  000342  0100               	movlb	0	; () banked
  3633  000344  6FA4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3634  000346  0E00               	movlw	0
  3635  000348  141F               	andwf	CANSetFilter@filter+2,w,c
  3636  00034A  0100               	movlb	0	; () banked
  3637  00034C  6FA5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3638  00034E  0E00               	movlw	0
  3639  000350  1420               	andwf	CANSetFilter@filter+3,w,c
  3640  000352  0100               	movlb	0	; () banked
  3641  000354  6FA6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3642                           
  3643                           ; BSR set to: 0
  3644                           ;inc\CANlib.h: 814: tamp = tamp << 5;
  3645  000356  C0A3  F09E         	movff	CANSetFilter@tamp,??_CANSetFilter
  3646  00035A  C0A4  F09F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3647  00035E  C0A5  F0A0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3648  000362  C0A6  F0A1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3649  000366  0E05               	movlw	5
  3650  000368                     u5315:
  3651  000368  90D8               	bcf	status,0,c
  3652  00036A  0100               	movlb	0	; () banked
  3653  00036C  379E               	rlcf	??_CANSetFilter& (0+255),f,b
  3654  00036E  379F               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3655  000370  37A0               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3656  000372  37A1               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3657  000374  2EE8               	decfsz	wreg,f,c
  3658  000376  D7F8               	goto	u5315
  3659  000378  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3660  00037C  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3661  000380  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3662  000384  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3663                           
  3664                           ; BSR set to: 0
  3665                           ;inc\CANlib.h: 815: RXF4SIDL = (unsigned char) tamp;
  3666  000388  C0A3  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  3667  00038C                     l4155:
  3668                           
  3669                           ; BSR set to: 0
  3670                           ;inc\CANlib.h: 816: }
  3671                           ;inc\CANlib.h: 818: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  3672  00038C  0E05               	movlw	5
  3673  00038E  0100               	movlb	0	; () banked
  3674  000390  19A2               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3675  000392  A4D8               	btfss	status,2,c
  3676  000394  D053               	goto	l4173
  3677                           
  3678                           ; BSR set to: 0
  3679  000396  2821               	incf	CANSetFilter@type,w,c
  3680  000398  A4D8               	btfss	status,2,c
  3681  00039A  D050               	goto	l4173
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;inc\CANlib.h: 819: {
  3685                           ;inc\CANlib.h: 820: RXF5SIDLbits.EXIDEN = 0x00;
  3686  00039C  010F               	movlb	15	; () banked
  3687  00039E  9715               	bcf	21,3,b	;volatile
  3688                           
  3689                           ; BSR set to: 15
  3690                           ;inc\CANlib.h: 822: tamp = (filter >> 3);
  3691  0003A0  C01D  F09E         	movff	CANSetFilter@filter,??_CANSetFilter
  3692  0003A4  C01E  F09F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3693  0003A8  C01F  F0A0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3694  0003AC  C020  F0A1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3695  0003B0  0E04               	movlw	4
  3696  0003B2  D006               	goto	u5340
  3697  0003B4                     u5345:
  3698  0003B4  0100               	movlb	0	; () banked
  3699  0003B6  90D8               	bcf	status,0,c
  3700  0003B8  33A1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3701  0003BA  33A0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3702  0003BC  339F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3703  0003BE  339E               	rrcf	??_CANSetFilter& (0+255),f,b
  3704  0003C0                     u5340:
  3705  0003C0  2EE8               	decfsz	wreg,f,c
  3706  0003C2  D7F8               	goto	u5345
  3707  0003C4  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3708  0003C8  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3709  0003CC  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3710  0003D0  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;inc\CANlib.h: 823: tamp = tamp & 0x000000FF;
  3714  0003D4  0100               	movlb	0	; () banked
  3715  0003D6  51A3               	movf	CANSetFilter@tamp& (0+255),w,b
  3716  0003D8  0100               	movlb	0	; () banked
  3717  0003DA  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3718  0003DC  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3719  0003DE  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3720  0003E0  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;inc\CANlib.h: 824: RXF5SIDH = (unsigned char) tamp;
  3724  0003E2  C0A3  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  3725                           
  3726                           ; BSR set to: 0
  3727                           ;inc\CANlib.h: 826: tamp = filter & 0x00000007;
  3728  0003E6  0E07               	movlw	7
  3729  0003E8  141D               	andwf	CANSetFilter@filter,w,c
  3730  0003EA  0100               	movlb	0	; () banked
  3731  0003EC  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3732  0003EE  0E00               	movlw	0
  3733  0003F0  141E               	andwf	CANSetFilter@filter+1,w,c
  3734  0003F2  0100               	movlb	0	; () banked
  3735  0003F4  6FA4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3736  0003F6  0E00               	movlw	0
  3737  0003F8  141F               	andwf	CANSetFilter@filter+2,w,c
  3738  0003FA  0100               	movlb	0	; () banked
  3739  0003FC  6FA5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3740  0003FE  0E00               	movlw	0
  3741  000400  1420               	andwf	CANSetFilter@filter+3,w,c
  3742  000402  0100               	movlb	0	; () banked
  3743  000404  6FA6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3744                           
  3745                           ; BSR set to: 0
  3746                           ;inc\CANlib.h: 827: tamp = tamp << 5;
  3747  000406  C0A3  F09E         	movff	CANSetFilter@tamp,??_CANSetFilter
  3748  00040A  C0A4  F09F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3749  00040E  C0A5  F0A0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3750  000412  C0A6  F0A1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3751  000416  0E05               	movlw	5
  3752  000418                     u5355:
  3753  000418  90D8               	bcf	status,0,c
  3754  00041A  0100               	movlb	0	; () banked
  3755  00041C  379E               	rlcf	??_CANSetFilter& (0+255),f,b
  3756  00041E  379F               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3757  000420  37A0               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3758  000422  37A1               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3759  000424  2EE8               	decfsz	wreg,f,c
  3760  000426  D7F8               	goto	u5355
  3761  000428  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3762  00042C  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3763  000430  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3764  000434  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3765                           
  3766                           ; BSR set to: 0
  3767                           ;inc\CANlib.h: 828: RXF5SIDL = (unsigned char) tamp;
  3768  000438  C0A3  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  3769  00043C                     l4173:
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;inc\CANlib.h: 829: }
  3773                           ;inc\CANlib.h: 832: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  3774  00043C  0100               	movlb	0	; () banked
  3775  00043E  51A2               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3776  000440  0100               	movlb	0	; () banked
  3777  000442  A4D8               	btfss	status,2,c
  3778  000444  D07E               	goto	l4207
  3779                           
  3780                           ; BSR set to: 0
  3781  000446  0EF7               	movlw	247
  3782  000448  1821               	xorwf	CANSetFilter@type,w,c
  3783  00044A  A4D8               	btfss	status,2,c
  3784  00044C  D07A               	goto	l4207
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;inc\CANlib.h: 833: {
  3788                           ;inc\CANlib.h: 834: RXF0SIDLbits.EXIDEN = 0x01;
  3789  00044E  010F               	movlb	15	; () banked
  3790  000450  8701               	bsf	1,3,b	;volatile
  3791                           
  3792                           ; BSR set to: 15
  3793                           ;inc\CANlib.h: 836: tamp = filter & 0x000000FF;
  3794  000452  501D               	movf	CANSetFilter@filter,w,c
  3795  000454  0100               	movlb	0	; () banked
  3796  000456  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3797  000458  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3798  00045A  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3799  00045C  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;inc\CANlib.h: 837: RXF0EIDL = (unsigned char) tamp;
  3803  00045E  C0A3  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  3804                           
  3805                           ; BSR set to: 0
  3806                           ;inc\CANlib.h: 839: tamp = filter & 0x0000FF00;
  3807  000462  0E00               	movlw	0
  3808  000464  141D               	andwf	CANSetFilter@filter,w,c
  3809  000466  0100               	movlb	0	; () banked
  3810  000468  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3811  00046A  0EFF               	movlw	255
  3812  00046C  141E               	andwf	CANSetFilter@filter+1,w,c
  3813  00046E  0100               	movlb	0	; () banked
  3814  000470  6FA4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3815  000472  0E00               	movlw	0
  3816  000474  141F               	andwf	CANSetFilter@filter+2,w,c
  3817  000476  0100               	movlb	0	; () banked
  3818  000478  6FA5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3819  00047A  0E00               	movlw	0
  3820  00047C  1420               	andwf	CANSetFilter@filter+3,w,c
  3821  00047E  0100               	movlb	0	; () banked
  3822  000480  6FA6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3823                           
  3824                           ; BSR set to: 0
  3825                           ;inc\CANlib.h: 840: tamp = tamp >> 8;
  3826  000482  C0A3  F09E         	movff	CANSetFilter@tamp,??_CANSetFilter
  3827  000486  C0A4  F09F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3828  00048A  C0A5  F0A0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3829  00048E  C0A6  F0A1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3830  000492  C09F  F09E         	movff	??_CANSetFilter+1,??_CANSetFilter
  3831  000496  C0A0  F09F         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3832  00049A  C0A1  F0A0         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3833  00049E  0100               	movlb	0	; () banked
  3834  0004A0  6BA1               	clrf	(??_CANSetFilter+3)& (0+255),b
  3835  0004A2  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3836  0004A6  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3837  0004AA  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3838  0004AE  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;inc\CANlib.h: 841: RXF0EIDH = (unsigned char) tamp;
  3842  0004B2  C0A3  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;inc\CANlib.h: 843: if (filter & 0x00010000)
  3846  0004B6  A01F               	btfss	CANSetFilter@filter+2,0,c
  3847  0004B8  D003               	goto	l473
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;inc\CANlib.h: 844: RXF0SIDLbits.EID16 = 0x01;
  3851  0004BA  010F               	movlb	15	; () banked
  3852  0004BC  8101               	bsf	1,0,b	;volatile
  3853  0004BE  D002               	goto	l474
  3854  0004C0                     l473:
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;inc\CANlib.h: 845: else
  3858                           ;inc\CANlib.h: 846: RXF0SIDLbits.EID16 = 0x00;
  3859  0004C0  010F               	movlb	15	; () banked
  3860  0004C2  9101               	bcf	1,0,b	;volatile
  3861  0004C4                     l474:
  3862                           
  3863                           ; BSR set to: 15
  3864                           ;inc\CANlib.h: 848: if (filter & 0x00020000)
  3865  0004C4  A21F               	btfss	CANSetFilter@filter+2,1,c
  3866  0004C6  D003               	goto	l475
  3867                           
  3868                           ; BSR set to: 15
  3869                           ;inc\CANlib.h: 849: RXF0SIDLbits.EID17 = 0x01;
  3870  0004C8  010F               	movlb	15	; () banked
  3871  0004CA  8301               	bsf	1,1,b	;volatile
  3872  0004CC  D002               	goto	l476
  3873  0004CE                     l475:
  3874                           
  3875                           ; BSR set to: 15
  3876                           ;inc\CANlib.h: 850: else
  3877                           ;inc\CANlib.h: 851: RXF0SIDLbits.EID17 = 0x00;
  3878  0004CE  010F               	movlb	15	; () banked
  3879  0004D0  9301               	bcf	1,1,b	;volatile
  3880  0004D2                     l476:
  3881                           
  3882                           ; BSR set to: 15
  3883                           ;inc\CANlib.h: 853: if (filter & 0x00040000)
  3884  0004D2  A41F               	btfss	CANSetFilter@filter+2,2,c
  3885  0004D4  D003               	goto	l477
  3886                           
  3887                           ; BSR set to: 15
  3888                           ;inc\CANlib.h: 854: RXF0SIDLbits.SID0 = 0x01;
  3889  0004D6  010F               	movlb	15	; () banked
  3890  0004D8  8B01               	bsf	1,5,b	;volatile
  3891  0004DA  D002               	goto	l478
  3892  0004DC                     l477:
  3893                           
  3894                           ; BSR set to: 15
  3895                           ;inc\CANlib.h: 855: else
  3896                           ;inc\CANlib.h: 856: RXF0SIDLbits.SID0 = 0x00;
  3897  0004DC  010F               	movlb	15	; () banked
  3898  0004DE  9B01               	bcf	1,5,b	;volatile
  3899  0004E0                     l478:
  3900                           
  3901                           ; BSR set to: 15
  3902                           ;inc\CANlib.h: 858: if (filter & 0x00080000)
  3903  0004E0  A61F               	btfss	CANSetFilter@filter+2,3,c
  3904  0004E2  D003               	goto	l479
  3905                           
  3906                           ; BSR set to: 15
  3907                           ;inc\CANlib.h: 859: RXF0SIDLbits.SID1 = 0x01;
  3908  0004E4  010F               	movlb	15	; () banked
  3909  0004E6  8D01               	bsf	1,6,b	;volatile
  3910  0004E8  D002               	goto	l480
  3911  0004EA                     l479:
  3912                           
  3913                           ; BSR set to: 15
  3914                           ;inc\CANlib.h: 860: else
  3915                           ;inc\CANlib.h: 861: RXF0SIDLbits.SID1 = 0x00;
  3916  0004EA  010F               	movlb	15	; () banked
  3917  0004EC  9D01               	bcf	1,6,b	;volatile
  3918  0004EE                     l480:
  3919                           
  3920                           ; BSR set to: 15
  3921                           ;inc\CANlib.h: 863: if (filter & 0x00100000)
  3922  0004EE  A81F               	btfss	CANSetFilter@filter+2,4,c
  3923  0004F0  D003               	goto	l481
  3924                           
  3925                           ; BSR set to: 15
  3926                           ;inc\CANlib.h: 864: RXF0SIDLbits.SID2 = 0x01 ;
  3927  0004F2  010F               	movlb	15	; () banked
  3928  0004F4  8F01               	bsf	1,7,b	;volatile
  3929  0004F6  D002               	goto	l4201
  3930  0004F8                     l481:
  3931                           
  3932                           ; BSR set to: 15
  3933                           ;inc\CANlib.h: 865: else
  3934                           ;inc\CANlib.h: 866: RXF0SIDLbits.SID2 = 0x00 ;
  3935  0004F8  010F               	movlb	15	; () banked
  3936  0004FA  9F01               	bcf	1,7,b	;volatile
  3937  0004FC                     l4201:
  3938                           
  3939                           ; BSR set to: 15
  3940                           ;inc\CANlib.h: 868: tamp = (filter >> 21);
  3941  0004FC  C01D  F09E         	movff	CANSetFilter@filter,??_CANSetFilter
  3942  000500  C01E  F09F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3943  000504  C01F  F0A0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3944  000508  C020  F0A1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3945  00050C  0E16               	movlw	22
  3946  00050E  D006               	goto	u5430
  3947  000510                     u5435:
  3948  000510  0100               	movlb	0	; () banked
  3949  000512  90D8               	bcf	status,0,c
  3950  000514  33A1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3951  000516  33A0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3952  000518  339F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3953  00051A  339E               	rrcf	??_CANSetFilter& (0+255),f,b
  3954  00051C                     u5430:
  3955  00051C  2EE8               	decfsz	wreg,f,c
  3956  00051E  D7F8               	goto	u5435
  3957  000520  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3958  000524  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3959  000528  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3960  00052C  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;inc\CANlib.h: 869: tamp = tamp & 0x000000FF;
  3964  000530  0100               	movlb	0	; () banked
  3965  000532  51A3               	movf	CANSetFilter@tamp& (0+255),w,b
  3966  000534  0100               	movlb	0	; () banked
  3967  000536  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  3968  000538  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3969  00053A  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3970  00053C  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3971                           
  3972                           ; BSR set to: 0
  3973                           ;inc\CANlib.h: 870: RXF0SIDH = (unsigned char) tamp;
  3974  00053E  C0A3  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3975  000542                     l4207:
  3976                           
  3977                           ; BSR set to: 0
  3978                           ;inc\CANlib.h: 871: }
  3979                           ;inc\CANlib.h: 873: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  3980  000542  0100               	movlb	0	; () banked
  3981  000544  05A2               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3982  000546  A4D8               	btfss	status,2,c
  3983  000548  D07E               	goto	l4241
  3984                           
  3985                           ; BSR set to: 0
  3986  00054A  0EF7               	movlw	247
  3987  00054C  1821               	xorwf	CANSetFilter@type,w,c
  3988  00054E  A4D8               	btfss	status,2,c
  3989  000550  D07A               	goto	l4241
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;inc\CANlib.h: 874: {
  3993                           ;inc\CANlib.h: 875: RXF1SIDLbits.EXIDEN = 0x01;
  3994  000552  010F               	movlb	15	; () banked
  3995  000554  8705               	bsf	5,3,b	;volatile
  3996                           
  3997                           ; BSR set to: 15
  3998                           ;inc\CANlib.h: 877: tamp = filter & 0x000000FF;
  3999  000556  501D               	movf	CANSetFilter@filter,w,c
  4000  000558  0100               	movlb	0	; () banked
  4001  00055A  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4002  00055C  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4003  00055E  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4004  000560  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4005                           
  4006                           ; BSR set to: 0
  4007                           ;inc\CANlib.h: 878: RXF1EIDL = (unsigned char) tamp;
  4008  000562  C0A3  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;inc\CANlib.h: 880: tamp = filter & 0x0000FF00;
  4012  000566  0E00               	movlw	0
  4013  000568  141D               	andwf	CANSetFilter@filter,w,c
  4014  00056A  0100               	movlb	0	; () banked
  4015  00056C  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4016  00056E  0EFF               	movlw	255
  4017  000570  141E               	andwf	CANSetFilter@filter+1,w,c
  4018  000572  0100               	movlb	0	; () banked
  4019  000574  6FA4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4020  000576  0E00               	movlw	0
  4021  000578  141F               	andwf	CANSetFilter@filter+2,w,c
  4022  00057A  0100               	movlb	0	; () banked
  4023  00057C  6FA5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4024  00057E  0E00               	movlw	0
  4025  000580  1420               	andwf	CANSetFilter@filter+3,w,c
  4026  000582  0100               	movlb	0	; () banked
  4027  000584  6FA6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;inc\CANlib.h: 881: tamp = tamp >> 8;
  4031  000586  C0A3  F09E         	movff	CANSetFilter@tamp,??_CANSetFilter
  4032  00058A  C0A4  F09F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4033  00058E  C0A5  F0A0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4034  000592  C0A6  F0A1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4035  000596  C09F  F09E         	movff	??_CANSetFilter+1,??_CANSetFilter
  4036  00059A  C0A0  F09F         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4037  00059E  C0A1  F0A0         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4038  0005A2  0100               	movlb	0	; () banked
  4039  0005A4  6BA1               	clrf	(??_CANSetFilter+3)& (0+255),b
  4040  0005A6  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4041  0005AA  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4042  0005AE  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4043  0005B2  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;inc\CANlib.h: 882: RXF1EIDH = (unsigned char) tamp;
  4047  0005B6  C0A3  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;inc\CANlib.h: 884: if (filter & 0x00010000)
  4051  0005BA  A01F               	btfss	CANSetFilter@filter+2,0,c
  4052  0005BC  D003               	goto	l484
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;inc\CANlib.h: 885: RXF1SIDLbits.EID16 = 0x01;
  4056  0005BE  010F               	movlb	15	; () banked
  4057  0005C0  8105               	bsf	5,0,b	;volatile
  4058  0005C2  D002               	goto	l485
  4059  0005C4                     l484:
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;inc\CANlib.h: 886: else
  4063                           ;inc\CANlib.h: 887: RXF1SIDLbits.EID16 = 0x00;
  4064  0005C4  010F               	movlb	15	; () banked
  4065  0005C6  9105               	bcf	5,0,b	;volatile
  4066  0005C8                     l485:
  4067                           
  4068                           ; BSR set to: 15
  4069                           ;inc\CANlib.h: 889: if (filter & 0x00020000)
  4070  0005C8  A21F               	btfss	CANSetFilter@filter+2,1,c
  4071  0005CA  D003               	goto	l486
  4072                           
  4073                           ; BSR set to: 15
  4074                           ;inc\CANlib.h: 890: RXF1SIDLbits.EID17 = 0x01;
  4075  0005CC  010F               	movlb	15	; () banked
  4076  0005CE  8305               	bsf	5,1,b	;volatile
  4077  0005D0  D002               	goto	l487
  4078  0005D2                     l486:
  4079                           
  4080                           ; BSR set to: 15
  4081                           ;inc\CANlib.h: 891: else
  4082                           ;inc\CANlib.h: 892: RXF1SIDLbits.EID17 = 0x00;
  4083  0005D2  010F               	movlb	15	; () banked
  4084  0005D4  9305               	bcf	5,1,b	;volatile
  4085  0005D6                     l487:
  4086                           
  4087                           ; BSR set to: 15
  4088                           ;inc\CANlib.h: 894: if (filter & 0x00040000)
  4089  0005D6  A41F               	btfss	CANSetFilter@filter+2,2,c
  4090  0005D8  D003               	goto	l488
  4091                           
  4092                           ; BSR set to: 15
  4093                           ;inc\CANlib.h: 895: RXF1SIDLbits.SID0 = 0x01;
  4094  0005DA  010F               	movlb	15	; () banked
  4095  0005DC  8B05               	bsf	5,5,b	;volatile
  4096  0005DE  D002               	goto	l489
  4097  0005E0                     l488:
  4098                           
  4099                           ; BSR set to: 15
  4100                           ;inc\CANlib.h: 896: else
  4101                           ;inc\CANlib.h: 897: RXF1SIDLbits.SID0 = 0x00;
  4102  0005E0  010F               	movlb	15	; () banked
  4103  0005E2  9B05               	bcf	5,5,b	;volatile
  4104  0005E4                     l489:
  4105                           
  4106                           ; BSR set to: 15
  4107                           ;inc\CANlib.h: 899: if (filter & 0x00080000)
  4108  0005E4  A61F               	btfss	CANSetFilter@filter+2,3,c
  4109  0005E6  D003               	goto	l490
  4110                           
  4111                           ; BSR set to: 15
  4112                           ;inc\CANlib.h: 900: RXF1SIDLbits.SID1 = 0x01;
  4113  0005E8  010F               	movlb	15	; () banked
  4114  0005EA  8D05               	bsf	5,6,b	;volatile
  4115  0005EC  D002               	goto	l491
  4116  0005EE                     l490:
  4117                           
  4118                           ; BSR set to: 15
  4119                           ;inc\CANlib.h: 901: else
  4120                           ;inc\CANlib.h: 902: RXF1SIDLbits.SID1 = 0x00;
  4121  0005EE  010F               	movlb	15	; () banked
  4122  0005F0  9D05               	bcf	5,6,b	;volatile
  4123  0005F2                     l491:
  4124                           
  4125                           ; BSR set to: 15
  4126                           ;inc\CANlib.h: 904: if (filter & 0x00100000)
  4127  0005F2  A81F               	btfss	CANSetFilter@filter+2,4,c
  4128  0005F4  D003               	goto	l492
  4129                           
  4130                           ; BSR set to: 15
  4131                           ;inc\CANlib.h: 905: RXF1SIDLbits.SID2 = 0x01 ;
  4132  0005F6  010F               	movlb	15	; () banked
  4133  0005F8  8F05               	bsf	5,7,b	;volatile
  4134  0005FA  D002               	goto	l4235
  4135  0005FC                     l492:
  4136                           
  4137                           ; BSR set to: 15
  4138                           ;inc\CANlib.h: 906: else
  4139                           ;inc\CANlib.h: 907: RXF1SIDLbits.SID2 = 0x00 ;
  4140  0005FC  010F               	movlb	15	; () banked
  4141  0005FE  9F05               	bcf	5,7,b	;volatile
  4142  000600                     l4235:
  4143                           
  4144                           ; BSR set to: 15
  4145                           ;inc\CANlib.h: 909: tamp = (filter >> 21);
  4146  000600  C01D  F09E         	movff	CANSetFilter@filter,??_CANSetFilter
  4147  000604  C01E  F09F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4148  000608  C01F  F0A0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4149  00060C  C020  F0A1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4150  000610  0E16               	movlw	22
  4151  000612  D006               	goto	u5510
  4152  000614                     u5515:
  4153  000614  0100               	movlb	0	; () banked
  4154  000616  90D8               	bcf	status,0,c
  4155  000618  33A1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4156  00061A  33A0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4157  00061C  339F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4158  00061E  339E               	rrcf	??_CANSetFilter& (0+255),f,b
  4159  000620                     u5510:
  4160  000620  2EE8               	decfsz	wreg,f,c
  4161  000622  D7F8               	goto	u5515
  4162  000624  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4163  000628  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4164  00062C  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4165  000630  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;inc\CANlib.h: 910: tamp = tamp & 0x000000FF;
  4169  000634  0100               	movlb	0	; () banked
  4170  000636  51A3               	movf	CANSetFilter@tamp& (0+255),w,b
  4171  000638  0100               	movlb	0	; () banked
  4172  00063A  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4173  00063C  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4174  00063E  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4175  000640  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;inc\CANlib.h: 911: RXF1SIDH = (unsigned char) tamp;
  4179  000642  C0A3  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4180  000646                     l4241:
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;inc\CANlib.h: 912: }
  4184                           ;inc\CANlib.h: 915: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4185  000646  0E02               	movlw	2
  4186  000648  0100               	movlb	0	; () banked
  4187  00064A  19A2               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4188  00064C  A4D8               	btfss	status,2,c
  4189  00064E  D07E               	goto	l4275
  4190                           
  4191                           ; BSR set to: 0
  4192  000650  0EF7               	movlw	247
  4193  000652  1821               	xorwf	CANSetFilter@type,w,c
  4194  000654  A4D8               	btfss	status,2,c
  4195  000656  D07A               	goto	l4275
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;inc\CANlib.h: 916: {
  4199                           ;inc\CANlib.h: 917: RXF2SIDLbits.EXIDEN = 0x01;
  4200  000658  010F               	movlb	15	; () banked
  4201  00065A  8709               	bsf	9,3,b	;volatile
  4202                           
  4203                           ; BSR set to: 15
  4204                           ;inc\CANlib.h: 919: tamp = filter & 0x000000FF;
  4205  00065C  501D               	movf	CANSetFilter@filter,w,c
  4206  00065E  0100               	movlb	0	; () banked
  4207  000660  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4208  000662  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4209  000664  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4210  000666  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;inc\CANlib.h: 920: RXF2EIDL = (unsigned char) tamp;
  4214  000668  C0A3  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;inc\CANlib.h: 922: tamp = filter & 0x0000FF00;
  4218  00066C  0E00               	movlw	0
  4219  00066E  141D               	andwf	CANSetFilter@filter,w,c
  4220  000670  0100               	movlb	0	; () banked
  4221  000672  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4222  000674  0EFF               	movlw	255
  4223  000676  141E               	andwf	CANSetFilter@filter+1,w,c
  4224  000678  0100               	movlb	0	; () banked
  4225  00067A  6FA4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4226  00067C  0E00               	movlw	0
  4227  00067E  141F               	andwf	CANSetFilter@filter+2,w,c
  4228  000680  0100               	movlb	0	; () banked
  4229  000682  6FA5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4230  000684  0E00               	movlw	0
  4231  000686  1420               	andwf	CANSetFilter@filter+3,w,c
  4232  000688  0100               	movlb	0	; () banked
  4233  00068A  6FA6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;inc\CANlib.h: 923: tamp = tamp >> 8;
  4237  00068C  C0A3  F09E         	movff	CANSetFilter@tamp,??_CANSetFilter
  4238  000690  C0A4  F09F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4239  000694  C0A5  F0A0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4240  000698  C0A6  F0A1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4241  00069C  C09F  F09E         	movff	??_CANSetFilter+1,??_CANSetFilter
  4242  0006A0  C0A0  F09F         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4243  0006A4  C0A1  F0A0         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4244  0006A8  0100               	movlb	0	; () banked
  4245  0006AA  6BA1               	clrf	(??_CANSetFilter+3)& (0+255),b
  4246  0006AC  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4247  0006B0  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4248  0006B4  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4249  0006B8  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;inc\CANlib.h: 924: RXF2EIDH = (unsigned char) tamp;
  4253  0006BC  C0A3  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;inc\CANlib.h: 926: if (filter & 0x00010000)
  4257  0006C0  A01F               	btfss	CANSetFilter@filter+2,0,c
  4258  0006C2  D003               	goto	l495
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;inc\CANlib.h: 927: RXF2SIDLbits.EID16 = 0x01;
  4262  0006C4  010F               	movlb	15	; () banked
  4263  0006C6  8109               	bsf	9,0,b	;volatile
  4264  0006C8  D002               	goto	l496
  4265  0006CA                     l495:
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;inc\CANlib.h: 928: else
  4269                           ;inc\CANlib.h: 929: RXF2SIDLbits.EID16 = 0x00;
  4270  0006CA  010F               	movlb	15	; () banked
  4271  0006CC  9109               	bcf	9,0,b	;volatile
  4272  0006CE                     l496:
  4273                           
  4274                           ; BSR set to: 15
  4275                           ;inc\CANlib.h: 931: if (filter & 0x00020000)
  4276  0006CE  A21F               	btfss	CANSetFilter@filter+2,1,c
  4277  0006D0  D003               	goto	l497
  4278                           
  4279                           ; BSR set to: 15
  4280                           ;inc\CANlib.h: 932: RXF2SIDLbits.EID17 = 0x01;
  4281  0006D2  010F               	movlb	15	; () banked
  4282  0006D4  8309               	bsf	9,1,b	;volatile
  4283  0006D6  D002               	goto	l498
  4284  0006D8                     l497:
  4285                           
  4286                           ; BSR set to: 15
  4287                           ;inc\CANlib.h: 933: else
  4288                           ;inc\CANlib.h: 934: RXF2SIDLbits.EID17 = 0x00;
  4289  0006D8  010F               	movlb	15	; () banked
  4290  0006DA  9309               	bcf	9,1,b	;volatile
  4291  0006DC                     l498:
  4292                           
  4293                           ; BSR set to: 15
  4294                           ;inc\CANlib.h: 936: if (filter & 0x00040000)
  4295  0006DC  A41F               	btfss	CANSetFilter@filter+2,2,c
  4296  0006DE  D003               	goto	l499
  4297                           
  4298                           ; BSR set to: 15
  4299                           ;inc\CANlib.h: 937: RXF2SIDLbits.SID0 = 0x01;
  4300  0006E0  010F               	movlb	15	; () banked
  4301  0006E2  8B09               	bsf	9,5,b	;volatile
  4302  0006E4  D002               	goto	l500
  4303  0006E6                     l499:
  4304                           
  4305                           ; BSR set to: 15
  4306                           ;inc\CANlib.h: 938: else
  4307                           ;inc\CANlib.h: 939: RXF2SIDLbits.SID0 = 0x00;
  4308  0006E6  010F               	movlb	15	; () banked
  4309  0006E8  9B09               	bcf	9,5,b	;volatile
  4310  0006EA                     l500:
  4311                           
  4312                           ; BSR set to: 15
  4313                           ;inc\CANlib.h: 941: if (filter & 0x00080000)
  4314  0006EA  A61F               	btfss	CANSetFilter@filter+2,3,c
  4315  0006EC  D003               	goto	l501
  4316                           
  4317                           ; BSR set to: 15
  4318                           ;inc\CANlib.h: 942: RXF2SIDLbits.SID1 = 0x01;
  4319  0006EE  010F               	movlb	15	; () banked
  4320  0006F0  8D09               	bsf	9,6,b	;volatile
  4321  0006F2  D002               	goto	l502
  4322  0006F4                     l501:
  4323                           
  4324                           ; BSR set to: 15
  4325                           ;inc\CANlib.h: 943: else
  4326                           ;inc\CANlib.h: 944: RXF2SIDLbits.SID1 = 0x00;
  4327  0006F4  010F               	movlb	15	; () banked
  4328  0006F6  9D09               	bcf	9,6,b	;volatile
  4329  0006F8                     l502:
  4330                           
  4331                           ; BSR set to: 15
  4332                           ;inc\CANlib.h: 946: if (filter & 0x00100000)
  4333  0006F8  A81F               	btfss	CANSetFilter@filter+2,4,c
  4334  0006FA  D003               	goto	l503
  4335                           
  4336                           ; BSR set to: 15
  4337                           ;inc\CANlib.h: 947: RXF2SIDLbits.SID2 = 0x01 ;
  4338  0006FC  010F               	movlb	15	; () banked
  4339  0006FE  8F09               	bsf	9,7,b	;volatile
  4340  000700  D002               	goto	l4269
  4341  000702                     l503:
  4342                           
  4343                           ; BSR set to: 15
  4344                           ;inc\CANlib.h: 948: else
  4345                           ;inc\CANlib.h: 949: RXF2SIDLbits.SID2 = 0x00 ;
  4346  000702  010F               	movlb	15	; () banked
  4347  000704  9F09               	bcf	9,7,b	;volatile
  4348  000706                     l4269:
  4349                           
  4350                           ; BSR set to: 15
  4351                           ;inc\CANlib.h: 951: tamp = (filter >> 21);
  4352  000706  C01D  F09E         	movff	CANSetFilter@filter,??_CANSetFilter
  4353  00070A  C01E  F09F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4354  00070E  C01F  F0A0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4355  000712  C020  F0A1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4356  000716  0E16               	movlw	22
  4357  000718  D006               	goto	u5590
  4358  00071A                     u5595:
  4359  00071A  0100               	movlb	0	; () banked
  4360  00071C  90D8               	bcf	status,0,c
  4361  00071E  33A1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4362  000720  33A0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4363  000722  339F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4364  000724  339E               	rrcf	??_CANSetFilter& (0+255),f,b
  4365  000726                     u5590:
  4366  000726  2EE8               	decfsz	wreg,f,c
  4367  000728  D7F8               	goto	u5595
  4368  00072A  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4369  00072E  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4370  000732  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4371  000736  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;inc\CANlib.h: 952: tamp = tamp & 0x000000FF;
  4375  00073A  0100               	movlb	0	; () banked
  4376  00073C  51A3               	movf	CANSetFilter@tamp& (0+255),w,b
  4377  00073E  0100               	movlb	0	; () banked
  4378  000740  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4379  000742  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4380  000744  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4381  000746  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4382                           
  4383                           ; BSR set to: 0
  4384                           ;inc\CANlib.h: 953: RXF2SIDH = (unsigned char) tamp;
  4385  000748  C0A3  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4386  00074C                     l4275:
  4387                           
  4388                           ; BSR set to: 0
  4389                           ;inc\CANlib.h: 954: }
  4390                           ;inc\CANlib.h: 956: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  4391  00074C  0E03               	movlw	3
  4392  00074E  0100               	movlb	0	; () banked
  4393  000750  19A2               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4394  000752  A4D8               	btfss	status,2,c
  4395  000754  D07E               	goto	l4309
  4396                           
  4397                           ; BSR set to: 0
  4398  000756  0EF7               	movlw	247
  4399  000758  1821               	xorwf	CANSetFilter@type,w,c
  4400  00075A  A4D8               	btfss	status,2,c
  4401  00075C  D07A               	goto	l4309
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;inc\CANlib.h: 957: {
  4405                           ;inc\CANlib.h: 958: RXF3SIDLbits.EXIDEN = 0x01;
  4406  00075E  010F               	movlb	15	; () banked
  4407  000760  870D               	bsf	13,3,b	;volatile
  4408                           
  4409                           ; BSR set to: 15
  4410                           ;inc\CANlib.h: 960: tamp = filter & 0x000000FF;
  4411  000762  501D               	movf	CANSetFilter@filter,w,c
  4412  000764  0100               	movlb	0	; () banked
  4413  000766  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4414  000768  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4415  00076A  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4416  00076C  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4417                           
  4418                           ; BSR set to: 0
  4419                           ;inc\CANlib.h: 961: RXF3EIDL = (unsigned char) tamp;
  4420  00076E  C0A3  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  4421                           
  4422                           ; BSR set to: 0
  4423                           ;inc\CANlib.h: 963: tamp = filter & 0x0000FF00;
  4424  000772  0E00               	movlw	0
  4425  000774  141D               	andwf	CANSetFilter@filter,w,c
  4426  000776  0100               	movlb	0	; () banked
  4427  000778  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4428  00077A  0EFF               	movlw	255
  4429  00077C  141E               	andwf	CANSetFilter@filter+1,w,c
  4430  00077E  0100               	movlb	0	; () banked
  4431  000780  6FA4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4432  000782  0E00               	movlw	0
  4433  000784  141F               	andwf	CANSetFilter@filter+2,w,c
  4434  000786  0100               	movlb	0	; () banked
  4435  000788  6FA5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4436  00078A  0E00               	movlw	0
  4437  00078C  1420               	andwf	CANSetFilter@filter+3,w,c
  4438  00078E  0100               	movlb	0	; () banked
  4439  000790  6FA6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4440                           
  4441                           ; BSR set to: 0
  4442                           ;inc\CANlib.h: 964: tamp = tamp >> 8;
  4443  000792  C0A3  F09E         	movff	CANSetFilter@tamp,??_CANSetFilter
  4444  000796  C0A4  F09F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4445  00079A  C0A5  F0A0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4446  00079E  C0A6  F0A1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4447  0007A2  C09F  F09E         	movff	??_CANSetFilter+1,??_CANSetFilter
  4448  0007A6  C0A0  F09F         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4449  0007AA  C0A1  F0A0         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4450  0007AE  0100               	movlb	0	; () banked
  4451  0007B0  6BA1               	clrf	(??_CANSetFilter+3)& (0+255),b
  4452  0007B2  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4453  0007B6  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4454  0007BA  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4455  0007BE  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;inc\CANlib.h: 965: RXF3EIDH = (unsigned char) tamp;
  4459  0007C2  C0A3  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  4460                           
  4461                           ; BSR set to: 0
  4462                           ;inc\CANlib.h: 967: if (filter & 0x00010000)
  4463  0007C6  A01F               	btfss	CANSetFilter@filter+2,0,c
  4464  0007C8  D003               	goto	l506
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;inc\CANlib.h: 968: RXF3SIDLbits.EID16 = 0x01;
  4468  0007CA  010F               	movlb	15	; () banked
  4469  0007CC  810D               	bsf	13,0,b	;volatile
  4470  0007CE  D002               	goto	l507
  4471  0007D0                     l506:
  4472                           
  4473                           ; BSR set to: 0
  4474                           ;inc\CANlib.h: 969: else
  4475                           ;inc\CANlib.h: 970: RXF3SIDLbits.EID16 = 0x00;
  4476  0007D0  010F               	movlb	15	; () banked
  4477  0007D2  910D               	bcf	13,0,b	;volatile
  4478  0007D4                     l507:
  4479                           
  4480                           ; BSR set to: 15
  4481                           ;inc\CANlib.h: 972: if (filter & 0x00020000)
  4482  0007D4  A21F               	btfss	CANSetFilter@filter+2,1,c
  4483  0007D6  D003               	goto	l508
  4484                           
  4485                           ; BSR set to: 15
  4486                           ;inc\CANlib.h: 973: RXF3SIDLbits.EID17 = 0x01;
  4487  0007D8  010F               	movlb	15	; () banked
  4488  0007DA  830D               	bsf	13,1,b	;volatile
  4489  0007DC  D002               	goto	l509
  4490  0007DE                     l508:
  4491                           
  4492                           ; BSR set to: 15
  4493                           ;inc\CANlib.h: 974: else
  4494                           ;inc\CANlib.h: 975: RXF3SIDLbits.EID17 = 0x00;
  4495  0007DE  010F               	movlb	15	; () banked
  4496  0007E0  930D               	bcf	13,1,b	;volatile
  4497  0007E2                     l509:
  4498                           
  4499                           ; BSR set to: 15
  4500                           ;inc\CANlib.h: 977: if (filter & 0x00040000)
  4501  0007E2  A41F               	btfss	CANSetFilter@filter+2,2,c
  4502  0007E4  D003               	goto	l510
  4503                           
  4504                           ; BSR set to: 15
  4505                           ;inc\CANlib.h: 978: RXF3SIDLbits.SID0 = 0x01;
  4506  0007E6  010F               	movlb	15	; () banked
  4507  0007E8  8B0D               	bsf	13,5,b	;volatile
  4508  0007EA  D002               	goto	l511
  4509  0007EC                     l510:
  4510                           
  4511                           ; BSR set to: 15
  4512                           ;inc\CANlib.h: 979: else
  4513                           ;inc\CANlib.h: 980: RXF3SIDLbits.SID0 = 0x00;
  4514  0007EC  010F               	movlb	15	; () banked
  4515  0007EE  9B0D               	bcf	13,5,b	;volatile
  4516  0007F0                     l511:
  4517                           
  4518                           ; BSR set to: 15
  4519                           ;inc\CANlib.h: 982: if (filter & 0x00080000)
  4520  0007F0  A61F               	btfss	CANSetFilter@filter+2,3,c
  4521  0007F2  D003               	goto	l512
  4522                           
  4523                           ; BSR set to: 15
  4524                           ;inc\CANlib.h: 983: RXF3SIDLbits.SID1 = 0x01;
  4525  0007F4  010F               	movlb	15	; () banked
  4526  0007F6  8D0D               	bsf	13,6,b	;volatile
  4527  0007F8  D002               	goto	l513
  4528  0007FA                     l512:
  4529                           
  4530                           ; BSR set to: 15
  4531                           ;inc\CANlib.h: 984: else
  4532                           ;inc\CANlib.h: 985: RXF3SIDLbits.SID1 = 0x00;
  4533  0007FA  010F               	movlb	15	; () banked
  4534  0007FC  9D0D               	bcf	13,6,b	;volatile
  4535  0007FE                     l513:
  4536                           
  4537                           ; BSR set to: 15
  4538                           ;inc\CANlib.h: 987: if (filter & 0x00100000)
  4539  0007FE  A81F               	btfss	CANSetFilter@filter+2,4,c
  4540  000800  D003               	goto	l514
  4541                           
  4542                           ; BSR set to: 15
  4543                           ;inc\CANlib.h: 988: RXF3SIDLbits.SID2 = 0x01 ;
  4544  000802  010F               	movlb	15	; () banked
  4545  000804  8F0D               	bsf	13,7,b	;volatile
  4546  000806  D002               	goto	l4303
  4547  000808                     l514:
  4548                           
  4549                           ; BSR set to: 15
  4550                           ;inc\CANlib.h: 989: else
  4551                           ;inc\CANlib.h: 990: RXF3SIDLbits.SID2 = 0x00 ;
  4552  000808  010F               	movlb	15	; () banked
  4553  00080A  9F0D               	bcf	13,7,b	;volatile
  4554  00080C                     l4303:
  4555                           
  4556                           ; BSR set to: 15
  4557                           ;inc\CANlib.h: 992: tamp = (filter >> 21);
  4558  00080C  C01D  F09E         	movff	CANSetFilter@filter,??_CANSetFilter
  4559  000810  C01E  F09F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4560  000814  C01F  F0A0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4561  000818  C020  F0A1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4562  00081C  0E16               	movlw	22
  4563  00081E  D006               	goto	u5670
  4564  000820                     u5675:
  4565  000820  0100               	movlb	0	; () banked
  4566  000822  90D8               	bcf	status,0,c
  4567  000824  33A1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4568  000826  33A0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4569  000828  339F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4570  00082A  339E               	rrcf	??_CANSetFilter& (0+255),f,b
  4571  00082C                     u5670:
  4572  00082C  2EE8               	decfsz	wreg,f,c
  4573  00082E  D7F8               	goto	u5675
  4574  000830  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4575  000834  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4576  000838  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4577  00083C  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4578                           
  4579                           ; BSR set to: 0
  4580                           ;inc\CANlib.h: 993: tamp = tamp & 0x000000FF;
  4581  000840  0100               	movlb	0	; () banked
  4582  000842  51A3               	movf	CANSetFilter@tamp& (0+255),w,b
  4583  000844  0100               	movlb	0	; () banked
  4584  000846  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4585  000848  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4586  00084A  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4587  00084C  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;inc\CANlib.h: 994: RXF3SIDH = (unsigned char) tamp;
  4591  00084E  C0A3  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4592  000852                     l4309:
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;inc\CANlib.h: 995: }
  4596                           ;inc\CANlib.h: 997: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  4597  000852  0E04               	movlw	4
  4598  000854  0100               	movlb	0	; () banked
  4599  000856  19A2               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4600  000858  A4D8               	btfss	status,2,c
  4601  00085A  D07E               	goto	l4343
  4602                           
  4603                           ; BSR set to: 0
  4604  00085C  0EF7               	movlw	247
  4605  00085E  1821               	xorwf	CANSetFilter@type,w,c
  4606  000860  A4D8               	btfss	status,2,c
  4607  000862  D07A               	goto	l4343
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;inc\CANlib.h: 998: {
  4611                           ;inc\CANlib.h: 999: RXF4SIDLbits.EXIDEN = 0x01;
  4612  000864  010F               	movlb	15	; () banked
  4613  000866  8711               	bsf	17,3,b	;volatile
  4614                           
  4615                           ; BSR set to: 15
  4616                           ;inc\CANlib.h: 1001: tamp = filter & 0x000000FF;
  4617  000868  501D               	movf	CANSetFilter@filter,w,c
  4618  00086A  0100               	movlb	0	; () banked
  4619  00086C  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4620  00086E  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4621  000870  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4622  000872  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4623                           
  4624                           ; BSR set to: 0
  4625                           ;inc\CANlib.h: 1002: RXF4EIDL = (unsigned char) tamp;
  4626  000874  C0A3  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;inc\CANlib.h: 1004: tamp = filter & 0x0000FF00;
  4630  000878  0E00               	movlw	0
  4631  00087A  141D               	andwf	CANSetFilter@filter,w,c
  4632  00087C  0100               	movlb	0	; () banked
  4633  00087E  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4634  000880  0EFF               	movlw	255
  4635  000882  141E               	andwf	CANSetFilter@filter+1,w,c
  4636  000884  0100               	movlb	0	; () banked
  4637  000886  6FA4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4638  000888  0E00               	movlw	0
  4639  00088A  141F               	andwf	CANSetFilter@filter+2,w,c
  4640  00088C  0100               	movlb	0	; () banked
  4641  00088E  6FA5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4642  000890  0E00               	movlw	0
  4643  000892  1420               	andwf	CANSetFilter@filter+3,w,c
  4644  000894  0100               	movlb	0	; () banked
  4645  000896  6FA6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;inc\CANlib.h: 1005: tamp = tamp >> 8;
  4649  000898  C0A3  F09E         	movff	CANSetFilter@tamp,??_CANSetFilter
  4650  00089C  C0A4  F09F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4651  0008A0  C0A5  F0A0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4652  0008A4  C0A6  F0A1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4653  0008A8  C09F  F09E         	movff	??_CANSetFilter+1,??_CANSetFilter
  4654  0008AC  C0A0  F09F         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4655  0008B0  C0A1  F0A0         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4656  0008B4  0100               	movlb	0	; () banked
  4657  0008B6  6BA1               	clrf	(??_CANSetFilter+3)& (0+255),b
  4658  0008B8  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4659  0008BC  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4660  0008C0  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4661  0008C4  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;inc\CANlib.h: 1006: RXF4EIDH = (unsigned char) tamp;
  4665  0008C8  C0A3  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;inc\CANlib.h: 1008: if (filter & 0x00010000)
  4669  0008CC  A01F               	btfss	CANSetFilter@filter+2,0,c
  4670  0008CE  D003               	goto	l517
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;inc\CANlib.h: 1009: RXF4SIDLbits.EID16 = 0x01;
  4674  0008D0  010F               	movlb	15	; () banked
  4675  0008D2  8111               	bsf	17,0,b	;volatile
  4676  0008D4  D002               	goto	l518
  4677  0008D6                     l517:
  4678                           
  4679                           ; BSR set to: 0
  4680                           ;inc\CANlib.h: 1010: else
  4681                           ;inc\CANlib.h: 1011: RXF4SIDLbits.EID16 = 0x00;
  4682  0008D6  010F               	movlb	15	; () banked
  4683  0008D8  9111               	bcf	17,0,b	;volatile
  4684  0008DA                     l518:
  4685                           
  4686                           ; BSR set to: 15
  4687                           ;inc\CANlib.h: 1013: if (filter & 0x00020000)
  4688  0008DA  A21F               	btfss	CANSetFilter@filter+2,1,c
  4689  0008DC  D003               	goto	l519
  4690                           
  4691                           ; BSR set to: 15
  4692                           ;inc\CANlib.h: 1014: RXF4SIDLbits.EID17 = 0x01;
  4693  0008DE  010F               	movlb	15	; () banked
  4694  0008E0  8311               	bsf	17,1,b	;volatile
  4695  0008E2  D002               	goto	l520
  4696  0008E4                     l519:
  4697                           
  4698                           ; BSR set to: 15
  4699                           ;inc\CANlib.h: 1015: else
  4700                           ;inc\CANlib.h: 1016: RXF4SIDLbits.EID17 = 0x00;
  4701  0008E4  010F               	movlb	15	; () banked
  4702  0008E6  9311               	bcf	17,1,b	;volatile
  4703  0008E8                     l520:
  4704                           
  4705                           ; BSR set to: 15
  4706                           ;inc\CANlib.h: 1018: if (filter & 0x00040000)
  4707  0008E8  A41F               	btfss	CANSetFilter@filter+2,2,c
  4708  0008EA  D003               	goto	l521
  4709                           
  4710                           ; BSR set to: 15
  4711                           ;inc\CANlib.h: 1019: RXF4SIDLbits.SID0 = 0x01;
  4712  0008EC  010F               	movlb	15	; () banked
  4713  0008EE  8B11               	bsf	17,5,b	;volatile
  4714  0008F0  D002               	goto	l522
  4715  0008F2                     l521:
  4716                           
  4717                           ; BSR set to: 15
  4718                           ;inc\CANlib.h: 1020: else
  4719                           ;inc\CANlib.h: 1021: RXF4SIDLbits.SID0 = 0x00;
  4720  0008F2  010F               	movlb	15	; () banked
  4721  0008F4  9B11               	bcf	17,5,b	;volatile
  4722  0008F6                     l522:
  4723                           
  4724                           ; BSR set to: 15
  4725                           ;inc\CANlib.h: 1023: if (filter & 0x00080000)
  4726  0008F6  A61F               	btfss	CANSetFilter@filter+2,3,c
  4727  0008F8  D003               	goto	l523
  4728                           
  4729                           ; BSR set to: 15
  4730                           ;inc\CANlib.h: 1024: RXF4SIDLbits.SID1 = 0x01;
  4731  0008FA  010F               	movlb	15	; () banked
  4732  0008FC  8D11               	bsf	17,6,b	;volatile
  4733  0008FE  D002               	goto	l524
  4734  000900                     l523:
  4735                           
  4736                           ; BSR set to: 15
  4737                           ;inc\CANlib.h: 1025: else
  4738                           ;inc\CANlib.h: 1026: RXF4SIDLbits.SID1 = 0x00;
  4739  000900  010F               	movlb	15	; () banked
  4740  000902  9D11               	bcf	17,6,b	;volatile
  4741  000904                     l524:
  4742                           
  4743                           ; BSR set to: 15
  4744                           ;inc\CANlib.h: 1028: if (filter & 0x00100000)
  4745  000904  A81F               	btfss	CANSetFilter@filter+2,4,c
  4746  000906  D003               	goto	l525
  4747                           
  4748                           ; BSR set to: 15
  4749                           ;inc\CANlib.h: 1029: RXF4SIDLbits.SID2 = 0x01 ;
  4750  000908  010F               	movlb	15	; () banked
  4751  00090A  8F11               	bsf	17,7,b	;volatile
  4752  00090C  D002               	goto	l4337
  4753  00090E                     l525:
  4754                           
  4755                           ; BSR set to: 15
  4756                           ;inc\CANlib.h: 1030: else
  4757                           ;inc\CANlib.h: 1031: RXF4SIDLbits.SID2 = 0x00 ;
  4758  00090E  010F               	movlb	15	; () banked
  4759  000910  9F11               	bcf	17,7,b	;volatile
  4760  000912                     l4337:
  4761                           
  4762                           ; BSR set to: 15
  4763                           ;inc\CANlib.h: 1033: tamp = (filter >> 21);
  4764  000912  C01D  F09E         	movff	CANSetFilter@filter,??_CANSetFilter
  4765  000916  C01E  F09F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4766  00091A  C01F  F0A0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4767  00091E  C020  F0A1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4768  000922  0E16               	movlw	22
  4769  000924  D006               	goto	u5750
  4770  000926                     u5755:
  4771  000926  0100               	movlb	0	; () banked
  4772  000928  90D8               	bcf	status,0,c
  4773  00092A  33A1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4774  00092C  33A0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4775  00092E  339F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4776  000930  339E               	rrcf	??_CANSetFilter& (0+255),f,b
  4777  000932                     u5750:
  4778  000932  2EE8               	decfsz	wreg,f,c
  4779  000934  D7F8               	goto	u5755
  4780  000936  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4781  00093A  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4782  00093E  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4783  000942  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4784                           
  4785                           ; BSR set to: 0
  4786                           ;inc\CANlib.h: 1034: tamp = tamp & 0x000000FF;
  4787  000946  0100               	movlb	0	; () banked
  4788  000948  51A3               	movf	CANSetFilter@tamp& (0+255),w,b
  4789  00094A  0100               	movlb	0	; () banked
  4790  00094C  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4791  00094E  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4792  000950  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4793  000952  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4794                           
  4795                           ; BSR set to: 0
  4796                           ;inc\CANlib.h: 1035: RXF4SIDH = (unsigned char) tamp;
  4797  000954  C0A3  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4798  000958                     l4343:
  4799                           
  4800                           ; BSR set to: 0
  4801                           ;inc\CANlib.h: 1036: }
  4802                           ;inc\CANlib.h: 1038: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  4803  000958  0E05               	movlw	5
  4804  00095A  0100               	movlb	0	; () banked
  4805  00095C  19A2               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4806  00095E  A4D8               	btfss	status,2,c
  4807  000960  0012               	return	
  4808                           
  4809                           ; BSR set to: 0
  4810  000962  0EF7               	movlw	247
  4811  000964  1821               	xorwf	CANSetFilter@type,w,c
  4812  000966  A4D8               	btfss	status,2,c
  4813  000968  0012               	return	
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;inc\CANlib.h: 1039: {
  4817                           ;inc\CANlib.h: 1040: RXF5SIDLbits.EXIDEN = 0x01;
  4818  00096A  010F               	movlb	15	; () banked
  4819  00096C  8715               	bsf	21,3,b	;volatile
  4820                           
  4821                           ; BSR set to: 15
  4822                           ;inc\CANlib.h: 1042: tamp = filter & 0x000000FF;
  4823  00096E  501D               	movf	CANSetFilter@filter,w,c
  4824  000970  0100               	movlb	0	; () banked
  4825  000972  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4826  000974  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4827  000976  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4828  000978  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4829                           
  4830                           ; BSR set to: 0
  4831                           ;inc\CANlib.h: 1043: RXF5EIDL = (unsigned char) tamp;
  4832  00097A  C0A3  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  4833                           
  4834                           ; BSR set to: 0
  4835                           ;inc\CANlib.h: 1045: tamp = filter & 0x0000FF00;
  4836  00097E  0E00               	movlw	0
  4837  000980  141D               	andwf	CANSetFilter@filter,w,c
  4838  000982  0100               	movlb	0	; () banked
  4839  000984  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4840  000986  0EFF               	movlw	255
  4841  000988  141E               	andwf	CANSetFilter@filter+1,w,c
  4842  00098A  0100               	movlb	0	; () banked
  4843  00098C  6FA4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4844  00098E  0E00               	movlw	0
  4845  000990  141F               	andwf	CANSetFilter@filter+2,w,c
  4846  000992  0100               	movlb	0	; () banked
  4847  000994  6FA5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4848  000996  0E00               	movlw	0
  4849  000998  1420               	andwf	CANSetFilter@filter+3,w,c
  4850  00099A  0100               	movlb	0	; () banked
  4851  00099C  6FA6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4852                           
  4853                           ; BSR set to: 0
  4854                           ;inc\CANlib.h: 1046: tamp = tamp >> 8;
  4855  00099E  C0A3  F09E         	movff	CANSetFilter@tamp,??_CANSetFilter
  4856  0009A2  C0A4  F09F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4857  0009A6  C0A5  F0A0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4858  0009AA  C0A6  F0A1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4859  0009AE  C09F  F09E         	movff	??_CANSetFilter+1,??_CANSetFilter
  4860  0009B2  C0A0  F09F         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4861  0009B6  C0A1  F0A0         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4862  0009BA  0100               	movlb	0	; () banked
  4863  0009BC  6BA1               	clrf	(??_CANSetFilter+3)& (0+255),b
  4864  0009BE  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4865  0009C2  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4866  0009C6  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4867  0009CA  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4868                           
  4869                           ; BSR set to: 0
  4870                           ;inc\CANlib.h: 1047: RXF5EIDH = (unsigned char) tamp;
  4871  0009CE  C0A3  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  4872                           
  4873                           ; BSR set to: 0
  4874                           ;inc\CANlib.h: 1049: if (filter & 0x00010000)
  4875  0009D2  A01F               	btfss	CANSetFilter@filter+2,0,c
  4876  0009D4  D003               	goto	l528
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;inc\CANlib.h: 1050: RXF5SIDLbits.EID16 = 0x01;
  4880  0009D6  010F               	movlb	15	; () banked
  4881  0009D8  8115               	bsf	21,0,b	;volatile
  4882  0009DA  D002               	goto	l529
  4883  0009DC                     l528:
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;inc\CANlib.h: 1051: else
  4887                           ;inc\CANlib.h: 1052: RXF5SIDLbits.EID16 = 0x00;
  4888  0009DC  010F               	movlb	15	; () banked
  4889  0009DE  9115               	bcf	21,0,b	;volatile
  4890  0009E0                     l529:
  4891                           
  4892                           ; BSR set to: 15
  4893                           ;inc\CANlib.h: 1054: if (filter & 0x00020000)
  4894  0009E0  A21F               	btfss	CANSetFilter@filter+2,1,c
  4895  0009E2  D003               	goto	l530
  4896                           
  4897                           ; BSR set to: 15
  4898                           ;inc\CANlib.h: 1055: RXF5SIDLbits.EID17 = 0x01;
  4899  0009E4  010F               	movlb	15	; () banked
  4900  0009E6  8315               	bsf	21,1,b	;volatile
  4901  0009E8  D002               	goto	l531
  4902  0009EA                     l530:
  4903                           
  4904                           ; BSR set to: 15
  4905                           ;inc\CANlib.h: 1056: else
  4906                           ;inc\CANlib.h: 1057: RXF5SIDLbits.EID17 = 0x00;
  4907  0009EA  010F               	movlb	15	; () banked
  4908  0009EC  9315               	bcf	21,1,b	;volatile
  4909  0009EE                     l531:
  4910                           
  4911                           ; BSR set to: 15
  4912                           ;inc\CANlib.h: 1059: if (filter & 0x00040000)
  4913  0009EE  A41F               	btfss	CANSetFilter@filter+2,2,c
  4914  0009F0  D003               	goto	l532
  4915                           
  4916                           ; BSR set to: 15
  4917                           ;inc\CANlib.h: 1060: RXF5SIDLbits.SID0 = 0x01;
  4918  0009F2  010F               	movlb	15	; () banked
  4919  0009F4  8B15               	bsf	21,5,b	;volatile
  4920  0009F6  D002               	goto	l533
  4921  0009F8                     l532:
  4922                           
  4923                           ; BSR set to: 15
  4924                           ;inc\CANlib.h: 1061: else
  4925                           ;inc\CANlib.h: 1062: RXF5SIDLbits.SID0 = 0x00;
  4926  0009F8  010F               	movlb	15	; () banked
  4927  0009FA  9B15               	bcf	21,5,b	;volatile
  4928  0009FC                     l533:
  4929                           
  4930                           ; BSR set to: 15
  4931                           ;inc\CANlib.h: 1064: if (filter & 0x00080000)
  4932  0009FC  A61F               	btfss	CANSetFilter@filter+2,3,c
  4933  0009FE  D003               	goto	l534
  4934                           
  4935                           ; BSR set to: 15
  4936                           ;inc\CANlib.h: 1065: RXF5SIDLbits.SID1 = 0x01;
  4937  000A00  010F               	movlb	15	; () banked
  4938  000A02  8D15               	bsf	21,6,b	;volatile
  4939  000A04  D002               	goto	l535
  4940  000A06                     l534:
  4941                           
  4942                           ; BSR set to: 15
  4943                           ;inc\CANlib.h: 1066: else
  4944                           ;inc\CANlib.h: 1067: RXF5SIDLbits.SID1 = 0x00;
  4945  000A06  010F               	movlb	15	; () banked
  4946  000A08  9D15               	bcf	21,6,b	;volatile
  4947  000A0A                     l535:
  4948                           
  4949                           ; BSR set to: 15
  4950                           ;inc\CANlib.h: 1069: if (filter & 0x00100000)
  4951  000A0A  A81F               	btfss	CANSetFilter@filter+2,4,c
  4952  000A0C  D003               	goto	l536
  4953                           
  4954                           ; BSR set to: 15
  4955                           ;inc\CANlib.h: 1070: RXF5SIDLbits.SID2 = 0x01 ;
  4956  000A0E  010F               	movlb	15	; () banked
  4957  000A10  8F15               	bsf	21,7,b	;volatile
  4958  000A12  D002               	goto	l4371
  4959  000A14                     l536:
  4960                           
  4961                           ; BSR set to: 15
  4962                           ;inc\CANlib.h: 1071: else
  4963                           ;inc\CANlib.h: 1072: RXF5SIDLbits.SID2 = 0x00 ;
  4964  000A14  010F               	movlb	15	; () banked
  4965  000A16  9F15               	bcf	21,7,b	;volatile
  4966  000A18                     l4371:
  4967                           
  4968                           ; BSR set to: 15
  4969                           ;inc\CANlib.h: 1074: tamp = (filter >> 21);
  4970  000A18  C01D  F09E         	movff	CANSetFilter@filter,??_CANSetFilter
  4971  000A1C  C01E  F09F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4972  000A20  C01F  F0A0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4973  000A24  C020  F0A1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4974  000A28  0E16               	movlw	22
  4975  000A2A  D006               	goto	u5830
  4976  000A2C                     u5835:
  4977  000A2C  0100               	movlb	0	; () banked
  4978  000A2E  90D8               	bcf	status,0,c
  4979  000A30  33A1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4980  000A32  33A0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4981  000A34  339F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4982  000A36  339E               	rrcf	??_CANSetFilter& (0+255),f,b
  4983  000A38                     u5830:
  4984  000A38  2EE8               	decfsz	wreg,f,c
  4985  000A3A  D7F8               	goto	u5835
  4986  000A3C  C09E  F0A3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4987  000A40  C09F  F0A4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4988  000A44  C0A0  F0A5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4989  000A48  C0A1  F0A6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4990                           
  4991                           ; BSR set to: 0
  4992                           ;inc\CANlib.h: 1075: tamp = tamp & 0x000000FF;
  4993  000A4C  0100               	movlb	0	; () banked
  4994  000A4E  51A3               	movf	CANSetFilter@tamp& (0+255),w,b
  4995  000A50  0100               	movlb	0	; () banked
  4996  000A52  6FA3               	movwf	CANSetFilter@tamp& (0+255),b
  4997  000A54  6BA4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4998  000A56  6BA5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4999  000A58  6BA6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;inc\CANlib.h: 1076: RXF5SIDH = (unsigned char) tamp;
  5003  000A5A  C0A3  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5004  000A5E  0012               	return	
  5005  000A60                     __end_of_CANSetFilter:
  5006                           	opt stack 0
  5007                           tblptru	equ	0xFF8
  5008                           tblptrh	equ	0xFF7
  5009                           tblptrl	equ	0xFF6
  5010                           tablat	equ	0xFF5
  5011                           prodh	equ	0xFF4
  5012                           prodl	equ	0xFF3
  5013                           intcon	equ	0xFF2
  5014                           postinc0	equ	0xFEE
  5015                           wreg	equ	0xFE8
  5016                           indf1	equ	0xFE7
  5017                           postinc1	equ	0xFE6
  5018                           postdec1	equ	0xFE5
  5019                           fsr1h	equ	0xFE2
  5020                           fsr1l	equ	0xFE1
  5021                           indf2	equ	0xFDF
  5022                           postinc2	equ	0xFDE
  5023                           fsr2h	equ	0xFDA
  5024                           fsr2l	equ	0xFD9
  5025                           status	equ	0xFD8
  5026                           
  5027 ;; *************** function _CANOperationMode *****************
  5028 ;; Defined at:
  5029 ;;		line 207 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;  mode            1    wreg     enum E16838
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;  mode            1   28[COMRAM] enum E16838
  5034 ;; Return value:  Size  Location     Type
  5035 ;;		None               void
  5036 ;; Registers used:
  5037 ;;		wreg, status,2, status,0
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5043 ;;      Params:         0       0       0       0
  5044 ;;      Locals:         1       0       0       0
  5045 ;;      Temps:          0       0       0       0
  5046 ;;      Totals:         1       0       0       0
  5047 ;;Total ram usage:        1 bytes
  5048 ;; Hardware stack levels used:    1
  5049 ;; Hardware stack levels required when called:    2
  5050 ;; This function calls:
  5051 ;;		Nothing
  5052 ;; This function is called by:
  5053 ;;		_CANInitialize
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text12
  5058  00247C                     __ptext12:
  5059                           	opt stack 0
  5060  00247C                     _CANOperationMode:
  5061                           	opt stack 26
  5062                           
  5063                           ; BSR set to: 0
  5064                           ;incstack = 0
  5065                           ;CANOperationMode@mode stored from wreg
  5066  00247C  6E1D               	movwf	CANOperationMode@mode,c
  5067                           
  5068                           ;inc\CANlib.h: 209: CANCON = mode;
  5069  00247E  C01D  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5070  002482                     l3967:
  5071  002482  506E               	movf	3950,w,c	;volatile
  5072  002484  0BE0               	andlw	224
  5073  002486  181D               	xorwf	CANOperationMode@mode,w,c
  5074  002488  B4D8               	btfsc	status,2,c
  5075  00248A  0012               	return	
  5076  00248C  D7FA               	goto	l3967
  5077  00248E                     __end_of_CANOperationMode:
  5078                           	opt stack 0
  5079                           tblptru	equ	0xFF8
  5080                           tblptrh	equ	0xFF7
  5081                           tblptrl	equ	0xFF6
  5082                           tablat	equ	0xFF5
  5083                           prodh	equ	0xFF4
  5084                           prodl	equ	0xFF3
  5085                           intcon	equ	0xFF2
  5086                           postinc0	equ	0xFEE
  5087                           wreg	equ	0xFE8
  5088                           indf1	equ	0xFE7
  5089                           postinc1	equ	0xFE6
  5090                           postdec1	equ	0xFE5
  5091                           fsr1h	equ	0xFE2
  5092                           fsr1l	equ	0xFE1
  5093                           indf2	equ	0xFDF
  5094                           postinc2	equ	0xFDE
  5095                           fsr2h	equ	0xFDA
  5096                           fsr2l	equ	0xFD9
  5097                           status	equ	0xFD8
  5098                           
  5099 ;; *************** function _can_interpreter *****************
  5100 ;; Defined at:
  5101 ;;		line 149 in file "CanToSerial.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;		None
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;		None
  5106 ;; Return value:  Size  Location     Type
  5107 ;;		None               void
  5108 ;; Registers used:
  5109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5110 ;; Tracked objects:
  5111 ;;		On entry : 0/0
  5112 ;;		On exit  : 0/0
  5113 ;;		Unchanged: 0/0
  5114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5115 ;;      Params:         0       0       0       0
  5116 ;;      Locals:         0       0       0       0
  5117 ;;      Temps:          0       8       0       0
  5118 ;;      Totals:         0       8       0       0
  5119 ;;Total ram usage:        8 bytes
  5120 ;; Hardware stack levels used:    1
  5121 ;; Hardware stack levels required when called:    3
  5122 ;; This function calls:
  5123 ;;		_CANisTxReady
  5124 ;;		_CANsendMessage
  5125 ;; This function is called by:
  5126 ;;		_main
  5127 ;; This function uses a non-reentrant model
  5128 ;;
  5129                           
  5130                           	psect	text13
  5131  001A3E                     __ptext13:
  5132                           	opt stack 0
  5133  001A3E                     _can_interpreter:
  5134                           	opt stack 27
  5135                           
  5136                           ;CanToSerial.c: 151: if (id == 0b00000000010) {
  5137                           
  5138                           ;incstack = 0
  5139  001A3E  0E02               	movlw	2
  5140  001A40  1822               	xorwf	_id,w,c	;volatile
  5141  001A42  1023               	iorwf	_id+1,w,c	;volatile
  5142  001A44  1024               	iorwf	_id+2,w,c	;volatile
  5143  001A46  1025               	iorwf	_id+3,w,c	;volatile
  5144  001A48  A4D8               	btfss	status,2,c
  5145  001A4A  D094               	goto	l4769
  5146                           
  5147                           ;CanToSerial.c: 152: if (RTR_Flag == 1) {
  5148  001A4C  A042               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
  5149  001A4E  D02C               	goto	l4753
  5150                           
  5151                           ;CanToSerial.c: 153: previousTimeCounter = timeCounter;
  5152  001A50  C02A  F026         	movff	_timeCounter,_previousTimeCounter	;volatile
  5153  001A54  C02B  F027         	movff	_timeCounter+1,_previousTimeCounter+1	;volatile
  5154  001A58  C02C  F028         	movff	_timeCounter+2,_previousTimeCounter+2	;volatile
  5155  001A5C  C02D  F029         	movff	_timeCounter+3,_previousTimeCounter+3	;volatile
  5156                           
  5157                           ;CanToSerial.c: 154: data[0] = 0x03;
  5158  001A60  0E03               	movlw	3
  5159  001A62  0100               	movlb	0	; () banked
  5160  001A64  6F86               	movwf	_data& (0+255),b
  5161  001A66                     l4741:
  5162  001A66  EC1B  F012         	call	_CANisTxReady	;wreg free
  5163  001A6A  06E8               	decf	wreg,f,c
  5164  001A6C  A4D8               	btfss	status,2,c
  5165  001A6E  D7FB               	goto	l4741
  5166                           
  5167                           ;CanToSerial.c: 156: CANsendMessage(0b00000000010, data, 8, CAN_CONFIG_STD_MSG & CAN_NOR
      +                          MAL_TX_FRAME & CAN_TX_PRIORITY_0);
  5168  001A70  0E02               	movlw	2
  5169  001A72  0100               	movlb	0	; () banked
  5170  001A74  6F9E               	movwf	CANsendMessage@identifier& (0+255),b
  5171  001A76  0E00               	movlw	0
  5172  001A78  6F9F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  5173  001A7A  0E00               	movlw	0
  5174  001A7C  6FA0               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  5175  001A7E  0E00               	movlw	0
  5176  001A80  6FA1               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  5177  001A82  0E86               	movlw	low _data
  5178  001A84  0100               	movlb	0	; () banked
  5179  001A86  6FA2               	movwf	CANsendMessage@data& (0+255),b
  5180  001A88  0E00               	movlw	high _data
  5181  001A8A  0100               	movlb	0	; () banked
  5182  001A8C  6FA3               	movwf	(CANsendMessage@data+1)& (0+255),b
  5183  001A8E  0E08               	movlw	8
  5184  001A90  0100               	movlb	0	; () banked
  5185  001A92  6FA4               	movwf	CANsendMessage@dataLength& (0+255),b
  5186  001A94  0EBC               	movlw	188
  5187  001A96  0100               	movlb	0	; () banked
  5188  001A98  6FA5               	movwf	CANsendMessage@flags& (0+255),b
  5189  001A9A  EC30  F005         	call	_CANsendMessage	;wreg free
  5190                           
  5191                           ;CanToSerial.c: 157: LATDbits.LATD4 = 1;
  5192  001A9E  888C               	bsf	3980,4,c	;volatile
  5193                           
  5194                           ;CanToSerial.c: 158: LATDbits.LATD5 = 0;
  5195  001AA0  9A8C               	bcf	3980,5,c	;volatile
  5196                           
  5197                           ;CanToSerial.c: 159: LATDbits.LATD6 = 0;
  5198  001AA2  9C8C               	bcf	3980,6,c	;volatile
  5199                           
  5200                           ;CanToSerial.c: 160: LATDbits.LATD2 = 1;
  5201  001AA4  848C               	bsf	3980,2,c	;volatile
  5202                           
  5203                           ;CanToSerial.c: 161: } else {
  5204  001AA6  D00D               	goto	l4761
  5205  001AA8                     l4753:
  5206                           
  5207                           ;CanToSerial.c: 162: if (data[0] == 0x01) {
  5208  001AA8  0100               	movlb	0	; () banked
  5209  001AAA  0586               	decf	_data& (0+255),w,b
  5210  001AAC  A4D8               	btfss	status,2,c
  5211  001AAE  D002               	goto	l4757
  5212                           
  5213                           ; BSR set to: 0
  5214                           ;CanToSerial.c: 163: LATDbits.LATD5 = 1;
  5215  001AB0  8A8C               	bsf	3980,5,c	;volatile
  5216                           
  5217                           ;CanToSerial.c: 164: PORTCbits.RC5 = 0;
  5218  001AB2  9A82               	bcf	3970,5,c	;volatile
  5219  001AB4                     l4757:
  5220                           
  5221                           ; BSR set to: 0
  5222                           ;CanToSerial.c: 165: }
  5223                           ;CanToSerial.c: 166: if (data[0] == 0x02) {
  5224  001AB4  0E02               	movlw	2
  5225  001AB6  0100               	movlb	0	; () banked
  5226  001AB8  1986               	xorwf	_data& (0+255),w,b
  5227  001ABA  A4D8               	btfss	status,2,c
  5228  001ABC  D002               	goto	l4761
  5229                           
  5230                           ; BSR set to: 0
  5231                           ;CanToSerial.c: 167: LATDbits.LATD6 = 1;
  5232  001ABE  8C8C               	bsf	3980,6,c	;volatile
  5233                           
  5234                           ;CanToSerial.c: 168: PORTCbits.RC4 = 0;
  5235  001AC0  9882               	bcf	3970,4,c	;volatile
  5236  001AC2                     l4761:
  5237                           
  5238                           ;CanToSerial.c: 169: }
  5239                           ;CanToSerial.c: 170: }
  5240                           ;CanToSerial.c: 171: if (previousTimeCounter - timeCounter > 450) {
  5241  001AC2  C02A  F0AA         	movff	_timeCounter,??_can_interpreter	;volatile
  5242  001AC6  C02B  F0AB         	movff	_timeCounter+1,??_can_interpreter+1	;volatile
  5243  001ACA  C02C  F0AC         	movff	_timeCounter+2,??_can_interpreter+2	;volatile
  5244  001ACE  C02D  F0AD         	movff	_timeCounter+3,??_can_interpreter+3	;volatile
  5245  001AD2  0100               	movlb	0	; () banked
  5246  001AD4  1FAA               	comf	??_can_interpreter& (0+255),f,b
  5247  001AD6  1FAB               	comf	(??_can_interpreter+1)& (0+255),f,b
  5248  001AD8  1FAC               	comf	(??_can_interpreter+2)& (0+255),f,b
  5249  001ADA  1FAD               	comf	(??_can_interpreter+3)& (0+255),f,b
  5250  001ADC  2BAA               	incf	??_can_interpreter& (0+255),f,b
  5251  001ADE  0E00               	movlw	0
  5252  001AE0  23AB               	addwfc	(??_can_interpreter+1)& (0+255),f,b
  5253  001AE2  23AC               	addwfc	(??_can_interpreter+2)& (0+255),f,b
  5254  001AE4  23AD               	addwfc	(??_can_interpreter+3)& (0+255),f,b
  5255  001AE6  5026               	movf	_previousTimeCounter,w,c
  5256  001AE8  0100               	movlb	0	; () banked
  5257  001AEA  25AA               	addwf	??_can_interpreter& (0+255),w,b
  5258  001AEC  0100               	movlb	0	; () banked
  5259  001AEE  6FAE               	movwf	(??_can_interpreter+4)& (0+255),b
  5260  001AF0  5027               	movf	_previousTimeCounter+1,w,c
  5261  001AF2  0100               	movlb	0	; () banked
  5262  001AF4  21AB               	addwfc	(??_can_interpreter+1)& (0+255),w,b
  5263  001AF6  0100               	movlb	0	; () banked
  5264  001AF8  6FAF               	movwf	(??_can_interpreter+5)& (0+255),b
  5265  001AFA  5028               	movf	_previousTimeCounter+2,w,c
  5266  001AFC  0100               	movlb	0	; () banked
  5267  001AFE  21AC               	addwfc	(??_can_interpreter+2)& (0+255),w,b
  5268  001B00  0100               	movlb	0	; () banked
  5269  001B02  6FB0               	movwf	(??_can_interpreter+6)& (0+255),b
  5270  001B04  5029               	movf	_previousTimeCounter+3,w,c
  5271  001B06  0100               	movlb	0	; () banked
  5272  001B08  21AD               	addwfc	(??_can_interpreter+3)& (0+255),w,b
  5273  001B0A  0100               	movlb	0	; () banked
  5274  001B0C  6FB1               	movwf	(??_can_interpreter+7)& (0+255),b
  5275  001B0E  0100               	movlb	0	; () banked
  5276  001B10  51B1               	movf	(??_can_interpreter+7)& (0+255),w,b
  5277  001B12  0100               	movlb	0	; () banked
  5278  001B14  11B0               	iorwf	(??_can_interpreter+6)& (0+255),w,b
  5279  001B16  E108               	bnz	u6370
  5280  001B18  0EC3               	movlw	195
  5281  001B1A  0100               	movlb	0	; () banked
  5282  001B1C  5DAE               	subwf	(??_can_interpreter+4)& (0+255),w,b
  5283  001B1E  0E01               	movlw	1
  5284  001B20  0100               	movlb	0	; () banked
  5285  001B22  59AF               	subwfb	(??_can_interpreter+5)& (0+255),w,b
  5286  001B24  A0D8               	btfss	status,0,c
  5287  001B26  D026               	goto	l4769
  5288  001B28                     u6370:
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;CanToSerial.c: 172: SerialOutput[4] = LATDbits.LATD6;
  5292  001B28  0E00               	movlw	0
  5293  001B2A  BC8C               	btfsc	3980,6,c	;volatile
  5294  001B2C  0E01               	movlw	1
  5295  001B2E  6E3E               	movwf	_SerialOutput+4,c
  5296                           
  5297                           ; BSR set to: 0
  5298                           ;CanToSerial.c: 173: SerialOutput[4] = ((SerialOutput[5] < 1) | LATDbits.LATD5);
  5299  001B30  AA8C               	btfss	3980,5,c	;volatile
  5300  001B32  D004               	goto	u6380
  5301  001B34  0100               	movlb	0	; () banked
  5302  001B36  6BAA               	clrf	??_can_interpreter& (0+255),b
  5303  001B38  2BAA               	incf	??_can_interpreter& (0+255),f,b
  5304  001B3A  D002               	goto	u6388
  5305  001B3C                     u6380:
  5306  001B3C  0100               	movlb	0	; () banked
  5307  001B3E  6BAA               	clrf	??_can_interpreter& (0+255),b
  5308  001B40                     u6388:
  5309  001B40  503F               	movf	_SerialOutput+5,w,c
  5310  001B42  A4D8               	btfss	status,2,c
  5311  001B44  D002               	goto	u6390
  5312  001B46  0E01               	movlw	1
  5313  001B48  D001               	goto	u6400
  5314  001B4A                     u6390:
  5315  001B4A  0E00               	movlw	0
  5316  001B4C                     u6400:
  5317  001B4C  0100               	movlb	0	; () banked
  5318  001B4E  11AA               	iorwf	??_can_interpreter& (0+255),w,b
  5319  001B50  6E3E               	movwf	_SerialOutput+4,c
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;CanToSerial.c: 174: SerialOutput[4] = ((SerialOutput[5] < 1) | LATDbits.LATD4);
  5323  001B52  A88C               	btfss	3980,4,c	;volatile
  5324  001B54  D004               	goto	u6410
  5325  001B56  0100               	movlb	0	; () banked
  5326  001B58  6BAA               	clrf	??_can_interpreter& (0+255),b
  5327  001B5A  2BAA               	incf	??_can_interpreter& (0+255),f,b
  5328  001B5C  D002               	goto	u6418
  5329  001B5E                     u6410:
  5330  001B5E  0100               	movlb	0	; () banked
  5331  001B60  6BAA               	clrf	??_can_interpreter& (0+255),b
  5332  001B62                     u6418:
  5333  001B62  503F               	movf	_SerialOutput+5,w,c
  5334  001B64  A4D8               	btfss	status,2,c
  5335  001B66  D002               	goto	u6420
  5336  001B68  0E01               	movlw	1
  5337  001B6A  D001               	goto	u6430
  5338  001B6C                     u6420:
  5339  001B6C  0E00               	movlw	0
  5340  001B6E                     u6430:
  5341  001B6E  0100               	movlb	0	; () banked
  5342  001B70  11AA               	iorwf	??_can_interpreter& (0+255),w,b
  5343  001B72  6E3E               	movwf	_SerialOutput+4,c
  5344  001B74                     l4769:
  5345                           
  5346                           ;CanToSerial.c: 175: }
  5347                           ;CanToSerial.c: 176: }
  5348                           ;CanToSerial.c: 177: if ((id == 0b00000000110)&&(RTR_Flag == 0)) {
  5349  001B74  0E06               	movlw	6
  5350  001B76  1822               	xorwf	_id,w,c	;volatile
  5351  001B78  1023               	iorwf	_id+1,w,c	;volatile
  5352  001B7A  1024               	iorwf	_id+2,w,c	;volatile
  5353  001B7C  1025               	iorwf	_id+3,w,c	;volatile
  5354  001B7E  B4D8               	btfsc	status,2,c
  5355  001B80  B042               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
  5356  001B82  D047               	goto	l4785
  5357                           
  5358                           ;CanToSerial.c: 178: left_speed = data[1];
  5359  001B84  C087  F030         	movff	_data+1,_left_speed
  5360  001B88  6A31               	clrf	_left_speed+1,c
  5361                           
  5362                           ;CanToSerial.c: 179: left_speed = ((left_speed << 8) | (data[0]));
  5363  001B8A  5030               	movf	_left_speed,w,c
  5364  001B8C  0100               	movlb	0	; () banked
  5365  001B8E  6FAA               	movwf	??_can_interpreter& (0+255),b
  5366  001B90  0100               	movlb	0	; () banked
  5367  001B92  5186               	movf	_data& (0+255),w,b
  5368  001B94  6E30               	movwf	_left_speed,c
  5369  001B96  C0AA  F031         	movff	??_can_interpreter,_left_speed+1
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;CanToSerial.c: 180: right_speed = data[3];
  5373  001B9A  C089  F032         	movff	_data+3,_right_speed
  5374  001B9E  6A33               	clrf	_right_speed+1,c
  5375                           
  5376                           ;CanToSerial.c: 181: right_speed = ((right_speed << 8) | (data[2]));
  5377  001BA0  5032               	movf	_right_speed,w,c
  5378  001BA2  0100               	movlb	0	; () banked
  5379  001BA4  6FAA               	movwf	??_can_interpreter& (0+255),b
  5380  001BA6  0100               	movlb	0	; () banked
  5381  001BA8  5188               	movf	(_data+2)& (0+255),w,b
  5382  001BAA  6E32               	movwf	_right_speed,c
  5383  001BAC  C0AA  F033         	movff	??_can_interpreter,_right_speed+1
  5384                           
  5385                           ; BSR set to: 0
  5386                           ;CanToSerial.c: 182: SerialOutput[3] = ((left_speed + right_speed) / 2);
  5387  001BB0  5032               	movf	_right_speed,w,c
  5388  001BB2  2430               	addwf	_left_speed,w,c
  5389  001BB4  0100               	movlb	0	; () banked
  5390  001BB6  6FAA               	movwf	??_can_interpreter& (0+255),b
  5391  001BB8  5033               	movf	_right_speed+1,w,c
  5392  001BBA  2031               	addwfc	_left_speed+1,w,c
  5393  001BBC  0100               	movlb	0	; () banked
  5394  001BBE  6FAB               	movwf	(??_can_interpreter+1)& (0+255),b
  5395  001BC0  90D8               	bcf	status,0,c
  5396  001BC2  0100               	movlb	0	; () banked
  5397  001BC4  31AB               	rrcf	(??_can_interpreter+1)& (0+255),w,b
  5398  001BC6  0100               	movlb	0	; () banked
  5399  001BC8  6FAD               	movwf	(??_can_interpreter+3)& (0+255),b
  5400  001BCA  0100               	movlb	0	; () banked
  5401  001BCC  31AA               	rrcf	??_can_interpreter& (0+255),w,b
  5402  001BCE  0100               	movlb	0	; () banked
  5403  001BD0  6FAC               	movwf	(??_can_interpreter+2)& (0+255),b
  5404  001BD2  0100               	movlb	0	; () banked
  5405  001BD4  51AC               	movf	(??_can_interpreter+2)& (0+255),w,b
  5406  001BD6  6E3D               	movwf	_SerialOutput+3,c
  5407                           
  5408                           ; BSR set to: 0
  5409                           ;CanToSerial.c: 183: SerialOutput[2] = (((left_speed + right_speed) / 2) >> 8);
  5410  001BD8  5032               	movf	_right_speed,w,c
  5411  001BDA  2430               	addwf	_left_speed,w,c
  5412  001BDC  0100               	movlb	0	; () banked
  5413  001BDE  6FAA               	movwf	??_can_interpreter& (0+255),b
  5414  001BE0  5033               	movf	_right_speed+1,w,c
  5415  001BE2  2031               	addwfc	_left_speed+1,w,c
  5416  001BE4  0100               	movlb	0	; () banked
  5417  001BE6  6FAB               	movwf	(??_can_interpreter+1)& (0+255),b
  5418  001BE8  90D8               	bcf	status,0,c
  5419  001BEA  0100               	movlb	0	; () banked
  5420  001BEC  31AB               	rrcf	(??_can_interpreter+1)& (0+255),w,b
  5421  001BEE  0100               	movlb	0	; () banked
  5422  001BF0  6FAD               	movwf	(??_can_interpreter+3)& (0+255),b
  5423  001BF2  0100               	movlb	0	; () banked
  5424  001BF4  31AA               	rrcf	??_can_interpreter& (0+255),w,b
  5425  001BF6  0100               	movlb	0	; () banked
  5426  001BF8  6FAC               	movwf	(??_can_interpreter+2)& (0+255),b
  5427  001BFA  C0AD  F0AC         	movff	??_can_interpreter+3,??_can_interpreter+2
  5428  001BFE  0100               	movlb	0	; () banked
  5429  001C00  6BAD               	clrf	(??_can_interpreter+3)& (0+255),b
  5430  001C02  0100               	movlb	0	; () banked
  5431  001C04  51AC               	movf	(??_can_interpreter+2)& (0+255),w,b
  5432  001C06  6E3C               	movwf	_SerialOutput+2,c
  5433                           
  5434                           ;CanToSerial.c: 184: if (SerialOutput[2] == 0) {
  5435  001C08  503C               	movf	_SerialOutput+2,w,c
  5436  001C0A  A4D8               	btfss	status,2,c
  5437  001C0C  D002               	goto	l4785
  5438                           
  5439                           ; BSR set to: 0
  5440                           ;CanToSerial.c: 185: SerialOutput[2] = 0b10000000;
  5441  001C0E  0E80               	movlw	128
  5442  001C10  6E3C               	movwf	_SerialOutput+2,c
  5443  001C12                     l4785:
  5444                           
  5445                           ;CanToSerial.c: 186: }
  5446                           ;CanToSerial.c: 187: }
  5447                           ;CanToSerial.c: 188: if (id == 0b00000001001) {
  5448  001C12  0E09               	movlw	9
  5449  001C14  1822               	xorwf	_id,w,c	;volatile
  5450  001C16  1023               	iorwf	_id+1,w,c	;volatile
  5451  001C18  1024               	iorwf	_id+2,w,c	;volatile
  5452  001C1A  1025               	iorwf	_id+3,w,c	;volatile
  5453  001C1C  A4D8               	btfss	status,2,c
  5454  001C1E  0012               	return	
  5455                           
  5456                           ;CanToSerial.c: 189: SerialOutput[5] = data[0];
  5457  001C20  C086  F03F         	movff	_data,_SerialOutput+5
  5458  001C24  0012               	return	
  5459  001C26                     __end_of_can_interpreter:
  5460                           	opt stack 0
  5461                           tblptru	equ	0xFF8
  5462                           tblptrh	equ	0xFF7
  5463                           tblptrl	equ	0xFF6
  5464                           tablat	equ	0xFF5
  5465                           prodh	equ	0xFF4
  5466                           prodl	equ	0xFF3
  5467                           intcon	equ	0xFF2
  5468                           postinc0	equ	0xFEE
  5469                           wreg	equ	0xFE8
  5470                           indf1	equ	0xFE7
  5471                           postinc1	equ	0xFE6
  5472                           postdec1	equ	0xFE5
  5473                           fsr1h	equ	0xFE2
  5474                           fsr1l	equ	0xFE1
  5475                           indf2	equ	0xFDF
  5476                           postinc2	equ	0xFDE
  5477                           fsr2h	equ	0xFDA
  5478                           fsr2l	equ	0xFD9
  5479                           status	equ	0xFD8
  5480                           
  5481 ;; *************** function _CANsendMessage *****************
  5482 ;; Defined at:
  5483 ;;		line 295 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  5484 ;; Parameters:    Size  Location     Type
  5485 ;;  identifier      4    0[BANK0 ] unsigned long 
  5486 ;;  data            2    4[BANK0 ] PTR unsigned char 
  5487 ;;		 -> analogic_brake(8), set_speed(8), set_steering(8), data(8), 
  5488 ;;  dataLength      1    6[BANK0 ] unsigned char 
  5489 ;;  flags           1    7[BANK0 ] enum E16866
  5490 ;; Auto vars:     Size  Location     Type
  5491 ;;  tamp            4    8[BANK0 ] unsigned long 
  5492 ;; Return value:  Size  Location     Type
  5493 ;;		None               void
  5494 ;; Registers used:
  5495 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5496 ;; Tracked objects:
  5497 ;;		On entry : 0/0
  5498 ;;		On exit  : 0/0
  5499 ;;		Unchanged: 0/0
  5500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5501 ;;      Params:         0       8       0       0
  5502 ;;      Locals:         0       4       0       0
  5503 ;;      Temps:          4       0       0       0
  5504 ;;      Totals:         4      12       0       0
  5505 ;;Total ram usage:       16 bytes
  5506 ;; Hardware stack levels used:    1
  5507 ;; Hardware stack levels required when called:    2
  5508 ;; This function calls:
  5509 ;;		Nothing
  5510 ;; This function is called by:
  5511 ;;		_main
  5512 ;;		_can_interpreter
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515                           
  5516                           	psect	text14
  5517  000A60                     __ptext14:
  5518                           	opt stack 0
  5519  000A60                     _CANsendMessage:
  5520                           	opt stack 27
  5521                           
  5522                           ;inc\CANlib.h: 297: unsigned long tamp;
  5523                           ;inc\CANlib.h: 299: if (TXB0CONbits.TXREQ == 0)
  5524                           
  5525                           ;incstack = 0
  5526  000A60  010F               	movlb	15	; () banked
  5527  000A62  B740               	btfsc	64,3,b	;volatile
  5528  000A64  D13B               	goto	l373
  5529                           
  5530                           ; BSR set to: 15
  5531                           ;inc\CANlib.h: 300: { TXB0DLC = dataLength;
  5532  000A66  C0A4  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  5533                           
  5534                           ;inc\CANlib.h: 301: if (0b01000000 & flags)
  5535  000A6A  0100               	movlb	0	; () banked
  5536  000A6C  ADA5               	btfss	CANsendMessage@flags& (0+255),6,b
  5537  000A6E  D003               	goto	l374
  5538                           
  5539                           ; BSR set to: 0
  5540                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x01;
  5541  000A70  010F               	movlb	15	; () banked
  5542  000A72  8D45               	bsf	69,6,b	;volatile
  5543  000A74  D002               	goto	l375
  5544  000A76                     l374:
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;inc\CANlib.h: 303: else
  5548                           ;inc\CANlib.h: 304: TXB0DLCbits.TXRTR = 0x00;
  5549  000A76  010F               	movlb	15	; () banked
  5550  000A78  9D45               	bcf	69,6,b	;volatile
  5551  000A7A                     l375:
  5552                           
  5553                           ; BSR set to: 15
  5554                           ;inc\CANlib.h: 306: if (CAN_TX_FRAME_MASK & flags)
  5555  000A7A  0100               	movlb	0	; () banked
  5556  000A7C  A7A5               	btfss	CANsendMessage@flags& (0+255),3,b
  5557  000A7E  D077               	goto	l376
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;inc\CANlib.h: 307: {
  5561                           ;inc\CANlib.h: 309: tamp = identifier & 0x000000FF;
  5562  000A80  0100               	movlb	0	; () banked
  5563  000A82  519E               	movf	CANsendMessage@identifier& (0+255),w,b
  5564  000A84  0100               	movlb	0	; () banked
  5565  000A86  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  5566  000A88  6BA7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5567  000A8A  6BA8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5568  000A8C  6BA9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;inc\CANlib.h: 310: TXB0EIDL = (unsigned char) tamp;
  5572  000A8E  C0A6  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  5573                           
  5574                           ; BSR set to: 0
  5575                           ;inc\CANlib.h: 312: tamp = identifier & 0x0000FF00;
  5576  000A92  0E00               	movlw	0
  5577  000A94  0100               	movlb	0	; () banked
  5578  000A96  159E               	andwf	CANsendMessage@identifier& (0+255),w,b
  5579  000A98  0100               	movlb	0	; () banked
  5580  000A9A  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  5581  000A9C  0EFF               	movlw	255
  5582  000A9E  0100               	movlb	0	; () banked
  5583  000AA0  159F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5584  000AA2  0100               	movlb	0	; () banked
  5585  000AA4  6FA7               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5586  000AA6  0E00               	movlw	0
  5587  000AA8  0100               	movlb	0	; () banked
  5588  000AAA  15A0               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5589  000AAC  0100               	movlb	0	; () banked
  5590  000AAE  6FA8               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5591  000AB0  0E00               	movlw	0
  5592  000AB2  0100               	movlb	0	; () banked
  5593  000AB4  15A1               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5594  000AB6  0100               	movlb	0	; () banked
  5595  000AB8  6FA9               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;inc\CANlib.h: 313: tamp = tamp >> 8;
  5599  000ABA  C0A6  F01D         	movff	CANsendMessage@tamp,??_CANsendMessage
  5600  000ABE  C0A7  F01E         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5601  000AC2  C0A8  F01F         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5602  000AC6  C0A9  F020         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5603  000ACA  C01E  F01D         	movff	??_CANsendMessage+1,??_CANsendMessage
  5604  000ACE  C01F  F01E         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  5605  000AD2  C020  F01F         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  5606  000AD6  6A20               	clrf	??_CANsendMessage+3,c
  5607  000AD8  C01D  F0A6         	movff	??_CANsendMessage,CANsendMessage@tamp
  5608  000ADC  C01E  F0A7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5609  000AE0  C01F  F0A8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5610  000AE4  C020  F0A9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5611                           
  5612                           ; BSR set to: 0
  5613                           ;inc\CANlib.h: 314: TXB0EIDH = (unsigned char) tamp;
  5614  000AE8  C0A6  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  5615                           
  5616                           ; BSR set to: 0
  5617                           ;inc\CANlib.h: 316: TXB0SIDL = 0x00;
  5618  000AEC  0E00               	movlw	0
  5619  000AEE  010F               	movlb	15	; () banked
  5620  000AF0  6F42               	movwf	66,b	;volatile
  5621                           
  5622                           ; BSR set to: 15
  5623                           ;inc\CANlib.h: 317: TXB0SIDLbits.EXIDE = 0x01;
  5624  000AF2  010F               	movlb	15	; () banked
  5625  000AF4  8742               	bsf	66,3,b	;volatile
  5626                           
  5627                           ; BSR set to: 15
  5628                           ;inc\CANlib.h: 319: if (identifier & 0x00010000)
  5629  000AF6  0100               	movlb	0	; () banked
  5630  000AF8  A1A0               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  5631  000AFA  D002               	goto	l377
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID16 = 0x01;
  5635  000AFC  010F               	movlb	15	; () banked
  5636  000AFE  8142               	bsf	66,0,b	;volatile
  5637  000B00                     l377:
  5638                           
  5639                           ;inc\CANlib.h: 321: if (identifier & 0x00020000)
  5640  000B00  0100               	movlb	0	; () banked
  5641  000B02  A3A0               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  5642  000B04  D002               	goto	l378
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;inc\CANlib.h: 322: TXB0SIDLbits.EID17 = 0x01;
  5646  000B06  010F               	movlb	15	; () banked
  5647  000B08  8342               	bsf	66,1,b	;volatile
  5648  000B0A                     l378:
  5649                           
  5650                           ;inc\CANlib.h: 323: if (identifier & 0x00040000)
  5651  000B0A  0100               	movlb	0	; () banked
  5652  000B0C  A5A0               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  5653  000B0E  D002               	goto	l379
  5654                           
  5655                           ; BSR set to: 0
  5656                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID0 = 0x01;
  5657  000B10  010F               	movlb	15	; () banked
  5658  000B12  8B42               	bsf	66,5,b	;volatile
  5659  000B14                     l379:
  5660                           
  5661                           ;inc\CANlib.h: 325: if (identifier & 0x00080000)
  5662  000B14  0100               	movlb	0	; () banked
  5663  000B16  A7A0               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  5664  000B18  D002               	goto	l380
  5665                           
  5666                           ; BSR set to: 0
  5667                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID1 = 0x01;
  5668  000B1A  010F               	movlb	15	; () banked
  5669  000B1C  8D42               	bsf	66,6,b	;volatile
  5670  000B1E                     l380:
  5671                           
  5672                           ;inc\CANlib.h: 327: if (identifier & 0x00100000)
  5673  000B1E  0100               	movlb	0	; () banked
  5674  000B20  A9A0               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  5675  000B22  D002               	goto	l4475
  5676                           
  5677                           ; BSR set to: 0
  5678                           ;inc\CANlib.h: 328: TXB0SIDLbits.SID2 = 0x01;
  5679  000B24  010F               	movlb	15	; () banked
  5680  000B26  8F42               	bsf	66,7,b	;volatile
  5681  000B28                     l4475:
  5682                           
  5683                           ;inc\CANlib.h: 330: tamp = (identifier >> 21);
  5684  000B28  C09E  F01D         	movff	CANsendMessage@identifier,??_CANsendMessage
  5685  000B2C  C09F  F01E         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5686  000B30  C0A0  F01F         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5687  000B34  C0A1  F020         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5688  000B38  0E16               	movlw	22
  5689  000B3A  D005               	goto	u5980
  5690  000B3C                     u5985:
  5691  000B3C  90D8               	bcf	status,0,c
  5692  000B3E  3220               	rrcf	??_CANsendMessage+3,f,c
  5693  000B40  321F               	rrcf	??_CANsendMessage+2,f,c
  5694  000B42  321E               	rrcf	??_CANsendMessage+1,f,c
  5695  000B44  321D               	rrcf	??_CANsendMessage,f,c
  5696  000B46                     u5980:
  5697  000B46  2EE8               	decfsz	wreg,f,c
  5698  000B48  D7F9               	goto	u5985
  5699  000B4A  C01D  F0A6         	movff	??_CANsendMessage,CANsendMessage@tamp
  5700  000B4E  C01E  F0A7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5701  000B52  C01F  F0A8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5702  000B56  C020  F0A9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5703                           
  5704                           ;inc\CANlib.h: 331: tamp = tamp & 0x000000FF;
  5705  000B5A  0100               	movlb	0	; () banked
  5706  000B5C  51A6               	movf	CANsendMessage@tamp& (0+255),w,b
  5707  000B5E  0100               	movlb	0	; () banked
  5708  000B60  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  5709  000B62  6BA7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5710  000B64  6BA8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5711  000B66  6BA9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5712                           
  5713                           ; BSR set to: 0
  5714                           ;inc\CANlib.h: 332: TXB0SIDH = (unsigned char) tamp;
  5715  000B68  C0A6  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5716                           
  5717                           ;inc\CANlib.h: 333: }
  5718  000B6C  D057               	goto	l4495
  5719  000B6E                     l376:
  5720                           
  5721                           ; BSR set to: 0
  5722                           ;inc\CANlib.h: 335: else
  5723                           ;inc\CANlib.h: 337: {
  5724                           ;inc\CANlib.h: 338: TXB0SIDLbits.EXIDE = 0x00;
  5725  000B6E  010F               	movlb	15	; () banked
  5726  000B70  9742               	bcf	66,3,b	;volatile
  5727                           
  5728                           ; BSR set to: 15
  5729                           ;inc\CANlib.h: 340: tamp = (identifier >> 3);
  5730  000B72  C09E  F01D         	movff	CANsendMessage@identifier,??_CANsendMessage
  5731  000B76  C09F  F01E         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5732  000B7A  C0A0  F01F         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5733  000B7E  C0A1  F020         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5734  000B82  0E04               	movlw	4
  5735  000B84  D005               	goto	u5990
  5736  000B86                     u5995:
  5737  000B86  90D8               	bcf	status,0,c
  5738  000B88  3220               	rrcf	??_CANsendMessage+3,f,c
  5739  000B8A  321F               	rrcf	??_CANsendMessage+2,f,c
  5740  000B8C  321E               	rrcf	??_CANsendMessage+1,f,c
  5741  000B8E  321D               	rrcf	??_CANsendMessage,f,c
  5742  000B90                     u5990:
  5743  000B90  2EE8               	decfsz	wreg,f,c
  5744  000B92  D7F9               	goto	u5995
  5745  000B94  C01D  F0A6         	movff	??_CANsendMessage,CANsendMessage@tamp
  5746  000B98  C01E  F0A7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5747  000B9C  C01F  F0A8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5748  000BA0  C020  F0A9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5749                           
  5750                           ; BSR set to: 15
  5751                           ;inc\CANlib.h: 341: tamp = tamp & 0x000000FF;
  5752  000BA4  0100               	movlb	0	; () banked
  5753  000BA6  51A6               	movf	CANsendMessage@tamp& (0+255),w,b
  5754  000BA8  0100               	movlb	0	; () banked
  5755  000BAA  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  5756  000BAC  6BA7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5757  000BAE  6BA8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5758  000BB0  6BA9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5759                           
  5760                           ; BSR set to: 0
  5761                           ;inc\CANlib.h: 342: TXB0SIDH = (unsigned char) tamp;
  5762  000BB2  C0A6  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5763                           
  5764                           ; BSR set to: 0
  5765                           ;inc\CANlib.h: 344: tamp = identifier & 0x00000007;
  5766  000BB6  0E07               	movlw	7
  5767  000BB8  0100               	movlb	0	; () banked
  5768  000BBA  159E               	andwf	CANsendMessage@identifier& (0+255),w,b
  5769  000BBC  0100               	movlb	0	; () banked
  5770  000BBE  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  5771  000BC0  0E00               	movlw	0
  5772  000BC2  0100               	movlb	0	; () banked
  5773  000BC4  159F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5774  000BC6  0100               	movlb	0	; () banked
  5775  000BC8  6FA7               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5776  000BCA  0E00               	movlw	0
  5777  000BCC  0100               	movlb	0	; () banked
  5778  000BCE  15A0               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5779  000BD0  0100               	movlb	0	; () banked
  5780  000BD2  6FA8               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5781  000BD4  0E00               	movlw	0
  5782  000BD6  0100               	movlb	0	; () banked
  5783  000BD8  15A1               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5784  000BDA  0100               	movlb	0	; () banked
  5785  000BDC  6FA9               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5786                           
  5787                           ; BSR set to: 0
  5788                           ;inc\CANlib.h: 345: tamp = tamp << 5;
  5789  000BDE  C0A6  F01D         	movff	CANsendMessage@tamp,??_CANsendMessage
  5790  000BE2  C0A7  F01E         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5791  000BE6  C0A8  F01F         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5792  000BEA  C0A9  F020         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5793  000BEE  0E05               	movlw	5
  5794  000BF0                     u6005:
  5795  000BF0  90D8               	bcf	status,0,c
  5796  000BF2  361D               	rlcf	??_CANsendMessage,f,c
  5797  000BF4  361E               	rlcf	??_CANsendMessage+1,f,c
  5798  000BF6  361F               	rlcf	??_CANsendMessage+2,f,c
  5799  000BF8  3620               	rlcf	??_CANsendMessage+3,f,c
  5800  000BFA  2EE8               	decfsz	wreg,f,c
  5801  000BFC  D7F9               	goto	u6005
  5802  000BFE  C01D  F0A6         	movff	??_CANsendMessage,CANsendMessage@tamp
  5803  000C02  C01E  F0A7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5804  000C06  C01F  F0A8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5805  000C0A  C020  F0A9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5806                           
  5807                           ; BSR set to: 0
  5808                           ;inc\CANlib.h: 346: TXB0SIDL = TXB0SIDL & 0b00011111;
  5809  000C0E  010F               	movlb	15	; () banked
  5810  000C10  5142               	movf	66,w,b	;volatile
  5811  000C12  0B1F               	andlw	31
  5812  000C14  010F               	movlb	15	; () banked
  5813  000C16  6F42               	movwf	66,b	;volatile
  5814                           
  5815                           ; BSR set to: 15
  5816                           ;inc\CANlib.h: 347: TXB0SIDL = (unsigned char) tamp;
  5817  000C18  C0A6  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  5818  000C1C                     l4495:
  5819                           
  5820                           ;inc\CANlib.h: 348: }
  5821                           ;inc\CANlib.h: 350: if (0b00000001 & flags)
  5822  000C1C  0100               	movlb	0	; () banked
  5823  000C1E  A1A5               	btfss	CANsendMessage@flags& (0+255),0,b
  5824  000C20  D003               	goto	l383
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x01;
  5828  000C22  010F               	movlb	15	; () banked
  5829  000C24  8140               	bsf	64,0,b	;volatile
  5830  000C26  D002               	goto	l384
  5831  000C28                     l383:
  5832                           
  5833                           ; BSR set to: 0
  5834                           ;inc\CANlib.h: 352: else
  5835                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI0 = 0x00;
  5836  000C28  010F               	movlb	15	; () banked
  5837  000C2A  9140               	bcf	64,0,b	;volatile
  5838  000C2C                     l384:
  5839                           
  5840                           ; BSR set to: 15
  5841                           ;inc\CANlib.h: 354: if (0b00000010 & flags)
  5842  000C2C  0100               	movlb	0	; () banked
  5843  000C2E  A3A5               	btfss	CANsendMessage@flags& (0+255),1,b
  5844  000C30  D003               	goto	l385
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x01;
  5848  000C32  010F               	movlb	15	; () banked
  5849  000C34  8340               	bsf	64,1,b	;volatile
  5850  000C36  D002               	goto	l4501
  5851  000C38                     l385:
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;inc\CANlib.h: 356: else
  5855                           ;inc\CANlib.h: 357: TXB0CONbits.TXPRI1 = 0x00;
  5856  000C38  010F               	movlb	15	; () banked
  5857  000C3A  9340               	bcf	64,1,b	;volatile
  5858  000C3C                     l4501:
  5859                           
  5860                           ; BSR set to: 15
  5861                           ;inc\CANlib.h: 359: TXB0D0 = data[0];
  5862  000C3C  C0A2  FFD9         	movff	CANsendMessage@data,fsr2l
  5863  000C40  C0A3  FFDA         	movff	CANsendMessage@data+1,fsr2h
  5864  000C44  50DF               	movf	indf2,w,c
  5865  000C46  010F               	movlb	15	; () banked
  5866  000C48  6F46               	movwf	70,b	;volatile
  5867                           
  5868                           ; BSR set to: 15
  5869                           ;inc\CANlib.h: 360: TXB0D1 = data[1];
  5870  000C4A  0100               	movlb	0	; () banked
  5871  000C4C  EE20 F001          	lfsr	2,1
  5872  000C50  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5873  000C52  26D9               	addwf	fsr2l,f,c
  5874  000C54  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5875  000C56  22DA               	addwfc	fsr2h,f,c
  5876  000C58  50DF               	movf	indf2,w,c
  5877  000C5A  010F               	movlb	15	; () banked
  5878  000C5C  6F47               	movwf	71,b	;volatile
  5879                           
  5880                           ; BSR set to: 15
  5881                           ;inc\CANlib.h: 361: TXB0D2 = data[2];
  5882  000C5E  0100               	movlb	0	; () banked
  5883  000C60  EE20 F002          	lfsr	2,2
  5884  000C64  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5885  000C66  26D9               	addwf	fsr2l,f,c
  5886  000C68  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5887  000C6A  22DA               	addwfc	fsr2h,f,c
  5888  000C6C  50DF               	movf	indf2,w,c
  5889  000C6E  010F               	movlb	15	; () banked
  5890  000C70  6F48               	movwf	72,b	;volatile
  5891                           
  5892                           ; BSR set to: 15
  5893                           ;inc\CANlib.h: 362: TXB0D3 = data[3];
  5894  000C72  0100               	movlb	0	; () banked
  5895  000C74  EE20 F003          	lfsr	2,3
  5896  000C78  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5897  000C7A  26D9               	addwf	fsr2l,f,c
  5898  000C7C  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5899  000C7E  22DA               	addwfc	fsr2h,f,c
  5900  000C80  50DF               	movf	indf2,w,c
  5901  000C82  010F               	movlb	15	; () banked
  5902  000C84  6F49               	movwf	73,b	;volatile
  5903                           
  5904                           ; BSR set to: 15
  5905                           ;inc\CANlib.h: 363: TXB0D4 = data[4];
  5906  000C86  0100               	movlb	0	; () banked
  5907  000C88  EE20 F004          	lfsr	2,4
  5908  000C8C  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5909  000C8E  26D9               	addwf	fsr2l,f,c
  5910  000C90  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5911  000C92  22DA               	addwfc	fsr2h,f,c
  5912  000C94  50DF               	movf	indf2,w,c
  5913  000C96  010F               	movlb	15	; () banked
  5914  000C98  6F4A               	movwf	74,b	;volatile
  5915                           
  5916                           ; BSR set to: 15
  5917                           ;inc\CANlib.h: 364: TXB0D5 = data[5];
  5918  000C9A  0100               	movlb	0	; () banked
  5919  000C9C  EE20 F005          	lfsr	2,5
  5920  000CA0  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5921  000CA2  26D9               	addwf	fsr2l,f,c
  5922  000CA4  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5923  000CA6  22DA               	addwfc	fsr2h,f,c
  5924  000CA8  50DF               	movf	indf2,w,c
  5925  000CAA  010F               	movlb	15	; () banked
  5926  000CAC  6F4B               	movwf	75,b	;volatile
  5927                           
  5928                           ; BSR set to: 15
  5929                           ;inc\CANlib.h: 365: TXB0D6 = data[6];
  5930  000CAE  0100               	movlb	0	; () banked
  5931  000CB0  EE20 F006          	lfsr	2,6
  5932  000CB4  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5933  000CB6  26D9               	addwf	fsr2l,f,c
  5934  000CB8  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5935  000CBA  22DA               	addwfc	fsr2h,f,c
  5936  000CBC  50DF               	movf	indf2,w,c
  5937  000CBE  010F               	movlb	15	; () banked
  5938  000CC0  6F4C               	movwf	76,b	;volatile
  5939                           
  5940                           ; BSR set to: 15
  5941                           ;inc\CANlib.h: 366: TXB0D7 = data[7];
  5942  000CC2  0100               	movlb	0	; () banked
  5943  000CC4  EE20 F007          	lfsr	2,7
  5944  000CC8  51A2               	movf	CANsendMessage@data& (0+255),w,b
  5945  000CCA  26D9               	addwf	fsr2l,f,c
  5946  000CCC  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5947  000CCE  22DA               	addwfc	fsr2h,f,c
  5948  000CD0  50DF               	movf	indf2,w,c
  5949  000CD2  010F               	movlb	15	; () banked
  5950  000CD4  6F4D               	movwf	77,b	;volatile
  5951                           
  5952                           ; BSR set to: 15
  5953                           ;inc\CANlib.h: 368: TXB0CONbits.TXREQ = 0x01;
  5954  000CD6  010F               	movlb	15	; () banked
  5955  000CD8  8740               	bsf	64,3,b	;volatile
  5956                           
  5957                           ; BSR set to: 15
  5958                           ;inc\CANlib.h: 369: return;
  5959  000CDA  0012               	return	
  5960  000CDC                     l373:
  5961                           
  5962                           ; BSR set to: 15
  5963                           ;inc\CANlib.h: 370: }
  5964                           ;inc\CANlib.h: 374: if (TXB1CONbits.TXREQ == 0)
  5965  000CDC  010F               	movlb	15	; () banked
  5966  000CDE  B730               	btfsc	48,3,b	;volatile
  5967  000CE0  D13B               	goto	l388
  5968                           
  5969                           ; BSR set to: 15
  5970                           ;inc\CANlib.h: 375: { TXB1DLC = dataLength;
  5971  000CE2  C0A4  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  5972                           
  5973                           ;inc\CANlib.h: 377: if (0b01000000 & flags)
  5974  000CE6  0100               	movlb	0	; () banked
  5975  000CE8  ADA5               	btfss	CANsendMessage@flags& (0+255),6,b
  5976  000CEA  D003               	goto	l389
  5977                           
  5978                           ; BSR set to: 0
  5979                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x01;
  5980  000CEC  010F               	movlb	15	; () banked
  5981  000CEE  8D35               	bsf	53,6,b	;volatile
  5982  000CF0  D002               	goto	l390
  5983  000CF2                     l389:
  5984                           
  5985                           ; BSR set to: 0
  5986                           ;inc\CANlib.h: 379: else
  5987                           ;inc\CANlib.h: 380: TXB1DLCbits.TXRTR = 0x00;
  5988  000CF2  010F               	movlb	15	; () banked
  5989  000CF4  9D35               	bcf	53,6,b	;volatile
  5990  000CF6                     l390:
  5991                           
  5992                           ; BSR set to: 15
  5993                           ;inc\CANlib.h: 382: if (CAN_TX_FRAME_MASK & flags)
  5994  000CF6  0100               	movlb	0	; () banked
  5995  000CF8  A7A5               	btfss	CANsendMessage@flags& (0+255),3,b
  5996  000CFA  D077               	goto	l391
  5997                           
  5998                           ; BSR set to: 0
  5999                           ;inc\CANlib.h: 383: {
  6000                           ;inc\CANlib.h: 384: tamp = identifier & 0x000000FF;
  6001  000CFC  0100               	movlb	0	; () banked
  6002  000CFE  519E               	movf	CANsendMessage@identifier& (0+255),w,b
  6003  000D00  0100               	movlb	0	; () banked
  6004  000D02  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  6005  000D04  6BA7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6006  000D06  6BA8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6007  000D08  6BA9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6008                           
  6009                           ; BSR set to: 0
  6010                           ;inc\CANlib.h: 385: TXB1EIDL = (unsigned char) tamp;
  6011  000D0A  C0A6  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  6012                           
  6013                           ; BSR set to: 0
  6014                           ;inc\CANlib.h: 387: tamp = identifier & 0x0000FF00;
  6015  000D0E  0E00               	movlw	0
  6016  000D10  0100               	movlb	0	; () banked
  6017  000D12  159E               	andwf	CANsendMessage@identifier& (0+255),w,b
  6018  000D14  0100               	movlb	0	; () banked
  6019  000D16  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  6020  000D18  0EFF               	movlw	255
  6021  000D1A  0100               	movlb	0	; () banked
  6022  000D1C  159F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6023  000D1E  0100               	movlb	0	; () banked
  6024  000D20  6FA7               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6025  000D22  0E00               	movlw	0
  6026  000D24  0100               	movlb	0	; () banked
  6027  000D26  15A0               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6028  000D28  0100               	movlb	0	; () banked
  6029  000D2A  6FA8               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6030  000D2C  0E00               	movlw	0
  6031  000D2E  0100               	movlb	0	; () banked
  6032  000D30  15A1               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6033  000D32  0100               	movlb	0	; () banked
  6034  000D34  6FA9               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6035                           
  6036                           ; BSR set to: 0
  6037                           ;inc\CANlib.h: 388: tamp = tamp >> 8;
  6038  000D36  C0A6  F01D         	movff	CANsendMessage@tamp,??_CANsendMessage
  6039  000D3A  C0A7  F01E         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6040  000D3E  C0A8  F01F         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6041  000D42  C0A9  F020         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6042  000D46  C01E  F01D         	movff	??_CANsendMessage+1,??_CANsendMessage
  6043  000D4A  C01F  F01E         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6044  000D4E  C020  F01F         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6045  000D52  6A20               	clrf	??_CANsendMessage+3,c
  6046  000D54  C01D  F0A6         	movff	??_CANsendMessage,CANsendMessage@tamp
  6047  000D58  C01E  F0A7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6048  000D5C  C01F  F0A8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6049  000D60  C020  F0A9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6050                           
  6051                           ; BSR set to: 0
  6052                           ;inc\CANlib.h: 389: TXB1EIDH = (unsigned char) tamp;
  6053  000D64  C0A6  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;inc\CANlib.h: 391: TXB1SIDL = 0x00;
  6057  000D68  0E00               	movlw	0
  6058  000D6A  010F               	movlb	15	; () banked
  6059  000D6C  6F32               	movwf	50,b	;volatile
  6060                           
  6061                           ; BSR set to: 15
  6062                           ;inc\CANlib.h: 392: TXB1SIDLbits.EXIDE = 0x01;
  6063  000D6E  010F               	movlb	15	; () banked
  6064  000D70  8732               	bsf	50,3,b	;volatile
  6065                           
  6066                           ; BSR set to: 15
  6067                           ;inc\CANlib.h: 394: if (identifier & 0x00010000)
  6068  000D72  0100               	movlb	0	; () banked
  6069  000D74  A1A0               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6070  000D76  D002               	goto	l392
  6071                           
  6072                           ; BSR set to: 0
  6073                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID16 = 0x01;
  6074  000D78  010F               	movlb	15	; () banked
  6075  000D7A  8132               	bsf	50,0,b	;volatile
  6076  000D7C                     l392:
  6077                           
  6078                           ;inc\CANlib.h: 396: if (identifier & 0x00020000)
  6079  000D7C  0100               	movlb	0	; () banked
  6080  000D7E  A3A0               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6081  000D80  D002               	goto	l393
  6082                           
  6083                           ; BSR set to: 0
  6084                           ;inc\CANlib.h: 397: TXB1SIDLbits.EID17 = 0x01;
  6085  000D82  010F               	movlb	15	; () banked
  6086  000D84  8332               	bsf	50,1,b	;volatile
  6087  000D86                     l393:
  6088                           
  6089                           ;inc\CANlib.h: 398: if (identifier & 0x00040000)
  6090  000D86  0100               	movlb	0	; () banked
  6091  000D88  A5A0               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6092  000D8A  D002               	goto	l394
  6093                           
  6094                           ; BSR set to: 0
  6095                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID0 = 0x01;
  6096  000D8C  010F               	movlb	15	; () banked
  6097  000D8E  8B32               	bsf	50,5,b	;volatile
  6098  000D90                     l394:
  6099                           
  6100                           ;inc\CANlib.h: 400: if (identifier & 0x00080000)
  6101  000D90  0100               	movlb	0	; () banked
  6102  000D92  A7A0               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6103  000D94  D002               	goto	l395
  6104                           
  6105                           ; BSR set to: 0
  6106                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID1 = 0x01;
  6107  000D96  010F               	movlb	15	; () banked
  6108  000D98  8D32               	bsf	50,6,b	;volatile
  6109  000D9A                     l395:
  6110                           
  6111                           ;inc\CANlib.h: 402: if (identifier & 0x00100000)
  6112  000D9A  0100               	movlb	0	; () banked
  6113  000D9C  A9A0               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6114  000D9E  D002               	goto	l4551
  6115                           
  6116                           ; BSR set to: 0
  6117                           ;inc\CANlib.h: 403: TXB1SIDLbits.SID2 = 0x01;
  6118  000DA0  010F               	movlb	15	; () banked
  6119  000DA2  8F32               	bsf	50,7,b	;volatile
  6120  000DA4                     l4551:
  6121                           
  6122                           ;inc\CANlib.h: 405: tamp = (identifier >> 21);
  6123  000DA4  C09E  F01D         	movff	CANsendMessage@identifier,??_CANsendMessage
  6124  000DA8  C09F  F01E         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6125  000DAC  C0A0  F01F         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6126  000DB0  C0A1  F020         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6127  000DB4  0E16               	movlw	22
  6128  000DB6  D005               	goto	u6110
  6129  000DB8                     u6115:
  6130  000DB8  90D8               	bcf	status,0,c
  6131  000DBA  3220               	rrcf	??_CANsendMessage+3,f,c
  6132  000DBC  321F               	rrcf	??_CANsendMessage+2,f,c
  6133  000DBE  321E               	rrcf	??_CANsendMessage+1,f,c
  6134  000DC0  321D               	rrcf	??_CANsendMessage,f,c
  6135  000DC2                     u6110:
  6136  000DC2  2EE8               	decfsz	wreg,f,c
  6137  000DC4  D7F9               	goto	u6115
  6138  000DC6  C01D  F0A6         	movff	??_CANsendMessage,CANsendMessage@tamp
  6139  000DCA  C01E  F0A7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6140  000DCE  C01F  F0A8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6141  000DD2  C020  F0A9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6142                           
  6143                           ;inc\CANlib.h: 406: tamp = tamp & 0x000000FF;
  6144  000DD6  0100               	movlb	0	; () banked
  6145  000DD8  51A6               	movf	CANsendMessage@tamp& (0+255),w,b
  6146  000DDA  0100               	movlb	0	; () banked
  6147  000DDC  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  6148  000DDE  6BA7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6149  000DE0  6BA8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6150  000DE2  6BA9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6151                           
  6152                           ; BSR set to: 0
  6153                           ;inc\CANlib.h: 407: TXB1SIDH = (unsigned char) tamp;
  6154  000DE4  C0A6  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6155                           
  6156                           ;inc\CANlib.h: 408: }
  6157  000DE8  D057               	goto	l4571
  6158  000DEA                     l391:
  6159                           
  6160                           ; BSR set to: 0
  6161                           ;inc\CANlib.h: 410: else
  6162                           ;inc\CANlib.h: 412: {
  6163                           ;inc\CANlib.h: 413: TXB1SIDLbits.EXIDE = 0x00;
  6164  000DEA  010F               	movlb	15	; () banked
  6165  000DEC  9732               	bcf	50,3,b	;volatile
  6166                           
  6167                           ; BSR set to: 15
  6168                           ;inc\CANlib.h: 415: tamp = (identifier >> 3);
  6169  000DEE  C09E  F01D         	movff	CANsendMessage@identifier,??_CANsendMessage
  6170  000DF2  C09F  F01E         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6171  000DF6  C0A0  F01F         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6172  000DFA  C0A1  F020         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6173  000DFE  0E04               	movlw	4
  6174  000E00  D005               	goto	u6120
  6175  000E02                     u6125:
  6176  000E02  90D8               	bcf	status,0,c
  6177  000E04  3220               	rrcf	??_CANsendMessage+3,f,c
  6178  000E06  321F               	rrcf	??_CANsendMessage+2,f,c
  6179  000E08  321E               	rrcf	??_CANsendMessage+1,f,c
  6180  000E0A  321D               	rrcf	??_CANsendMessage,f,c
  6181  000E0C                     u6120:
  6182  000E0C  2EE8               	decfsz	wreg,f,c
  6183  000E0E  D7F9               	goto	u6125
  6184  000E10  C01D  F0A6         	movff	??_CANsendMessage,CANsendMessage@tamp
  6185  000E14  C01E  F0A7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6186  000E18  C01F  F0A8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6187  000E1C  C020  F0A9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6188                           
  6189                           ; BSR set to: 15
  6190                           ;inc\CANlib.h: 416: tamp = tamp & 0x000000FF;
  6191  000E20  0100               	movlb	0	; () banked
  6192  000E22  51A6               	movf	CANsendMessage@tamp& (0+255),w,b
  6193  000E24  0100               	movlb	0	; () banked
  6194  000E26  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  6195  000E28  6BA7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6196  000E2A  6BA8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6197  000E2C  6BA9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6198                           
  6199                           ; BSR set to: 0
  6200                           ;inc\CANlib.h: 417: TXB1SIDH = (unsigned char) tamp;
  6201  000E2E  C0A6  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6202                           
  6203                           ; BSR set to: 0
  6204                           ;inc\CANlib.h: 419: tamp = identifier & 0x00000007;
  6205  000E32  0E07               	movlw	7
  6206  000E34  0100               	movlb	0	; () banked
  6207  000E36  159E               	andwf	CANsendMessage@identifier& (0+255),w,b
  6208  000E38  0100               	movlb	0	; () banked
  6209  000E3A  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  6210  000E3C  0E00               	movlw	0
  6211  000E3E  0100               	movlb	0	; () banked
  6212  000E40  159F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6213  000E42  0100               	movlb	0	; () banked
  6214  000E44  6FA7               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6215  000E46  0E00               	movlw	0
  6216  000E48  0100               	movlb	0	; () banked
  6217  000E4A  15A0               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6218  000E4C  0100               	movlb	0	; () banked
  6219  000E4E  6FA8               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6220  000E50  0E00               	movlw	0
  6221  000E52  0100               	movlb	0	; () banked
  6222  000E54  15A1               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6223  000E56  0100               	movlb	0	; () banked
  6224  000E58  6FA9               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6225                           
  6226                           ; BSR set to: 0
  6227                           ;inc\CANlib.h: 420: tamp = tamp << 5;
  6228  000E5A  C0A6  F01D         	movff	CANsendMessage@tamp,??_CANsendMessage
  6229  000E5E  C0A7  F01E         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6230  000E62  C0A8  F01F         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6231  000E66  C0A9  F020         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6232  000E6A  0E05               	movlw	5
  6233  000E6C                     u6135:
  6234  000E6C  90D8               	bcf	status,0,c
  6235  000E6E  361D               	rlcf	??_CANsendMessage,f,c
  6236  000E70  361E               	rlcf	??_CANsendMessage+1,f,c
  6237  000E72  361F               	rlcf	??_CANsendMessage+2,f,c
  6238  000E74  3620               	rlcf	??_CANsendMessage+3,f,c
  6239  000E76  2EE8               	decfsz	wreg,f,c
  6240  000E78  D7F9               	goto	u6135
  6241  000E7A  C01D  F0A6         	movff	??_CANsendMessage,CANsendMessage@tamp
  6242  000E7E  C01E  F0A7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6243  000E82  C01F  F0A8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6244  000E86  C020  F0A9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6245                           
  6246                           ; BSR set to: 0
  6247                           ;inc\CANlib.h: 421: TXB1SIDL = TXB1SIDL & 0b00011111;
  6248  000E8A  010F               	movlb	15	; () banked
  6249  000E8C  5132               	movf	50,w,b	;volatile
  6250  000E8E  0B1F               	andlw	31
  6251  000E90  010F               	movlb	15	; () banked
  6252  000E92  6F32               	movwf	50,b	;volatile
  6253                           
  6254                           ; BSR set to: 15
  6255                           ;inc\CANlib.h: 422: TXB1SIDL = (unsigned char) tamp;
  6256  000E94  C0A6  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  6257  000E98                     l4571:
  6258                           
  6259                           ;inc\CANlib.h: 423: }
  6260                           ;inc\CANlib.h: 425: if (0b00000001 & flags)
  6261  000E98  0100               	movlb	0	; () banked
  6262  000E9A  A1A5               	btfss	CANsendMessage@flags& (0+255),0,b
  6263  000E9C  D003               	goto	l398
  6264                           
  6265                           ; BSR set to: 0
  6266                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x01;
  6267  000E9E  010F               	movlb	15	; () banked
  6268  000EA0  8130               	bsf	48,0,b	;volatile
  6269  000EA2  D002               	goto	l399
  6270  000EA4                     l398:
  6271                           
  6272                           ; BSR set to: 0
  6273                           ;inc\CANlib.h: 427: else
  6274                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI0 = 0x00;
  6275  000EA4  010F               	movlb	15	; () banked
  6276  000EA6  9130               	bcf	48,0,b	;volatile
  6277  000EA8                     l399:
  6278                           
  6279                           ; BSR set to: 15
  6280                           ;inc\CANlib.h: 429: if (0b00000010 & flags)
  6281  000EA8  0100               	movlb	0	; () banked
  6282  000EAA  A3A5               	btfss	CANsendMessage@flags& (0+255),1,b
  6283  000EAC  D003               	goto	l400
  6284                           
  6285                           ; BSR set to: 0
  6286                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x01;
  6287  000EAE  010F               	movlb	15	; () banked
  6288  000EB0  8330               	bsf	48,1,b	;volatile
  6289  000EB2  D002               	goto	l4577
  6290  000EB4                     l400:
  6291                           
  6292                           ; BSR set to: 0
  6293                           ;inc\CANlib.h: 431: else
  6294                           ;inc\CANlib.h: 432: TXB1CONbits.TXPRI1 = 0x00;
  6295  000EB4  010F               	movlb	15	; () banked
  6296  000EB6  9330               	bcf	48,1,b	;volatile
  6297  000EB8                     l4577:
  6298                           
  6299                           ; BSR set to: 15
  6300                           ;inc\CANlib.h: 434: TXB1D0 = data[0];
  6301  000EB8  C0A2  FFD9         	movff	CANsendMessage@data,fsr2l
  6302  000EBC  C0A3  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6303  000EC0  50DF               	movf	indf2,w,c
  6304  000EC2  010F               	movlb	15	; () banked
  6305  000EC4  6F36               	movwf	54,b	;volatile
  6306                           
  6307                           ; BSR set to: 15
  6308                           ;inc\CANlib.h: 435: TXB1D1 = data[1];
  6309  000EC6  0100               	movlb	0	; () banked
  6310  000EC8  EE20 F001          	lfsr	2,1
  6311  000ECC  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6312  000ECE  26D9               	addwf	fsr2l,f,c
  6313  000ED0  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6314  000ED2  22DA               	addwfc	fsr2h,f,c
  6315  000ED4  50DF               	movf	indf2,w,c
  6316  000ED6  010F               	movlb	15	; () banked
  6317  000ED8  6F37               	movwf	55,b	;volatile
  6318                           
  6319                           ; BSR set to: 15
  6320                           ;inc\CANlib.h: 436: TXB1D2 = data[2];
  6321  000EDA  0100               	movlb	0	; () banked
  6322  000EDC  EE20 F002          	lfsr	2,2
  6323  000EE0  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6324  000EE2  26D9               	addwf	fsr2l,f,c
  6325  000EE4  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6326  000EE6  22DA               	addwfc	fsr2h,f,c
  6327  000EE8  50DF               	movf	indf2,w,c
  6328  000EEA  010F               	movlb	15	; () banked
  6329  000EEC  6F38               	movwf	56,b	;volatile
  6330                           
  6331                           ; BSR set to: 15
  6332                           ;inc\CANlib.h: 437: TXB1D3 = data[3];
  6333  000EEE  0100               	movlb	0	; () banked
  6334  000EF0  EE20 F003          	lfsr	2,3
  6335  000EF4  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6336  000EF6  26D9               	addwf	fsr2l,f,c
  6337  000EF8  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6338  000EFA  22DA               	addwfc	fsr2h,f,c
  6339  000EFC  50DF               	movf	indf2,w,c
  6340  000EFE  010F               	movlb	15	; () banked
  6341  000F00  6F39               	movwf	57,b	;volatile
  6342                           
  6343                           ; BSR set to: 15
  6344                           ;inc\CANlib.h: 438: TXB1D4 = data[4];
  6345  000F02  0100               	movlb	0	; () banked
  6346  000F04  EE20 F004          	lfsr	2,4
  6347  000F08  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6348  000F0A  26D9               	addwf	fsr2l,f,c
  6349  000F0C  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6350  000F0E  22DA               	addwfc	fsr2h,f,c
  6351  000F10  50DF               	movf	indf2,w,c
  6352  000F12  010F               	movlb	15	; () banked
  6353  000F14  6F3A               	movwf	58,b	;volatile
  6354                           
  6355                           ; BSR set to: 15
  6356                           ;inc\CANlib.h: 439: TXB1D5 = data[5];
  6357  000F16  0100               	movlb	0	; () banked
  6358  000F18  EE20 F005          	lfsr	2,5
  6359  000F1C  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6360  000F1E  26D9               	addwf	fsr2l,f,c
  6361  000F20  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6362  000F22  22DA               	addwfc	fsr2h,f,c
  6363  000F24  50DF               	movf	indf2,w,c
  6364  000F26  010F               	movlb	15	; () banked
  6365  000F28  6F3B               	movwf	59,b	;volatile
  6366                           
  6367                           ; BSR set to: 15
  6368                           ;inc\CANlib.h: 440: TXB1D6 = data[6];
  6369  000F2A  0100               	movlb	0	; () banked
  6370  000F2C  EE20 F006          	lfsr	2,6
  6371  000F30  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6372  000F32  26D9               	addwf	fsr2l,f,c
  6373  000F34  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6374  000F36  22DA               	addwfc	fsr2h,f,c
  6375  000F38  50DF               	movf	indf2,w,c
  6376  000F3A  010F               	movlb	15	; () banked
  6377  000F3C  6F3C               	movwf	60,b	;volatile
  6378                           
  6379                           ; BSR set to: 15
  6380                           ;inc\CANlib.h: 441: TXB1D7 = data[7];
  6381  000F3E  0100               	movlb	0	; () banked
  6382  000F40  EE20 F007          	lfsr	2,7
  6383  000F44  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6384  000F46  26D9               	addwf	fsr2l,f,c
  6385  000F48  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6386  000F4A  22DA               	addwfc	fsr2h,f,c
  6387  000F4C  50DF               	movf	indf2,w,c
  6388  000F4E  010F               	movlb	15	; () banked
  6389  000F50  6F3D               	movwf	61,b	;volatile
  6390                           
  6391                           ; BSR set to: 15
  6392                           ;inc\CANlib.h: 443: TXB1CONbits.TXREQ = 0x01;
  6393  000F52  010F               	movlb	15	; () banked
  6394  000F54  8730               	bsf	48,3,b	;volatile
  6395                           
  6396                           ; BSR set to: 15
  6397                           ;inc\CANlib.h: 445: return;
  6398  000F56  0012               	return	
  6399  000F58                     l388:
  6400                           
  6401                           ; BSR set to: 15
  6402                           ;inc\CANlib.h: 446: }
  6403                           ;inc\CANlib.h: 450: if (TXB2CONbits.TXREQ == 0)
  6404  000F58  010F               	movlb	15	; () banked
  6405  000F5A  B720               	btfsc	32,3,b	;volatile
  6406  000F5C  0012               	return	
  6407                           
  6408                           ; BSR set to: 15
  6409                           ;inc\CANlib.h: 451: { TXB2DLC = dataLength;
  6410  000F5E  C0A4  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  6411                           
  6412                           ;inc\CANlib.h: 453: if (0b01000000 & flags)
  6413  000F62  0100               	movlb	0	; () banked
  6414  000F64  ADA5               	btfss	CANsendMessage@flags& (0+255),6,b
  6415  000F66  D003               	goto	l403
  6416                           
  6417                           ; BSR set to: 0
  6418                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x01;
  6419  000F68  010F               	movlb	15	; () banked
  6420  000F6A  8D25               	bsf	37,6,b	;volatile
  6421  000F6C  D002               	goto	l404
  6422  000F6E                     l403:
  6423                           
  6424                           ; BSR set to: 0
  6425                           ;inc\CANlib.h: 455: else
  6426                           ;inc\CANlib.h: 456: TXB2DLCbits.TXRTR = 0x00;
  6427  000F6E  010F               	movlb	15	; () banked
  6428  000F70  9D25               	bcf	37,6,b	;volatile
  6429  000F72                     l404:
  6430                           
  6431                           ; BSR set to: 15
  6432                           ;inc\CANlib.h: 458: if (CAN_TX_FRAME_MASK & flags)
  6433  000F72  0100               	movlb	0	; () banked
  6434  000F74  A7A5               	btfss	CANsendMessage@flags& (0+255),3,b
  6435  000F76  D077               	goto	l405
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;inc\CANlib.h: 459: {
  6439                           ;inc\CANlib.h: 460: tamp = identifier & 0x000000FF;
  6440  000F78  0100               	movlb	0	; () banked
  6441  000F7A  519E               	movf	CANsendMessage@identifier& (0+255),w,b
  6442  000F7C  0100               	movlb	0	; () banked
  6443  000F7E  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  6444  000F80  6BA7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6445  000F82  6BA8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6446  000F84  6BA9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6447                           
  6448                           ; BSR set to: 0
  6449                           ;inc\CANlib.h: 461: TXB2EIDL = (unsigned char) tamp;
  6450  000F86  C0A6  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  6451                           
  6452                           ; BSR set to: 0
  6453                           ;inc\CANlib.h: 463: tamp = identifier & 0x0000FF00;
  6454  000F8A  0E00               	movlw	0
  6455  000F8C  0100               	movlb	0	; () banked
  6456  000F8E  159E               	andwf	CANsendMessage@identifier& (0+255),w,b
  6457  000F90  0100               	movlb	0	; () banked
  6458  000F92  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  6459  000F94  0EFF               	movlw	255
  6460  000F96  0100               	movlb	0	; () banked
  6461  000F98  159F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6462  000F9A  0100               	movlb	0	; () banked
  6463  000F9C  6FA7               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6464  000F9E  0E00               	movlw	0
  6465  000FA0  0100               	movlb	0	; () banked
  6466  000FA2  15A0               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6467  000FA4  0100               	movlb	0	; () banked
  6468  000FA6  6FA8               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6469  000FA8  0E00               	movlw	0
  6470  000FAA  0100               	movlb	0	; () banked
  6471  000FAC  15A1               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6472  000FAE  0100               	movlb	0	; () banked
  6473  000FB0  6FA9               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6474                           
  6475                           ; BSR set to: 0
  6476                           ;inc\CANlib.h: 464: tamp = tamp >> 8;
  6477  000FB2  C0A6  F01D         	movff	CANsendMessage@tamp,??_CANsendMessage
  6478  000FB6  C0A7  F01E         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6479  000FBA  C0A8  F01F         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6480  000FBE  C0A9  F020         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6481  000FC2  C01E  F01D         	movff	??_CANsendMessage+1,??_CANsendMessage
  6482  000FC6  C01F  F01E         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6483  000FCA  C020  F01F         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6484  000FCE  6A20               	clrf	??_CANsendMessage+3,c
  6485  000FD0  C01D  F0A6         	movff	??_CANsendMessage,CANsendMessage@tamp
  6486  000FD4  C01E  F0A7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6487  000FD8  C01F  F0A8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6488  000FDC  C020  F0A9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6489                           
  6490                           ; BSR set to: 0
  6491                           ;inc\CANlib.h: 465: TXB2EIDH = (unsigned char) tamp;
  6492  000FE0  C0A6  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  6493                           
  6494                           ; BSR set to: 0
  6495                           ;inc\CANlib.h: 467: TXB2SIDL = 0x00;
  6496  000FE4  0E00               	movlw	0
  6497  000FE6  010F               	movlb	15	; () banked
  6498  000FE8  6F22               	movwf	34,b	;volatile
  6499                           
  6500                           ; BSR set to: 15
  6501                           ;inc\CANlib.h: 468: TXB2SIDLbits.EXIDE = 0x01;
  6502  000FEA  010F               	movlb	15	; () banked
  6503  000FEC  8722               	bsf	34,3,b	;volatile
  6504                           
  6505                           ; BSR set to: 15
  6506                           ;inc\CANlib.h: 470: if (identifier & 0x00010000)
  6507  000FEE  0100               	movlb	0	; () banked
  6508  000FF0  A1A0               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6509  000FF2  D002               	goto	l406
  6510                           
  6511                           ; BSR set to: 0
  6512                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID16 = 0x01;
  6513  000FF4  010F               	movlb	15	; () banked
  6514  000FF6  8122               	bsf	34,0,b	;volatile
  6515  000FF8                     l406:
  6516                           
  6517                           ;inc\CANlib.h: 472: if (identifier & 0x00020000)
  6518  000FF8  0100               	movlb	0	; () banked
  6519  000FFA  A3A0               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6520  000FFC  D002               	goto	l407
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;inc\CANlib.h: 473: TXB2SIDLbits.EID17 = 0x01;
  6524  000FFE  010F               	movlb	15	; () banked
  6525  001000  8322               	bsf	34,1,b	;volatile
  6526  001002                     l407:
  6527                           
  6528                           ;inc\CANlib.h: 474: if (identifier & 0x00040000)
  6529  001002  0100               	movlb	0	; () banked
  6530  001004  A5A0               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6531  001006  D002               	goto	l408
  6532                           
  6533                           ; BSR set to: 0
  6534                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID0 = 0x01;
  6535  001008  010F               	movlb	15	; () banked
  6536  00100A  8B22               	bsf	34,5,b	;volatile
  6537  00100C                     l408:
  6538                           
  6539                           ;inc\CANlib.h: 476: if (identifier & 0x00080000)
  6540  00100C  0100               	movlb	0	; () banked
  6541  00100E  A7A0               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6542  001010  D002               	goto	l409
  6543                           
  6544                           ; BSR set to: 0
  6545                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID1 = 0x01;
  6546  001012  010F               	movlb	15	; () banked
  6547  001014  8D22               	bsf	34,6,b	;volatile
  6548  001016                     l409:
  6549                           
  6550                           ;inc\CANlib.h: 478: if (identifier & 0x00100000)
  6551  001016  0100               	movlb	0	; () banked
  6552  001018  A9A0               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6553  00101A  D002               	goto	l4627
  6554                           
  6555                           ; BSR set to: 0
  6556                           ;inc\CANlib.h: 479: TXB2SIDLbits.SID2 = 0x01;
  6557  00101C  010F               	movlb	15	; () banked
  6558  00101E  8F22               	bsf	34,7,b	;volatile
  6559  001020                     l4627:
  6560                           
  6561                           ;inc\CANlib.h: 481: tamp = (identifier >> 21);
  6562  001020  C09E  F01D         	movff	CANsendMessage@identifier,??_CANsendMessage
  6563  001024  C09F  F01E         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6564  001028  C0A0  F01F         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6565  00102C  C0A1  F020         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6566  001030  0E16               	movlw	22
  6567  001032  D005               	goto	u6240
  6568  001034                     u6245:
  6569  001034  90D8               	bcf	status,0,c
  6570  001036  3220               	rrcf	??_CANsendMessage+3,f,c
  6571  001038  321F               	rrcf	??_CANsendMessage+2,f,c
  6572  00103A  321E               	rrcf	??_CANsendMessage+1,f,c
  6573  00103C  321D               	rrcf	??_CANsendMessage,f,c
  6574  00103E                     u6240:
  6575  00103E  2EE8               	decfsz	wreg,f,c
  6576  001040  D7F9               	goto	u6245
  6577  001042  C01D  F0A6         	movff	??_CANsendMessage,CANsendMessage@tamp
  6578  001046  C01E  F0A7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6579  00104A  C01F  F0A8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6580  00104E  C020  F0A9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6581                           
  6582                           ;inc\CANlib.h: 482: tamp = tamp & 0x000000FF;
  6583  001052  0100               	movlb	0	; () banked
  6584  001054  51A6               	movf	CANsendMessage@tamp& (0+255),w,b
  6585  001056  0100               	movlb	0	; () banked
  6586  001058  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  6587  00105A  6BA7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6588  00105C  6BA8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6589  00105E  6BA9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6590                           
  6591                           ; BSR set to: 0
  6592                           ;inc\CANlib.h: 483: TXB2SIDH = (unsigned char) tamp;
  6593  001060  C0A6  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6594                           
  6595                           ;inc\CANlib.h: 484: }
  6596  001064  D057               	goto	l4647
  6597  001066                     l405:
  6598                           
  6599                           ; BSR set to: 0
  6600                           ;inc\CANlib.h: 486: else
  6601                           ;inc\CANlib.h: 488: {
  6602                           ;inc\CANlib.h: 489: TXB2SIDLbits.EXIDE = 0x00;
  6603  001066  010F               	movlb	15	; () banked
  6604  001068  9722               	bcf	34,3,b	;volatile
  6605                           
  6606                           ; BSR set to: 15
  6607                           ;inc\CANlib.h: 491: tamp = (identifier >> 3);
  6608  00106A  C09E  F01D         	movff	CANsendMessage@identifier,??_CANsendMessage
  6609  00106E  C09F  F01E         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6610  001072  C0A0  F01F         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6611  001076  C0A1  F020         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6612  00107A  0E04               	movlw	4
  6613  00107C  D005               	goto	u6250
  6614  00107E                     u6255:
  6615  00107E  90D8               	bcf	status,0,c
  6616  001080  3220               	rrcf	??_CANsendMessage+3,f,c
  6617  001082  321F               	rrcf	??_CANsendMessage+2,f,c
  6618  001084  321E               	rrcf	??_CANsendMessage+1,f,c
  6619  001086  321D               	rrcf	??_CANsendMessage,f,c
  6620  001088                     u6250:
  6621  001088  2EE8               	decfsz	wreg,f,c
  6622  00108A  D7F9               	goto	u6255
  6623  00108C  C01D  F0A6         	movff	??_CANsendMessage,CANsendMessage@tamp
  6624  001090  C01E  F0A7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6625  001094  C01F  F0A8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6626  001098  C020  F0A9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6627                           
  6628                           ; BSR set to: 15
  6629                           ;inc\CANlib.h: 492: tamp = tamp & 0x000000FF;
  6630  00109C  0100               	movlb	0	; () banked
  6631  00109E  51A6               	movf	CANsendMessage@tamp& (0+255),w,b
  6632  0010A0  0100               	movlb	0	; () banked
  6633  0010A2  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  6634  0010A4  6BA7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6635  0010A6  6BA8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6636  0010A8  6BA9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6637                           
  6638                           ; BSR set to: 0
  6639                           ;inc\CANlib.h: 493: TXB2SIDH = (unsigned char) tamp;
  6640  0010AA  C0A6  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6641                           
  6642                           ; BSR set to: 0
  6643                           ;inc\CANlib.h: 495: tamp = identifier & 0x00000007;
  6644  0010AE  0E07               	movlw	7
  6645  0010B0  0100               	movlb	0	; () banked
  6646  0010B2  159E               	andwf	CANsendMessage@identifier& (0+255),w,b
  6647  0010B4  0100               	movlb	0	; () banked
  6648  0010B6  6FA6               	movwf	CANsendMessage@tamp& (0+255),b
  6649  0010B8  0E00               	movlw	0
  6650  0010BA  0100               	movlb	0	; () banked
  6651  0010BC  159F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6652  0010BE  0100               	movlb	0	; () banked
  6653  0010C0  6FA7               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6654  0010C2  0E00               	movlw	0
  6655  0010C4  0100               	movlb	0	; () banked
  6656  0010C6  15A0               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6657  0010C8  0100               	movlb	0	; () banked
  6658  0010CA  6FA8               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6659  0010CC  0E00               	movlw	0
  6660  0010CE  0100               	movlb	0	; () banked
  6661  0010D0  15A1               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6662  0010D2  0100               	movlb	0	; () banked
  6663  0010D4  6FA9               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6664                           
  6665                           ; BSR set to: 0
  6666                           ;inc\CANlib.h: 496: tamp = tamp << 5;
  6667  0010D6  C0A6  F01D         	movff	CANsendMessage@tamp,??_CANsendMessage
  6668  0010DA  C0A7  F01E         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6669  0010DE  C0A8  F01F         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6670  0010E2  C0A9  F020         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6671  0010E6  0E05               	movlw	5
  6672  0010E8                     u6265:
  6673  0010E8  90D8               	bcf	status,0,c
  6674  0010EA  361D               	rlcf	??_CANsendMessage,f,c
  6675  0010EC  361E               	rlcf	??_CANsendMessage+1,f,c
  6676  0010EE  361F               	rlcf	??_CANsendMessage+2,f,c
  6677  0010F0  3620               	rlcf	??_CANsendMessage+3,f,c
  6678  0010F2  2EE8               	decfsz	wreg,f,c
  6679  0010F4  D7F9               	goto	u6265
  6680  0010F6  C01D  F0A6         	movff	??_CANsendMessage,CANsendMessage@tamp
  6681  0010FA  C01E  F0A7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6682  0010FE  C01F  F0A8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6683  001102  C020  F0A9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6684                           
  6685                           ; BSR set to: 0
  6686                           ;inc\CANlib.h: 497: TXB2SIDL = TXB2SIDL & 0b00011111;
  6687  001106  010F               	movlb	15	; () banked
  6688  001108  5122               	movf	34,w,b	;volatile
  6689  00110A  0B1F               	andlw	31
  6690  00110C  010F               	movlb	15	; () banked
  6691  00110E  6F22               	movwf	34,b	;volatile
  6692                           
  6693                           ; BSR set to: 15
  6694                           ;inc\CANlib.h: 498: TXB2SIDL = (unsigned char) tamp;
  6695  001110  C0A6  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  6696  001114                     l4647:
  6697                           
  6698                           ;inc\CANlib.h: 499: }
  6699                           ;inc\CANlib.h: 501: if (0b00000001 & flags)
  6700  001114  0100               	movlb	0	; () banked
  6701  001116  A1A5               	btfss	CANsendMessage@flags& (0+255),0,b
  6702  001118  D003               	goto	l412
  6703                           
  6704                           ; BSR set to: 0
  6705                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x01;
  6706  00111A  010F               	movlb	15	; () banked
  6707  00111C  8120               	bsf	32,0,b	;volatile
  6708  00111E  D002               	goto	l413
  6709  001120                     l412:
  6710                           
  6711                           ; BSR set to: 0
  6712                           ;inc\CANlib.h: 503: else
  6713                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI0 = 0x00;
  6714  001120  010F               	movlb	15	; () banked
  6715  001122  9120               	bcf	32,0,b	;volatile
  6716  001124                     l413:
  6717                           
  6718                           ; BSR set to: 15
  6719                           ;inc\CANlib.h: 505: if (0b00000010 & flags)
  6720  001124  0100               	movlb	0	; () banked
  6721  001126  A3A5               	btfss	CANsendMessage@flags& (0+255),1,b
  6722  001128  D003               	goto	l414
  6723                           
  6724                           ; BSR set to: 0
  6725                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x01;
  6726  00112A  010F               	movlb	15	; () banked
  6727  00112C  8320               	bsf	32,1,b	;volatile
  6728  00112E  D002               	goto	l4653
  6729  001130                     l414:
  6730                           
  6731                           ; BSR set to: 0
  6732                           ;inc\CANlib.h: 507: else
  6733                           ;inc\CANlib.h: 508: TXB2CONbits.TXPRI1 = 0x00;
  6734  001130  010F               	movlb	15	; () banked
  6735  001132  9320               	bcf	32,1,b	;volatile
  6736  001134                     l4653:
  6737                           
  6738                           ; BSR set to: 15
  6739                           ;inc\CANlib.h: 510: TXB2D0 = data[0];
  6740  001134  C0A2  FFD9         	movff	CANsendMessage@data,fsr2l
  6741  001138  C0A3  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6742  00113C  50DF               	movf	indf2,w,c
  6743  00113E  010F               	movlb	15	; () banked
  6744  001140  6F26               	movwf	38,b	;volatile
  6745                           
  6746                           ; BSR set to: 15
  6747                           ;inc\CANlib.h: 511: TXB2D1 = data[1];
  6748  001142  0100               	movlb	0	; () banked
  6749  001144  EE20 F001          	lfsr	2,1
  6750  001148  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6751  00114A  26D9               	addwf	fsr2l,f,c
  6752  00114C  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6753  00114E  22DA               	addwfc	fsr2h,f,c
  6754  001150  50DF               	movf	indf2,w,c
  6755  001152  010F               	movlb	15	; () banked
  6756  001154  6F27               	movwf	39,b	;volatile
  6757                           
  6758                           ; BSR set to: 15
  6759                           ;inc\CANlib.h: 512: TXB2D2 = data[2];
  6760  001156  0100               	movlb	0	; () banked
  6761  001158  EE20 F002          	lfsr	2,2
  6762  00115C  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6763  00115E  26D9               	addwf	fsr2l,f,c
  6764  001160  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6765  001162  22DA               	addwfc	fsr2h,f,c
  6766  001164  50DF               	movf	indf2,w,c
  6767  001166  010F               	movlb	15	; () banked
  6768  001168  6F28               	movwf	40,b	;volatile
  6769                           
  6770                           ; BSR set to: 15
  6771                           ;inc\CANlib.h: 513: TXB2D3 = data[3];
  6772  00116A  0100               	movlb	0	; () banked
  6773  00116C  EE20 F003          	lfsr	2,3
  6774  001170  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6775  001172  26D9               	addwf	fsr2l,f,c
  6776  001174  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6777  001176  22DA               	addwfc	fsr2h,f,c
  6778  001178  50DF               	movf	indf2,w,c
  6779  00117A  010F               	movlb	15	; () banked
  6780  00117C  6F29               	movwf	41,b	;volatile
  6781                           
  6782                           ; BSR set to: 15
  6783                           ;inc\CANlib.h: 514: TXB2D4 = data[4];
  6784  00117E  0100               	movlb	0	; () banked
  6785  001180  EE20 F004          	lfsr	2,4
  6786  001184  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6787  001186  26D9               	addwf	fsr2l,f,c
  6788  001188  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6789  00118A  22DA               	addwfc	fsr2h,f,c
  6790  00118C  50DF               	movf	indf2,w,c
  6791  00118E  010F               	movlb	15	; () banked
  6792  001190  6F2A               	movwf	42,b	;volatile
  6793                           
  6794                           ; BSR set to: 15
  6795                           ;inc\CANlib.h: 515: TXB2D5 = data[5];
  6796  001192  0100               	movlb	0	; () banked
  6797  001194  EE20 F005          	lfsr	2,5
  6798  001198  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6799  00119A  26D9               	addwf	fsr2l,f,c
  6800  00119C  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6801  00119E  22DA               	addwfc	fsr2h,f,c
  6802  0011A0  50DF               	movf	indf2,w,c
  6803  0011A2  010F               	movlb	15	; () banked
  6804  0011A4  6F2B               	movwf	43,b	;volatile
  6805                           
  6806                           ; BSR set to: 15
  6807                           ;inc\CANlib.h: 516: TXB2D6 = data[6];
  6808  0011A6  0100               	movlb	0	; () banked
  6809  0011A8  EE20 F006          	lfsr	2,6
  6810  0011AC  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6811  0011AE  26D9               	addwf	fsr2l,f,c
  6812  0011B0  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6813  0011B2  22DA               	addwfc	fsr2h,f,c
  6814  0011B4  50DF               	movf	indf2,w,c
  6815  0011B6  010F               	movlb	15	; () banked
  6816  0011B8  6F2C               	movwf	44,b	;volatile
  6817                           
  6818                           ; BSR set to: 15
  6819                           ;inc\CANlib.h: 517: TXB2D7 = data[7];
  6820  0011BA  0100               	movlb	0	; () banked
  6821  0011BC  EE20 F007          	lfsr	2,7
  6822  0011C0  51A2               	movf	CANsendMessage@data& (0+255),w,b
  6823  0011C2  26D9               	addwf	fsr2l,f,c
  6824  0011C4  51A3               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6825  0011C6  22DA               	addwfc	fsr2h,f,c
  6826  0011C8  50DF               	movf	indf2,w,c
  6827  0011CA  010F               	movlb	15	; () banked
  6828  0011CC  6F2D               	movwf	45,b	;volatile
  6829                           
  6830                           ; BSR set to: 15
  6831                           ;inc\CANlib.h: 519: TXB2CONbits.TXREQ = 0x01;
  6832  0011CE  010F               	movlb	15	; () banked
  6833  0011D0  8720               	bsf	32,3,b	;volatile
  6834                           
  6835                           ; BSR set to: 15
  6836                           ;inc\CANlib.h: 521: return;
  6837  0011D2  0012               	return	
  6838  0011D4                     __end_of_CANsendMessage:
  6839                           	opt stack 0
  6840                           tblptru	equ	0xFF8
  6841                           tblptrh	equ	0xFF7
  6842                           tblptrl	equ	0xFF6
  6843                           tablat	equ	0xFF5
  6844                           prodh	equ	0xFF4
  6845                           prodl	equ	0xFF3
  6846                           intcon	equ	0xFF2
  6847                           postinc0	equ	0xFEE
  6848                           wreg	equ	0xFE8
  6849                           indf1	equ	0xFE7
  6850                           postinc1	equ	0xFE6
  6851                           postdec1	equ	0xFE5
  6852                           fsr1h	equ	0xFE2
  6853                           fsr1l	equ	0xFE1
  6854                           indf2	equ	0xFDF
  6855                           postinc2	equ	0xFDE
  6856                           fsr2h	equ	0xFDA
  6857                           fsr2l	equ	0xFD9
  6858                           status	equ	0xFD8
  6859                           
  6860 ;; *************** function _CANisTxReady *****************
  6861 ;; Defined at:
  6862 ;;		line 1155 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;		None
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;		None
  6867 ;; Return value:  Size  Location     Type
  6868 ;;                  1    wreg      unsigned char 
  6869 ;; Registers used:
  6870 ;;		wreg, status,2
  6871 ;; Tracked objects:
  6872 ;;		On entry : 0/0
  6873 ;;		On exit  : 0/0
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6876 ;;      Params:         0       0       0       0
  6877 ;;      Locals:         1       0       0       0
  6878 ;;      Temps:          0       0       0       0
  6879 ;;      Totals:         1       0       0       0
  6880 ;;Total ram usage:        1 bytes
  6881 ;; Hardware stack levels used:    1
  6882 ;; Hardware stack levels required when called:    2
  6883 ;; This function calls:
  6884 ;;		Nothing
  6885 ;; This function is called by:
  6886 ;;		_main
  6887 ;;		_can_interpreter
  6888 ;; This function uses a non-reentrant model
  6889 ;;
  6890                           
  6891                           	psect	text15
  6892  002436                     __ptext15:
  6893                           	opt stack 0
  6894  002436                     _CANisTxReady:
  6895                           	opt stack 27
  6896                           
  6897                           ;inc\CANlib.h: 1157: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  6898                           
  6899                           ; BSR set to: 15
  6900                           ;incstack = 0
  6901  002436  0E01               	movlw	1
  6902  002438  6E1D               	movwf	_CANisTxReady$3213,c
  6903  00243A  010F               	movlb	15	; () banked
  6904  00243C  A740               	btfss	64,3,b	;volatile
  6905  00243E  D008               	goto	l566
  6906                           
  6907                           ; BSR set to: 15
  6908  002440  010F               	movlb	15	; () banked
  6909  002442  A730               	btfss	48,3,b	;volatile
  6910  002444  D005               	goto	l566
  6911                           
  6912                           ; BSR set to: 15
  6913  002446  010F               	movlb	15	; () banked
  6914  002448  A720               	btfss	32,3,b	;volatile
  6915  00244A  D002               	goto	l566
  6916                           
  6917                           ; BSR set to: 15
  6918  00244C  0E00               	movlw	0
  6919  00244E  6E1D               	movwf	_CANisTxReady$3213,c
  6920  002450                     l566:
  6921                           
  6922                           ; BSR set to: 15
  6923  002450  501D               	movf	_CANisTxReady$3213,w,c
  6924  002452  0012               	return	
  6925  002454                     __end_of_CANisTxReady:
  6926                           	opt stack 0
  6927                           tblptru	equ	0xFF8
  6928                           tblptrh	equ	0xFF7
  6929                           tblptrl	equ	0xFF6
  6930                           tablat	equ	0xFF5
  6931                           prodh	equ	0xFF4
  6932                           prodl	equ	0xFF3
  6933                           intcon	equ	0xFF2
  6934                           postinc0	equ	0xFEE
  6935                           wreg	equ	0xFE8
  6936                           indf1	equ	0xFE7
  6937                           postinc1	equ	0xFE6
  6938                           postdec1	equ	0xFE5
  6939                           fsr1h	equ	0xFE2
  6940                           fsr1l	equ	0xFE1
  6941                           indf2	equ	0xFDF
  6942                           postinc2	equ	0xFDE
  6943                           fsr2h	equ	0xFDA
  6944                           fsr2l	equ	0xFD9
  6945                           status	equ	0xFD8
  6946                           
  6947 ;; *************** function _ISR_alta *****************
  6948 ;; Defined at:
  6949 ;;		line 74 in file "CanToSerial.c"
  6950 ;; Parameters:    Size  Location     Type
  6951 ;;		None
  6952 ;; Auto vars:     Size  Location     Type
  6953 ;;  i               1   27[COMRAM] unsigned char 
  6954 ;; Return value:  Size  Location     Type
  6955 ;;		None               void
  6956 ;; Registers used:
  6957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6958 ;; Tracked objects:
  6959 ;;		On entry : 0/0
  6960 ;;		On exit  : 0/0
  6961 ;;		Unchanged: 0/0
  6962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6963 ;;      Params:         0       0       0       0
  6964 ;;      Locals:         1       0       0       0
  6965 ;;      Temps:         15       0       0       0
  6966 ;;      Totals:        16       0       0       0
  6967 ;;Total ram usage:       16 bytes
  6968 ;; Hardware stack levels used:    1
  6969 ;; Hardware stack levels required when called:    1
  6970 ;; This function calls:
  6971 ;;		_CANisRxReady
  6972 ;;		_CANreceiveMessage
  6973 ;;		_usart_rx
  6974 ;; This function is called by:
  6975 ;;		Interrupt level 2
  6976 ;; This function uses a non-reentrant model
  6977 ;;
  6978                           
  6979                           	psect	intcode
  6980  000008                     __pintcode:
  6981                           	opt stack 0
  6982  000008                     _ISR_alta:
  6983                           	opt stack 26
  6984                           
  6985                           ; BSR set to: 15
  6986                           ;incstack = 0
  6987  000008  8243               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6988  00000A  CFFA F00E          	movff	pclath,??_ISR_alta+1
  6989  00000E  CFFB F00F          	movff	pclatu,??_ISR_alta+2
  6990  000012  EDB6  F00F         	call	int_func,f	;refresh shadow registers
  6991                           pclatu	equ	0xFFB
  6992                           pclath	equ	0xFFA
  6993                           tblptru	equ	0xFF8
  6994                           tblptrh	equ	0xFF7
  6995                           tblptrl	equ	0xFF6
  6996                           tablat	equ	0xFF5
  6997                           prodh	equ	0xFF4
  6998                           prodl	equ	0xFF3
  6999                           intcon	equ	0xFF2
  7000                           postinc0	equ	0xFEE
  7001                           wreg	equ	0xFE8
  7002                           indf1	equ	0xFE7
  7003                           postinc1	equ	0xFE6
  7004                           postdec1	equ	0xFE5
  7005                           fsr1h	equ	0xFE2
  7006                           fsr1l	equ	0xFE1
  7007                           indf2	equ	0xFDF
  7008                           postinc2	equ	0xFDE
  7009                           fsr2h	equ	0xFDA
  7010                           fsr2l	equ	0xFD9
  7011                           status	equ	0xFD8
  7012                           
  7013                           	psect	intcode_body
  7014  001F6C                     __pintcode_body:
  7015                           	opt stack 26
  7016  001F6C                     int_func:
  7017                           	opt stack 26
  7018  001F6C  0006               	pop		; remove dummy address from shadow register refresh
  7019  001F6E  CFE9 F010          	movff	fsr0l,??_ISR_alta+3
  7020  001F72  CFEA F011          	movff	fsr0h,??_ISR_alta+4
  7021  001F76  CFE1 F012          	movff	fsr1l,??_ISR_alta+5
  7022  001F7A  CFE2 F013          	movff	fsr1h,??_ISR_alta+6
  7023  001F7E  CFD9 F014          	movff	fsr2l,??_ISR_alta+7
  7024  001F82  CFDA F015          	movff	fsr2h,??_ISR_alta+8
  7025  001F86  CFF3 F016          	movff	prodl,??_ISR_alta+9
  7026  001F8A  CFF4 F017          	movff	prodh,??_ISR_alta+10
  7027  001F8E  CFF6 F018          	movff	tblptrl,??_ISR_alta+11
  7028  001F92  CFF7 F019          	movff	tblptrh,??_ISR_alta+12
  7029  001F96  CFF8 F01A          	movff	tblptru,??_ISR_alta+13
  7030  001F9A  CFF5 F01B          	movff	tablat,??_ISR_alta+14
  7031                           
  7032                           ;CanToSerial.c: 75: usart_rx();
  7033  001F9E  EC4E  F011         	call	_usart_rx	;wreg free
  7034                           
  7035                           ;CanToSerial.c: 77: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
  7036  001FA2  A2A4               	btfss	4004,1,c	;volatile
  7037  001FA4  B0A4               	btfsc	4004,0,c	;volatile
  7038  001FA6  D001               	goto	i2l3831
  7039  001FA8  D045               	goto	i2l640
  7040  001FAA                     i2l3831:
  7041                           
  7042                           ;CanToSerial.c: 78: LATDbits.LATD3 = ~LATDbits.LATD3;
  7043  001FAA  A68C               	btfss	3980,3,c	;volatile
  7044  001FAC  D002               	goto	i2u468_40
  7045  001FAE  0E01               	movlw	1
  7046  001FB0  D001               	goto	i2u468_46
  7047  001FB2                     i2u468_40:
  7048  001FB2  0E00               	movlw	0
  7049  001FB4                     i2u468_46:
  7050  001FB4  0AFF               	xorlw	255
  7051  001FB6  6E0D               	movwf	??_ISR_alta& (0+255),c
  7052  001FB8  460D               	rlncf	??_ISR_alta,f,c
  7053  001FBA  460D               	rlncf	??_ISR_alta,f,c
  7054  001FBC  460D               	rlncf	??_ISR_alta,f,c
  7055  001FBE  508C               	movf	3980,w,c	;volatile
  7056  001FC0  180D               	xorwf	??_ISR_alta,w,c
  7057  001FC2  0BF7               	andlw	-9
  7058  001FC4  180D               	xorwf	??_ISR_alta,w,c
  7059  001FC6  6E8C               	movwf	3980,c	;volatile
  7060                           
  7061                           ;CanToSerial.c: 79: if (CANisRxReady()) {
  7062  001FC8  EC2A  F012         	call	_CANisRxReady	;wreg free
  7063  001FCC  0900               	iorlw	0
  7064  001FCE  B4D8               	btfsc	status,2,c
  7065  001FD0  D02F               	goto	i2l643
  7066                           
  7067                           ;CanToSerial.c: 80: CANreceiveMessage(&msg);
  7068  001FD2  0E6F               	movlw	low _msg
  7069  001FD4  6E01               	movwf	CANreceiveMessage@msg,c
  7070  001FD6  0E00               	movlw	high _msg
  7071  001FD8  6E02               	movwf	CANreceiveMessage@msg+1,c
  7072  001FDA  ECEA  F008         	call	_CANreceiveMessage	;wreg free
  7073                           
  7074                           ;CanToSerial.c: 81: RTR_Flag = msg.RTR;
  7075  001FDE  0100               	movlb	0	; () banked
  7076  001FE0  A17D               	btfss	(_msg+14)& (0+255),0,b
  7077  001FE2  D002               	goto	i2u470_40
  7078  001FE4  8042               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
  7079  001FE6  D001               	goto	i2l3839
  7080  001FE8                     i2u470_40:
  7081  001FE8  9042               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
  7082  001FEA                     i2l3839:
  7083                           
  7084                           ;CanToSerial.c: 82: id = msg.identifier;
  7085  001FEA  C06F  F022         	movff	_msg,_id	;volatile
  7086  001FEE  C070  F023         	movff	_msg+1,_id+1	;volatile
  7087  001FF2  C071  F024         	movff	_msg+2,_id+2	;volatile
  7088  001FF6  C072  F025         	movff	_msg+3,_id+3	;volatile
  7089                           
  7090                           ;CanToSerial.c: 83: newMessageCan = 1;
  7091  001FFA  8442               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  7092                           
  7093                           ;CanToSerial.c: 84: for (unsigned char i = 0; i < 8; i++) {
  7094  001FFC  0E00               	movlw	0
  7095  001FFE  6E1C               	movwf	ISR_alta@i,c
  7096  002000                     i2l3845:
  7097  002000  0E07               	movlw	7
  7098  002002  641C               	cpfsgt	ISR_alta@i,c
  7099  002004  D001               	goto	i2l3849
  7100  002006  D014               	goto	i2l643
  7101  002008                     i2l3849:
  7102                           
  7103                           ;CanToSerial.c: 85: data[i] = msg.data[i];
  7104  002008  501C               	movf	ISR_alta@i,w,c
  7105  00200A  0D01               	mullw	1
  7106  00200C  0E73               	movlw	low (_msg+4)
  7107  00200E  24F3               	addwf	prodl,w,c
  7108  002010  6ED9               	movwf	fsr2l,c
  7109  002012  0E00               	movlw	high (_msg+4)
  7110  002014  20F4               	addwfc	prodh,w,c
  7111  002016  6EDA               	movwf	fsr2h,c
  7112  002018  501C               	movf	ISR_alta@i,w,c
  7113  00201A  0D01               	mullw	1
  7114  00201C  0E86               	movlw	low _data
  7115  00201E  24F3               	addwf	prodl,w,c
  7116  002020  6EE1               	movwf	fsr1l,c
  7117  002022  0E00               	movlw	high _data
  7118  002024  20F4               	addwfc	prodh,w,c
  7119  002026  6EE2               	movwf	fsr1h,c
  7120  002028  CFDF FFE7          	movff	indf2,indf1
  7121  00202C  2A1C               	incf	ISR_alta@i,f,c
  7122  00202E  D7E8               	goto	i2l3845
  7123  002030                     i2l643:
  7124                           
  7125                           ;CanToSerial.c: 86: }
  7126                           ;CanToSerial.c: 87: }
  7127                           ;CanToSerial.c: 88: PIR3bits.RXB1IF = 0;
  7128  002030  92A4               	bcf	4004,1,c	;volatile
  7129                           
  7130                           ;CanToSerial.c: 89: PIR3bits.RXB0IF = 0;
  7131  002032  90A4               	bcf	4004,0,c	;volatile
  7132  002034                     i2l640:
  7133                           
  7134                           ;CanToSerial.c: 90: }
  7135                           ;CanToSerial.c: 91: if (PIR2bits.TMR3IF == 1) {
  7136  002034  A2A1               	btfss	4001,1,c	;volatile
  7137  002036  D00B               	goto	i2l647
  7138                           
  7139                           ;CanToSerial.c: 92: timeCounter++;
  7140  002038  0E01               	movlw	1
  7141  00203A  262A               	addwf	_timeCounter,f,c	;volatile
  7142  00203C  0E00               	movlw	0
  7143  00203E  222B               	addwfc	_timeCounter+1,f,c	;volatile
  7144  002040  222C               	addwfc	_timeCounter+2,f,c	;volatile
  7145  002042  222D               	addwfc	_timeCounter+3,f,c	;volatile
  7146                           
  7147                           ;CanToSerial.c: 93: TMR3H = 0x63;
  7148  002044  0E63               	movlw	99
  7149  002046  6EB3               	movwf	4019,c	;volatile
  7150                           
  7151                           ;CanToSerial.c: 94: TMR3L = 0xC0;
  7152  002048  0EC0               	movlw	192
  7153  00204A  6EB2               	movwf	4018,c	;volatile
  7154                           
  7155                           ;CanToSerial.c: 95: PIR2bits.TMR3IF = 0;
  7156  00204C  92A1               	bcf	4001,1,c	;volatile
  7157  00204E                     i2l647:
  7158  00204E  C01B  FFF5         	movff	??_ISR_alta+14,tablat
  7159  002052  C01A  FFF8         	movff	??_ISR_alta+13,tblptru
  7160  002056  C019  FFF7         	movff	??_ISR_alta+12,tblptrh
  7161  00205A  C018  FFF6         	movff	??_ISR_alta+11,tblptrl
  7162  00205E  C017  FFF4         	movff	??_ISR_alta+10,prodh
  7163  002062  C016  FFF3         	movff	??_ISR_alta+9,prodl
  7164  002066  C015  FFDA         	movff	??_ISR_alta+8,fsr2h
  7165  00206A  C014  FFD9         	movff	??_ISR_alta+7,fsr2l
  7166  00206E  C013  FFE2         	movff	??_ISR_alta+6,fsr1h
  7167  002072  C012  FFE1         	movff	??_ISR_alta+5,fsr1l
  7168  002076  C011  FFEA         	movff	??_ISR_alta+4,fsr0h
  7169  00207A  C010  FFE9         	movff	??_ISR_alta+3,fsr0l
  7170  00207E  C00F  FFFB         	movff	??_ISR_alta+2,pclatu
  7171  002082  C00E  FFFA         	movff	??_ISR_alta+1,pclath
  7172  002086  9243               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7173  002088  0011               	retfie		f
  7174  00208A                     __end_of_ISR_alta:
  7175                           	opt stack 0
  7176                           pclatu	equ	0xFFB
  7177                           pclath	equ	0xFFA
  7178                           tblptru	equ	0xFF8
  7179                           tblptrh	equ	0xFF7
  7180                           tblptrl	equ	0xFF6
  7181                           tablat	equ	0xFF5
  7182                           prodh	equ	0xFF4
  7183                           prodl	equ	0xFF3
  7184                           intcon	equ	0xFF2
  7185                           postinc0	equ	0xFEE
  7186                           fsr0h	equ	0xFEA
  7187                           fsr0l	equ	0xFE9
  7188                           wreg	equ	0xFE8
  7189                           indf1	equ	0xFE7
  7190                           postinc1	equ	0xFE6
  7191                           postdec1	equ	0xFE5
  7192                           fsr1h	equ	0xFE2
  7193                           fsr1l	equ	0xFE1
  7194                           indf2	equ	0xFDF
  7195                           postinc2	equ	0xFDE
  7196                           fsr2h	equ	0xFDA
  7197                           fsr2l	equ	0xFD9
  7198                           status	equ	0xFD8
  7199                           
  7200 ;; *************** function _usart_rx *****************
  7201 ;; Defined at:
  7202 ;;		line 222 in file "CanToSerial.c"
  7203 ;; Parameters:    Size  Location     Type
  7204 ;;		None
  7205 ;; Auto vars:     Size  Location     Type
  7206 ;;  i               1    1[COMRAM] unsigned char 
  7207 ;; Return value:  Size  Location     Type
  7208 ;;		None               void
  7209 ;; Registers used:
  7210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7211 ;; Tracked objects:
  7212 ;;		On entry : 0/0
  7213 ;;		On exit  : 0/0
  7214 ;;		Unchanged: 0/0
  7215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7216 ;;      Params:         0       0       0       0
  7217 ;;      Locals:         1       0       0       0
  7218 ;;      Temps:          1       0       0       0
  7219 ;;      Totals:         2       0       0       0
  7220 ;;Total ram usage:        2 bytes
  7221 ;; Hardware stack levels used:    1
  7222 ;; This function calls:
  7223 ;;		Nothing
  7224 ;; This function is called by:
  7225 ;;		_ISR_alta
  7226 ;; This function uses a non-reentrant model
  7227 ;;
  7228                           
  7229                           	psect	text17
  7230  00229C                     __ptext17:
  7231                           	opt stack 0
  7232  00229C                     _usart_rx:
  7233                           	opt stack 26
  7234                           
  7235                           ;CanToSerial.c: 223: if (PIR1bits.RCIF == 1) {
  7236                           
  7237                           ;incstack = 0
  7238  00229C  AA9E               	btfss	3998,5,c	;volatile
  7239  00229E  0012               	return	
  7240                           
  7241                           ;CanToSerial.c: 224: PIE1bits.RCIE = 0;
  7242  0022A0  9A9D               	bcf	3997,5,c	;volatile
  7243                           
  7244                           ;CanToSerial.c: 225: for (unsigned char i = 0; i < 8; i++) {
  7245  0022A2  0E00               	movlw	0
  7246  0022A4  6E02               	movwf	usart_rx@i,c
  7247  0022A6                     i2l3623:
  7248  0022A6  0E07               	movlw	7
  7249  0022A8  6402               	cpfsgt	usart_rx@i,c
  7250  0022AA  D001               	goto	i2l3627
  7251  0022AC  D01C               	goto	i2l3637
  7252  0022AE                     i2l3627:
  7253                           
  7254                           ;CanToSerial.c: 226: LATDbits.LATD1 = ~LATDbits.LATD1;
  7255  0022AE  A28C               	btfss	3980,1,c	;volatile
  7256  0022B0  D002               	goto	i2u430_40
  7257  0022B2  0E01               	movlw	1
  7258  0022B4  D001               	goto	i2u430_46
  7259  0022B6                     i2u430_40:
  7260  0022B6  0E00               	movlw	0
  7261  0022B8                     i2u430_46:
  7262  0022B8  0AFF               	xorlw	255
  7263  0022BA  6E01               	movwf	??_usart_rx& (0+255),c
  7264  0022BC  4601               	rlncf	??_usart_rx,f,c
  7265  0022BE  508C               	movf	3980,w,c	;volatile
  7266  0022C0  1801               	xorwf	??_usart_rx,w,c
  7267  0022C2  0BFD               	andlw	-3
  7268  0022C4  1801               	xorwf	??_usart_rx,w,c
  7269  0022C6  6E8C               	movwf	3980,c	;volatile
  7270  0022C8                     i2l694:
  7271  0022C8  AA9E               	btfss	3998,5,c	;volatile
  7272  0022CA  D7FE               	goto	i2l694
  7273                           
  7274                           ;CanToSerial.c: 229: USART_Rx[i] = RCREG;
  7275  0022CC  5002               	movf	usart_rx@i,w,c
  7276  0022CE  0D01               	mullw	1
  7277  0022D0  0E68               	movlw	low _USART_Rx
  7278  0022D2  24F3               	addwf	prodl,w,c
  7279  0022D4  6ED9               	movwf	fsr2l,c
  7280  0022D6  0E00               	movlw	high _USART_Rx
  7281  0022D8  20F4               	addwfc	prodh,w,c
  7282  0022DA  6EDA               	movwf	fsr2h,c
  7283  0022DC  CFAE FFDF          	movff	4014,indf2	;volatile
  7284                           
  7285                           ;CanToSerial.c: 230: PIR1bits.RCIF = 0;
  7286  0022E0  9A9E               	bcf	3998,5,c	;volatile
  7287  0022E2  2A02               	incf	usart_rx@i,f,c
  7288  0022E4  D7E0               	goto	i2l3623
  7289  0022E6                     i2l3637:
  7290                           
  7291                           ;CanToSerial.c: 231: }
  7292                           ;CanToSerial.c: 232: if ((USART_Rx[0] == 0xAA)&&(USART_Rx[6] == 0xAA)) {
  7293  0022E6  0EAA               	movlw	170
  7294  0022E8  0100               	movlb	0	; () banked
  7295  0022EA  1968               	xorwf	_USART_Rx& (0+255),w,b
  7296  0022EC  A4D8               	btfss	status,2,c
  7297  0022EE  D007               	goto	i2l697
  7298                           
  7299                           ; BSR set to: 0
  7300  0022F0  0EAA               	movlw	170
  7301  0022F2  0100               	movlb	0	; () banked
  7302  0022F4  196E               	xorwf	(_USART_Rx+6)& (0+255),w,b
  7303  0022F6  A4D8               	btfss	status,2,c
  7304  0022F8  D002               	goto	i2l697
  7305                           
  7306                           ; BSR set to: 0
  7307                           ;CanToSerial.c: 233: PORTAbits.RA1 = 1;
  7308  0022FA  8280               	bsf	3968,1,c	;volatile
  7309                           
  7310                           ;CanToSerial.c: 234: newMessageUsart = 1;
  7311  0022FC  8642               	bsf	_newMessageUsart/(0+8),_newMessageUsart& (0+7),c	;volatile
  7312  0022FE                     i2l697:
  7313                           
  7314                           ; BSR set to: 0
  7315                           ;CanToSerial.c: 235: }
  7316                           ;CanToSerial.c: 236: PIR1bits.RCIF = 0;
  7317  0022FE  9A9E               	bcf	3998,5,c	;volatile
  7318                           
  7319                           ;CanToSerial.c: 237: PIE1bits.RCIE = 1;
  7320  002300  8A9D               	bsf	3997,5,c	;volatile
  7321  002302  0012               	return	
  7322  002304                     __end_of_usart_rx:
  7323                           	opt stack 0
  7324                           pclatu	equ	0xFFB
  7325                           pclath	equ	0xFFA
  7326                           tblptru	equ	0xFF8
  7327                           tblptrh	equ	0xFF7
  7328                           tblptrl	equ	0xFF6
  7329                           tablat	equ	0xFF5
  7330                           prodh	equ	0xFF4
  7331                           prodl	equ	0xFF3
  7332                           intcon	equ	0xFF2
  7333                           postinc0	equ	0xFEE
  7334                           fsr0h	equ	0xFEA
  7335                           fsr0l	equ	0xFE9
  7336                           wreg	equ	0xFE8
  7337                           indf1	equ	0xFE7
  7338                           postinc1	equ	0xFE6
  7339                           postdec1	equ	0xFE5
  7340                           fsr1h	equ	0xFE2
  7341                           fsr1l	equ	0xFE1
  7342                           indf2	equ	0xFDF
  7343                           postinc2	equ	0xFDE
  7344                           fsr2h	equ	0xFDA
  7345                           fsr2l	equ	0xFD9
  7346                           status	equ	0xFD8
  7347                           
  7348 ;; *************** function _CANreceiveMessage *****************
  7349 ;; Defined at:
  7350 ;;		line 529 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7351 ;; Parameters:    Size  Location     Type
  7352 ;;  msg             2    0[COMRAM] PTR struct .
  7353 ;;		 -> msg(15), 
  7354 ;; Auto vars:     Size  Location     Type
  7355 ;;  tamp            1   11[COMRAM] unsigned char 
  7356 ;;  error           1   10[COMRAM] unsigned char 
  7357 ;; Return value:  Size  Location     Type
  7358 ;;                  1    wreg      unsigned char 
  7359 ;; Registers used:
  7360 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7361 ;; Tracked objects:
  7362 ;;		On entry : 0/0
  7363 ;;		On exit  : 0/0
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7366 ;;      Params:         2       0       0       0
  7367 ;;      Locals:         2       0       0       0
  7368 ;;      Temps:          8       0       0       0
  7369 ;;      Totals:        12       0       0       0
  7370 ;;Total ram usage:       12 bytes
  7371 ;; Hardware stack levels used:    1
  7372 ;; This function calls:
  7373 ;;		Nothing
  7374 ;; This function is called by:
  7375 ;;		_ISR_alta
  7376 ;; This function uses a non-reentrant model
  7377 ;;
  7378                           
  7379                           	psect	text18
  7380  0011D4                     __ptext18:
  7381                           	opt stack 0
  7382  0011D4                     _CANreceiveMessage:
  7383                           	opt stack 26
  7384                           
  7385                           ;inc\CANlib.h: 531: BYTE tamp;
  7386                           ;inc\CANlib.h: 532: BYTE error = 0;
  7387                           
  7388                           ;incstack = 0
  7389  0011D4  0E00               	movlw	0
  7390  0011D6  6E0B               	movwf	CANreceiveMessage@error,c
  7391                           
  7392                           ;inc\CANlib.h: 534: if (COMSTATbits.RXB0OVFL == 0x01)
  7393  0011D8  BE74               	btfsc	3956,7,c	;volatile
  7394                           
  7395                           ;inc\CANlib.h: 535: error |= CAN_RX_BUFFER_1_OVFL;
  7396  0011DA  800B               	bsf	CANreceiveMessage@error,0,c
  7397                           
  7398                           ;inc\CANlib.h: 537: if (COMSTATbits.RXB1OVFL == 0x01)
  7399  0011DC  BC74               	btfsc	3956,6,c	;volatile
  7400                           
  7401                           ;inc\CANlib.h: 538: error |= CAN_RX_BUFFER_2_OVFL;
  7402  0011DE  820B               	bsf	CANreceiveMessage@error,1,c
  7403                           
  7404                           ;inc\CANlib.h: 541: if (RXB1CONbits.RXFUL ==0x01)
  7405  0011E0  010F               	movlb	15	; () banked
  7406  0011E2  AF50               	btfss	80,7,b	;volatile
  7407  0011E4  D143               	goto	i2l420
  7408                           
  7409                           ; BSR set to: 15
  7410                           ;inc\CANlib.h: 542: {
  7411                           ;inc\CANlib.h: 543: msg->identifier = 0;
  7412  0011E6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7413  0011EA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7414  0011EE  6ADE               	clrf	postinc2,c
  7415  0011F0  6ADE               	clrf	postinc2,c
  7416  0011F2  6ADE               	clrf	postinc2,c
  7417  0011F4  6ADD               	clrf	postdec2,c
  7418                           
  7419                           ; BSR set to: 15
  7420                           ;inc\CANlib.h: 544: msg->data[0] =RXB1D0;
  7421  0011F6  EE20 F004          	lfsr	2,4
  7422  0011FA  5001               	movf	CANreceiveMessage@msg,w,c
  7423  0011FC  26D9               	addwf	fsr2l,f,c
  7424  0011FE  5002               	movf	CANreceiveMessage@msg+1,w,c
  7425  001200  22DA               	addwfc	fsr2h,f,c
  7426  001202  CF56 FFDF          	movff	3926,indf2	;volatile
  7427                           
  7428                           ; BSR set to: 15
  7429                           ;inc\CANlib.h: 545: msg->data[1] =RXB1D1;
  7430  001206  EE20 F005          	lfsr	2,5
  7431  00120A  5001               	movf	CANreceiveMessage@msg,w,c
  7432  00120C  26D9               	addwf	fsr2l,f,c
  7433  00120E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7434  001210  22DA               	addwfc	fsr2h,f,c
  7435  001212  CF57 FFDF          	movff	3927,indf2	;volatile
  7436                           
  7437                           ; BSR set to: 15
  7438                           ;inc\CANlib.h: 546: msg->data[2] =RXB1D2;
  7439  001216  EE20 F006          	lfsr	2,6
  7440  00121A  5001               	movf	CANreceiveMessage@msg,w,c
  7441  00121C  26D9               	addwf	fsr2l,f,c
  7442  00121E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7443  001220  22DA               	addwfc	fsr2h,f,c
  7444  001222  CF58 FFDF          	movff	3928,indf2	;volatile
  7445                           
  7446                           ; BSR set to: 15
  7447                           ;inc\CANlib.h: 547: msg->data[3] =RXB1D3;
  7448  001226  EE20 F007          	lfsr	2,7
  7449  00122A  5001               	movf	CANreceiveMessage@msg,w,c
  7450  00122C  26D9               	addwf	fsr2l,f,c
  7451  00122E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7452  001230  22DA               	addwfc	fsr2h,f,c
  7453  001232  CF59 FFDF          	movff	3929,indf2	;volatile
  7454                           
  7455                           ; BSR set to: 15
  7456                           ;inc\CANlib.h: 548: msg->data[4] =RXB1D4;
  7457  001236  EE20 F008          	lfsr	2,8
  7458  00123A  5001               	movf	CANreceiveMessage@msg,w,c
  7459  00123C  26D9               	addwf	fsr2l,f,c
  7460  00123E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7461  001240  22DA               	addwfc	fsr2h,f,c
  7462  001242  CF5A FFDF          	movff	3930,indf2	;volatile
  7463                           
  7464                           ; BSR set to: 15
  7465                           ;inc\CANlib.h: 549: msg->data[5] =RXB1D5;
  7466  001246  EE20 F009          	lfsr	2,9
  7467  00124A  5001               	movf	CANreceiveMessage@msg,w,c
  7468  00124C  26D9               	addwf	fsr2l,f,c
  7469  00124E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7470  001250  22DA               	addwfc	fsr2h,f,c
  7471  001252  CF5B FFDF          	movff	3931,indf2	;volatile
  7472                           
  7473                           ; BSR set to: 15
  7474                           ;inc\CANlib.h: 550: msg->data[6] =RXB1D6;
  7475  001256  EE20 F00A          	lfsr	2,10
  7476  00125A  5001               	movf	CANreceiveMessage@msg,w,c
  7477  00125C  26D9               	addwf	fsr2l,f,c
  7478  00125E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7479  001260  22DA               	addwfc	fsr2h,f,c
  7480  001262  CF5C FFDF          	movff	3932,indf2	;volatile
  7481                           
  7482                           ; BSR set to: 15
  7483                           ;inc\CANlib.h: 551: msg->data[7] =RXB1D7;
  7484  001266  EE20 F00B          	lfsr	2,11
  7485  00126A  5001               	movf	CANreceiveMessage@msg,w,c
  7486  00126C  26D9               	addwf	fsr2l,f,c
  7487  00126E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7488  001270  22DA               	addwfc	fsr2h,f,c
  7489  001272  CF5D FFDF          	movff	3933,indf2	;volatile
  7490                           
  7491                           ; BSR set to: 15
  7492                           ;inc\CANlib.h: 553: msg->RTR = RXB1DLCbits.RXRTR;
  7493  001276  EE20 F00E          	lfsr	2,14
  7494  00127A  5001               	movf	CANreceiveMessage@msg,w,c
  7495  00127C  26D9               	addwf	fsr2l,f,c
  7496  00127E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7497  001280  22DA               	addwfc	fsr2h,f,c
  7498  001282  010F               	movlb	15	; () banked
  7499  001284  AD55               	btfss	85,6,b	;volatile
  7500  001286  D002               	goto	i2u405_40
  7501  001288  0E01               	movlw	1
  7502  00128A  D001               	goto	i2u405_46
  7503  00128C                     i2u405_40:
  7504  00128C  0E00               	movlw	0
  7505  00128E                     i2u405_46:
  7506  00128E  6EDF               	movwf	indf2,c
  7507                           
  7508                           ; BSR set to: 15
  7509                           ;inc\CANlib.h: 555: msg->length = RXB1DLC & 0x0F;
  7510  001290  EE20 F00D          	lfsr	2,13
  7511  001294  5001               	movf	CANreceiveMessage@msg,w,c
  7512  001296  26D9               	addwf	fsr2l,f,c
  7513  001298  5002               	movf	CANreceiveMessage@msg+1,w,c
  7514  00129A  22DA               	addwfc	fsr2h,f,c
  7515  00129C  010F               	movlb	15	; () banked
  7516  00129E  5155               	movf	85,w,b	;volatile
  7517  0012A0  0B0F               	andlw	15
  7518  0012A2  6EDF               	movwf	indf2,c
  7519                           
  7520                           ; BSR set to: 15
  7521                           ;inc\CANlib.h: 557: msg->type = RXB1SIDLbits.EXID;
  7522  0012A4  EE20 F00C          	lfsr	2,12
  7523  0012A8  5001               	movf	CANreceiveMessage@msg,w,c
  7524  0012AA  26D9               	addwf	fsr2l,f,c
  7525  0012AC  5002               	movf	CANreceiveMessage@msg+1,w,c
  7526  0012AE  22DA               	addwfc	fsr2h,f,c
  7527  0012B0  010F               	movlb	15	; () banked
  7528  0012B2  A752               	btfss	82,3,b	;volatile
  7529  0012B4  D002               	goto	i2u406_40
  7530  0012B6  0E01               	movlw	1
  7531  0012B8  D001               	goto	i2u406_46
  7532  0012BA                     i2u406_40:
  7533  0012BA  0E00               	movlw	0
  7534  0012BC                     i2u406_46:
  7535  0012BC  6EDF               	movwf	indf2,c
  7536                           
  7537                           ; BSR set to: 15
  7538                           ;inc\CANlib.h: 559: if (RXB1SIDLbits.EXID == 0)
  7539  0012BE  010F               	movlb	15	; () banked
  7540  0012C0  B752               	btfsc	82,3,b	;volatile
  7541  0012C2  D044               	goto	i2l3515
  7542                           
  7543                           ; BSR set to: 15
  7544                           ;inc\CANlib.h: 560: {
  7545                           ;inc\CANlib.h: 561: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7546  0012C4  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7547  0012C8  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7548  0012CA  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7549  0012CC  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7550  0012CE  0E03               	movlw	3
  7551  0012D0                     i2u408_45:
  7552  0012D0  90D8               	bcf	status,0,c
  7553  0012D2  3603               	rlcf	??_CANreceiveMessage,f,c
  7554  0012D4  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7555  0012D6  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7556  0012D8  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7557  0012DA  2EE8               	decfsz	wreg,f,c
  7558  0012DC  D7F9               	goto	i2u408_45
  7559  0012DE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7560  0012E2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7561  0012E6  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7562  0012EA  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7563  0012EE  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7564  0012F2  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7565                           
  7566                           ; BSR set to: 15
  7567                           ;inc\CANlib.h: 562: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7568  0012F6  010F               	movlb	15	; () banked
  7569  0012F8  3952               	swapf	82,w,b	;volatile
  7570  0012FA  42E8               	rrncf	wreg,f,c
  7571  0012FC  0B07               	andlw	7
  7572  0012FE  0B07               	andlw	7
  7573  001300  6E0C               	movwf	CANreceiveMessage@tamp,c
  7574                           
  7575                           ; BSR set to: 15
  7576                           ;inc\CANlib.h: 563: msg->identifier = msg->identifier + tamp;
  7577  001302  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7578  001306  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7579  00130A  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7580  00130E  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7581  001312  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7582  001316  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7583  00131A  500C               	movf	CANreceiveMessage@tamp,w,c
  7584  00131C  2403               	addwf	??_CANreceiveMessage,w,c
  7585  00131E  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7586  001320  0E00               	movlw	0
  7587  001322  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7588  001324  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7589  001326  0E00               	movlw	0
  7590  001328  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7591  00132A  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7592  00132C  0E00               	movlw	0
  7593  00132E  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7594  001330  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7595  001332  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7596  001336  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7597  00133A  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7598  00133E  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7599  001342  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7600  001346  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7601                           
  7602                           ;inc\CANlib.h: 564: }
  7603  00134A  D08D               	goto	i2l3541
  7604  00134C                     i2l3515:
  7605                           
  7606                           ; BSR set to: 15
  7607                           ;inc\CANlib.h: 565: else
  7608                           ;inc\CANlib.h: 566: {
  7609                           ;inc\CANlib.h: 567: msg->identifier = (unsigned long) RXB1EIDL;
  7610  00134C  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  7611  001350  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7612  001352  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7613  001354  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7614  001356  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7615  00135A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7616  00135E  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7617  001362  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7618  001366  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7619  00136A  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7620                           
  7621                           ; BSR set to: 15
  7622                           ;inc\CANlib.h: 568: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7623  00136E  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  7624  001372  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7625  001374  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7626  001376  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7627  001378  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7628  00137C  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7629  001380  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7630  001384  6A03               	clrf	??_CANreceiveMessage,c
  7631  001386  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7632  00138A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7633  00138E  5003               	movf	??_CANreceiveMessage,w,c
  7634  001390  26DE               	addwf	postinc2,f,c
  7635  001392  5004               	movf	??_CANreceiveMessage+1,w,c
  7636  001394  22DE               	addwfc	postinc2,f,c
  7637  001396  5005               	movf	??_CANreceiveMessage+2,w,c
  7638  001398  22DE               	addwfc	postinc2,f,c
  7639  00139A  5006               	movf	??_CANreceiveMessage+3,w,c
  7640  00139C  22DE               	addwfc	postinc2,f,c
  7641                           
  7642                           ; BSR set to: 15
  7643                           ;inc\CANlib.h: 570: if (RXB1SIDLbits.EID16)
  7644  00139E  010F               	movlb	15	; () banked
  7645  0013A0  A152               	btfss	82,0,b	;volatile
  7646  0013A2  D00C               	goto	i2l3523
  7647                           
  7648                           ; BSR set to: 15
  7649                           ;inc\CANlib.h: 571: msg->identifier |= 0x00010000;
  7650  0013A4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7651  0013A8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7652  0013AC  0E00               	movlw	0
  7653  0013AE  12DE               	iorwf	postinc2,f,c
  7654  0013B0  0E00               	movlw	0
  7655  0013B2  12DE               	iorwf	postinc2,f,c
  7656  0013B4  0E01               	movlw	1
  7657  0013B6  12DE               	iorwf	postinc2,f,c
  7658  0013B8  0E00               	movlw	0
  7659  0013BA  12DE               	iorwf	postinc2,f,c
  7660  0013BC                     i2l3523:
  7661                           
  7662                           ; BSR set to: 15
  7663                           ;inc\CANlib.h: 572: if (RXB1SIDLbits.EID17)
  7664  0013BC  010F               	movlb	15	; () banked
  7665  0013BE  A352               	btfss	82,1,b	;volatile
  7666  0013C0  D00C               	goto	i2l3527
  7667                           
  7668                           ; BSR set to: 15
  7669                           ;inc\CANlib.h: 573: msg->identifier |= 0x00020000;
  7670  0013C2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7671  0013C6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7672  0013CA  0E00               	movlw	0
  7673  0013CC  12DE               	iorwf	postinc2,f,c
  7674  0013CE  0E00               	movlw	0
  7675  0013D0  12DE               	iorwf	postinc2,f,c
  7676  0013D2  0E02               	movlw	2
  7677  0013D4  12DE               	iorwf	postinc2,f,c
  7678  0013D6  0E00               	movlw	0
  7679  0013D8  12DE               	iorwf	postinc2,f,c
  7680  0013DA                     i2l3527:
  7681                           
  7682                           ; BSR set to: 15
  7683                           ;inc\CANlib.h: 574: if (RXB1SIDLbits.SID0)
  7684  0013DA  010F               	movlb	15	; () banked
  7685  0013DC  AB52               	btfss	82,5,b	;volatile
  7686  0013DE  D00C               	goto	i2l3531
  7687                           
  7688                           ; BSR set to: 15
  7689                           ;inc\CANlib.h: 575: msg->identifier |= 0x00040000;
  7690  0013E0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7691  0013E4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7692  0013E8  0E00               	movlw	0
  7693  0013EA  12DE               	iorwf	postinc2,f,c
  7694  0013EC  0E00               	movlw	0
  7695  0013EE  12DE               	iorwf	postinc2,f,c
  7696  0013F0  0E04               	movlw	4
  7697  0013F2  12DE               	iorwf	postinc2,f,c
  7698  0013F4  0E00               	movlw	0
  7699  0013F6  12DE               	iorwf	postinc2,f,c
  7700  0013F8                     i2l3531:
  7701                           
  7702                           ; BSR set to: 15
  7703                           ;inc\CANlib.h: 576: if (RXB1SIDLbits.SID1)
  7704  0013F8  010F               	movlb	15	; () banked
  7705  0013FA  AD52               	btfss	82,6,b	;volatile
  7706  0013FC  D00C               	goto	i2l3535
  7707                           
  7708                           ; BSR set to: 15
  7709                           ;inc\CANlib.h: 577: msg->identifier |= 0x00080000;
  7710  0013FE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7711  001402  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7712  001406  0E00               	movlw	0
  7713  001408  12DE               	iorwf	postinc2,f,c
  7714  00140A  0E00               	movlw	0
  7715  00140C  12DE               	iorwf	postinc2,f,c
  7716  00140E  0E08               	movlw	8
  7717  001410  12DE               	iorwf	postinc2,f,c
  7718  001412  0E00               	movlw	0
  7719  001414  12DE               	iorwf	postinc2,f,c
  7720  001416                     i2l3535:
  7721                           
  7722                           ; BSR set to: 15
  7723                           ;inc\CANlib.h: 578: if (RXB1SIDLbits.SID2)
  7724  001416  010F               	movlb	15	; () banked
  7725  001418  AF52               	btfss	82,7,b	;volatile
  7726  00141A  D00C               	goto	i2l3539
  7727                           
  7728                           ; BSR set to: 15
  7729                           ;inc\CANlib.h: 579: msg->identifier |= 0x00100000;
  7730  00141C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7731  001420  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7732  001424  0E00               	movlw	0
  7733  001426  12DE               	iorwf	postinc2,f,c
  7734  001428  0E00               	movlw	0
  7735  00142A  12DE               	iorwf	postinc2,f,c
  7736  00142C  0E10               	movlw	16
  7737  00142E  12DE               	iorwf	postinc2,f,c
  7738  001430  0E00               	movlw	0
  7739  001432  12DE               	iorwf	postinc2,f,c
  7740  001434                     i2l3539:
  7741                           
  7742                           ; BSR set to: 15
  7743                           ;inc\CANlib.h: 581: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  7744  001434  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7745  001438  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7746  00143A  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7747  00143C  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7748  00143E  0E15               	movlw	21
  7749  001440                     i2u414_45:
  7750  001440  90D8               	bcf	status,0,c
  7751  001442  3603               	rlcf	??_CANreceiveMessage,f,c
  7752  001444  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7753  001446  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7754  001448  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7755  00144A  2EE8               	decfsz	wreg,f,c
  7756  00144C  D7F9               	goto	i2u414_45
  7757  00144E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7758  001452  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7759  001456  5003               	movf	??_CANreceiveMessage,w,c
  7760  001458  12DE               	iorwf	postinc2,f,c
  7761  00145A  5004               	movf	??_CANreceiveMessage+1,w,c
  7762  00145C  12DE               	iorwf	postinc2,f,c
  7763  00145E  5005               	movf	??_CANreceiveMessage+2,w,c
  7764  001460  12DE               	iorwf	postinc2,f,c
  7765  001462  5006               	movf	??_CANreceiveMessage+3,w,c
  7766  001464  12DE               	iorwf	postinc2,f,c
  7767  001466                     i2l3541:
  7768                           
  7769                           ; BSR set to: 15
  7770                           ;inc\CANlib.h: 582: }
  7771                           ;inc\CANlib.h: 584: RXB1CONbits.RXFUL = 0x00;
  7772  001466  010F               	movlb	15	; () banked
  7773  001468  9F50               	bcf	80,7,b	;volatile
  7774                           
  7775                           ; BSR set to: 15
  7776                           ;inc\CANlib.h: 585: return (error);
  7777                           ;	Return value of _CANreceiveMessage is never used
  7778  00146A  0012               	return	
  7779  00146C                     i2l420:
  7780                           
  7781                           ; BSR set to: 15
  7782                           ;inc\CANlib.h: 586: }
  7783                           ;inc\CANlib.h: 588: if (RXB0CONbits.RXFUL ==0x01)
  7784  00146C  AE60               	btfss	3936,7,c	;volatile
  7785  00146E  0012               	return	
  7786                           
  7787                           ; BSR set to: 15
  7788                           ;inc\CANlib.h: 589: {
  7789                           ;inc\CANlib.h: 590: msg->identifier = 0;
  7790  001470  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7791  001474  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7792  001478  6ADE               	clrf	postinc2,c
  7793  00147A  6ADE               	clrf	postinc2,c
  7794  00147C  6ADE               	clrf	postinc2,c
  7795  00147E  6ADD               	clrf	postdec2,c
  7796                           
  7797                           ; BSR set to: 15
  7798                           ;inc\CANlib.h: 591: msg->data[0] =RXB0D0;
  7799  001480  EE20 F004          	lfsr	2,4
  7800  001484  5001               	movf	CANreceiveMessage@msg,w,c
  7801  001486  26D9               	addwf	fsr2l,f,c
  7802  001488  5002               	movf	CANreceiveMessage@msg+1,w,c
  7803  00148A  22DA               	addwfc	fsr2h,f,c
  7804  00148C  CF66 FFDF          	movff	3942,indf2	;volatile
  7805                           
  7806                           ; BSR set to: 15
  7807                           ;inc\CANlib.h: 592: msg->data[1] =RXB0D1;
  7808  001490  EE20 F005          	lfsr	2,5
  7809  001494  5001               	movf	CANreceiveMessage@msg,w,c
  7810  001496  26D9               	addwf	fsr2l,f,c
  7811  001498  5002               	movf	CANreceiveMessage@msg+1,w,c
  7812  00149A  22DA               	addwfc	fsr2h,f,c
  7813  00149C  CF67 FFDF          	movff	3943,indf2	;volatile
  7814                           
  7815                           ; BSR set to: 15
  7816                           ;inc\CANlib.h: 593: msg->data[2] =RXB0D2;
  7817  0014A0  EE20 F006          	lfsr	2,6
  7818  0014A4  5001               	movf	CANreceiveMessage@msg,w,c
  7819  0014A6  26D9               	addwf	fsr2l,f,c
  7820  0014A8  5002               	movf	CANreceiveMessage@msg+1,w,c
  7821  0014AA  22DA               	addwfc	fsr2h,f,c
  7822  0014AC  CF68 FFDF          	movff	3944,indf2	;volatile
  7823                           
  7824                           ; BSR set to: 15
  7825                           ;inc\CANlib.h: 594: msg->data[3] =RXB0D3;
  7826  0014B0  EE20 F007          	lfsr	2,7
  7827  0014B4  5001               	movf	CANreceiveMessage@msg,w,c
  7828  0014B6  26D9               	addwf	fsr2l,f,c
  7829  0014B8  5002               	movf	CANreceiveMessage@msg+1,w,c
  7830  0014BA  22DA               	addwfc	fsr2h,f,c
  7831  0014BC  CF69 FFDF          	movff	3945,indf2	;volatile
  7832                           
  7833                           ; BSR set to: 15
  7834                           ;inc\CANlib.h: 595: msg->data[4] =RXB0D4;
  7835  0014C0  EE20 F008          	lfsr	2,8
  7836  0014C4  5001               	movf	CANreceiveMessage@msg,w,c
  7837  0014C6  26D9               	addwf	fsr2l,f,c
  7838  0014C8  5002               	movf	CANreceiveMessage@msg+1,w,c
  7839  0014CA  22DA               	addwfc	fsr2h,f,c
  7840  0014CC  CF6A FFDF          	movff	3946,indf2	;volatile
  7841                           
  7842                           ; BSR set to: 15
  7843                           ;inc\CANlib.h: 596: msg->data[5] =RXB0D5;
  7844  0014D0  EE20 F009          	lfsr	2,9
  7845  0014D4  5001               	movf	CANreceiveMessage@msg,w,c
  7846  0014D6  26D9               	addwf	fsr2l,f,c
  7847  0014D8  5002               	movf	CANreceiveMessage@msg+1,w,c
  7848  0014DA  22DA               	addwfc	fsr2h,f,c
  7849  0014DC  CF6B FFDF          	movff	3947,indf2	;volatile
  7850                           
  7851                           ; BSR set to: 15
  7852                           ;inc\CANlib.h: 597: msg->data[6] =RXB0D6;
  7853  0014E0  EE20 F00A          	lfsr	2,10
  7854  0014E4  5001               	movf	CANreceiveMessage@msg,w,c
  7855  0014E6  26D9               	addwf	fsr2l,f,c
  7856  0014E8  5002               	movf	CANreceiveMessage@msg+1,w,c
  7857  0014EA  22DA               	addwfc	fsr2h,f,c
  7858  0014EC  CF6C FFDF          	movff	3948,indf2	;volatile
  7859                           
  7860                           ; BSR set to: 15
  7861                           ;inc\CANlib.h: 598: msg->data[7] =RXB0D7;
  7862  0014F0  EE20 F00B          	lfsr	2,11
  7863  0014F4  5001               	movf	CANreceiveMessage@msg,w,c
  7864  0014F6  26D9               	addwf	fsr2l,f,c
  7865  0014F8  5002               	movf	CANreceiveMessage@msg+1,w,c
  7866  0014FA  22DA               	addwfc	fsr2h,f,c
  7867  0014FC  CF6D FFDF          	movff	3949,indf2	;volatile
  7868                           
  7869                           ; BSR set to: 15
  7870                           ;inc\CANlib.h: 600: msg->RTR = RXB0DLCbits.RXRTR;
  7871  001500  EE20 F00E          	lfsr	2,14
  7872  001504  5001               	movf	CANreceiveMessage@msg,w,c
  7873  001506  26D9               	addwf	fsr2l,f,c
  7874  001508  5002               	movf	CANreceiveMessage@msg+1,w,c
  7875  00150A  22DA               	addwfc	fsr2h,f,c
  7876  00150C  AC65               	btfss	3941,6,c	;volatile
  7877  00150E  D002               	goto	i2u416_40
  7878  001510  0E01               	movlw	1
  7879  001512  D001               	goto	i2u416_46
  7880  001514                     i2u416_40:
  7881  001514  0E00               	movlw	0
  7882  001516                     i2u416_46:
  7883  001516  6EDF               	movwf	indf2,c
  7884                           
  7885                           ; BSR set to: 15
  7886                           ;inc\CANlib.h: 602: msg->length = RXB0DLC & 0x0F;
  7887  001518  EE20 F00D          	lfsr	2,13
  7888  00151C  5001               	movf	CANreceiveMessage@msg,w,c
  7889  00151E  26D9               	addwf	fsr2l,f,c
  7890  001520  5002               	movf	CANreceiveMessage@msg+1,w,c
  7891  001522  22DA               	addwfc	fsr2h,f,c
  7892  001524  5065               	movf	3941,w,c	;volatile
  7893  001526  0B0F               	andlw	15
  7894  001528  6EDF               	movwf	indf2,c
  7895                           
  7896                           ; BSR set to: 15
  7897                           ;inc\CANlib.h: 604: msg->type = RXB0SIDLbits.EXID;
  7898  00152A  EE20 F00C          	lfsr	2,12
  7899  00152E  5001               	movf	CANreceiveMessage@msg,w,c
  7900  001530  26D9               	addwf	fsr2l,f,c
  7901  001532  5002               	movf	CANreceiveMessage@msg+1,w,c
  7902  001534  22DA               	addwfc	fsr2h,f,c
  7903  001536  A662               	btfss	3938,3,c	;volatile
  7904  001538  D002               	goto	i2u417_40
  7905  00153A  0E01               	movlw	1
  7906  00153C  D001               	goto	i2u417_46
  7907  00153E                     i2u417_40:
  7908  00153E  0E00               	movlw	0
  7909  001540                     i2u417_46:
  7910  001540  6EDF               	movwf	indf2,c
  7911                           
  7912                           ; BSR set to: 15
  7913                           ;inc\CANlib.h: 606: if (RXB0SIDLbits.EXID == 0)
  7914  001542  B662               	btfsc	3938,3,c	;volatile
  7915  001544  D043               	goto	i2l3577
  7916                           
  7917                           ; BSR set to: 15
  7918                           ;inc\CANlib.h: 607: {
  7919                           ;inc\CANlib.h: 608: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  7920  001546  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  7921  00154A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7922  00154C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7923  00154E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7924  001550  0E03               	movlw	3
  7925  001552                     i2u419_45:
  7926  001552  90D8               	bcf	status,0,c
  7927  001554  3603               	rlcf	??_CANreceiveMessage,f,c
  7928  001556  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7929  001558  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7930  00155A  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7931  00155C  2EE8               	decfsz	wreg,f,c
  7932  00155E  D7F9               	goto	i2u419_45
  7933  001560  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7934  001564  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7935  001568  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7936  00156C  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7937  001570  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7938  001574  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7939                           
  7940                           ; BSR set to: 15
  7941                           ;inc\CANlib.h: 609: tamp = (RXB0SIDL >> 5 ) & 0x07;
  7942  001578  3862               	swapf	3938,w,c	;volatile
  7943  00157A  42E8               	rrncf	wreg,f,c
  7944  00157C  0B07               	andlw	7
  7945  00157E  0B07               	andlw	7
  7946  001580  6E0C               	movwf	CANreceiveMessage@tamp,c
  7947                           
  7948                           ; BSR set to: 15
  7949                           ;inc\CANlib.h: 610: msg->identifier = msg->identifier + tamp;
  7950  001582  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7951  001586  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7952  00158A  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7953  00158E  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7954  001592  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7955  001596  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7956  00159A  500C               	movf	CANreceiveMessage@tamp,w,c
  7957  00159C  2403               	addwf	??_CANreceiveMessage,w,c
  7958  00159E  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7959  0015A0  0E00               	movlw	0
  7960  0015A2  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7961  0015A4  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7962  0015A6  0E00               	movlw	0
  7963  0015A8  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7964  0015AA  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7965  0015AC  0E00               	movlw	0
  7966  0015AE  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7967  0015B0  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7968  0015B2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7969  0015B6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7970  0015BA  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7971  0015BE  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7972  0015C2  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7973  0015C6  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7974                           
  7975                           ;inc\CANlib.h: 611: }
  7976  0015CA  D088               	goto	i2l3603
  7977  0015CC                     i2l3577:
  7978                           
  7979                           ; BSR set to: 15
  7980                           ;inc\CANlib.h: 612: else
  7981                           ;inc\CANlib.h: 613: {
  7982                           ;inc\CANlib.h: 614: msg->identifier = (unsigned long) RXB0EIDL;
  7983  0015CC  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  7984  0015D0  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7985  0015D2  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7986  0015D4  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7987  0015D6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7988  0015DA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7989  0015DE  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7990  0015E2  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7991  0015E6  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7992  0015EA  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7993                           
  7994                           ; BSR set to: 15
  7995                           ;inc\CANlib.h: 615: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  7996  0015EE  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  7997  0015F2  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7998  0015F4  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7999  0015F6  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8000  0015F8  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8001  0015FC  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8002  001600  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8003  001604  6A03               	clrf	??_CANreceiveMessage,c
  8004  001606  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8005  00160A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8006  00160E  5003               	movf	??_CANreceiveMessage,w,c
  8007  001610  26DE               	addwf	postinc2,f,c
  8008  001612  5004               	movf	??_CANreceiveMessage+1,w,c
  8009  001614  22DE               	addwfc	postinc2,f,c
  8010  001616  5005               	movf	??_CANreceiveMessage+2,w,c
  8011  001618  22DE               	addwfc	postinc2,f,c
  8012  00161A  5006               	movf	??_CANreceiveMessage+3,w,c
  8013  00161C  22DE               	addwfc	postinc2,f,c
  8014                           
  8015                           ; BSR set to: 15
  8016                           ;inc\CANlib.h: 617: if (RXB0SIDLbits.EID16)
  8017  00161E  A062               	btfss	3938,0,c	;volatile
  8018  001620  D00C               	goto	i2l3585
  8019                           
  8020                           ; BSR set to: 15
  8021                           ;inc\CANlib.h: 618: msg->identifier |= 0x00010000;
  8022  001622  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8023  001626  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8024  00162A  0E00               	movlw	0
  8025  00162C  12DE               	iorwf	postinc2,f,c
  8026  00162E  0E00               	movlw	0
  8027  001630  12DE               	iorwf	postinc2,f,c
  8028  001632  0E01               	movlw	1
  8029  001634  12DE               	iorwf	postinc2,f,c
  8030  001636  0E00               	movlw	0
  8031  001638  12DE               	iorwf	postinc2,f,c
  8032  00163A                     i2l3585:
  8033                           
  8034                           ; BSR set to: 15
  8035                           ;inc\CANlib.h: 619: if (RXB0SIDLbits.EID17)
  8036  00163A  A262               	btfss	3938,1,c	;volatile
  8037  00163C  D00C               	goto	i2l3589
  8038                           
  8039                           ; BSR set to: 15
  8040                           ;inc\CANlib.h: 620: msg->identifier |= 0x00020000;
  8041  00163E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8042  001642  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8043  001646  0E00               	movlw	0
  8044  001648  12DE               	iorwf	postinc2,f,c
  8045  00164A  0E00               	movlw	0
  8046  00164C  12DE               	iorwf	postinc2,f,c
  8047  00164E  0E02               	movlw	2
  8048  001650  12DE               	iorwf	postinc2,f,c
  8049  001652  0E00               	movlw	0
  8050  001654  12DE               	iorwf	postinc2,f,c
  8051  001656                     i2l3589:
  8052                           
  8053                           ; BSR set to: 15
  8054                           ;inc\CANlib.h: 621: if (RXB0SIDLbits.SID0)
  8055  001656  AA62               	btfss	3938,5,c	;volatile
  8056  001658  D00C               	goto	i2l3593
  8057                           
  8058                           ; BSR set to: 15
  8059                           ;inc\CANlib.h: 622: msg->identifier |= 0x00040000;
  8060  00165A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8061  00165E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8062  001662  0E00               	movlw	0
  8063  001664  12DE               	iorwf	postinc2,f,c
  8064  001666  0E00               	movlw	0
  8065  001668  12DE               	iorwf	postinc2,f,c
  8066  00166A  0E04               	movlw	4
  8067  00166C  12DE               	iorwf	postinc2,f,c
  8068  00166E  0E00               	movlw	0
  8069  001670  12DE               	iorwf	postinc2,f,c
  8070  001672                     i2l3593:
  8071                           
  8072                           ; BSR set to: 15
  8073                           ;inc\CANlib.h: 623: if (RXB0SIDLbits.SID1)
  8074  001672  AC62               	btfss	3938,6,c	;volatile
  8075  001674  D00C               	goto	i2l3597
  8076                           
  8077                           ; BSR set to: 15
  8078                           ;inc\CANlib.h: 624: msg->identifier |= 0x00080000;
  8079  001676  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8080  00167A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8081  00167E  0E00               	movlw	0
  8082  001680  12DE               	iorwf	postinc2,f,c
  8083  001682  0E00               	movlw	0
  8084  001684  12DE               	iorwf	postinc2,f,c
  8085  001686  0E08               	movlw	8
  8086  001688  12DE               	iorwf	postinc2,f,c
  8087  00168A  0E00               	movlw	0
  8088  00168C  12DE               	iorwf	postinc2,f,c
  8089  00168E                     i2l3597:
  8090                           
  8091                           ; BSR set to: 15
  8092                           ;inc\CANlib.h: 625: if (RXB0SIDLbits.SID2)
  8093  00168E  AE62               	btfss	3938,7,c	;volatile
  8094  001690  D00C               	goto	i2l3601
  8095                           
  8096                           ; BSR set to: 15
  8097                           ;inc\CANlib.h: 626: msg->identifier |= 0x00100000;
  8098  001692  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8099  001696  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8100  00169A  0E00               	movlw	0
  8101  00169C  12DE               	iorwf	postinc2,f,c
  8102  00169E  0E00               	movlw	0
  8103  0016A0  12DE               	iorwf	postinc2,f,c
  8104  0016A2  0E10               	movlw	16
  8105  0016A4  12DE               	iorwf	postinc2,f,c
  8106  0016A6  0E00               	movlw	0
  8107  0016A8  12DE               	iorwf	postinc2,f,c
  8108  0016AA                     i2l3601:
  8109                           
  8110                           ; BSR set to: 15
  8111                           ;inc\CANlib.h: 628: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8112  0016AA  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8113  0016AE  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8114  0016B0  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8115  0016B2  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8116  0016B4  0E15               	movlw	21
  8117  0016B6                     i2u425_45:
  8118  0016B6  90D8               	bcf	status,0,c
  8119  0016B8  3603               	rlcf	??_CANreceiveMessage,f,c
  8120  0016BA  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8121  0016BC  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8122  0016BE  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8123  0016C0  2EE8               	decfsz	wreg,f,c
  8124  0016C2  D7F9               	goto	i2u425_45
  8125  0016C4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8126  0016C8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8127  0016CC  5003               	movf	??_CANreceiveMessage,w,c
  8128  0016CE  12DE               	iorwf	postinc2,f,c
  8129  0016D0  5004               	movf	??_CANreceiveMessage+1,w,c
  8130  0016D2  12DE               	iorwf	postinc2,f,c
  8131  0016D4  5005               	movf	??_CANreceiveMessage+2,w,c
  8132  0016D6  12DE               	iorwf	postinc2,f,c
  8133  0016D8  5006               	movf	??_CANreceiveMessage+3,w,c
  8134  0016DA  12DE               	iorwf	postinc2,f,c
  8135  0016DC                     i2l3603:
  8136                           
  8137                           ; BSR set to: 15
  8138                           ;inc\CANlib.h: 630: }
  8139                           ;inc\CANlib.h: 631: RXB0CONbits.RXFUL = 0x00;
  8140  0016DC  9E60               	bcf	3936,7,c	;volatile
  8141                           
  8142                           ; BSR set to: 15
  8143                           ;inc\CANlib.h: 633: return (error);
  8144                           ;	Return value of _CANreceiveMessage is never used
  8145  0016DE  0012               	return	
  8146  0016E0                     __end_of_CANreceiveMessage:
  8147                           	opt stack 0
  8148                           pclatu	equ	0xFFB
  8149                           pclath	equ	0xFFA
  8150                           tblptru	equ	0xFF8
  8151                           tblptrh	equ	0xFF7
  8152                           tblptrl	equ	0xFF6
  8153                           tablat	equ	0xFF5
  8154                           prodh	equ	0xFF4
  8155                           prodl	equ	0xFF3
  8156                           intcon	equ	0xFF2
  8157                           postinc0	equ	0xFEE
  8158                           fsr0h	equ	0xFEA
  8159                           fsr0l	equ	0xFE9
  8160                           wreg	equ	0xFE8
  8161                           indf1	equ	0xFE7
  8162                           postinc1	equ	0xFE6
  8163                           postdec1	equ	0xFE5
  8164                           fsr1h	equ	0xFE2
  8165                           fsr1l	equ	0xFE1
  8166                           indf2	equ	0xFDF
  8167                           postinc2	equ	0xFDE
  8168                           postdec2	equ	0xFDD
  8169                           fsr2h	equ	0xFDA
  8170                           fsr2l	equ	0xFD9
  8171                           status	equ	0xFD8
  8172                           
  8173 ;; *************** function _CANisRxReady *****************
  8174 ;; Defined at:
  8175 ;;		line 1164 in file "D:/Documenti/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8176 ;; Parameters:    Size  Location     Type
  8177 ;;		None
  8178 ;; Auto vars:     Size  Location     Type
  8179 ;;		None
  8180 ;; Return value:  Size  Location     Type
  8181 ;;                  1    wreg      unsigned char 
  8182 ;; Registers used:
  8183 ;;		wreg, status,2
  8184 ;; Tracked objects:
  8185 ;;		On entry : 0/0
  8186 ;;		On exit  : 0/0
  8187 ;;		Unchanged: 0/0
  8188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8189 ;;      Params:         0       0       0       0
  8190 ;;      Locals:         1       0       0       0
  8191 ;;      Temps:          0       0       0       0
  8192 ;;      Totals:         1       0       0       0
  8193 ;;Total ram usage:        1 bytes
  8194 ;; Hardware stack levels used:    1
  8195 ;; This function calls:
  8196 ;;		Nothing
  8197 ;; This function is called by:
  8198 ;;		_ISR_alta
  8199 ;; This function uses a non-reentrant model
  8200 ;;
  8201                           
  8202                           	psect	text19
  8203  002454                     __ptext19:
  8204                           	opt stack 0
  8205  002454                     _CANisRxReady:
  8206                           	opt stack 26
  8207                           
  8208                           ;inc\CANlib.h: 1166: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8209                           
  8210                           ; BSR set to: 15
  8211                           ;incstack = 0
  8212  002454  0E01               	movlw	1
  8213  002456  6E01               	movwf	_CANisRxReady$3215,c
  8214  002458  BE60               	btfsc	3936,7,c	;volatile
  8215  00245A  D005               	goto	i2l571
  8216  00245C  010F               	movlb	15	; () banked
  8217  00245E  BF50               	btfsc	80,7,b	;volatile
  8218  002460  D002               	goto	i2l571
  8219                           
  8220                           ; BSR set to: 15
  8221  002462  0E00               	movlw	0
  8222  002464  6E01               	movwf	_CANisRxReady$3215,c
  8223  002466                     i2l571:
  8224  002466  5001               	movf	_CANisRxReady$3215,w,c
  8225  002468  0012               	return	
  8226  00246A                     __end_of_CANisRxReady:
  8227                           	opt stack 0
  8228  0000                     pclatu	equ	0xFFB
  8229                           pclath	equ	0xFFA
  8230                           tblptru	equ	0xFF8
  8231                           tblptrh	equ	0xFF7
  8232                           tblptrl	equ	0xFF6
  8233                           tablat	equ	0xFF5
  8234                           prodh	equ	0xFF4
  8235                           prodl	equ	0xFF3
  8236                           intcon	equ	0xFF2
  8237                           postinc0	equ	0xFEE
  8238                           fsr0h	equ	0xFEA
  8239                           fsr0l	equ	0xFE9
  8240                           wreg	equ	0xFE8
  8241                           indf1	equ	0xFE7
  8242                           postinc1	equ	0xFE6
  8243                           postdec1	equ	0xFE5
  8244                           fsr1h	equ	0xFE2
  8245                           fsr1l	equ	0xFE1
  8246                           indf2	equ	0xFDF
  8247                           postinc2	equ	0xFDE
  8248                           postdec2	equ	0xFDD
  8249                           fsr2h	equ	0xFDA
  8250                           fsr2l	equ	0xFD9
  8251                           status	equ	0xFD8
  8252                           pclatu	equ	0xFFB
  8253                           pclath	equ	0xFFA
  8254                           tblptru	equ	0xFF8
  8255                           tblptrh	equ	0xFF7
  8256                           tblptrl	equ	0xFF6
  8257                           tablat	equ	0xFF5
  8258                           prodh	equ	0xFF4
  8259                           prodl	equ	0xFF3
  8260                           intcon	equ	0xFF2
  8261                           postinc0	equ	0xFEE
  8262                           fsr0h	equ	0xFEA
  8263                           fsr0l	equ	0xFE9
  8264                           wreg	equ	0xFE8
  8265                           indf1	equ	0xFE7
  8266                           postinc1	equ	0xFE6
  8267                           postdec1	equ	0xFE5
  8268                           fsr1h	equ	0xFE2
  8269                           fsr1l	equ	0xFE1
  8270                           indf2	equ	0xFDF
  8271                           postinc2	equ	0xFDE
  8272                           postdec2	equ	0xFDD
  8273                           fsr2h	equ	0xFDA
  8274                           fsr2l	equ	0xFD9
  8275                           status	equ	0xFD8
  8276                           
  8277                           	psect	rparam
  8278  0000                     pclatu	equ	0xFFB
  8279                           pclath	equ	0xFFA
  8280                           tblptru	equ	0xFF8
  8281                           tblptrh	equ	0xFF7
  8282                           tblptrl	equ	0xFF6
  8283                           tablat	equ	0xFF5
  8284                           prodh	equ	0xFF4
  8285                           prodl	equ	0xFF3
  8286                           intcon	equ	0xFF2
  8287                           postinc0	equ	0xFEE
  8288                           fsr0h	equ	0xFEA
  8289                           fsr0l	equ	0xFE9
  8290                           wreg	equ	0xFE8
  8291                           indf1	equ	0xFE7
  8292                           postinc1	equ	0xFE6
  8293                           postdec1	equ	0xFE5
  8294                           fsr1h	equ	0xFE2
  8295                           fsr1l	equ	0xFE1
  8296                           indf2	equ	0xFDF
  8297                           postinc2	equ	0xFDE
  8298                           postdec2	equ	0xFDD
  8299                           fsr2h	equ	0xFDA
  8300                           fsr2l	equ	0xFD9
  8301                           status	equ	0xFD8
  8302                           
  8303                           	psect	temp
  8304  000043                     btemp:
  8305                           	opt stack 0
  8306  000043                     	ds	1
  8307  0000                     int$flags	set	btemp
  8308                           pclatu	equ	0xFFB
  8309                           pclath	equ	0xFFA
  8310                           tblptru	equ	0xFF8
  8311                           tblptrh	equ	0xFF7
  8312                           tblptrl	equ	0xFF6
  8313                           tablat	equ	0xFF5
  8314                           prodh	equ	0xFF4
  8315                           prodl	equ	0xFF3
  8316                           intcon	equ	0xFF2
  8317                           postinc0	equ	0xFEE
  8318                           fsr0h	equ	0xFEA
  8319                           fsr0l	equ	0xFE9
  8320                           wreg	equ	0xFE8
  8321                           indf1	equ	0xFE7
  8322                           postinc1	equ	0xFE6
  8323                           postdec1	equ	0xFE5
  8324                           fsr1h	equ	0xFE2
  8325                           fsr1l	equ	0xFE1
  8326                           indf2	equ	0xFDF
  8327                           postinc2	equ	0xFDE
  8328                           postdec2	equ	0xFDD
  8329                           fsr2h	equ	0xFDA
  8330                           fsr2l	equ	0xFD9
  8331                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         85
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      66
    BANK0           160     22      92
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    putsUSART@data	PTR unsigned char  size(2) Largest target is 8
		 -> SerialOutput(COMRAM[8]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> analogic_brake(BANK0[8]), set_speed(BANK0[8]), set_steering(BANK0[8]), data(BANK0[8]), 


Critical Paths under _main in COMRAM

    _main->_usart_tx
    _usart_tx->_putsUSART
    _putsUSART->_WriteUSART
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _can_interpreter->_CANsendMessage

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->_CANreceiveMessage

Critical Paths under _main in BANK0

    _configurazione_iniziale->_CANInitialize
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _can_interpreter->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   18978
                                             21 BANK0      1     1      0
                       _CANisTxReady
                     _CANsendMessage
                    _can_interpreter
            _configurazione_iniziale
                           _delay_ms
                  _usart_interpreter
                           _usart_tx
 ---------------------------------------------------------------------------------
 (1) _usart_tx                                             5     5      0     560
                                             31 COMRAM     2     2      0
                                              0 BANK0      3     3      0
                          _putsUSART
 ---------------------------------------------------------------------------------
 (2) _putsUSART                                            2     0      2     170
                                             29 COMRAM     2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (3) _WriteUSART                                           1     1      0      31
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _usart_interpreter                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    9144
                      _CANInitialize
                          _OpenUSART
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     648
                                              2 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     386
                                             28 COMRAM     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                             28 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                              9 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                             28 COMRAM     5     0      5
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                             28 COMRAM     5     0      5
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      8     8      0    4313
                                             12 BANK0      8     8      0
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4289
                                             28 COMRAM     4     4      0
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_alta                                            16    16      0    1319
                                             12 COMRAM    16    16      0
                       _CANisRxReady
                  _CANreceiveMessage
                           _usart_rx
 ---------------------------------------------------------------------------------
 (5) _usart_rx                                             2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisTxReady
   _CANsendMessage
   _can_interpreter
     _CANisTxReady
     _CANsendMessage
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _OpenUSART
     _delay_ms
       ___wmul
   _delay_ms
     ___wmul
   _usart_interpreter
   _usart_tx
     _putsUSART
       _WriteUSART

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   _usart_rx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     16      5C       4       57.5%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     21      42       1       70.2%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9E       9        0.0%
DATA                 0      0      9E      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Mar 24 22:37:31 2016

            __end_of_CANSetFilter 0A60                                _id 0022  
             ___wmul@multiplicand 001F                       __CFG_BORV$3 000000  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                     __CFG_OSC$HS 000000                               l400 0EB4  
                             l403 0F6E                               l412 1120  
                             l404 0F72                               l500 06EA  
                             l413 1124                               l405 1066  
                             l501 06F4                               l414 1130  
                             l406 0FF8                               l510 07EC  
                             l502 06F8                               l407 1002  
                             l511 07F0                               l503 0702  
                             l408 100C                               l520 08E8  
                             l512 07FA                               l409 1016  
                             l521 08F2                               l513 07FE  
                             l530 09EA                               l522 08F6  
                             l514 0808                               l506 07D0  
                             l450 18F0                               l442 18B8  
                             l531 09EE                               l523 0900  
                             l507 07D4                               l443 18BC  
                             l380 0B1E                               l532 09F8  
                             l524 0904                               l508 07DE  
                             l460 19E8                               l444 18C6  
                             l373 0CDC                               l533 09FC  
                             l525 090E                               l517 08D6  
                             l509 07E2                               l461 19F2  
                             l453 19BA                               l445 18CA  
                             l390 0CF6                               l374 0A76  
                             l534 0A06                               l518 08DA  
                             l454 19BE                               l446 18D4  
                             l391 0DEA                               l383 0C28  
                             l375 0A7A                               l535 0A0A  
                             l519 08E4                               l455 19C8  
                             l447 18D8                               l392 0D7C  
                             l384 0C2C                               l376 0B6E  
                             l536 0A14                               l528 09DC  
                             l480 04EE                               l456 19CC  
                             l448 18E2                               l368 1CDA  
                             l393 0D86                               l385 0C38  
                             l377 0B00                               l529 09E0  
                             l481 04F8                               l473 04C0  
                             l457 19D6                               l449 18E6  
                             l369 1CE4                               l705 2114  
                             l394 0D90                               l378 0B0A  
                             l490 05EE                               l474 04C4  
                             l458 19DA                               l395 0D9A  
                             l379 0B14                               l491 05F2  
                             l475 04CE                               l459 19E4  
                             l707 2186                               l388 0F58  
                             l492 05FC                               l484 05C4  
                             l476 04D2                               l389 0CF2  
                             l485 05C8                               l477 04DC  
                             l741 233A                               l566 2450  
                             l398 0EA4                               l486 05D2  
                             l478 04E0                               l742 233C  
                             l399 0EA8                               l495 06CA  
                             l487 05D6                               l479 04EA  
                             l743 2346                               l496 06CE  
                             l488 05E0                               l744 2348  
                             l497 06D8                               l489 05E4  
                             l737 2326                               l498 06DC  
                             l754 2410                               l499 06E6  
                             l579 23DC                      __CFG_CPB$OFF 000000  
                    __CFG_CPD$OFF 000000                               _dir 0211  
                             _msg 006F                               prod 000FF3  
                             wreg 000FE8                      __CFG_LVP$OFF 000000  
                    __CFG_WDT$OFF 000000                              l4001 183A  
                            l4101 017C                              l4201 04FC  
                            l4033 193A                              l4027 18F4  
                            l4303 080C                              l4207 0542  
                            l4119 022C                              l3431 231A  
                            l4241 0646                              l4137 02DC  
                            l4235 0600                              l4155 038C  
                            l4083 00CE                              l4059 19F6  
                            l4501 0C3C                              l4309 0852  
                            l4173 043C                              l4343 0958  
                            l4431 1CE8                              l3439 2328  
                            l4337 0912                              l3801 2382  
                            l4371 0A18                              l4275 074C  
                            l4435 1CF0                              l4269 0706  
                            l4437 1D34                              l4429 1CD2  
                            l3813 23AA                              l3805 2392  
                            l4551 0DA4                              l4383 2476  
                            l4627 1020                              l4571 0E98  
                            l4475 0B28                              l4803 20CE  
                            l4653 1134                              l4741 1A66  
                            l4805 20D8                              l4901 1E8C  
                            l4647 1114                              l4495 0C1C  
                            l4577 0EB8                              l4761 1AC2  
                            l4753 1AA8                              l4825 214E  
                            l4809 20E2                              l4913 1EFE  
                            l4675 23D0                              l4923 1F68  
                            l4907 1EA4                              l4757 1AB4  
                            l4829 2158                              l4917 1F0E  
                            l3967 2482                              l4791 2090  
                            l4785 1C12                              l4769 1B74  
                            l3985 178E                              l4873 1E06  
                            l4795 209A                              l4799 20C8  
                            l4895 1E32                              l4887 1E20  
                            _LATA 000F89                              _LATB 000F8A  
                            _LATC 000F8B                              _LATD 000F8C  
                            _LATE 000F8D                              u5110 1A16  
                            u5030 1914                              _PIE1 000F9D  
                            u5115 1A0A                              u5035 1908  
                            u5300 0310                              u5220 01B0  
                            u5140 0052                              u6005 0BF0  
                            u6110 0DC2                              u6120 0E0C  
                            u5305 0304                              u5225 01A4  
                            u5145 0046                              u6115 0DB8  
                            u5315 0368                              u5235 0208  
                            u5155 00AA                              u5340 03C0  
                            u5260 0260                              u5180 0100  
                            u6125 0E02                              u5510 0620  
                            u5430 051C                              u6135 0E6C  
                            u6240 103E                              u6400 1B4C  
                            u5345 03B4                              u5265 0254  
                            u5185 00F4                              u6250 1088  
                            u6410 1B5E                              u5515 0614  
                            u5435 0510                              u5355 0418  
                            u5275 02B8                              u5195 0158  
                            u6420 1B6C                              u4900 1712  
                            u6245 1034                              u6430 1B6E  
                            u6255 107E                              u6265 10E8  
                            u4905 1706                              u6418 1B62  
                            u6370 1B28                              u4915 176A  
                            u6380 1B3C                              u4940 17BE  
                            u6390 1B4A                              u5830 0A38  
                            u5750 0932                              u5670 082C  
                            u5590 0726                              u6710 1F4E  
                            u6560 212C                              u6640 1E72  
                            u4945 17B2                              u5835 0A2C  
                            u5755 0926                              u5675 0820  
                            u5595 071A                              u4955 1816  
                            u6388 1B40                              u6716 1F50  
                            u6566 212E                              u6646 1E74  
                            u6727 23D2                              u6680 1EE4  
                            u5980 0B46                              u5990 0B90  
                            u6686 1EE6                              u5985 0B3C  
                            u5995 0B86               __size_of_CANSetMask 035E  
                            _data 0086                              _main 1DD8  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            indf1 000FE7                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            btemp 0043                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 0016                     __CFG_IESO$OFF 000000  
                   __CFG_MCLRE$ON 000000                      ___param_bank 000010  
                _CANOperationMode 247C        __size_of_CANreceiveMessage 050C  
                           ?_main 0001                             _T3CON 000FB1  
                           i2l420 146C                             i2l640 2034  
                           i2l571 2466                             i2l643 2030  
                           i2l647 204E                             i2l694 22C8  
                           i2l697 22FE                             _RCREG 000FAE  
                           _RCSTA 000FAB                             _TMR3H 000FB3  
                           _TMR3L 000FB2                             _SPBRG 000FAF  
               _CANisRxReady$3215 0001                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
                           _TXREG 000FAD                             _TXSTA 000FAC  
                   __CFG_PWRT$OFF 000000                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
              CANInitialize@flags 00AB                  __end_of_ISR_alta 208A  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                    __CFG_EBTRB$OFF 000000  
                  __pbitbssCOMRAM 0210              __end_of_CANisRxReady 246A  
                           tablat 000FF5              __end_of_CANisTxReady 2454  
                           status 000FD8                    __CFG_PBADEN$ON 000000  
                  WriteUSART@data 001D                   __initialization 2234  
                    __end_of_main 1F6C                            ??_main 00B3  
                   __activetblptr 000002                 _CANisTxReady$3213 001D  
                          _CANCON 000F6F                   __CFG_BBSIZ$1024 000000  
                          i2l3601 16AA                            i2l3603 16DC  
                          i2l3531 13F8                            i2l3523 13BC  
                          i2l3515 134C                            i2l3541 1466  
                          i2l3535 1416                            i2l3527 13DA  
                          i2l3623 22A6                            i2l3539 1434  
                          i2l3627 22AE                            i2l3637 22E6  
                          i2l3831 1FAA                            i2l3593 1672  
                          i2l3585 163A                            i2l3577 15CC  
                          i2l3597 168E                            i2l3589 1656  
                          i2l3845 2000                            i2l3839 1FEA  
                          i2l3849 2008                   _newMessageUsart 0213  
                          _RXB0D0 000F66                            _RXB0D1 000F67  
                          _RXB0D2 000F68                            _RXB0D3 000F69  
                          _RXB0D4 000F6A                            _RXB1D0 000F56  
                          _RXB0D5 000F6B                            _RXB1D1 000F57  
                          _RXB0D6 000F6C                            _RXB1D2 000F58  
                          _RXB0D7 000F6D                            _RXB1D3 000F59  
                          _RXB1D4 000F5A                            _RXB1D5 000F5B  
                          _RXB1D6 000F5C                            _RXB1D7 000F5D  
                  __CFG_WDTPS$128 000000                            _TXB0D0 000F46  
                          _TXB0D1 000F47                            _TXB0D2 000F48  
                          _TXB0D3 000F49                            _TXB1D0 000F36  
                          _TXB0D4 000F4A                            _TXB1D1 000F37  
                          _TXB0D5 000F4B                            _SPBRGH 000FB0  
                          _TXB1D2 000F38                            _TXB0D6 000F4C  
                          _TXB1D3 000F39                            _TXB0D7 000F4D  
                          _TXB2D0 000F26                            _TXB1D4 000F3A  
                          _TXB2D1 000F27                            _TXB1D5 000F3B  
                          _TXB2D2 000F28                            _TXB1D6 000F3C  
                          _TXB2D3 000F29                            _TXB1D7 000F3D  
                          _TXB2D4 000F2A                            _TXB2D5 000F2B  
                          _TXB2D6 000F2C                            _TXB2D7 000F2D  
              CANsendMessage@data 00A2                CANsendMessage@tamp 00A6  
                __end_of_delay_ms 23E6             __size_of_CANSetFilter 0A46  
                  __CFG_XINST$OFF 000000                __size_of_OpenUSART 0060  
                          ___wmul 23E6                    __CFG_STVREN$ON 000000  
                    ??_CANSetMask 009E                            _buffer 0036  
                          clear_0 223A                            clear_1 2248  
        ?_configurazione_iniziale 0001                   __CFG_BOREN$BOHW 000000  
                    __pdataCOMRAM 0039                            tblptrh 000FF7  
                  _analogic_brake 007E                            tblptrl 000FF6  
                          tblptru 000FF8                  __end_of_usart_rx 2304  
                __end_of_usart_tx 218C                      _CANSetFilter 001A  
                      __accesstop 0060           __end_of__initialization 228E  
              __end_of_CANSetMask 1A3E                     ___rparam_used 000001  
                      _WriteUSART 246A                    __pcstackCOMRAM 0001  
                 _SerialOutputOld 00B4                      __pidataBANK0 2497  
                       ?_ISR_alta 0001             CANSetFilter@numBuffer 00A2  
                   _newMessageCan 0212             __size_of_CANisRxReady 0016  
           __size_of_CANisTxReady 001E                 __end_of_OpenUSART 2364  
        __end_of_CANOperationMode 248E                        __pbssBANK0 0060  
                _set_steering_old 0037                 _usart_interpreter 2364  
         __size_of_CANsendMessage 0774                ?_usart_interpreter 0001  
        __size_of_can_interpreter 01E8                           ?___wmul 001D  
                      ??_ISR_alta 000D               ??_usart_interpreter 001D  
                   putsUSART@data 001E                      _CANisRxReady 2454  
                         _CANSTAT 000F6E                      _CANisTxReady 2436  
                       ISR_alta@i 001C                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
          __size_of_CANInitialize 01B2                    usart_tx@i_3324 009F  
                  usart_tx@i_3341 00A0                         ?_delay_ms 00A0  
                         _RXB0DLC 000F65                           _RXB1DLC 000F55  
                         _RXB0CON 000F60                           _RXB1CON 000F50  
                         _TXB0DLC 000F45                           _TXB1DLC 000F35  
                         _TXB2DLC 000F25                __size_of_putsUSART 0026  
             CANsendMessage@flags 00A5         __end_of_usart_interpreter 23B4  
                         __Hparam 0000                        _left_speed 0030  
                         __Lparam 0000                  delay_ms@value_ms 00A0  
                     ?_WriteUSART 0001                   __size_of___wmul 002A  
            CANInitialize@propSeg 00B0                         ?_usart_rx 0001  
                       ?_usart_tx 0001                           __pcinit 2234  
                         __ramtop 0300                           __ptext0 1DD8  
                         __ptext1 208A                           __ptext2 2410  
                         __ptext3 246A                           __ptext4 2364  
                         __ptext5 218C                           __ptext6 23B4  
                         __ptext7 23E6                           __ptext8 2304  
                         __ptext9 1C26                        ??_delay_ms 0021  
          CANreceiveMessage@error 000B                    __pintcode_body 1F6C  
            end_of_initialization 228E                     __Lmediumconst 0000  
                         int_func 1F6C                     _CANInitialize 1C26  
                       _RCSTAbits 000FAB                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
               __end_of_putsUSART 2436                 ??_can_interpreter 00AA  
                      ??_usart_rx 0001                        ??_usart_tx 0020  
                       _PORTAbits 000F80                    CANSetMask@mask 001D  
                       _PORTCbits 000F82                    CANSetMask@tamp 00A3  
                  CANSetMask@type 0021                         _TRISCbits 000F94  
             __size_of_WriteUSART 0012        __size_of_usart_interpreter 0050  
__size_of_configurazione_iniziale 00A8               _previousTimeCounter 0026  
         _clock_counter_reference 002E                    _CANsendMessage 0A60  
                CANInitialize@BRP 00AA                  CANInitialize@SJW 00A9  
                       _TXSTAbits 000FAC                    ?_CANInitialize 00A7  
                  __end_of___wmul 2410                     __pidataCOMRAM 248E  
               __size_of_ISR_alta 2082               start_initialization 2234  
             CANSetMask@numBuffer 00A2            __end_of_CANsendMessage 11D4  
               ?_CANOperationMode 0001                         _OpenUSART 2304  
              ??_CANOperationMode 001D        CANInitialize@FilterConfig1 00B1  
      CANInitialize@FilterConfig2 00B2                          ??___wmul 0021  
                     __pdataBANK0 00B4                  __CFG_LPT1OSC$OFF 000000  
          CANInitialize@phaseSeg1 00A7            CANInitialize@phaseSeg2 00A8  
                     __pbssCOMRAM 0022                     __pcstackBANK0 009E  
                     _BRGCON2bits 000F71                       _BRGCON3bits 000F72  
               __size_of_delay_ms 0032                   ?_CANsendMessage 009E  
                 ??_CANInitialize 00AC                        ?_OpenUSART 001D  
              CANSetFilter@filter 001D                      ??_WriteUSART 001D  
                       __pintcode 0008                 __size_of_usart_rx 0068  
               __size_of_usart_tx 0102                       _COMSTATbits 000F74  
         _configurazione_iniziale 218C                __end_of_WriteUSART 247C  
           CANreceiveMessage@tamp 000C                    ___wmul@product 009E  
                        _LATDbits 000F8C                   _can_interpreter 1A3E  
                        _IPR1bits 000F9F                _analogic_brake_old 0035  
                        _IPR2bits 000FA2      _delay_quartz_frequency_value 0039  
                        _PIE1bits 000F9D                          _IPR3bits 000FA5  
                        _PIE2bits 000FA0                          _PIE3bits 000FA3  
                        i2u405_40 128C                          i2u405_46 128E  
                        i2u406_40 12BA                          i2u430_40 22B6  
                        i2u414_45 1440                          i2u406_46 12BC  
                        i2u430_46 22B8                          i2u416_40 1514  
                        i2u408_45 12D0                          i2u416_46 1516  
                        i2u417_40 153E                          _PIR1bits 000F9E  
                        i2u425_45 16B6                          i2u417_46 1540  
                        _PIR2bits 000FA1                          i2u419_45 1552  
                        _PIR3bits 000FA4                          i2u470_40 1FE8  
                        i2u468_40 1FB2                          i2u468_46 1FB4  
                        _RXB0EIDH 000F63                          _RXB0EIDL 000F64  
                        _RXB1EIDH 000F53                          _RXB1EIDL 000F54  
                       _set_speed 008E                          _RCONbits 000FD0  
                        _RXB0SIDH 000F61                          _RXB0SIDL 000F62  
                        _RXF0EIDH 000F02                          _RXB1SIDH 000F51  
                        _RXF0EIDL 000F03                          _RXB1SIDL 000F52  
                        _RXF1EIDH 000F06                          _RXF1EIDL 000F07  
                        _RXF2EIDH 000F0A                          _RXF2EIDL 000F0B  
                        _RXF3EIDH 000F0E                          _RXF3EIDL 000F0F  
                        _RXF4EIDH 000F12                          _RXF4EIDL 000F13  
                        _RXF5EIDH 000F16                          _RXF5EIDL 000F17  
                        _RXF0SIDH 000F00                          _RXF0SIDL 000F01  
                        _TXB0EIDH 000F43                          _RXF1SIDH 000F04  
                        _TXB0EIDL 000F44                          _RXF1SIDL 000F05  
                        _TXB1EIDH 000F33                          _RXF2SIDH 000F08  
                        _TXB1EIDL 000F34                          _RXF2SIDL 000F09  
                        _ISR_alta 0008                          _TXB2EIDH 000F23  
                        _RXF3SIDH 000F0C                          _TXB2EIDL 000F24  
                        _RXF3SIDL 000F0D                          _RXF4SIDH 000F10  
                        _RXF4SIDL 000F11                          _RXF5SIDH 000F14  
                        _RXF5SIDL 000F15                          _RXM0EIDH 000F1A  
                        _RXM0EIDL 000F1B                          _TXB0SIDH 000F41  
                        _RXM1EIDH 000F1E                          _TXB0SIDL 000F42  
                        _RXM1EIDL 000F1F                          _TXB1SIDH 000F31  
                        _TXB1SIDL 000F32                          _TXB2SIDH 000F21  
                        _TXB2SIDL 000F22                          _RXM0SIDH 000F18  
                        _RXM0SIDL 000F19                          _RXM1SIDH 000F1C  
                        _RXM1SIDL 000F1D                          _RXERRCNT 000F75  
                        _USART_Rx 0068                          _TXERRCNT 000F76  
                       _putsUSART 2410                        _ADCON1bits 000FC1  
               ___wmul@multiplier 001D                          _RTR_Flag 0210  
                   ?_CANSetFilter 001D                         copy_data0 2262  
                       copy_data1 2282                     _set_speed_old 0060  
                      _CANCONbits 000F6F                       ??_OpenUSART 001F  
                    _SerialOutput 003A                   OpenUSART@config 001F  
                        __Hrparam 0000                      _RXB0SIDLbits 000F62  
                        __Lrparam 0000                      _RXB1SIDLbits 000F52  
                      _CANSetMask 16E0                        ?_putsUSART 001E  
       ??_configurazione_iniziale 0022                      _RXF0SIDLbits 000F01  
                        _delay_ms 23B4                      _RXF1SIDLbits 000F05  
                  ??_CANSetFilter 009E                          __ptext10 16E0  
                        __ptext11 001A                          __ptext12 247C  
                        __ptext13 1A3E                          __ptext14 0A60  
                        __ptext15 2436                          __ptext17 229C  
                        __ptext18 11D4                          __ptext19 2454  
                    _RXF2SIDLbits 000F09           __end_of_can_interpreter 1C26  
                    _RXF3SIDLbits 000F0D                      _RXF4SIDLbits 000F11  
                    _RXF5SIDLbits 000F15          CANsendMessage@dataLength 00A4  
                   __size_of_main 0194              CANreceiveMessage@msg 0001  
                    _TXB0SIDLbits 000F42                      _TXB1SIDLbits 000F32  
                    _TXB2SIDLbits 000F22                          int$flags 0043  
       __size_of_CANOperationMode 0012                     ?_CANisRxReady 0001  
                   ?_CANisTxReady 0001                          _usart_rx 229C  
                        _usart_tx 208A                       _RXB0DLCbits 000F65  
                     _sendMessage 0214                       _RXB1DLCbits 000F55  
                    _RXM0SIDLbits 000F19                       _RXB0CONbits 000F60  
                     _RXB1CONbits 000F50                 _CANreceiveMessage 11D4  
                    _RXM1SIDLbits 000F1D                        _INTCONbits 000FF2  
                    _set_steering 0096                  ??_CANsendMessage 001D  
                  OpenUSART@spbrg 001D                ?_CANreceiveMessage 0001  
        CANsendMessage@identifier 009E                          intlevel2 0000  
                CANSetFilter@tamp 00A3                  CANSetFilter@type 0021  
             ??_CANreceiveMessage 0003                         usart_rx@i 0002  
                       usart_tx@i 009E                       _TXB0DLCbits 000F45  
                     _right_speed 0032                       _TXB1DLCbits 000F35  
                     _TXB0CONbits 000F40                       _TXB2DLCbits 000F25  
 __end_of_configurazione_iniziale 2234                       _TXB1CONbits 000F30  
                    _spam_counter 0038                       _TXB2CONbits 000F20  
                     _timeCounter 002A              CANOperationMode@mode 001D  
                  ??_CANisRxReady 0001                       ?_CANSetMask 001D  
                  ??_CANisTxReady 001D         __end_of_CANreceiveMessage 16E0  
                     ??_putsUSART 0020                  ?_can_interpreter 0001  
           __end_of_CANInitialize 1DD8                      _USART_Status 0034  
