Microchip MPLAB XC8 Compiler V1.36 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.36\dat\en_msgs.txt -cs \
  -h+dist/default/production\CanToSerial.X.production.sym \
  --cmf=dist/default/production\CanToSerial.X.production.cmf -z -Q18F4480 \
  -oC:\Users\simon\AppData\Local\Temp\s1oo.2 \
  -Mdist/default/production/CanToSerial.X.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=08Ch-02ffh -pstack=STACK -ACODE=00h-03FFFh \
  -ACONST=00h-03FFFh -ASMALLCONST=0300h-03FFhx61 -AMEDIUMCONST=0300h-03FFFh \
  -ACOMRAM=01h-05Fh -AABS1=00h-02FFh -ABIGRAM=01h-02FFh \
  -ARAM=060h-0FFh,0100h-01FFhx2 -ABANK0=060h-0FFh -ABANK1=0100h-01FFh \
  -ABANK2=0200h-02FFh -ASFR=0D00h-0DFFhx2,0F00h-0F5Fh,0F60h-0FFFh \
  -preset_vec=00h,intcode,intcodelo=018h,powerup,init,end_init \
  -pramtop=0300h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\simon\AppData\Local\Temp\s1oo.obj \
  dist/default/production\CanToSerial.X.production.obj 

Object code version is 3.11

Machine type is 18F4480

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\simon\AppData\Local\Temp\s1oo.obj
                end_init                            138      138        4        C       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\CanToSerial.X.production.obj
                intcodelo                            18       18      120        C       0
                temp                                 42       42        1        1       1
                text9                               FCC      FCC       16        C       0
                text8                               8C8      8C8      50C        C       0
                text7                               FAE      FAE       1E        C       0
                text6                               F36      F36       2C        C       0
                text4                               F8A      F8A       24        C       0
                text3                               13C      13C      78C        C       0
                text2                               FE2      FE2       14        C       0
                text1                               F62      F62       28        C       0
                text0                               DD4      DD4      128        C       0
                cstackCOMRAM                          1        1       21        1       1
                cstackBANK0                          76       76       16       60       1
                bssBANK0                             60       60       16       60       1
                dataCOMRAM                           41       41        1        1       1
                bssCOMRAM                            22       22       1E        1       1
                bitbssCOMRAM                        200       40        3        1       1     8
                cinit                               EFC      EFC       3A        C       0
                idataCOMRAM                         FF6      FF6        1        C       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                            138      138        4         0
                intcodelo                            18       18      120         0
                reset_vec                             0        0        4         0
                text9                               FCC      FCC       16         0
                text8                               8C8      8C8      50C         0
                text7                               FAE      FAE       1E         0
                text6                               F36      F36       2C         0
                text4                               F8A      F8A       24         0
                text3                               13C      13C      78C         0
                text2                               FE2      FE2       14         0
                text1                               F62      F62       28         0
                text0                               DD4      DD4      128         0
                cinit                               EFC      EFC       3A         0
                idataCOMRAM                         FF6      FF6        1         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 42       42        1         1
                cstackCOMRAM                          1        1       21         1
                dataCOMRAM                           41       41        1         1
                bssCOMRAM                            22       22       1E         1
                bitbssCOMRAM                        200       40        3         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          76       76       16         1
                bssBANK0                             60       60       16         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000042  000043         1       1  COMRAM  
                intcodelo                      000018  000FDF  000FF7         C       0  CODE    
                bssBANK0                       000060  00002C  00008C        60       1  BANK0   
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            00008C-0000FF               74
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BIGRAM           000043-00005F               1D
                         00008C-0002FF              274
        CODE             000004-000017               14
                         000FF7-003FFF             3009
        COMRAM           000043-00005F               1D
        CONST            000004-000017               14
                         000FF7-003FFF             3009
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000FF7-003FFF             3009
        RAM              00008C-0002FF              100
        SFR              000D00-000FFF              100
        SMALLCONST       000FF7-003FFF              100
        STACK            00008C-0002FF              274

                                  Symbol Table

CANreceiveMessage@error       cstackCOMRAM 00000B
CANreceiveMessage@msg         cstackCOMRAM 000001
CANreceiveMessage@tamp        cstackCOMRAM 00000C
CANsendMessage@data           cstackBANK0  00007A
CANsendMessage@dataLength     cstackBANK0  00007C
CANsendMessage@flags          cstackBANK0  00007D
CANsendMessage@identifier     cstackBANK0  000076
CANsendMessage@tamp           cstackBANK0  000082
ISR_bassa@i                   cstackCOMRAM 000020
ReadUSART@data                cstackCOMRAM 000001
WriteUSART@data               cstackBANK0  000076
_BRGCON1                      (abs)        000F70
_BRGCON2                      (abs)        000F71
_BRGCON2bits                  (abs)        000F71
_BRGCON3                      (abs)        000F72
_BRGCON3bits                  (abs)        000F72
_CANCON                       (abs)        000F6F
_CANCONbits                   (abs)        000F6F
_CANSTAT                      (abs)        000F6E
_CANisRxReady                 text9        000FCC
_CANisRxReady$2715            cstackCOMRAM 000001
_CANisTxReady                 text4        000F8A
_CANisTxReady$2713            cstackBANK0  000076
_CANreceiveMessage            text8        0008C8
_CANsendMessage               text3        00013C
_COMSTATbits                  (abs)        000F74
_INTCONbits                   (abs)        000FF2
_IPR1bits                     (abs)        000F9F
_IPR3bits                     (abs)        000FA5
_ISR_bassa                    intcodelo    000018
_LATA                         (abs)        000F89
_LATB                         (abs)        000F8A
_LATC                         (abs)        000F8B
_LATD                         (abs)        000F8C
_LATE                         (abs)        000F8D
_PIE1                         (abs)        000F9D
_PIE1bits                     (abs)        000F9D
_PIE3bits                     (abs)        000FA3
_PIR1bits                     (abs)        000F9E
_PIR3bits                     (abs)        000FA4
_RCONbits                     (abs)        000FD0
_RCREG                        (abs)        000FAE
_RCSTA                        (abs)        000FAB
_RCSTAbits                    (abs)        000FAB
_RTR                          bitbssCOMRAM 000200
_RXB0CON                      (abs)        000F60
_RXB0CONbits                  (abs)        000F60
_RXB0D0                       (abs)        000F66
_RXB0D1                       (abs)        000F67
_RXB0D2                       (abs)        000F68
_RXB0D3                       (abs)        000F69
_RXB0D4                       (abs)        000F6A
_RXB0D5                       (abs)        000F6B
_RXB0D6                       (abs)        000F6C
_RXB0D7                       (abs)        000F6D
_RXB0DLC                      (abs)        000F65
_RXB0DLCbits                  (abs)        000F65
_RXB0EIDH                     (abs)        000F63
_RXB0EIDL                     (abs)        000F64
_RXB0SIDH                     (abs)        000F61
_RXB0SIDL                     (abs)        000F62
_RXB0SIDLbits                 (abs)        000F62
_RXB1CON                      (abs)        000F50
_RXB1CONbits                  (abs)        000F50
_RXB1D0                       (abs)        000F56
_RXB1D1                       (abs)        000F57
_RXB1D2                       (abs)        000F58
_RXB1D3                       (abs)        000F59
_RXB1D4                       (abs)        000F5A
_RXB1D5                       (abs)        000F5B
_RXB1D6                       (abs)        000F5C
_RXB1D7                       (abs)        000F5D
_RXB1DLC                      (abs)        000F55
_RXB1DLCbits                  (abs)        000F55
_RXB1EIDH                     (abs)        000F53
_RXB1EIDL                     (abs)        000F54
_RXB1SIDH                     (abs)        000F51
_RXB1SIDL                     (abs)        000F52
_RXB1SIDLbits                 (abs)        000F52
_RXERRCNT                     (abs)        000F75
_RXF0EIDH                     (abs)        000F02
_RXF0EIDL                     (abs)        000F03
_RXF0SIDH                     (abs)        000F00
_RXF0SIDL                     (abs)        000F01
_RXF0SIDLbits                 (abs)        000F01
_RXF1EIDH                     (abs)        000F06
_RXF1EIDL                     (abs)        000F07
_RXF1SIDH                     (abs)        000F04
_RXF1SIDL                     (abs)        000F05
_RXF1SIDLbits                 (abs)        000F05
_RXF2EIDH                     (abs)        000F0A
_RXF2EIDL                     (abs)        000F0B
_RXF2SIDH                     (abs)        000F08
_RXF2SIDL                     (abs)        000F09
_RXF2SIDLbits                 (abs)        000F09
_RXF3EIDH                     (abs)        000F0E
_RXF3EIDL                     (abs)        000F0F
_RXF3SIDH                     (abs)        000F0C
_RXF3SIDL                     (abs)        000F0D
_RXF3SIDLbits                 (abs)        000F0D
_RXF4EIDH                     (abs)        000F12
_RXF4EIDL                     (abs)        000F13
_RXF4SIDH                     (abs)        000F10
_RXF4SIDL                     (abs)        000F11
_RXF4SIDLbits                 (abs)        000F11
_RXF5EIDH                     (abs)        000F16
_RXF5EIDL                     (abs)        000F17
_RXF5SIDH                     (abs)        000F14
_RXF5SIDL                     (abs)        000F15
_RXF5SIDLbits                 (abs)        000F15
_RXM0EIDH                     (abs)        000F1A
_RXM0EIDL                     (abs)        000F1B
_RXM0SIDH                     (abs)        000F18
_RXM0SIDL                     (abs)        000F19
_RXM0SIDLbits                 (abs)        000F19
_RXM1EIDH                     (abs)        000F1E
_RXM1EIDL                     (abs)        000F1F
_RXM1SIDH                     (abs)        000F1C
_RXM1SIDL                     (abs)        000F1D
_RXM1SIDLbits                 (abs)        000F1D
_ReadUSART                    text7        000FAE
_TRISA                        (abs)        000F92
_TRISB                        (abs)        000F93
_TRISC                        (abs)        000F94
_TRISD                        (abs)        000F95
_TRISE                        (abs)        000F96
_TXB0CONbits                  (abs)        000F40
_TXB0D0                       (abs)        000F46
_TXB0D1                       (abs)        000F47
_TXB0D2                       (abs)        000F48
_TXB0D3                       (abs)        000F49
_TXB0D4                       (abs)        000F4A
_TXB0D5                       (abs)        000F4B
_TXB0D6                       (abs)        000F4C
_TXB0D7                       (abs)        000F4D
_TXB0DLC                      (abs)        000F45
_TXB0DLCbits                  (abs)        000F45
_TXB0EIDH                     (abs)        000F43
_TXB0EIDL                     (abs)        000F44
_TXB0SIDH                     (abs)        000F41
_TXB0SIDL                     (abs)        000F42
_TXB0SIDLbits                 (abs)        000F42
_TXB1CONbits                  (abs)        000F30
_TXB1D0                       (abs)        000F36
_TXB1D1                       (abs)        000F37
_TXB1D2                       (abs)        000F38
_TXB1D3                       (abs)        000F39
_TXB1D4                       (abs)        000F3A
_TXB1D5                       (abs)        000F3B
_TXB1D6                       (abs)        000F3C
_TXB1D7                       (abs)        000F3D
_TXB1DLC                      (abs)        000F35
_TXB1DLCbits                  (abs)        000F35
_TXB1EIDH                     (abs)        000F33
_TXB1EIDL                     (abs)        000F34
_TXB1SIDH                     (abs)        000F31
_TXB1SIDL                     (abs)        000F32
_TXB1SIDLbits                 (abs)        000F32
_TXB2CONbits                  (abs)        000F20
_TXB2D0                       (abs)        000F26
_TXB2D1                       (abs)        000F27
_TXB2D2                       (abs)        000F28
_TXB2D3                       (abs)        000F29
_TXB2D4                       (abs)        000F2A
_TXB2D5                       (abs)        000F2B
_TXB2D6                       (abs)        000F2C
_TXB2D7                       (abs)        000F2D
_TXB2DLC                      (abs)        000F25
_TXB2DLCbits                  (abs)        000F25
_TXB2EIDH                     (abs)        000F23
_TXB2EIDL                     (abs)        000F24
_TXB2SIDH                     (abs)        000F21
_TXB2SIDL                     (abs)        000F22
_TXB2SIDLbits                 (abs)        000F22
_TXERRCNT                     (abs)        000F76
_TXREG                        (abs)        000FAD
_TXSTAbits                    (abs)        000FAC
_USART_Status                 bssCOMRAM    000028
_WriteUSART                   text2        000FE2
__CFG_BBSIZ$1024              (abs)        000000
__CFG_BOREN$BOHW              (abs)        000000
__CFG_BORV$3                  (abs)        000000
__CFG_CP0$OFF                 (abs)        000000
__CFG_CP1$OFF                 (abs)        000000
__CFG_CPB$OFF                 (abs)        000000
__CFG_CPD$OFF                 (abs)        000000
__CFG_EBTR0$OFF               (abs)        000000
__CFG_EBTR1$OFF               (abs)        000000
__CFG_EBTRB$OFF               (abs)        000000
__CFG_FCMEN$OFF               (abs)        000000
__CFG_IESO$OFF                (abs)        000000
__CFG_LPT1OSC$OFF             (abs)        000000
__CFG_LVP$ON                  (abs)        000000
__CFG_MCLRE$ON                (abs)        000000
__CFG_OSC$HS                  (abs)        000000
__CFG_PBADEN$ON               (abs)        000000
__CFG_PWRT$OFF                (abs)        000000
__CFG_STVREN$ON               (abs)        000000
__CFG_WDT$OFF                 (abs)        000000
__CFG_WDTPS$32768             (abs)        000000
__CFG_WRT0$OFF                (abs)        000000
__CFG_WRT1$OFF                (abs)        000000
__CFG_WRTB$OFF                (abs)        000000
__CFG_WRTC$OFF                (abs)        000000
__CFG_WRTD$OFF                (abs)        000000
__CFG_XINST$OFF               (abs)        000000
__HRAM                        (abs)        000000
__Habs1                       abs1         000000
__Hbank0                      bank0        000000
__Hbank1                      bank1        000000
__Hbank2                      bank2        000000
__Hbigbss                     bigbss       000000
__Hbigdata                    bigdata      000000
__Hbigram                     bigram       000000
__HbitbssCOMRAM               bitbssCOMRAM 000000
__Hbss                        bss          000000
__HbssBANK0                   bssBANK0     000000
__HbssCOMRAM                  bssCOMRAM    000000
__Hcinit                      cinit        000000
__Hclrtext                    clrtext      000000
__Hcomram                     comram       000000
__Hconfig                     config       30000E
__Hconst                      const        000000
__HcstackBANK0                cstackBANK0  000000
__HcstackCOMRAM               cstackCOMRAM 000000
__Hdata                       data         000000
__HdataCOMRAM                 dataCOMRAM   000000
__Heeprom_data                eeprom_data  000000
__Hend_init                   end_init     00013C
__Hfarbss                     farbss       000000
__Hfardata                    fardata      000000
__Hibigdata                   ibigdata     000000
__Hidata                      idata        000000
__HidataCOMRAM                idataCOMRAM  000000
__Hidloc                      idloc        200008
__Hifardata                   ifardata     000000
__Hinit                       init         000138
__Hintcode                    intcode      000004
__Hintcode_body               intcode_body 000000
__Hintcodelo                  intcodelo    000138
__Hintentry                   intentry     000000
__Hintret                     intret       000000
__Hintsave_regs               intsave_regs 000000
__Hirdata                     irdata       000000
__Hmediumconst                mediumconst  000000
__HnvFARRAM                   nvFARRAM     000000
__Hnvbit                      nvbit        000000
__Hnvrram                     nvrram       000000
__Hparam                      rparam       000000
__Hpowerup                    powerup      000138
__Hram                        ram          000000
__Hramtop                     ramtop       000300
__Hrbit                       rbit         000000
__Hrbss                       rbss         000000
__Hrdata                      rdata        000000
__Hreset_vec                  reset_vec    000004
__Hrparam                     rparam       000000
__Hsfr                        sfr          000000
__Hsmallconst                 smallconst   000000
__Hspace_0                    (abs)        30000E
__Hspace_1                    (abs)        000203
__Hspace_2                    (abs)        000000
__Hstack                      stack        000000
__Hstruct                     struct       000000
__Htemp                       temp         000043
__Htext                       text         000000
__Htext0                      text0        000000
__Htext1                      text1        000000
__Htext2                      text2        000000
__Htext3                      text3        000000
__Htext4                      text4        000000
__Htext6                      text6        000000
__Htext7                      text7        000000
__Htext8                      text8        000000
__Htext9                      text9        000000
__LRAM                        (abs)        000001
__Labs1                       abs1         000000
__Lbank0                      bank0        000000
__Lbank1                      bank1        000000
__Lbank2                      bank2        000000
__Lbigbss                     bigbss       000000
__Lbigdata                    bigdata      000000
__Lbigram                     bigram       000000
__LbitbssCOMRAM               bitbssCOMRAM 000000
__Lbss                        bss          000000
__LbssBANK0                   bssBANK0     000000
__LbssCOMRAM                  bssCOMRAM    000000
__Lcinit                      cinit        000000
__Lclrtext                    clrtext      000000
__Lcomram                     comram       000000
__Lconfig                     config       300000
__Lconst                      const        000000
__LcstackBANK0                cstackBANK0  000000
__LcstackCOMRAM               cstackCOMRAM 000000
__Ldata                       data         000000
__LdataCOMRAM                 dataCOMRAM   000000
__Leeprom_data                eeprom_data  000000
__Lend_init                   end_init     000138
__Lfarbss                     farbss       000000
__Lfardata                    fardata      000000
__Libigdata                   ibigdata     000000
__Lidata                      idata        000000
__LidataCOMRAM                idataCOMRAM  000000
__Lidloc                      idloc        200000
__Lifardata                   ifardata     000000
__Linit                       init         000138
__Lintcode                    intcode      000004
__Lintcode_body               intcode_body 000000
__Lintcodelo                  intcodelo    000018
__Lintentry                   intentry     000000
__Lintret                     intret       000000
__Lintsave_regs               intsave_regs 000000
__Lirdata                     irdata       000000
__Lmediumconst                mediumconst  000000
__LnvFARRAM                   nvFARRAM     000000
__Lnvbit                      nvbit        000000
__Lnvrram                     nvrram       000000
__Lparam                      rparam       000000
__Lpowerup                    powerup      000138
__Lram                        ram          000000
__Lramtop                     ramtop       000300
__Lrbit                       rbit         000000
__Lrbss                       rbss         000000
__Lrdata                      rdata        000000
__Lreset_vec                  reset_vec    000000
__Lrparam                     rparam       000000
__Lsfr                        sfr          000000
__Lsmallconst                 smallconst   000000
__Lspace_0                    (abs)        000000
__Lspace_1                    (abs)        000000
__Lspace_2                    (abs)        000000
__Lstack                      stack        000000
__Lstruct                     struct       000000
__Ltemp                       temp         000042
__Ltext                       text         000000
__Ltext0                      text0        000000
__Ltext1                      text1        000000
__Ltext2                      text2        000000
__Ltext3                      text3        000000
__Ltext4                      text4        000000
__Ltext6                      text6        000000
__Ltext7                      text7        000000
__Ltext8                      text8        000000
__Ltext9                      text9        000000
__S0                          (abs)        30000E
__S1                          (abs)        00008C
__S2                          (abs)        000000
___inthi_sp                   stack        000000
___intlo_sp                   stack        000000
___param_bank                 (abs)        000010
___rparam_used                (abs)        000001
___sp                         stack        000000
__accesstop                   (abs)        000060
__activetblptr                (abs)        000002
__end_of_CANisRxReady         text9        000FE2
__end_of_CANisTxReady         text4        000FAE
__end_of_CANreceiveMessage    text8        000DD4
__end_of_CANsendMessage       text3        0008C8
__end_of_ISR_bassa            intcodelo    000138
__end_of_ReadUSART            text7        000FCC
__end_of_WriteUSART           text2        000FF6
__end_of__initialization      cinit        000F28
__end_of_getsUSART            text6        000F62
__end_of_main                 text0        000EFC
__end_of_putsUSART            text1        000F8A
__initialization              cinit        000EFC
__mediumconst                 mediumconst  000000
__pbitbssCOMRAM               bitbssCOMRAM 000200
__pbssBANK0                   bssBANK0     000060
__pbssCOMRAM                  bssCOMRAM    000022
__pcinit                      cinit        000EFC
__pcstackBANK0                cstackBANK0  000076
__pcstackCOMRAM               cstackCOMRAM 000001
__pdataCOMRAM                 dataCOMRAM   000041
__pidataCOMRAM                idataCOMRAM  000FF6
__pintcodelo                  intcodelo    000018
__ptext0                      text0        000DD4
__ptext1                      text1        000F62
__ptext2                      text2        000FE2
__ptext3                      text3        00013C
__ptext4                      text4        000F8A
__ptext6                      text6        000F36
__ptext7                      text7        000FAE
__ptext8                      text8        0008C8
__ptext9                      text9        000FCC
__ramtop                      ramtop       000300
__size_of_CANisRxReady        (abs)        000000
__size_of_CANisTxReady        (abs)        000000
__size_of_CANreceiveMessage   (abs)        000000
__size_of_CANsendMessage      (abs)        000000
__size_of_ISR_bassa           (abs)        000000
__size_of_ReadUSART           (abs)        000000
__size_of_WriteUSART          (abs)        000000
__size_of_getsUSART           (abs)        000000
__size_of_main                (abs)        000000
__size_of_putsUSART           (abs)        000000
__smallconst                  smallconst   000000
_clock_counter_reference      bssCOMRAM    000026
_data                         bssCOMRAM    000038
_delay_quartz_frequency_value dataCOMRAM   000041
_getsUSART                    text6        000F36
_id                           bssCOMRAM    000022
_main                         text0        000DD4
_msg                          bssCOMRAM    000029
_newMessageCan                bitbssCOMRAM 000201
_newMessageUsart              bitbssCOMRAM 000202
_putsUSART                    text1        000F62
_usartRx                      bssBANK0     000060
_usartTx                      bssBANK0     00006B
btemp                         temp         000042
end_of_initialization         cinit        000F28
getsUSART@buffer              cstackCOMRAM 000002
getsUSART@data                cstackCOMRAM 000005
getsUSART@i                   cstackCOMRAM 000006
getsUSART@len                 cstackCOMRAM 000004
int$flags                     temp         000042
intlevel0                     text         000000
intlevel1                     text         000000
intlevel2                     text         000000
intlevel3                     text         000000
main@i                        cstackBANK0  00008A
putsUSART@data                cstackBANK0  000077
stackhi                       (abs)        0002FF
stacklo                       (abs)        00008C
start                         init         000138
start_initialization          cinit        000EFC


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 63 in file "CanToSerial.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   20[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       2       0       0
      Temps:          0       4       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels required when called:    5
 This function calls:
		_CANisTxReady
		_CANsendMessage
		_putsUSART
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _putsUSART *****************
 Defined at:
		line 14 in file "sources\pic18\plib\USART\uputs.c"
 Parameters:    Size  Location     Type
  data            2    1[BANK0 ] PTR unsigned char 
		 -> usartTx(11), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_WriteUSART
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _WriteUSART *****************
 Defined at:
		line 13 in file "sources\pic18\plib\USART\uwrite.c"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_putsUSART
 This function uses a non-reentrant model


 *************** function _CANsendMessage *****************
 Defined at:
		line 294 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 Parameters:    Size  Location     Type
  identifier      4    0[BANK0 ] unsigned long 
  data            2    4[BANK0 ] PTR unsigned char 
		 -> data(8), 
  dataLength      1    6[BANK0 ] unsigned char 
  flags           1    7[BANK0 ] enum E16873
 Auto vars:     Size  Location     Type
  tamp            4   12[BANK0 ] unsigned long 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       8       0       0
      Locals:         0       4       0       0
      Temps:          0       4       0       0
      Totals:         0      16       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _CANisTxReady *****************
 Defined at:
		line 1154 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ISR_bassa *****************
 Defined at:
		line 41 in file "CanToSerial.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   31[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:         19       0       0       0
      Totals:        21       0       0       0
Total ram usage:       21 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_CANisRxReady
		_CANreceiveMessage
		_getsUSART
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _getsUSART *****************
 Defined at:
		line 14 in file "sources\pic18\plib\USART\ugets.c"
 Parameters:    Size  Location     Type
  buffer          2    1[COMRAM] PTR unsigned char 
		 -> usartRx(11), 
  len             1    3[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  i               1    5[COMRAM] unsigned char 
  data            1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_ReadUSART
 This function is called by:
		_ISR_bassa
 This function uses a non-reentrant model


 *************** function _ReadUSART *****************
 Defined at:
		line 15 in file "sources\pic18\plib\USART\uread.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  data            1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_getsUSART
 This function uses a non-reentrant model


 *************** function _CANreceiveMessage *****************
 Defined at:
		line 528 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 Parameters:    Size  Location     Type
  msg             2    0[COMRAM] PTR struct .
		 -> msg(15), 
 Auto vars:     Size  Location     Type
  tamp            1   11[COMRAM] unsigned char 
  error           1   10[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         2       0       0       0
      Temps:          8       0       0       0
      Totals:        12       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR_bassa
 This function uses a non-reentrant model


 *************** function _CANisRxReady *****************
 Defined at:
		line 1163 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR_bassa
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
sources\pic18\plib\USART\uread.c
		_ReadUSART     		CODE           	0FAE	0000	31

sources\pic18\plib\USART\uread.c estimated size: 31

sources\pic18\plib\USART\uwrite.c
		_WriteUSART    		CODE           	0FE2	0000	21

sources\pic18\plib\USART\uwrite.c estimated size: 21

sources\pic18\plib\USART\uputs.c
		_putsUSART     		CODE           	0F62	0000	41

sources\pic18\plib\USART\uputs.c estimated size: 41

sources\pic18\plib\USART\ugets.c
		_getsUSART     		CODE           	0F36	0000	45

sources\pic18\plib\USART\ugets.c estimated size: 45

../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h
		_CANisRxReady  		CODE           	0FCC	0000	23
		_CANreceiveMessage		CODE           	08C8	0000	1293
		_CANsendMessage		CODE           	013C	0000	1933
		_CANisTxReady  		CODE           	0F8A	0000	37

../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h estimated size: 3286

shared
		__initialization		CODE           	0EFC	0000	45

shared estimated size: 45

CanToSerial.c
		_main          		CODE           	0DD4	0000	297
		_ISR_bassa     		CODE           	0018	0000	289

CanToSerial.c estimated size: 586

